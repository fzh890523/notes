
----------------------------------------------------------------------
Interpreter

code size        =    137K bytes
total space      =    255K bytes
wasted space     =    118K bytes

# of codelets    =    266
avg codelet size =    530 bytes


----------------------------------------------------------------------
slow signature handler  [0x0000000115e96640, 0x0000000115e96800]  448 bytes

Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
[Disassembling for mach='i386:x86-64']
  0x0000000115e96640: mov    %rsp,%rcx
  0x0000000115e96643: sub    $0x70,%rsp
  0x0000000115e96647: callq  0x0000000115e96651
  0x0000000115e9664c: jmpq   0x0000000115e966d2
  0x0000000115e96651: mov    %r14,%rdx
  0x0000000115e96654: mov    %rbx,%rsi
  0x0000000115e96657: lea    0x8(%rsp),%rax
  0x0000000115e9665c: mov    %r13,-0x38(%rbp)
  0x0000000115e96660: mov    %r15,%rdi
  0x0000000115e96663: mov    %rbp,0x1e8(%r15)
  0x0000000115e9666a: mov    %rax,0x1d8(%r15)
  0x0000000115e96671: test   $0xf,%esp
  0x0000000115e96677: je     0x0000000115e9668f
  0x0000000115e9667d: sub    $0x8,%rsp
  0x0000000115e96681: callq  0x000000010dae3dae
  0x0000000115e96686: add    $0x8,%rsp
  0x0000000115e9668a: jmpq   0x0000000115e96694
  0x0000000115e9668f: callq  0x000000010dae3dae
  0x0000000115e96694: movabs $0x0,%r10
  0x0000000115e9669e: mov    %r10,0x1d8(%r15)
  0x0000000115e966a5: movabs $0x0,%r10
  0x0000000115e966af: mov    %r10,0x1e8(%r15)
  0x0000000115e966b6: cmpq   $0x0,0x8(%r15)
  0x0000000115e966be: je     0x0000000115e966c9
  0x0000000115e966c4: jmpq   0x0000000115e916e0
  0x0000000115e966c9: mov    -0x38(%rbp),%r13
  0x0000000115e966cd: mov    -0x30(%rbp),%r14
  0x0000000115e966d1: retq   
  0x0000000115e966d2: mov    0x28(%rsp),%ecx
  0x0000000115e966d6: test   $0x1,%ecx
  0x0000000115e966dc: jne    0x0000000115e966ed
  0x0000000115e966e2: vmovss 0x30(%rsp),%xmm0
  0x0000000115e966e8: jmpq   0x0000000115e966f3
  0x0000000115e966ed: vmovsd 0x30(%rsp),%xmm0
  0x0000000115e966f3: test   $0x2,%ecx
  0x0000000115e966f9: jne    0x0000000115e9670a
  0x0000000115e966ff: vmovss 0x38(%rsp),%xmm1
  0x0000000115e96705: jmpq   0x0000000115e96710
  0x0000000115e9670a: vmovsd 0x38(%rsp),%xmm1
  0x0000000115e96710: test   $0x4,%ecx
  0x0000000115e96716: jne    0x0000000115e96727
  0x0000000115e9671c: vmovss 0x40(%rsp),%xmm2
  0x0000000115e96722: jmpq   0x0000000115e9672d
  0x0000000115e96727: vmovsd 0x40(%rsp),%xmm2
  0x0000000115e9672d: test   $0x8,%ecx
  0x0000000115e96733: jne    0x0000000115e96744
  0x0000000115e96739: vmovss 0x48(%rsp),%xmm3
  0x0000000115e9673f: jmpq   0x0000000115e9674a
  0x0000000115e96744: vmovsd 0x48(%rsp),%xmm3
  0x0000000115e9674a: test   $0x10,%ecx
  0x0000000115e96750: jne    0x0000000115e96761
  0x0000000115e96756: vmovss 0x50(%rsp),%xmm4
  0x0000000115e9675c: jmpq   0x0000000115e96767
  0x0000000115e96761: vmovsd 0x50(%rsp),%xmm4
  0x0000000115e96767: test   $0x20,%ecx
  0x0000000115e9676d: jne    0x0000000115e9677e
  0x0000000115e96773: vmovss 0x58(%rsp),%xmm5
  0x0000000115e96779: jmpq   0x0000000115e96784
  0x0000000115e9677e: vmovsd 0x58(%rsp),%xmm5
  0x0000000115e96784: test   $0x40,%ecx
  0x0000000115e9678a: jne    0x0000000115e9679b
  0x0000000115e96790: vmovss 0x60(%rsp),%xmm6
  0x0000000115e96796: jmpq   0x0000000115e967a1
  0x0000000115e9679b: vmovsd 0x60(%rsp),%xmm6
  0x0000000115e967a1: test   $0x80,%ecx
  0x0000000115e967a7: jne    0x0000000115e967b8
  0x0000000115e967ad: vmovss 0x68(%rsp),%xmm7
  0x0000000115e967b3: jmpq   0x0000000115e967be
  0x0000000115e967b8: vmovsd 0x68(%rsp),%xmm7
  0x0000000115e967be: mov    0x20(%rbx),%ecx
  0x0000000115e967c1: test   $0x8,%ecx
  0x0000000115e967c7: cmove  (%rsp),%rsi
  0x0000000115e967cc: mov    0x8(%rsp),%rdx
  0x0000000115e967d1: mov    0x10(%rsp),%rcx
  0x0000000115e967d6: mov    0x18(%rsp),%r8
  0x0000000115e967db: mov    0x20(%rsp),%r9
  0x0000000115e967e0: add    $0x70,%rsp
  0x0000000115e967e4: retq   
  0x0000000115e967e5: data32 xchg %ax,%ax
  0x0000000115e967e8: add    %al,(%rax)
  0x0000000115e967ea: add    %al,(%rax)
  0x0000000115e967ec: add    %al,(%rax)
  0x0000000115e967ee: add    %al,(%rax)
  0x0000000115e967f0: add    %al,(%rax)
  0x0000000115e967f2: add    %al,(%rax)
  0x0000000115e967f4: add    %al,(%rax)
  0x0000000115e967f6: add    %al,(%rax)
  0x0000000115e967f8: add    %al,(%rax)
  0x0000000115e967fa: add    %al,(%rax)
  0x0000000115e967fc: add    %al,(%rax)
  0x0000000115e967fe: add    %al,(%rax)

----------------------------------------------------------------------
error exits  [0x0000000115e96820, 0x0000000115e96920]  256 bytes

  0x0000000115e96820: mov    %rsp,-0x28(%rsp)
  0x0000000115e96825: sub    $0x80,%rsp
  0x0000000115e9682c: mov    %rax,0x78(%rsp)
  0x0000000115e96831: mov    %rcx,0x70(%rsp)
  0x0000000115e96836: mov    %rdx,0x68(%rsp)
  0x0000000115e9683b: mov    %rbx,0x60(%rsp)
  0x0000000115e96840: mov    %rbp,0x50(%rsp)
  0x0000000115e96845: mov    %rsi,0x48(%rsp)
  0x0000000115e9684a: mov    %rdi,0x40(%rsp)
  0x0000000115e9684f: mov    %r8,0x38(%rsp)
  0x0000000115e96854: mov    %r9,0x30(%rsp)
  0x0000000115e96859: mov    %r10,0x28(%rsp)
  0x0000000115e9685e: mov    %r11,0x20(%rsp)
  0x0000000115e96863: mov    %r12,0x18(%rsp)
  0x0000000115e96868: mov    %r13,0x10(%rsp)
  0x0000000115e9686d: mov    %r14,0x8(%rsp)
  0x0000000115e96872: mov    %r15,(%rsp)
  0x0000000115e96876: movabs $0x10de191ec,%rdi
  0x0000000115e96880: movabs $0x115e96820,%rsi
  0x0000000115e9688a: mov    %rsp,%rdx
  0x0000000115e9688d: and    $0xfffffffffffffff0,%rsp
  0x0000000115e96891: callq  0x000000010dc0341e
  0x0000000115e96896: hlt    
  0x0000000115e96897: mov    %rsp,-0x28(%rsp)
  0x0000000115e9689c: sub    $0x80,%rsp
  0x0000000115e968a3: mov    %rax,0x78(%rsp)
  0x0000000115e968a8: mov    %rcx,0x70(%rsp)
  0x0000000115e968ad: mov    %rdx,0x68(%rsp)
  0x0000000115e968b2: mov    %rbx,0x60(%rsp)
  0x0000000115e968b7: mov    %rbp,0x50(%rsp)
  0x0000000115e968bc: mov    %rsi,0x48(%rsp)
  0x0000000115e968c1: mov    %rdi,0x40(%rsp)
  0x0000000115e968c6: mov    %r8,0x38(%rsp)
  0x0000000115e968cb: mov    %r9,0x30(%rsp)
  0x0000000115e968d0: mov    %r10,0x28(%rsp)
  0x0000000115e968d5: mov    %r11,0x20(%rsp)
  0x0000000115e968da: mov    %r12,0x18(%rsp)
  0x0000000115e968df: mov    %r13,0x10(%rsp)
  0x0000000115e968e4: mov    %r14,0x8(%rsp)
  0x0000000115e968e9: mov    %r15,(%rsp)
  0x0000000115e968ed: movabs $0x10de19203,%rdi
  0x0000000115e968f7: movabs $0x115e96897,%rsi
  0x0000000115e96901: mov    %rsp,%rdx
  0x0000000115e96904: and    $0xfffffffffffffff0,%rsp
  0x0000000115e96908: callq  0x000000010dc0341e
  0x0000000115e9690d: hlt    
  0x0000000115e9690e: xchg   %ax,%ax
  0x0000000115e96910: add    %al,(%rax)
  0x0000000115e96912: add    %al,(%rax)
  0x0000000115e96914: add    %al,(%rax)
  0x0000000115e96916: add    %al,(%rax)
  0x0000000115e96918: add    %al,(%rax)
  0x0000000115e9691a: add    %al,(%rax)
  0x0000000115e9691c: add    %al,(%rax)
  0x0000000115e9691e: add    %al,(%rax)

----------------------------------------------------------------------
return entry points  [0x0000000115e96940, 0x0000000115e989a0]  8288 bytes

  0x0000000115e96940: mov    -0x10(%rbp),%rsp
  0x0000000115e96944: movq   $0x0,-0x10(%rbp)
  0x0000000115e9694c: mov    -0x38(%rbp),%r13
  0x0000000115e96950: mov    -0x30(%rbp),%r14
  0x0000000115e96954: movzwl 0x1(%r13),%ecx
  0x0000000115e96959: mov    -0x28(%rbp),%rbx
  0x0000000115e9695d: shl    $0x2,%ecx
  0x0000000115e96960: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96964: and    $0xff,%ebx
  0x0000000115e9696a: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9696e: movzbl 0x0(%r13),%ebx
  0x0000000115e96973: movabs $0x10e101840,%r10
  0x0000000115e9697d: jmpq   *(%r10,%rbx,8)
  0x0000000115e96981: mov    -0x10(%rbp),%rsp
  0x0000000115e96985: movq   $0x0,-0x10(%rbp)
  0x0000000115e9698d: mov    -0x38(%rbp),%r13
  0x0000000115e96991: mov    -0x30(%rbp),%r14
  0x0000000115e96995: movzwl 0x1(%r13),%ecx
  0x0000000115e9699a: mov    -0x28(%rbp),%rbx
  0x0000000115e9699e: shl    $0x2,%ecx
  0x0000000115e969a1: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e969a5: and    $0xff,%ebx
  0x0000000115e969ab: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e969af: movzbl 0x0(%r13),%ebx
  0x0000000115e969b4: movabs $0x10e100840,%r10
  0x0000000115e969be: jmpq   *(%r10,%rbx,8)
  0x0000000115e969c2: mov    -0x10(%rbp),%rsp
  0x0000000115e969c6: movq   $0x0,-0x10(%rbp)
  0x0000000115e969ce: mov    -0x38(%rbp),%r13
  0x0000000115e969d2: mov    -0x30(%rbp),%r14
  0x0000000115e969d6: movzwl 0x1(%r13),%ecx
  0x0000000115e969db: mov    -0x28(%rbp),%rbx
  0x0000000115e969df: shl    $0x2,%ecx
  0x0000000115e969e2: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e969e6: and    $0xff,%ebx
  0x0000000115e969ec: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e969f0: movzbl 0x0(%r13),%ebx
  0x0000000115e969f5: movabs $0x10e100040,%r10
  0x0000000115e969ff: jmpq   *(%r10,%rbx,8)
  0x0000000115e96a03: mov    -0x10(%rbp),%rsp
  0x0000000115e96a07: movq   $0x0,-0x10(%rbp)
  0x0000000115e96a0f: mov    -0x38(%rbp),%r13
  0x0000000115e96a13: mov    -0x30(%rbp),%r14
  0x0000000115e96a17: movzwl 0x1(%r13),%ecx
  0x0000000115e96a1c: mov    -0x28(%rbp),%rbx
  0x0000000115e96a20: shl    $0x2,%ecx
  0x0000000115e96a23: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96a27: and    $0xff,%ebx
  0x0000000115e96a2d: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96a31: movzbl 0x0(%r13),%ebx
  0x0000000115e96a36: movabs $0x10e0ff840,%r10
  0x0000000115e96a40: jmpq   *(%r10,%rbx,8)
  0x0000000115e96a44: mov    -0x10(%rbp),%rsp
  0x0000000115e96a48: movq   $0x0,-0x10(%rbp)
  0x0000000115e96a50: mov    -0x38(%rbp),%r13
  0x0000000115e96a54: mov    -0x30(%rbp),%r14
  0x0000000115e96a58: movzwl 0x1(%r13),%ecx
  0x0000000115e96a5d: mov    -0x28(%rbp),%rbx
  0x0000000115e96a61: shl    $0x2,%ecx
  0x0000000115e96a64: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96a68: and    $0xff,%ebx
  0x0000000115e96a6e: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96a72: movzbl 0x0(%r13),%ebx
  0x0000000115e96a77: movabs $0x10e0ff040,%r10
  0x0000000115e96a81: jmpq   *(%r10,%rbx,8)
  0x0000000115e96a85: mov    -0x10(%rbp),%rsp
  0x0000000115e96a89: movq   $0x0,-0x10(%rbp)
  0x0000000115e96a91: mov    -0x38(%rbp),%r13
  0x0000000115e96a95: mov    -0x30(%rbp),%r14
  0x0000000115e96a99: mov    -0x20(%rbp),%rbx
  0x0000000115e96a9d: test   %rbx,%rbx
  0x0000000115e96aa0: je     0x0000000115e96b28
  0x0000000115e96aa6: cmpb   $0xba,0x0(%r13)
  0x0000000115e96aab: je     0x0000000115e96aca
  0x0000000115e96ab1: cmpb   $0xe9,0x0(%r13)
  0x0000000115e96ab6: je     0x0000000115e96aca
  0x0000000115e96abc: mov    -0x18(%rbp),%rcx
  0x0000000115e96ac0: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e96ac4: jne    0x0000000115e96b28
  0x0000000115e96aca: mov    %rax,%rcx
  0x0000000115e96acd: test   %rcx,%rcx
  0x0000000115e96ad0: jne    0x0000000115e96adc
  0x0000000115e96ad2: orq    $0x1,-0x8(%rbx)
  0x0000000115e96ada: jmp    0x0000000115e96b28
  0x0000000115e96adc: mov    0x8(%rcx),%ecx
  0x0000000115e96adf: shl    $0x3,%rcx
  0x0000000115e96ae3: xor    -0x8(%rbx),%rcx
  0x0000000115e96ae7: test   $0xfffffffffffffffc,%rcx
  0x0000000115e96aee: je     0x0000000115e96b28
  0x0000000115e96af0: test   $0x2,%rcx
  0x0000000115e96af7: jne    0x0000000115e96b28
  0x0000000115e96af9: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e96b01: je     0x0000000115e96b24
  0x0000000115e96b03: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e96b0b: je     0x0000000115e96b24
  0x0000000115e96b0d: xor    -0x8(%rbx),%rcx
  0x0000000115e96b11: test   $0xfffffffffffffffc,%rcx
  0x0000000115e96b18: je     0x0000000115e96b28
  0x0000000115e96b1a: orq    $0x2,-0x8(%rbx)
  0x0000000115e96b22: jmp    0x0000000115e96b28
  0x0000000115e96b24: mov    %rcx,-0x8(%rbx)
  0x0000000115e96b28: movzwl 0x1(%r13),%ecx
  0x0000000115e96b2d: mov    -0x28(%rbp),%rbx
  0x0000000115e96b31: shl    $0x2,%ecx
  0x0000000115e96b34: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96b38: and    $0xff,%ebx
  0x0000000115e96b3e: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96b42: movzbl 0x0(%r13),%ebx
  0x0000000115e96b47: movabs $0x10e101040,%r10
  0x0000000115e96b51: jmpq   *(%r10,%rbx,8)
  0x0000000115e96b55: mov    -0x10(%rbp),%rsp
  0x0000000115e96b59: movq   $0x0,-0x10(%rbp)
  0x0000000115e96b61: mov    -0x38(%rbp),%r13
  0x0000000115e96b65: mov    -0x30(%rbp),%r14
  0x0000000115e96b69: movzwl 0x1(%r13),%ecx
  0x0000000115e96b6e: mov    -0x28(%rbp),%rbx
  0x0000000115e96b72: shl    $0x2,%ecx
  0x0000000115e96b75: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96b79: and    $0xff,%ebx
  0x0000000115e96b7f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96b83: movzbl 0x0(%r13),%ebx
  0x0000000115e96b88: movabs $0x10e0ff040,%r10
  0x0000000115e96b92: jmpq   *(%r10,%rbx,8)
  0x0000000115e96b96: mov    -0x10(%rbp),%rsp
  0x0000000115e96b9a: movq   $0x0,-0x10(%rbp)
  0x0000000115e96ba2: mov    -0x38(%rbp),%r13
  0x0000000115e96ba6: mov    -0x30(%rbp),%r14
  0x0000000115e96baa: movzwl 0x1(%r13),%ecx
  0x0000000115e96baf: mov    -0x28(%rbp),%rbx
  0x0000000115e96bb3: shl    $0x2,%ecx
  0x0000000115e96bb6: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96bba: and    $0xff,%ebx
  0x0000000115e96bc0: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96bc4: movzbl 0x0(%r13),%ebx
  0x0000000115e96bc9: movabs $0x10e0ff040,%r10
  0x0000000115e96bd3: jmpq   *(%r10,%rbx,8)
  0x0000000115e96bd7: mov    -0x10(%rbp),%rsp
  0x0000000115e96bdb: movq   $0x0,-0x10(%rbp)
  0x0000000115e96be3: mov    -0x38(%rbp),%r13
  0x0000000115e96be7: mov    -0x30(%rbp),%r14
  0x0000000115e96beb: movzwl 0x1(%r13),%ecx
  0x0000000115e96bf0: mov    -0x28(%rbp),%rbx
  0x0000000115e96bf4: shl    $0x2,%ecx
  0x0000000115e96bf7: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96bfb: and    $0xff,%ebx
  0x0000000115e96c01: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96c05: movzbl 0x0(%r13),%ebx
  0x0000000115e96c0a: movabs $0x10e0ff040,%r10
  0x0000000115e96c14: jmpq   *(%r10,%rbx,8)
  0x0000000115e96c18: mov    -0x10(%rbp),%rsp
  0x0000000115e96c1c: movq   $0x0,-0x10(%rbp)
  0x0000000115e96c24: mov    -0x38(%rbp),%r13
  0x0000000115e96c28: mov    -0x30(%rbp),%r14
  0x0000000115e96c2c: movzwl 0x1(%r13),%ecx
  0x0000000115e96c31: mov    -0x28(%rbp),%rbx
  0x0000000115e96c35: shl    $0x2,%ecx
  0x0000000115e96c38: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96c3c: and    $0xff,%ebx
  0x0000000115e96c42: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96c46: movzbl 0x0(%r13),%ebx
  0x0000000115e96c4b: movabs $0x10e0ff040,%r10
  0x0000000115e96c55: jmpq   *(%r10,%rbx,8)
  0x0000000115e96c59: mov    -0x10(%rbp),%rsp
  0x0000000115e96c5d: movq   $0x0,-0x10(%rbp)
  0x0000000115e96c65: mov    -0x38(%rbp),%r13
  0x0000000115e96c69: mov    -0x30(%rbp),%r14
  0x0000000115e96c6d: movzwl 0x1(%r13),%ecx
  0x0000000115e96c72: mov    -0x28(%rbp),%rbx
  0x0000000115e96c76: shl    $0x2,%ecx
  0x0000000115e96c79: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96c7d: and    $0xff,%ebx
  0x0000000115e96c83: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96c87: movzbl 0x1(%r13),%ebx
  0x0000000115e96c8c: inc    %r13
  0x0000000115e96c8f: movabs $0x10e101840,%r10
  0x0000000115e96c99: jmpq   *(%r10,%rbx,8)
  0x0000000115e96c9d: mov    -0x10(%rbp),%rsp
  0x0000000115e96ca1: movq   $0x0,-0x10(%rbp)
  0x0000000115e96ca9: mov    -0x38(%rbp),%r13
  0x0000000115e96cad: mov    -0x30(%rbp),%r14
  0x0000000115e96cb1: movzwl 0x1(%r13),%ecx
  0x0000000115e96cb6: mov    -0x28(%rbp),%rbx
  0x0000000115e96cba: shl    $0x2,%ecx
  0x0000000115e96cbd: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96cc1: and    $0xff,%ebx
  0x0000000115e96cc7: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96ccb: movzbl 0x1(%r13),%ebx
  0x0000000115e96cd0: inc    %r13
  0x0000000115e96cd3: movabs $0x10e100840,%r10
  0x0000000115e96cdd: jmpq   *(%r10,%rbx,8)
  0x0000000115e96ce1: mov    -0x10(%rbp),%rsp
  0x0000000115e96ce5: movq   $0x0,-0x10(%rbp)
  0x0000000115e96ced: mov    -0x38(%rbp),%r13
  0x0000000115e96cf1: mov    -0x30(%rbp),%r14
  0x0000000115e96cf5: movzwl 0x1(%r13),%ecx
  0x0000000115e96cfa: mov    -0x28(%rbp),%rbx
  0x0000000115e96cfe: shl    $0x2,%ecx
  0x0000000115e96d01: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96d05: and    $0xff,%ebx
  0x0000000115e96d0b: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96d0f: movzbl 0x1(%r13),%ebx
  0x0000000115e96d14: inc    %r13
  0x0000000115e96d17: movabs $0x10e100040,%r10
  0x0000000115e96d21: jmpq   *(%r10,%rbx,8)
  0x0000000115e96d25: mov    -0x10(%rbp),%rsp
  0x0000000115e96d29: movq   $0x0,-0x10(%rbp)
  0x0000000115e96d31: mov    -0x38(%rbp),%r13
  0x0000000115e96d35: mov    -0x30(%rbp),%r14
  0x0000000115e96d39: movzwl 0x1(%r13),%ecx
  0x0000000115e96d3e: mov    -0x28(%rbp),%rbx
  0x0000000115e96d42: shl    $0x2,%ecx
  0x0000000115e96d45: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96d49: and    $0xff,%ebx
  0x0000000115e96d4f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96d53: movzbl 0x1(%r13),%ebx
  0x0000000115e96d58: inc    %r13
  0x0000000115e96d5b: movabs $0x10e0ff840,%r10
  0x0000000115e96d65: jmpq   *(%r10,%rbx,8)
  0x0000000115e96d69: mov    -0x10(%rbp),%rsp
  0x0000000115e96d6d: movq   $0x0,-0x10(%rbp)
  0x0000000115e96d75: mov    -0x38(%rbp),%r13
  0x0000000115e96d79: mov    -0x30(%rbp),%r14
  0x0000000115e96d7d: movzwl 0x1(%r13),%ecx
  0x0000000115e96d82: mov    -0x28(%rbp),%rbx
  0x0000000115e96d86: shl    $0x2,%ecx
  0x0000000115e96d89: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96d8d: and    $0xff,%ebx
  0x0000000115e96d93: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96d97: movzbl 0x1(%r13),%ebx
  0x0000000115e96d9c: inc    %r13
  0x0000000115e96d9f: movabs $0x10e0ff040,%r10
  0x0000000115e96da9: jmpq   *(%r10,%rbx,8)
  0x0000000115e96dad: mov    -0x10(%rbp),%rsp
  0x0000000115e96db1: movq   $0x0,-0x10(%rbp)
  0x0000000115e96db9: mov    -0x38(%rbp),%r13
  0x0000000115e96dbd: mov    -0x30(%rbp),%r14
  0x0000000115e96dc1: mov    -0x20(%rbp),%rbx
  0x0000000115e96dc5: test   %rbx,%rbx
  0x0000000115e96dc8: je     0x0000000115e96e50
  0x0000000115e96dce: cmpb   $0xba,0x0(%r13)
  0x0000000115e96dd3: je     0x0000000115e96df2
  0x0000000115e96dd9: cmpb   $0xe9,0x0(%r13)
  0x0000000115e96dde: je     0x0000000115e96df2
  0x0000000115e96de4: mov    -0x18(%rbp),%rcx
  0x0000000115e96de8: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e96dec: jne    0x0000000115e96e50
  0x0000000115e96df2: mov    %rax,%rcx
  0x0000000115e96df5: test   %rcx,%rcx
  0x0000000115e96df8: jne    0x0000000115e96e04
  0x0000000115e96dfa: orq    $0x1,-0x8(%rbx)
  0x0000000115e96e02: jmp    0x0000000115e96e50
  0x0000000115e96e04: mov    0x8(%rcx),%ecx
  0x0000000115e96e07: shl    $0x3,%rcx
  0x0000000115e96e0b: xor    -0x8(%rbx),%rcx
  0x0000000115e96e0f: test   $0xfffffffffffffffc,%rcx
  0x0000000115e96e16: je     0x0000000115e96e50
  0x0000000115e96e18: test   $0x2,%rcx
  0x0000000115e96e1f: jne    0x0000000115e96e50
  0x0000000115e96e21: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e96e29: je     0x0000000115e96e4c
  0x0000000115e96e2b: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e96e33: je     0x0000000115e96e4c
  0x0000000115e96e35: xor    -0x8(%rbx),%rcx
  0x0000000115e96e39: test   $0xfffffffffffffffc,%rcx
  0x0000000115e96e40: je     0x0000000115e96e50
  0x0000000115e96e42: orq    $0x2,-0x8(%rbx)
  0x0000000115e96e4a: jmp    0x0000000115e96e50
  0x0000000115e96e4c: mov    %rcx,-0x8(%rbx)
  0x0000000115e96e50: movzwl 0x1(%r13),%ecx
  0x0000000115e96e55: mov    -0x28(%rbp),%rbx
  0x0000000115e96e59: shl    $0x2,%ecx
  0x0000000115e96e5c: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96e60: and    $0xff,%ebx
  0x0000000115e96e66: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96e6a: movzbl 0x1(%r13),%ebx
  0x0000000115e96e6f: inc    %r13
  0x0000000115e96e72: movabs $0x10e101040,%r10
  0x0000000115e96e7c: jmpq   *(%r10,%rbx,8)
  0x0000000115e96e80: mov    -0x10(%rbp),%rsp
  0x0000000115e96e84: movq   $0x0,-0x10(%rbp)
  0x0000000115e96e8c: mov    -0x38(%rbp),%r13
  0x0000000115e96e90: mov    -0x30(%rbp),%r14
  0x0000000115e96e94: movzwl 0x1(%r13),%ecx
  0x0000000115e96e99: mov    -0x28(%rbp),%rbx
  0x0000000115e96e9d: shl    $0x2,%ecx
  0x0000000115e96ea0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96ea4: and    $0xff,%ebx
  0x0000000115e96eaa: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96eae: movzbl 0x1(%r13),%ebx
  0x0000000115e96eb3: inc    %r13
  0x0000000115e96eb6: movabs $0x10e0ff040,%r10
  0x0000000115e96ec0: jmpq   *(%r10,%rbx,8)
  0x0000000115e96ec4: mov    -0x10(%rbp),%rsp
  0x0000000115e96ec8: movq   $0x0,-0x10(%rbp)
  0x0000000115e96ed0: mov    -0x38(%rbp),%r13
  0x0000000115e96ed4: mov    -0x30(%rbp),%r14
  0x0000000115e96ed8: movzwl 0x1(%r13),%ecx
  0x0000000115e96edd: mov    -0x28(%rbp),%rbx
  0x0000000115e96ee1: shl    $0x2,%ecx
  0x0000000115e96ee4: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96ee8: and    $0xff,%ebx
  0x0000000115e96eee: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96ef2: movzbl 0x1(%r13),%ebx
  0x0000000115e96ef7: inc    %r13
  0x0000000115e96efa: movabs $0x10e0ff040,%r10
  0x0000000115e96f04: jmpq   *(%r10,%rbx,8)
  0x0000000115e96f08: mov    -0x10(%rbp),%rsp
  0x0000000115e96f0c: movq   $0x0,-0x10(%rbp)
  0x0000000115e96f14: mov    -0x38(%rbp),%r13
  0x0000000115e96f18: mov    -0x30(%rbp),%r14
  0x0000000115e96f1c: movzwl 0x1(%r13),%ecx
  0x0000000115e96f21: mov    -0x28(%rbp),%rbx
  0x0000000115e96f25: shl    $0x2,%ecx
  0x0000000115e96f28: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96f2c: and    $0xff,%ebx
  0x0000000115e96f32: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96f36: movzbl 0x1(%r13),%ebx
  0x0000000115e96f3b: inc    %r13
  0x0000000115e96f3e: movabs $0x10e0ff040,%r10
  0x0000000115e96f48: jmpq   *(%r10,%rbx,8)
  0x0000000115e96f4c: mov    -0x10(%rbp),%rsp
  0x0000000115e96f50: movq   $0x0,-0x10(%rbp)
  0x0000000115e96f58: mov    -0x38(%rbp),%r13
  0x0000000115e96f5c: mov    -0x30(%rbp),%r14
  0x0000000115e96f60: movzwl 0x1(%r13),%ecx
  0x0000000115e96f65: mov    -0x28(%rbp),%rbx
  0x0000000115e96f69: shl    $0x2,%ecx
  0x0000000115e96f6c: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96f70: and    $0xff,%ebx
  0x0000000115e96f76: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96f7a: movzbl 0x1(%r13),%ebx
  0x0000000115e96f7f: inc    %r13
  0x0000000115e96f82: movabs $0x10e0ff040,%r10
  0x0000000115e96f8c: jmpq   *(%r10,%rbx,8)
  0x0000000115e96f90: mov    -0x10(%rbp),%rsp
  0x0000000115e96f94: movq   $0x0,-0x10(%rbp)
  0x0000000115e96f9c: mov    -0x38(%rbp),%r13
  0x0000000115e96fa0: mov    -0x30(%rbp),%r14
  0x0000000115e96fa4: movzwl 0x1(%r13),%ecx
  0x0000000115e96fa9: mov    -0x28(%rbp),%rbx
  0x0000000115e96fad: shl    $0x2,%ecx
  0x0000000115e96fb0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96fb4: and    $0xff,%ebx
  0x0000000115e96fba: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e96fbe: movzbl 0x2(%r13),%ebx
  0x0000000115e96fc3: add    $0x2,%r13
  0x0000000115e96fc7: movabs $0x10e101840,%r10
  0x0000000115e96fd1: jmpq   *(%r10,%rbx,8)
  0x0000000115e96fd5: mov    -0x10(%rbp),%rsp
  0x0000000115e96fd9: movq   $0x0,-0x10(%rbp)
  0x0000000115e96fe1: mov    -0x38(%rbp),%r13
  0x0000000115e96fe5: mov    -0x30(%rbp),%r14
  0x0000000115e96fe9: movzwl 0x1(%r13),%ecx
  0x0000000115e96fee: mov    -0x28(%rbp),%rbx
  0x0000000115e96ff2: shl    $0x2,%ecx
  0x0000000115e96ff5: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e96ff9: and    $0xff,%ebx
  0x0000000115e96fff: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97003: movzbl 0x2(%r13),%ebx
  0x0000000115e97008: add    $0x2,%r13
  0x0000000115e9700c: movabs $0x10e100840,%r10
  0x0000000115e97016: jmpq   *(%r10,%rbx,8)
  0x0000000115e9701a: mov    -0x10(%rbp),%rsp
  0x0000000115e9701e: movq   $0x0,-0x10(%rbp)
  0x0000000115e97026: mov    -0x38(%rbp),%r13
  0x0000000115e9702a: mov    -0x30(%rbp),%r14
  0x0000000115e9702e: movzwl 0x1(%r13),%ecx
  0x0000000115e97033: mov    -0x28(%rbp),%rbx
  0x0000000115e97037: shl    $0x2,%ecx
  0x0000000115e9703a: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9703e: and    $0xff,%ebx
  0x0000000115e97044: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97048: movzbl 0x2(%r13),%ebx
  0x0000000115e9704d: add    $0x2,%r13
  0x0000000115e97051: movabs $0x10e100040,%r10
  0x0000000115e9705b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9705f: mov    -0x10(%rbp),%rsp
  0x0000000115e97063: movq   $0x0,-0x10(%rbp)
  0x0000000115e9706b: mov    -0x38(%rbp),%r13
  0x0000000115e9706f: mov    -0x30(%rbp),%r14
  0x0000000115e97073: movzwl 0x1(%r13),%ecx
  0x0000000115e97078: mov    -0x28(%rbp),%rbx
  0x0000000115e9707c: shl    $0x2,%ecx
  0x0000000115e9707f: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97083: and    $0xff,%ebx
  0x0000000115e97089: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9708d: movzbl 0x2(%r13),%ebx
  0x0000000115e97092: add    $0x2,%r13
  0x0000000115e97096: movabs $0x10e0ff840,%r10
  0x0000000115e970a0: jmpq   *(%r10,%rbx,8)
  0x0000000115e970a4: mov    -0x10(%rbp),%rsp
  0x0000000115e970a8: movq   $0x0,-0x10(%rbp)
  0x0000000115e970b0: mov    -0x38(%rbp),%r13
  0x0000000115e970b4: mov    -0x30(%rbp),%r14
  0x0000000115e970b8: movzwl 0x1(%r13),%ecx
  0x0000000115e970bd: mov    -0x28(%rbp),%rbx
  0x0000000115e970c1: shl    $0x2,%ecx
  0x0000000115e970c4: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e970c8: and    $0xff,%ebx
  0x0000000115e970ce: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e970d2: movzbl 0x2(%r13),%ebx
  0x0000000115e970d7: add    $0x2,%r13
  0x0000000115e970db: movabs $0x10e0ff040,%r10
  0x0000000115e970e5: jmpq   *(%r10,%rbx,8)
  0x0000000115e970e9: mov    -0x10(%rbp),%rsp
  0x0000000115e970ed: movq   $0x0,-0x10(%rbp)
  0x0000000115e970f5: mov    -0x38(%rbp),%r13
  0x0000000115e970f9: mov    -0x30(%rbp),%r14
  0x0000000115e970fd: mov    -0x20(%rbp),%rbx
  0x0000000115e97101: test   %rbx,%rbx
  0x0000000115e97104: je     0x0000000115e9718c
  0x0000000115e9710a: cmpb   $0xba,0x0(%r13)
  0x0000000115e9710f: je     0x0000000115e9712e
  0x0000000115e97115: cmpb   $0xe9,0x0(%r13)
  0x0000000115e9711a: je     0x0000000115e9712e
  0x0000000115e97120: mov    -0x18(%rbp),%rcx
  0x0000000115e97124: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e97128: jne    0x0000000115e9718c
  0x0000000115e9712e: mov    %rax,%rcx
  0x0000000115e97131: test   %rcx,%rcx
  0x0000000115e97134: jne    0x0000000115e97140
  0x0000000115e97136: orq    $0x1,-0x8(%rbx)
  0x0000000115e9713e: jmp    0x0000000115e9718c
  0x0000000115e97140: mov    0x8(%rcx),%ecx
  0x0000000115e97143: shl    $0x3,%rcx
  0x0000000115e97147: xor    -0x8(%rbx),%rcx
  0x0000000115e9714b: test   $0xfffffffffffffffc,%rcx
  0x0000000115e97152: je     0x0000000115e9718c
  0x0000000115e97154: test   $0x2,%rcx
  0x0000000115e9715b: jne    0x0000000115e9718c
  0x0000000115e9715d: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e97165: je     0x0000000115e97188
  0x0000000115e97167: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e9716f: je     0x0000000115e97188
  0x0000000115e97171: xor    -0x8(%rbx),%rcx
  0x0000000115e97175: test   $0xfffffffffffffffc,%rcx
  0x0000000115e9717c: je     0x0000000115e9718c
  0x0000000115e9717e: orq    $0x2,-0x8(%rbx)
  0x0000000115e97186: jmp    0x0000000115e9718c
  0x0000000115e97188: mov    %rcx,-0x8(%rbx)
  0x0000000115e9718c: movzwl 0x1(%r13),%ecx
  0x0000000115e97191: mov    -0x28(%rbp),%rbx
  0x0000000115e97195: shl    $0x2,%ecx
  0x0000000115e97198: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9719c: and    $0xff,%ebx
  0x0000000115e971a2: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e971a6: movzbl 0x2(%r13),%ebx
  0x0000000115e971ab: add    $0x2,%r13
  0x0000000115e971af: movabs $0x10e101040,%r10
  0x0000000115e971b9: jmpq   *(%r10,%rbx,8)
  0x0000000115e971bd: mov    -0x10(%rbp),%rsp
  0x0000000115e971c1: movq   $0x0,-0x10(%rbp)
  0x0000000115e971c9: mov    -0x38(%rbp),%r13
  0x0000000115e971cd: mov    -0x30(%rbp),%r14
  0x0000000115e971d1: movzwl 0x1(%r13),%ecx
  0x0000000115e971d6: mov    -0x28(%rbp),%rbx
  0x0000000115e971da: shl    $0x2,%ecx
  0x0000000115e971dd: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e971e1: and    $0xff,%ebx
  0x0000000115e971e7: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e971eb: movzbl 0x2(%r13),%ebx
  0x0000000115e971f0: add    $0x2,%r13
  0x0000000115e971f4: movabs $0x10e0ff040,%r10
  0x0000000115e971fe: jmpq   *(%r10,%rbx,8)
  0x0000000115e97202: mov    -0x10(%rbp),%rsp
  0x0000000115e97206: movq   $0x0,-0x10(%rbp)
  0x0000000115e9720e: mov    -0x38(%rbp),%r13
  0x0000000115e97212: mov    -0x30(%rbp),%r14
  0x0000000115e97216: movzwl 0x1(%r13),%ecx
  0x0000000115e9721b: mov    -0x28(%rbp),%rbx
  0x0000000115e9721f: shl    $0x2,%ecx
  0x0000000115e97222: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97226: and    $0xff,%ebx
  0x0000000115e9722c: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97230: movzbl 0x2(%r13),%ebx
  0x0000000115e97235: add    $0x2,%r13
  0x0000000115e97239: movabs $0x10e0ff040,%r10
  0x0000000115e97243: jmpq   *(%r10,%rbx,8)
  0x0000000115e97247: mov    -0x10(%rbp),%rsp
  0x0000000115e9724b: movq   $0x0,-0x10(%rbp)
  0x0000000115e97253: mov    -0x38(%rbp),%r13
  0x0000000115e97257: mov    -0x30(%rbp),%r14
  0x0000000115e9725b: movzwl 0x1(%r13),%ecx
  0x0000000115e97260: mov    -0x28(%rbp),%rbx
  0x0000000115e97264: shl    $0x2,%ecx
  0x0000000115e97267: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9726b: and    $0xff,%ebx
  0x0000000115e97271: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97275: movzbl 0x2(%r13),%ebx
  0x0000000115e9727a: add    $0x2,%r13
  0x0000000115e9727e: movabs $0x10e0ff040,%r10
  0x0000000115e97288: jmpq   *(%r10,%rbx,8)
  0x0000000115e9728c: mov    -0x10(%rbp),%rsp
  0x0000000115e97290: movq   $0x0,-0x10(%rbp)
  0x0000000115e97298: mov    -0x38(%rbp),%r13
  0x0000000115e9729c: mov    -0x30(%rbp),%r14
  0x0000000115e972a0: movzwl 0x1(%r13),%ecx
  0x0000000115e972a5: mov    -0x28(%rbp),%rbx
  0x0000000115e972a9: shl    $0x2,%ecx
  0x0000000115e972ac: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e972b0: and    $0xff,%ebx
  0x0000000115e972b6: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e972ba: movzbl 0x2(%r13),%ebx
  0x0000000115e972bf: add    $0x2,%r13
  0x0000000115e972c3: movabs $0x10e0ff040,%r10
  0x0000000115e972cd: jmpq   *(%r10,%rbx,8)
  0x0000000115e972d1: mov    -0x10(%rbp),%rsp
  0x0000000115e972d5: movq   $0x0,-0x10(%rbp)
  0x0000000115e972dd: mov    -0x38(%rbp),%r13
  0x0000000115e972e1: mov    -0x30(%rbp),%r14
  0x0000000115e972e5: movzwl 0x1(%r13),%ecx
  0x0000000115e972ea: mov    -0x28(%rbp),%rbx
  0x0000000115e972ee: shl    $0x2,%ecx
  0x0000000115e972f1: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e972f5: and    $0xff,%ebx
  0x0000000115e972fb: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e972ff: movzbl 0x3(%r13),%ebx
  0x0000000115e97304: add    $0x3,%r13
  0x0000000115e97308: movabs $0x10e101840,%r10
  0x0000000115e97312: jmpq   *(%r10,%rbx,8)
  0x0000000115e97316: mov    -0x10(%rbp),%rsp
  0x0000000115e9731a: movq   $0x0,-0x10(%rbp)
  0x0000000115e97322: mov    -0x38(%rbp),%r13
  0x0000000115e97326: mov    -0x30(%rbp),%r14
  0x0000000115e9732a: movzwl 0x1(%r13),%ecx
  0x0000000115e9732f: mov    -0x28(%rbp),%rbx
  0x0000000115e97333: shl    $0x2,%ecx
  0x0000000115e97336: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9733a: and    $0xff,%ebx
  0x0000000115e97340: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97344: movzbl 0x3(%r13),%ebx
  0x0000000115e97349: add    $0x3,%r13
  0x0000000115e9734d: movabs $0x10e100840,%r10
  0x0000000115e97357: jmpq   *(%r10,%rbx,8)
  0x0000000115e9735b: mov    -0x10(%rbp),%rsp
  0x0000000115e9735f: movq   $0x0,-0x10(%rbp)
  0x0000000115e97367: mov    -0x38(%rbp),%r13
  0x0000000115e9736b: mov    -0x30(%rbp),%r14
  0x0000000115e9736f: movzwl 0x1(%r13),%ecx
  0x0000000115e97374: mov    -0x28(%rbp),%rbx
  0x0000000115e97378: shl    $0x2,%ecx
  0x0000000115e9737b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9737f: and    $0xff,%ebx
  0x0000000115e97385: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97389: movzbl 0x3(%r13),%ebx
  0x0000000115e9738e: add    $0x3,%r13
  0x0000000115e97392: movabs $0x10e100040,%r10
  0x0000000115e9739c: jmpq   *(%r10,%rbx,8)
  0x0000000115e973a0: mov    -0x10(%rbp),%rsp
  0x0000000115e973a4: movq   $0x0,-0x10(%rbp)
  0x0000000115e973ac: mov    -0x38(%rbp),%r13
  0x0000000115e973b0: mov    -0x30(%rbp),%r14
  0x0000000115e973b4: movzwl 0x1(%r13),%ecx
  0x0000000115e973b9: mov    -0x28(%rbp),%rbx
  0x0000000115e973bd: shl    $0x2,%ecx
  0x0000000115e973c0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e973c4: and    $0xff,%ebx
  0x0000000115e973ca: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e973ce: movzbl 0x3(%r13),%ebx
  0x0000000115e973d3: add    $0x3,%r13
  0x0000000115e973d7: movabs $0x10e0ff840,%r10
  0x0000000115e973e1: jmpq   *(%r10,%rbx,8)
  0x0000000115e973e5: mov    -0x10(%rbp),%rsp
  0x0000000115e973e9: movq   $0x0,-0x10(%rbp)
  0x0000000115e973f1: mov    -0x38(%rbp),%r13
  0x0000000115e973f5: mov    -0x30(%rbp),%r14
  0x0000000115e973f9: movzwl 0x1(%r13),%ecx
  0x0000000115e973fe: mov    -0x28(%rbp),%rbx
  0x0000000115e97402: shl    $0x2,%ecx
  0x0000000115e97405: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97409: and    $0xff,%ebx
  0x0000000115e9740f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97413: movzbl 0x3(%r13),%ebx
  0x0000000115e97418: add    $0x3,%r13
  0x0000000115e9741c: movabs $0x10e0ff040,%r10
  0x0000000115e97426: jmpq   *(%r10,%rbx,8)
  0x0000000115e9742a: mov    -0x10(%rbp),%rsp
  0x0000000115e9742e: movq   $0x0,-0x10(%rbp)
  0x0000000115e97436: mov    -0x38(%rbp),%r13
  0x0000000115e9743a: mov    -0x30(%rbp),%r14
  0x0000000115e9743e: mov    -0x20(%rbp),%rbx
  0x0000000115e97442: test   %rbx,%rbx
  0x0000000115e97445: je     0x0000000115e974cd
  0x0000000115e9744b: cmpb   $0xba,0x0(%r13)
  0x0000000115e97450: je     0x0000000115e9746f
  0x0000000115e97456: cmpb   $0xe9,0x0(%r13)
  0x0000000115e9745b: je     0x0000000115e9746f
  0x0000000115e97461: mov    -0x18(%rbp),%rcx
  0x0000000115e97465: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e97469: jne    0x0000000115e974cd
  0x0000000115e9746f: mov    %rax,%rcx
  0x0000000115e97472: test   %rcx,%rcx
  0x0000000115e97475: jne    0x0000000115e97481
  0x0000000115e97477: orq    $0x1,-0x8(%rbx)
  0x0000000115e9747f: jmp    0x0000000115e974cd
  0x0000000115e97481: mov    0x8(%rcx),%ecx
  0x0000000115e97484: shl    $0x3,%rcx
  0x0000000115e97488: xor    -0x8(%rbx),%rcx
  0x0000000115e9748c: test   $0xfffffffffffffffc,%rcx
  0x0000000115e97493: je     0x0000000115e974cd
  0x0000000115e97495: test   $0x2,%rcx
  0x0000000115e9749c: jne    0x0000000115e974cd
  0x0000000115e9749e: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e974a6: je     0x0000000115e974c9
  0x0000000115e974a8: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e974b0: je     0x0000000115e974c9
  0x0000000115e974b2: xor    -0x8(%rbx),%rcx
  0x0000000115e974b6: test   $0xfffffffffffffffc,%rcx
  0x0000000115e974bd: je     0x0000000115e974cd
  0x0000000115e974bf: orq    $0x2,-0x8(%rbx)
  0x0000000115e974c7: jmp    0x0000000115e974cd
  0x0000000115e974c9: mov    %rcx,-0x8(%rbx)
  0x0000000115e974cd: movzwl 0x1(%r13),%ecx
  0x0000000115e974d2: mov    -0x28(%rbp),%rbx
  0x0000000115e974d6: shl    $0x2,%ecx
  0x0000000115e974d9: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e974dd: and    $0xff,%ebx
  0x0000000115e974e3: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e974e7: movzbl 0x3(%r13),%ebx
  0x0000000115e974ec: add    $0x3,%r13
  0x0000000115e974f0: movabs $0x10e101040,%r10
  0x0000000115e974fa: jmpq   *(%r10,%rbx,8)
  0x0000000115e974fe: mov    -0x10(%rbp),%rsp
  0x0000000115e97502: movq   $0x0,-0x10(%rbp)
  0x0000000115e9750a: mov    -0x38(%rbp),%r13
  0x0000000115e9750e: mov    -0x30(%rbp),%r14
  0x0000000115e97512: movzwl 0x1(%r13),%ecx
  0x0000000115e97517: mov    -0x28(%rbp),%rbx
  0x0000000115e9751b: shl    $0x2,%ecx
  0x0000000115e9751e: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97522: and    $0xff,%ebx
  0x0000000115e97528: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9752c: movzbl 0x3(%r13),%ebx
  0x0000000115e97531: add    $0x3,%r13
  0x0000000115e97535: movabs $0x10e0ff040,%r10
  0x0000000115e9753f: jmpq   *(%r10,%rbx,8)
  0x0000000115e97543: mov    -0x10(%rbp),%rsp
  0x0000000115e97547: movq   $0x0,-0x10(%rbp)
  0x0000000115e9754f: mov    -0x38(%rbp),%r13
  0x0000000115e97553: mov    -0x30(%rbp),%r14
  0x0000000115e97557: movzwl 0x1(%r13),%ecx
  0x0000000115e9755c: mov    -0x28(%rbp),%rbx
  0x0000000115e97560: shl    $0x2,%ecx
  0x0000000115e97563: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97567: and    $0xff,%ebx
  0x0000000115e9756d: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97571: movzbl 0x3(%r13),%ebx
  0x0000000115e97576: add    $0x3,%r13
  0x0000000115e9757a: movabs $0x10e0ff040,%r10
  0x0000000115e97584: jmpq   *(%r10,%rbx,8)
  0x0000000115e97588: mov    -0x10(%rbp),%rsp
  0x0000000115e9758c: movq   $0x0,-0x10(%rbp)
  0x0000000115e97594: mov    -0x38(%rbp),%r13
  0x0000000115e97598: mov    -0x30(%rbp),%r14
  0x0000000115e9759c: movzwl 0x1(%r13),%ecx
  0x0000000115e975a1: mov    -0x28(%rbp),%rbx
  0x0000000115e975a5: shl    $0x2,%ecx
  0x0000000115e975a8: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e975ac: and    $0xff,%ebx
  0x0000000115e975b2: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e975b6: movzbl 0x3(%r13),%ebx
  0x0000000115e975bb: add    $0x3,%r13
  0x0000000115e975bf: movabs $0x10e0ff040,%r10
  0x0000000115e975c9: jmpq   *(%r10,%rbx,8)
  0x0000000115e975cd: mov    -0x10(%rbp),%rsp
  0x0000000115e975d1: movq   $0x0,-0x10(%rbp)
  0x0000000115e975d9: mov    -0x38(%rbp),%r13
  0x0000000115e975dd: mov    -0x30(%rbp),%r14
  0x0000000115e975e1: movzwl 0x1(%r13),%ecx
  0x0000000115e975e6: mov    -0x28(%rbp),%rbx
  0x0000000115e975ea: shl    $0x2,%ecx
  0x0000000115e975ed: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e975f1: and    $0xff,%ebx
  0x0000000115e975f7: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e975fb: movzbl 0x3(%r13),%ebx
  0x0000000115e97600: add    $0x3,%r13
  0x0000000115e97604: movabs $0x10e0ff040,%r10
  0x0000000115e9760e: jmpq   *(%r10,%rbx,8)
  0x0000000115e97612: mov    -0x10(%rbp),%rsp
  0x0000000115e97616: movq   $0x0,-0x10(%rbp)
  0x0000000115e9761e: mov    -0x38(%rbp),%r13
  0x0000000115e97622: mov    -0x30(%rbp),%r14
  0x0000000115e97626: movzwl 0x1(%r13),%ecx
  0x0000000115e9762b: mov    -0x28(%rbp),%rbx
  0x0000000115e9762f: shl    $0x2,%ecx
  0x0000000115e97632: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97636: and    $0xff,%ebx
  0x0000000115e9763c: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97640: movzbl 0x4(%r13),%ebx
  0x0000000115e97645: add    $0x4,%r13
  0x0000000115e97649: movabs $0x10e101840,%r10
  0x0000000115e97653: jmpq   *(%r10,%rbx,8)
  0x0000000115e97657: mov    -0x10(%rbp),%rsp
  0x0000000115e9765b: movq   $0x0,-0x10(%rbp)
  0x0000000115e97663: mov    -0x38(%rbp),%r13
  0x0000000115e97667: mov    -0x30(%rbp),%r14
  0x0000000115e9766b: movzwl 0x1(%r13),%ecx
  0x0000000115e97670: mov    -0x28(%rbp),%rbx
  0x0000000115e97674: shl    $0x2,%ecx
  0x0000000115e97677: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9767b: and    $0xff,%ebx
  0x0000000115e97681: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97685: movzbl 0x4(%r13),%ebx
  0x0000000115e9768a: add    $0x4,%r13
  0x0000000115e9768e: movabs $0x10e100840,%r10
  0x0000000115e97698: jmpq   *(%r10,%rbx,8)
  0x0000000115e9769c: mov    -0x10(%rbp),%rsp
  0x0000000115e976a0: movq   $0x0,-0x10(%rbp)
  0x0000000115e976a8: mov    -0x38(%rbp),%r13
  0x0000000115e976ac: mov    -0x30(%rbp),%r14
  0x0000000115e976b0: movzwl 0x1(%r13),%ecx
  0x0000000115e976b5: mov    -0x28(%rbp),%rbx
  0x0000000115e976b9: shl    $0x2,%ecx
  0x0000000115e976bc: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e976c0: and    $0xff,%ebx
  0x0000000115e976c6: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e976ca: movzbl 0x4(%r13),%ebx
  0x0000000115e976cf: add    $0x4,%r13
  0x0000000115e976d3: movabs $0x10e100040,%r10
  0x0000000115e976dd: jmpq   *(%r10,%rbx,8)
  0x0000000115e976e1: mov    -0x10(%rbp),%rsp
  0x0000000115e976e5: movq   $0x0,-0x10(%rbp)
  0x0000000115e976ed: mov    -0x38(%rbp),%r13
  0x0000000115e976f1: mov    -0x30(%rbp),%r14
  0x0000000115e976f5: movzwl 0x1(%r13),%ecx
  0x0000000115e976fa: mov    -0x28(%rbp),%rbx
  0x0000000115e976fe: shl    $0x2,%ecx
  0x0000000115e97701: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97705: and    $0xff,%ebx
  0x0000000115e9770b: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9770f: movzbl 0x4(%r13),%ebx
  0x0000000115e97714: add    $0x4,%r13
  0x0000000115e97718: movabs $0x10e0ff840,%r10
  0x0000000115e97722: jmpq   *(%r10,%rbx,8)
  0x0000000115e97726: mov    -0x10(%rbp),%rsp
  0x0000000115e9772a: movq   $0x0,-0x10(%rbp)
  0x0000000115e97732: mov    -0x38(%rbp),%r13
  0x0000000115e97736: mov    -0x30(%rbp),%r14
  0x0000000115e9773a: movzwl 0x1(%r13),%ecx
  0x0000000115e9773f: mov    -0x28(%rbp),%rbx
  0x0000000115e97743: shl    $0x2,%ecx
  0x0000000115e97746: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9774a: and    $0xff,%ebx
  0x0000000115e97750: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97754: movzbl 0x4(%r13),%ebx
  0x0000000115e97759: add    $0x4,%r13
  0x0000000115e9775d: movabs $0x10e0ff040,%r10
  0x0000000115e97767: jmpq   *(%r10,%rbx,8)
  0x0000000115e9776b: mov    -0x10(%rbp),%rsp
  0x0000000115e9776f: movq   $0x0,-0x10(%rbp)
  0x0000000115e97777: mov    -0x38(%rbp),%r13
  0x0000000115e9777b: mov    -0x30(%rbp),%r14
  0x0000000115e9777f: mov    -0x20(%rbp),%rbx
  0x0000000115e97783: test   %rbx,%rbx
  0x0000000115e97786: je     0x0000000115e9780e
  0x0000000115e9778c: cmpb   $0xba,0x0(%r13)
  0x0000000115e97791: je     0x0000000115e977b0
  0x0000000115e97797: cmpb   $0xe9,0x0(%r13)
  0x0000000115e9779c: je     0x0000000115e977b0
  0x0000000115e977a2: mov    -0x18(%rbp),%rcx
  0x0000000115e977a6: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e977aa: jne    0x0000000115e9780e
  0x0000000115e977b0: mov    %rax,%rcx
  0x0000000115e977b3: test   %rcx,%rcx
  0x0000000115e977b6: jne    0x0000000115e977c2
  0x0000000115e977b8: orq    $0x1,-0x8(%rbx)
  0x0000000115e977c0: jmp    0x0000000115e9780e
  0x0000000115e977c2: mov    0x8(%rcx),%ecx
  0x0000000115e977c5: shl    $0x3,%rcx
  0x0000000115e977c9: xor    -0x8(%rbx),%rcx
  0x0000000115e977cd: test   $0xfffffffffffffffc,%rcx
  0x0000000115e977d4: je     0x0000000115e9780e
  0x0000000115e977d6: test   $0x2,%rcx
  0x0000000115e977dd: jne    0x0000000115e9780e
  0x0000000115e977df: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e977e7: je     0x0000000115e9780a
  0x0000000115e977e9: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e977f1: je     0x0000000115e9780a
  0x0000000115e977f3: xor    -0x8(%rbx),%rcx
  0x0000000115e977f7: test   $0xfffffffffffffffc,%rcx
  0x0000000115e977fe: je     0x0000000115e9780e
  0x0000000115e97800: orq    $0x2,-0x8(%rbx)
  0x0000000115e97808: jmp    0x0000000115e9780e
  0x0000000115e9780a: mov    %rcx,-0x8(%rbx)
  0x0000000115e9780e: movzwl 0x1(%r13),%ecx
  0x0000000115e97813: mov    -0x28(%rbp),%rbx
  0x0000000115e97817: shl    $0x2,%ecx
  0x0000000115e9781a: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9781e: and    $0xff,%ebx
  0x0000000115e97824: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97828: movzbl 0x4(%r13),%ebx
  0x0000000115e9782d: add    $0x4,%r13
  0x0000000115e97831: movabs $0x10e101040,%r10
  0x0000000115e9783b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9783f: mov    -0x10(%rbp),%rsp
  0x0000000115e97843: movq   $0x0,-0x10(%rbp)
  0x0000000115e9784b: mov    -0x38(%rbp),%r13
  0x0000000115e9784f: mov    -0x30(%rbp),%r14
  0x0000000115e97853: movzwl 0x1(%r13),%ecx
  0x0000000115e97858: mov    -0x28(%rbp),%rbx
  0x0000000115e9785c: shl    $0x2,%ecx
  0x0000000115e9785f: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97863: and    $0xff,%ebx
  0x0000000115e97869: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9786d: movzbl 0x4(%r13),%ebx
  0x0000000115e97872: add    $0x4,%r13
  0x0000000115e97876: movabs $0x10e0ff040,%r10
  0x0000000115e97880: jmpq   *(%r10,%rbx,8)
  0x0000000115e97884: mov    -0x10(%rbp),%rsp
  0x0000000115e97888: movq   $0x0,-0x10(%rbp)
  0x0000000115e97890: mov    -0x38(%rbp),%r13
  0x0000000115e97894: mov    -0x30(%rbp),%r14
  0x0000000115e97898: movzwl 0x1(%r13),%ecx
  0x0000000115e9789d: mov    -0x28(%rbp),%rbx
  0x0000000115e978a1: shl    $0x2,%ecx
  0x0000000115e978a4: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e978a8: and    $0xff,%ebx
  0x0000000115e978ae: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e978b2: movzbl 0x4(%r13),%ebx
  0x0000000115e978b7: add    $0x4,%r13
  0x0000000115e978bb: movabs $0x10e0ff040,%r10
  0x0000000115e978c5: jmpq   *(%r10,%rbx,8)
  0x0000000115e978c9: mov    -0x10(%rbp),%rsp
  0x0000000115e978cd: movq   $0x0,-0x10(%rbp)
  0x0000000115e978d5: mov    -0x38(%rbp),%r13
  0x0000000115e978d9: mov    -0x30(%rbp),%r14
  0x0000000115e978dd: movzwl 0x1(%r13),%ecx
  0x0000000115e978e2: mov    -0x28(%rbp),%rbx
  0x0000000115e978e6: shl    $0x2,%ecx
  0x0000000115e978e9: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e978ed: and    $0xff,%ebx
  0x0000000115e978f3: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e978f7: movzbl 0x4(%r13),%ebx
  0x0000000115e978fc: add    $0x4,%r13
  0x0000000115e97900: movabs $0x10e0ff040,%r10
  0x0000000115e9790a: jmpq   *(%r10,%rbx,8)
  0x0000000115e9790e: mov    -0x10(%rbp),%rsp
  0x0000000115e97912: movq   $0x0,-0x10(%rbp)
  0x0000000115e9791a: mov    -0x38(%rbp),%r13
  0x0000000115e9791e: mov    -0x30(%rbp),%r14
  0x0000000115e97922: movzwl 0x1(%r13),%ecx
  0x0000000115e97927: mov    -0x28(%rbp),%rbx
  0x0000000115e9792b: shl    $0x2,%ecx
  0x0000000115e9792e: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97932: and    $0xff,%ebx
  0x0000000115e97938: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9793c: movzbl 0x4(%r13),%ebx
  0x0000000115e97941: add    $0x4,%r13
  0x0000000115e97945: movabs $0x10e0ff040,%r10
  0x0000000115e9794f: jmpq   *(%r10,%rbx,8)
  0x0000000115e97953: mov    -0x10(%rbp),%rsp
  0x0000000115e97957: movq   $0x0,-0x10(%rbp)
  0x0000000115e9795f: mov    -0x38(%rbp),%r13
  0x0000000115e97963: mov    -0x30(%rbp),%r14
  0x0000000115e97967: movzwl 0x1(%r13),%ecx
  0x0000000115e9796c: mov    -0x28(%rbp),%rbx
  0x0000000115e97970: shl    $0x2,%ecx
  0x0000000115e97973: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97977: and    $0xff,%ebx
  0x0000000115e9797d: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97981: movzbl 0x5(%r13),%ebx
  0x0000000115e97986: add    $0x5,%r13
  0x0000000115e9798a: movabs $0x10e101840,%r10
  0x0000000115e97994: jmpq   *(%r10,%rbx,8)
  0x0000000115e97998: mov    -0x10(%rbp),%rsp
  0x0000000115e9799c: movq   $0x0,-0x10(%rbp)
  0x0000000115e979a4: mov    -0x38(%rbp),%r13
  0x0000000115e979a8: mov    -0x30(%rbp),%r14
  0x0000000115e979ac: movzwl 0x1(%r13),%ecx
  0x0000000115e979b1: mov    -0x28(%rbp),%rbx
  0x0000000115e979b5: shl    $0x2,%ecx
  0x0000000115e979b8: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e979bc: and    $0xff,%ebx
  0x0000000115e979c2: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e979c6: movzbl 0x5(%r13),%ebx
  0x0000000115e979cb: add    $0x5,%r13
  0x0000000115e979cf: movabs $0x10e100840,%r10
  0x0000000115e979d9: jmpq   *(%r10,%rbx,8)
  0x0000000115e979dd: mov    -0x10(%rbp),%rsp
  0x0000000115e979e1: movq   $0x0,-0x10(%rbp)
  0x0000000115e979e9: mov    -0x38(%rbp),%r13
  0x0000000115e979ed: mov    -0x30(%rbp),%r14
  0x0000000115e979f1: movzwl 0x1(%r13),%ecx
  0x0000000115e979f6: mov    -0x28(%rbp),%rbx
  0x0000000115e979fa: shl    $0x2,%ecx
  0x0000000115e979fd: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97a01: and    $0xff,%ebx
  0x0000000115e97a07: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97a0b: movzbl 0x5(%r13),%ebx
  0x0000000115e97a10: add    $0x5,%r13
  0x0000000115e97a14: movabs $0x10e100040,%r10
  0x0000000115e97a1e: jmpq   *(%r10,%rbx,8)
  0x0000000115e97a22: mov    -0x10(%rbp),%rsp
  0x0000000115e97a26: movq   $0x0,-0x10(%rbp)
  0x0000000115e97a2e: mov    -0x38(%rbp),%r13
  0x0000000115e97a32: mov    -0x30(%rbp),%r14
  0x0000000115e97a36: movzwl 0x1(%r13),%ecx
  0x0000000115e97a3b: mov    -0x28(%rbp),%rbx
  0x0000000115e97a3f: shl    $0x2,%ecx
  0x0000000115e97a42: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97a46: and    $0xff,%ebx
  0x0000000115e97a4c: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97a50: movzbl 0x5(%r13),%ebx
  0x0000000115e97a55: add    $0x5,%r13
  0x0000000115e97a59: movabs $0x10e0ff840,%r10
  0x0000000115e97a63: jmpq   *(%r10,%rbx,8)
  0x0000000115e97a67: mov    -0x10(%rbp),%rsp
  0x0000000115e97a6b: movq   $0x0,-0x10(%rbp)
  0x0000000115e97a73: mov    -0x38(%rbp),%r13
  0x0000000115e97a77: mov    -0x30(%rbp),%r14
  0x0000000115e97a7b: movzwl 0x1(%r13),%ecx
  0x0000000115e97a80: mov    -0x28(%rbp),%rbx
  0x0000000115e97a84: shl    $0x2,%ecx
  0x0000000115e97a87: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97a8b: and    $0xff,%ebx
  0x0000000115e97a91: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97a95: movzbl 0x5(%r13),%ebx
  0x0000000115e97a9a: add    $0x5,%r13
  0x0000000115e97a9e: movabs $0x10e0ff040,%r10
  0x0000000115e97aa8: jmpq   *(%r10,%rbx,8)
  0x0000000115e97aac: mov    -0x10(%rbp),%rsp
  0x0000000115e97ab0: movq   $0x0,-0x10(%rbp)
  0x0000000115e97ab8: mov    -0x38(%rbp),%r13
  0x0000000115e97abc: mov    -0x30(%rbp),%r14
  0x0000000115e97ac0: mov    -0x20(%rbp),%rbx
  0x0000000115e97ac4: test   %rbx,%rbx
  0x0000000115e97ac7: je     0x0000000115e97b4f
  0x0000000115e97acd: cmpb   $0xba,0x0(%r13)
  0x0000000115e97ad2: je     0x0000000115e97af1
  0x0000000115e97ad8: cmpb   $0xe9,0x0(%r13)
  0x0000000115e97add: je     0x0000000115e97af1
  0x0000000115e97ae3: mov    -0x18(%rbp),%rcx
  0x0000000115e97ae7: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e97aeb: jne    0x0000000115e97b4f
  0x0000000115e97af1: mov    %rax,%rcx
  0x0000000115e97af4: test   %rcx,%rcx
  0x0000000115e97af7: jne    0x0000000115e97b03
  0x0000000115e97af9: orq    $0x1,-0x8(%rbx)
  0x0000000115e97b01: jmp    0x0000000115e97b4f
  0x0000000115e97b03: mov    0x8(%rcx),%ecx
  0x0000000115e97b06: shl    $0x3,%rcx
  0x0000000115e97b0a: xor    -0x8(%rbx),%rcx
  0x0000000115e97b0e: test   $0xfffffffffffffffc,%rcx
  0x0000000115e97b15: je     0x0000000115e97b4f
  0x0000000115e97b17: test   $0x2,%rcx
  0x0000000115e97b1e: jne    0x0000000115e97b4f
  0x0000000115e97b20: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e97b28: je     0x0000000115e97b4b
  0x0000000115e97b2a: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e97b32: je     0x0000000115e97b4b
  0x0000000115e97b34: xor    -0x8(%rbx),%rcx
  0x0000000115e97b38: test   $0xfffffffffffffffc,%rcx
  0x0000000115e97b3f: je     0x0000000115e97b4f
  0x0000000115e97b41: orq    $0x2,-0x8(%rbx)
  0x0000000115e97b49: jmp    0x0000000115e97b4f
  0x0000000115e97b4b: mov    %rcx,-0x8(%rbx)
  0x0000000115e97b4f: movzwl 0x1(%r13),%ecx
  0x0000000115e97b54: mov    -0x28(%rbp),%rbx
  0x0000000115e97b58: shl    $0x2,%ecx
  0x0000000115e97b5b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97b5f: and    $0xff,%ebx
  0x0000000115e97b65: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97b69: movzbl 0x5(%r13),%ebx
  0x0000000115e97b6e: add    $0x5,%r13
  0x0000000115e97b72: movabs $0x10e101040,%r10
  0x0000000115e97b7c: jmpq   *(%r10,%rbx,8)
  0x0000000115e97b80: mov    -0x10(%rbp),%rsp
  0x0000000115e97b84: movq   $0x0,-0x10(%rbp)
  0x0000000115e97b8c: mov    -0x38(%rbp),%r13
  0x0000000115e97b90: mov    -0x30(%rbp),%r14
  0x0000000115e97b94: movzwl 0x1(%r13),%ecx
  0x0000000115e97b99: mov    -0x28(%rbp),%rbx
  0x0000000115e97b9d: shl    $0x2,%ecx
  0x0000000115e97ba0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97ba4: and    $0xff,%ebx
  0x0000000115e97baa: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97bae: movzbl 0x5(%r13),%ebx
  0x0000000115e97bb3: add    $0x5,%r13
  0x0000000115e97bb7: movabs $0x10e0ff040,%r10
  0x0000000115e97bc1: jmpq   *(%r10,%rbx,8)
  0x0000000115e97bc5: mov    -0x10(%rbp),%rsp
  0x0000000115e97bc9: movq   $0x0,-0x10(%rbp)
  0x0000000115e97bd1: mov    -0x38(%rbp),%r13
  0x0000000115e97bd5: mov    -0x30(%rbp),%r14
  0x0000000115e97bd9: movzwl 0x1(%r13),%ecx
  0x0000000115e97bde: mov    -0x28(%rbp),%rbx
  0x0000000115e97be2: shl    $0x2,%ecx
  0x0000000115e97be5: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97be9: and    $0xff,%ebx
  0x0000000115e97bef: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97bf3: movzbl 0x5(%r13),%ebx
  0x0000000115e97bf8: add    $0x5,%r13
  0x0000000115e97bfc: movabs $0x10e0ff040,%r10
  0x0000000115e97c06: jmpq   *(%r10,%rbx,8)
  0x0000000115e97c0a: mov    -0x10(%rbp),%rsp
  0x0000000115e97c0e: movq   $0x0,-0x10(%rbp)
  0x0000000115e97c16: mov    -0x38(%rbp),%r13
  0x0000000115e97c1a: mov    -0x30(%rbp),%r14
  0x0000000115e97c1e: movzwl 0x1(%r13),%ecx
  0x0000000115e97c23: mov    -0x28(%rbp),%rbx
  0x0000000115e97c27: shl    $0x2,%ecx
  0x0000000115e97c2a: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97c2e: and    $0xff,%ebx
  0x0000000115e97c34: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97c38: movzbl 0x5(%r13),%ebx
  0x0000000115e97c3d: add    $0x5,%r13
  0x0000000115e97c41: movabs $0x10e0ff040,%r10
  0x0000000115e97c4b: jmpq   *(%r10,%rbx,8)
  0x0000000115e97c4f: mov    -0x10(%rbp),%rsp
  0x0000000115e97c53: movq   $0x0,-0x10(%rbp)
  0x0000000115e97c5b: mov    -0x38(%rbp),%r13
  0x0000000115e97c5f: mov    -0x30(%rbp),%r14
  0x0000000115e97c63: movzwl 0x1(%r13),%ecx
  0x0000000115e97c68: mov    -0x28(%rbp),%rbx
  0x0000000115e97c6c: shl    $0x2,%ecx
  0x0000000115e97c6f: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97c73: and    $0xff,%ebx
  0x0000000115e97c79: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97c7d: movzbl 0x5(%r13),%ebx
  0x0000000115e97c82: add    $0x5,%r13
  0x0000000115e97c86: movabs $0x10e0ff040,%r10
  0x0000000115e97c90: jmpq   *(%r10,%rbx,8)
  0x0000000115e97c94: mov    -0x10(%rbp),%rsp
  0x0000000115e97c98: movq   $0x0,-0x10(%rbp)
  0x0000000115e97ca0: mov    -0x38(%rbp),%r13
  0x0000000115e97ca4: mov    -0x30(%rbp),%r14
  0x0000000115e97ca8: movzwl 0x1(%r13),%ecx
  0x0000000115e97cad: mov    -0x28(%rbp),%rbx
  0x0000000115e97cb1: shl    $0x2,%ecx
  0x0000000115e97cb4: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97cb8: and    $0xff,%ebx
  0x0000000115e97cbe: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97cc2: movzbl 0x6(%r13),%ebx
  0x0000000115e97cc7: add    $0x6,%r13
  0x0000000115e97ccb: movabs $0x10e101840,%r10
  0x0000000115e97cd5: jmpq   *(%r10,%rbx,8)
  0x0000000115e97cd9: mov    -0x10(%rbp),%rsp
  0x0000000115e97cdd: movq   $0x0,-0x10(%rbp)
  0x0000000115e97ce5: mov    -0x38(%rbp),%r13
  0x0000000115e97ce9: mov    -0x30(%rbp),%r14
  0x0000000115e97ced: movzwl 0x1(%r13),%ecx
  0x0000000115e97cf2: mov    -0x28(%rbp),%rbx
  0x0000000115e97cf6: shl    $0x2,%ecx
  0x0000000115e97cf9: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97cfd: and    $0xff,%ebx
  0x0000000115e97d03: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97d07: movzbl 0x6(%r13),%ebx
  0x0000000115e97d0c: add    $0x6,%r13
  0x0000000115e97d10: movabs $0x10e100840,%r10
  0x0000000115e97d1a: jmpq   *(%r10,%rbx,8)
  0x0000000115e97d1e: mov    -0x10(%rbp),%rsp
  0x0000000115e97d22: movq   $0x0,-0x10(%rbp)
  0x0000000115e97d2a: mov    -0x38(%rbp),%r13
  0x0000000115e97d2e: mov    -0x30(%rbp),%r14
  0x0000000115e97d32: movzwl 0x1(%r13),%ecx
  0x0000000115e97d37: mov    -0x28(%rbp),%rbx
  0x0000000115e97d3b: shl    $0x2,%ecx
  0x0000000115e97d3e: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97d42: and    $0xff,%ebx
  0x0000000115e97d48: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97d4c: movzbl 0x6(%r13),%ebx
  0x0000000115e97d51: add    $0x6,%r13
  0x0000000115e97d55: movabs $0x10e100040,%r10
  0x0000000115e97d5f: jmpq   *(%r10,%rbx,8)
  0x0000000115e97d63: mov    -0x10(%rbp),%rsp
  0x0000000115e97d67: movq   $0x0,-0x10(%rbp)
  0x0000000115e97d6f: mov    -0x38(%rbp),%r13
  0x0000000115e97d73: mov    -0x30(%rbp),%r14
  0x0000000115e97d77: movzwl 0x1(%r13),%ecx
  0x0000000115e97d7c: mov    -0x28(%rbp),%rbx
  0x0000000115e97d80: shl    $0x2,%ecx
  0x0000000115e97d83: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97d87: and    $0xff,%ebx
  0x0000000115e97d8d: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97d91: movzbl 0x6(%r13),%ebx
  0x0000000115e97d96: add    $0x6,%r13
  0x0000000115e97d9a: movabs $0x10e0ff840,%r10
  0x0000000115e97da4: jmpq   *(%r10,%rbx,8)
  0x0000000115e97da8: mov    -0x10(%rbp),%rsp
  0x0000000115e97dac: movq   $0x0,-0x10(%rbp)
  0x0000000115e97db4: mov    -0x38(%rbp),%r13
  0x0000000115e97db8: mov    -0x30(%rbp),%r14
  0x0000000115e97dbc: movzwl 0x1(%r13),%ecx
  0x0000000115e97dc1: mov    -0x28(%rbp),%rbx
  0x0000000115e97dc5: shl    $0x2,%ecx
  0x0000000115e97dc8: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97dcc: and    $0xff,%ebx
  0x0000000115e97dd2: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97dd6: movzbl 0x6(%r13),%ebx
  0x0000000115e97ddb: add    $0x6,%r13
  0x0000000115e97ddf: movabs $0x10e0ff040,%r10
  0x0000000115e97de9: jmpq   *(%r10,%rbx,8)
  0x0000000115e97ded: mov    -0x10(%rbp),%rsp
  0x0000000115e97df1: movq   $0x0,-0x10(%rbp)
  0x0000000115e97df9: mov    -0x38(%rbp),%r13
  0x0000000115e97dfd: mov    -0x30(%rbp),%r14
  0x0000000115e97e01: mov    -0x20(%rbp),%rbx
  0x0000000115e97e05: test   %rbx,%rbx
  0x0000000115e97e08: je     0x0000000115e97e90
  0x0000000115e97e0e: cmpb   $0xba,0x0(%r13)
  0x0000000115e97e13: je     0x0000000115e97e32
  0x0000000115e97e19: cmpb   $0xe9,0x0(%r13)
  0x0000000115e97e1e: je     0x0000000115e97e32
  0x0000000115e97e24: mov    -0x18(%rbp),%rcx
  0x0000000115e97e28: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e97e2c: jne    0x0000000115e97e90
  0x0000000115e97e32: mov    %rax,%rcx
  0x0000000115e97e35: test   %rcx,%rcx
  0x0000000115e97e38: jne    0x0000000115e97e44
  0x0000000115e97e3a: orq    $0x1,-0x8(%rbx)
  0x0000000115e97e42: jmp    0x0000000115e97e90
  0x0000000115e97e44: mov    0x8(%rcx),%ecx
  0x0000000115e97e47: shl    $0x3,%rcx
  0x0000000115e97e4b: xor    -0x8(%rbx),%rcx
  0x0000000115e97e4f: test   $0xfffffffffffffffc,%rcx
  0x0000000115e97e56: je     0x0000000115e97e90
  0x0000000115e97e58: test   $0x2,%rcx
  0x0000000115e97e5f: jne    0x0000000115e97e90
  0x0000000115e97e61: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e97e69: je     0x0000000115e97e8c
  0x0000000115e97e6b: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e97e73: je     0x0000000115e97e8c
  0x0000000115e97e75: xor    -0x8(%rbx),%rcx
  0x0000000115e97e79: test   $0xfffffffffffffffc,%rcx
  0x0000000115e97e80: je     0x0000000115e97e90
  0x0000000115e97e82: orq    $0x2,-0x8(%rbx)
  0x0000000115e97e8a: jmp    0x0000000115e97e90
  0x0000000115e97e8c: mov    %rcx,-0x8(%rbx)
  0x0000000115e97e90: movzwl 0x1(%r13),%ecx
  0x0000000115e97e95: mov    -0x28(%rbp),%rbx
  0x0000000115e97e99: shl    $0x2,%ecx
  0x0000000115e97e9c: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97ea0: and    $0xff,%ebx
  0x0000000115e97ea6: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97eaa: movzbl 0x6(%r13),%ebx
  0x0000000115e97eaf: add    $0x6,%r13
  0x0000000115e97eb3: movabs $0x10e101040,%r10
  0x0000000115e97ebd: jmpq   *(%r10,%rbx,8)
  0x0000000115e97ec1: mov    -0x10(%rbp),%rsp
  0x0000000115e97ec5: movq   $0x0,-0x10(%rbp)
  0x0000000115e97ecd: mov    -0x38(%rbp),%r13
  0x0000000115e97ed1: mov    -0x30(%rbp),%r14
  0x0000000115e97ed5: movzwl 0x1(%r13),%ecx
  0x0000000115e97eda: mov    -0x28(%rbp),%rbx
  0x0000000115e97ede: shl    $0x2,%ecx
  0x0000000115e97ee1: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97ee5: and    $0xff,%ebx
  0x0000000115e97eeb: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97eef: movzbl 0x6(%r13),%ebx
  0x0000000115e97ef4: add    $0x6,%r13
  0x0000000115e97ef8: movabs $0x10e0ff040,%r10
  0x0000000115e97f02: jmpq   *(%r10,%rbx,8)
  0x0000000115e97f06: mov    -0x10(%rbp),%rsp
  0x0000000115e97f0a: movq   $0x0,-0x10(%rbp)
  0x0000000115e97f12: mov    -0x38(%rbp),%r13
  0x0000000115e97f16: mov    -0x30(%rbp),%r14
  0x0000000115e97f1a: movzwl 0x1(%r13),%ecx
  0x0000000115e97f1f: mov    -0x28(%rbp),%rbx
  0x0000000115e97f23: shl    $0x2,%ecx
  0x0000000115e97f26: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97f2a: and    $0xff,%ebx
  0x0000000115e97f30: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97f34: movzbl 0x6(%r13),%ebx
  0x0000000115e97f39: add    $0x6,%r13
  0x0000000115e97f3d: movabs $0x10e0ff040,%r10
  0x0000000115e97f47: jmpq   *(%r10,%rbx,8)
  0x0000000115e97f4b: mov    -0x10(%rbp),%rsp
  0x0000000115e97f4f: movq   $0x0,-0x10(%rbp)
  0x0000000115e97f57: mov    -0x38(%rbp),%r13
  0x0000000115e97f5b: mov    -0x30(%rbp),%r14
  0x0000000115e97f5f: movzwl 0x1(%r13),%ecx
  0x0000000115e97f64: mov    -0x28(%rbp),%rbx
  0x0000000115e97f68: shl    $0x2,%ecx
  0x0000000115e97f6b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97f6f: and    $0xff,%ebx
  0x0000000115e97f75: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97f79: movzbl 0x6(%r13),%ebx
  0x0000000115e97f7e: add    $0x6,%r13
  0x0000000115e97f82: movabs $0x10e0ff040,%r10
  0x0000000115e97f8c: jmpq   *(%r10,%rbx,8)
  0x0000000115e97f90: mov    -0x10(%rbp),%rsp
  0x0000000115e97f94: movq   $0x0,-0x10(%rbp)
  0x0000000115e97f9c: mov    -0x38(%rbp),%r13
  0x0000000115e97fa0: mov    -0x30(%rbp),%r14
  0x0000000115e97fa4: movzwl 0x1(%r13),%ecx
  0x0000000115e97fa9: mov    -0x28(%rbp),%rbx
  0x0000000115e97fad: shl    $0x2,%ecx
  0x0000000115e97fb0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97fb4: and    $0xff,%ebx
  0x0000000115e97fba: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e97fbe: movzbl 0x6(%r13),%ebx
  0x0000000115e97fc3: add    $0x6,%r13
  0x0000000115e97fc7: movabs $0x10e0ff040,%r10
  0x0000000115e97fd1: jmpq   *(%r10,%rbx,8)
  0x0000000115e97fd5: mov    -0x10(%rbp),%rsp
  0x0000000115e97fd9: movq   $0x0,-0x10(%rbp)
  0x0000000115e97fe1: mov    -0x38(%rbp),%r13
  0x0000000115e97fe5: mov    -0x30(%rbp),%r14
  0x0000000115e97fe9: movzwl 0x1(%r13),%ecx
  0x0000000115e97fee: mov    -0x28(%rbp),%rbx
  0x0000000115e97ff2: shl    $0x2,%ecx
  0x0000000115e97ff5: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e97ff9: and    $0xff,%ebx
  0x0000000115e97fff: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98003: movzbl 0x7(%r13),%ebx
  0x0000000115e98008: add    $0x7,%r13
  0x0000000115e9800c: movabs $0x10e101840,%r10
  0x0000000115e98016: jmpq   *(%r10,%rbx,8)
  0x0000000115e9801a: mov    -0x10(%rbp),%rsp
  0x0000000115e9801e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98026: mov    -0x38(%rbp),%r13
  0x0000000115e9802a: mov    -0x30(%rbp),%r14
  0x0000000115e9802e: movzwl 0x1(%r13),%ecx
  0x0000000115e98033: mov    -0x28(%rbp),%rbx
  0x0000000115e98037: shl    $0x2,%ecx
  0x0000000115e9803a: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9803e: and    $0xff,%ebx
  0x0000000115e98044: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98048: movzbl 0x7(%r13),%ebx
  0x0000000115e9804d: add    $0x7,%r13
  0x0000000115e98051: movabs $0x10e100840,%r10
  0x0000000115e9805b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9805f: mov    -0x10(%rbp),%rsp
  0x0000000115e98063: movq   $0x0,-0x10(%rbp)
  0x0000000115e9806b: mov    -0x38(%rbp),%r13
  0x0000000115e9806f: mov    -0x30(%rbp),%r14
  0x0000000115e98073: movzwl 0x1(%r13),%ecx
  0x0000000115e98078: mov    -0x28(%rbp),%rbx
  0x0000000115e9807c: shl    $0x2,%ecx
  0x0000000115e9807f: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98083: and    $0xff,%ebx
  0x0000000115e98089: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9808d: movzbl 0x7(%r13),%ebx
  0x0000000115e98092: add    $0x7,%r13
  0x0000000115e98096: movabs $0x10e100040,%r10
  0x0000000115e980a0: jmpq   *(%r10,%rbx,8)
  0x0000000115e980a4: mov    -0x10(%rbp),%rsp
  0x0000000115e980a8: movq   $0x0,-0x10(%rbp)
  0x0000000115e980b0: mov    -0x38(%rbp),%r13
  0x0000000115e980b4: mov    -0x30(%rbp),%r14
  0x0000000115e980b8: movzwl 0x1(%r13),%ecx
  0x0000000115e980bd: mov    -0x28(%rbp),%rbx
  0x0000000115e980c1: shl    $0x2,%ecx
  0x0000000115e980c4: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e980c8: and    $0xff,%ebx
  0x0000000115e980ce: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e980d2: movzbl 0x7(%r13),%ebx
  0x0000000115e980d7: add    $0x7,%r13
  0x0000000115e980db: movabs $0x10e0ff840,%r10
  0x0000000115e980e5: jmpq   *(%r10,%rbx,8)
  0x0000000115e980e9: mov    -0x10(%rbp),%rsp
  0x0000000115e980ed: movq   $0x0,-0x10(%rbp)
  0x0000000115e980f5: mov    -0x38(%rbp),%r13
  0x0000000115e980f9: mov    -0x30(%rbp),%r14
  0x0000000115e980fd: movzwl 0x1(%r13),%ecx
  0x0000000115e98102: mov    -0x28(%rbp),%rbx
  0x0000000115e98106: shl    $0x2,%ecx
  0x0000000115e98109: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9810d: and    $0xff,%ebx
  0x0000000115e98113: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98117: movzbl 0x7(%r13),%ebx
  0x0000000115e9811c: add    $0x7,%r13
  0x0000000115e98120: movabs $0x10e0ff040,%r10
  0x0000000115e9812a: jmpq   *(%r10,%rbx,8)
  0x0000000115e9812e: mov    -0x10(%rbp),%rsp
  0x0000000115e98132: movq   $0x0,-0x10(%rbp)
  0x0000000115e9813a: mov    -0x38(%rbp),%r13
  0x0000000115e9813e: mov    -0x30(%rbp),%r14
  0x0000000115e98142: mov    -0x20(%rbp),%rbx
  0x0000000115e98146: test   %rbx,%rbx
  0x0000000115e98149: je     0x0000000115e981d1
  0x0000000115e9814f: cmpb   $0xba,0x0(%r13)
  0x0000000115e98154: je     0x0000000115e98173
  0x0000000115e9815a: cmpb   $0xe9,0x0(%r13)
  0x0000000115e9815f: je     0x0000000115e98173
  0x0000000115e98165: mov    -0x18(%rbp),%rcx
  0x0000000115e98169: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e9816d: jne    0x0000000115e981d1
  0x0000000115e98173: mov    %rax,%rcx
  0x0000000115e98176: test   %rcx,%rcx
  0x0000000115e98179: jne    0x0000000115e98185
  0x0000000115e9817b: orq    $0x1,-0x8(%rbx)
  0x0000000115e98183: jmp    0x0000000115e981d1
  0x0000000115e98185: mov    0x8(%rcx),%ecx
  0x0000000115e98188: shl    $0x3,%rcx
  0x0000000115e9818c: xor    -0x8(%rbx),%rcx
  0x0000000115e98190: test   $0xfffffffffffffffc,%rcx
  0x0000000115e98197: je     0x0000000115e981d1
  0x0000000115e98199: test   $0x2,%rcx
  0x0000000115e981a0: jne    0x0000000115e981d1
  0x0000000115e981a2: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e981aa: je     0x0000000115e981cd
  0x0000000115e981ac: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e981b4: je     0x0000000115e981cd
  0x0000000115e981b6: xor    -0x8(%rbx),%rcx
  0x0000000115e981ba: test   $0xfffffffffffffffc,%rcx
  0x0000000115e981c1: je     0x0000000115e981d1
  0x0000000115e981c3: orq    $0x2,-0x8(%rbx)
  0x0000000115e981cb: jmp    0x0000000115e981d1
  0x0000000115e981cd: mov    %rcx,-0x8(%rbx)
  0x0000000115e981d1: movzwl 0x1(%r13),%ecx
  0x0000000115e981d6: mov    -0x28(%rbp),%rbx
  0x0000000115e981da: shl    $0x2,%ecx
  0x0000000115e981dd: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e981e1: and    $0xff,%ebx
  0x0000000115e981e7: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e981eb: movzbl 0x7(%r13),%ebx
  0x0000000115e981f0: add    $0x7,%r13
  0x0000000115e981f4: movabs $0x10e101040,%r10
  0x0000000115e981fe: jmpq   *(%r10,%rbx,8)
  0x0000000115e98202: mov    -0x10(%rbp),%rsp
  0x0000000115e98206: movq   $0x0,-0x10(%rbp)
  0x0000000115e9820e: mov    -0x38(%rbp),%r13
  0x0000000115e98212: mov    -0x30(%rbp),%r14
  0x0000000115e98216: movzwl 0x1(%r13),%ecx
  0x0000000115e9821b: mov    -0x28(%rbp),%rbx
  0x0000000115e9821f: shl    $0x2,%ecx
  0x0000000115e98222: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98226: and    $0xff,%ebx
  0x0000000115e9822c: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98230: movzbl 0x7(%r13),%ebx
  0x0000000115e98235: add    $0x7,%r13
  0x0000000115e98239: movabs $0x10e0ff040,%r10
  0x0000000115e98243: jmpq   *(%r10,%rbx,8)
  0x0000000115e98247: mov    -0x10(%rbp),%rsp
  0x0000000115e9824b: movq   $0x0,-0x10(%rbp)
  0x0000000115e98253: mov    -0x38(%rbp),%r13
  0x0000000115e98257: mov    -0x30(%rbp),%r14
  0x0000000115e9825b: movzwl 0x1(%r13),%ecx
  0x0000000115e98260: mov    -0x28(%rbp),%rbx
  0x0000000115e98264: shl    $0x2,%ecx
  0x0000000115e98267: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9826b: and    $0xff,%ebx
  0x0000000115e98271: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98275: movzbl 0x7(%r13),%ebx
  0x0000000115e9827a: add    $0x7,%r13
  0x0000000115e9827e: movabs $0x10e0ff040,%r10
  0x0000000115e98288: jmpq   *(%r10,%rbx,8)
  0x0000000115e9828c: mov    -0x10(%rbp),%rsp
  0x0000000115e98290: movq   $0x0,-0x10(%rbp)
  0x0000000115e98298: mov    -0x38(%rbp),%r13
  0x0000000115e9829c: mov    -0x30(%rbp),%r14
  0x0000000115e982a0: movzwl 0x1(%r13),%ecx
  0x0000000115e982a5: mov    -0x28(%rbp),%rbx
  0x0000000115e982a9: shl    $0x2,%ecx
  0x0000000115e982ac: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e982b0: and    $0xff,%ebx
  0x0000000115e982b6: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e982ba: movzbl 0x7(%r13),%ebx
  0x0000000115e982bf: add    $0x7,%r13
  0x0000000115e982c3: movabs $0x10e0ff040,%r10
  0x0000000115e982cd: jmpq   *(%r10,%rbx,8)
  0x0000000115e982d1: mov    -0x10(%rbp),%rsp
  0x0000000115e982d5: movq   $0x0,-0x10(%rbp)
  0x0000000115e982dd: mov    -0x38(%rbp),%r13
  0x0000000115e982e1: mov    -0x30(%rbp),%r14
  0x0000000115e982e5: movzwl 0x1(%r13),%ecx
  0x0000000115e982ea: mov    -0x28(%rbp),%rbx
  0x0000000115e982ee: shl    $0x2,%ecx
  0x0000000115e982f1: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e982f5: and    $0xff,%ebx
  0x0000000115e982fb: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e982ff: movzbl 0x7(%r13),%ebx
  0x0000000115e98304: add    $0x7,%r13
  0x0000000115e98308: movabs $0x10e0ff040,%r10
  0x0000000115e98312: jmpq   *(%r10,%rbx,8)
  0x0000000115e98316: mov    -0x10(%rbp),%rsp
  0x0000000115e9831a: movq   $0x0,-0x10(%rbp)
  0x0000000115e98322: mov    -0x38(%rbp),%r13
  0x0000000115e98326: mov    -0x30(%rbp),%r14
  0x0000000115e9832a: movzwl 0x1(%r13),%ecx
  0x0000000115e9832f: mov    -0x28(%rbp),%rbx
  0x0000000115e98333: shl    $0x2,%ecx
  0x0000000115e98336: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9833a: and    $0xff,%ebx
  0x0000000115e98340: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98344: movzbl 0x8(%r13),%ebx
  0x0000000115e98349: add    $0x8,%r13
  0x0000000115e9834d: movabs $0x10e101840,%r10
  0x0000000115e98357: jmpq   *(%r10,%rbx,8)
  0x0000000115e9835b: mov    -0x10(%rbp),%rsp
  0x0000000115e9835f: movq   $0x0,-0x10(%rbp)
  0x0000000115e98367: mov    -0x38(%rbp),%r13
  0x0000000115e9836b: mov    -0x30(%rbp),%r14
  0x0000000115e9836f: movzwl 0x1(%r13),%ecx
  0x0000000115e98374: mov    -0x28(%rbp),%rbx
  0x0000000115e98378: shl    $0x2,%ecx
  0x0000000115e9837b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9837f: and    $0xff,%ebx
  0x0000000115e98385: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98389: movzbl 0x8(%r13),%ebx
  0x0000000115e9838e: add    $0x8,%r13
  0x0000000115e98392: movabs $0x10e100840,%r10
  0x0000000115e9839c: jmpq   *(%r10,%rbx,8)
  0x0000000115e983a0: mov    -0x10(%rbp),%rsp
  0x0000000115e983a4: movq   $0x0,-0x10(%rbp)
  0x0000000115e983ac: mov    -0x38(%rbp),%r13
  0x0000000115e983b0: mov    -0x30(%rbp),%r14
  0x0000000115e983b4: movzwl 0x1(%r13),%ecx
  0x0000000115e983b9: mov    -0x28(%rbp),%rbx
  0x0000000115e983bd: shl    $0x2,%ecx
  0x0000000115e983c0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e983c4: and    $0xff,%ebx
  0x0000000115e983ca: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e983ce: movzbl 0x8(%r13),%ebx
  0x0000000115e983d3: add    $0x8,%r13
  0x0000000115e983d7: movabs $0x10e100040,%r10
  0x0000000115e983e1: jmpq   *(%r10,%rbx,8)
  0x0000000115e983e5: mov    -0x10(%rbp),%rsp
  0x0000000115e983e9: movq   $0x0,-0x10(%rbp)
  0x0000000115e983f1: mov    -0x38(%rbp),%r13
  0x0000000115e983f5: mov    -0x30(%rbp),%r14
  0x0000000115e983f9: movzwl 0x1(%r13),%ecx
  0x0000000115e983fe: mov    -0x28(%rbp),%rbx
  0x0000000115e98402: shl    $0x2,%ecx
  0x0000000115e98405: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98409: and    $0xff,%ebx
  0x0000000115e9840f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98413: movzbl 0x8(%r13),%ebx
  0x0000000115e98418: add    $0x8,%r13
  0x0000000115e9841c: movabs $0x10e0ff840,%r10
  0x0000000115e98426: jmpq   *(%r10,%rbx,8)
  0x0000000115e9842a: mov    -0x10(%rbp),%rsp
  0x0000000115e9842e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98436: mov    -0x38(%rbp),%r13
  0x0000000115e9843a: mov    -0x30(%rbp),%r14
  0x0000000115e9843e: movzwl 0x1(%r13),%ecx
  0x0000000115e98443: mov    -0x28(%rbp),%rbx
  0x0000000115e98447: shl    $0x2,%ecx
  0x0000000115e9844a: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9844e: and    $0xff,%ebx
  0x0000000115e98454: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98458: movzbl 0x8(%r13),%ebx
  0x0000000115e9845d: add    $0x8,%r13
  0x0000000115e98461: movabs $0x10e0ff040,%r10
  0x0000000115e9846b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9846f: mov    -0x10(%rbp),%rsp
  0x0000000115e98473: movq   $0x0,-0x10(%rbp)
  0x0000000115e9847b: mov    -0x38(%rbp),%r13
  0x0000000115e9847f: mov    -0x30(%rbp),%r14
  0x0000000115e98483: mov    -0x20(%rbp),%rbx
  0x0000000115e98487: test   %rbx,%rbx
  0x0000000115e9848a: je     0x0000000115e98512
  0x0000000115e98490: cmpb   $0xba,0x0(%r13)
  0x0000000115e98495: je     0x0000000115e984b4
  0x0000000115e9849b: cmpb   $0xe9,0x0(%r13)
  0x0000000115e984a0: je     0x0000000115e984b4
  0x0000000115e984a6: mov    -0x18(%rbp),%rcx
  0x0000000115e984aa: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e984ae: jne    0x0000000115e98512
  0x0000000115e984b4: mov    %rax,%rcx
  0x0000000115e984b7: test   %rcx,%rcx
  0x0000000115e984ba: jne    0x0000000115e984c6
  0x0000000115e984bc: orq    $0x1,-0x8(%rbx)
  0x0000000115e984c4: jmp    0x0000000115e98512
  0x0000000115e984c6: mov    0x8(%rcx),%ecx
  0x0000000115e984c9: shl    $0x3,%rcx
  0x0000000115e984cd: xor    -0x8(%rbx),%rcx
  0x0000000115e984d1: test   $0xfffffffffffffffc,%rcx
  0x0000000115e984d8: je     0x0000000115e98512
  0x0000000115e984da: test   $0x2,%rcx
  0x0000000115e984e1: jne    0x0000000115e98512
  0x0000000115e984e3: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e984eb: je     0x0000000115e9850e
  0x0000000115e984ed: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e984f5: je     0x0000000115e9850e
  0x0000000115e984f7: xor    -0x8(%rbx),%rcx
  0x0000000115e984fb: test   $0xfffffffffffffffc,%rcx
  0x0000000115e98502: je     0x0000000115e98512
  0x0000000115e98504: orq    $0x2,-0x8(%rbx)
  0x0000000115e9850c: jmp    0x0000000115e98512
  0x0000000115e9850e: mov    %rcx,-0x8(%rbx)
  0x0000000115e98512: movzwl 0x1(%r13),%ecx
  0x0000000115e98517: mov    -0x28(%rbp),%rbx
  0x0000000115e9851b: shl    $0x2,%ecx
  0x0000000115e9851e: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98522: and    $0xff,%ebx
  0x0000000115e98528: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9852c: movzbl 0x8(%r13),%ebx
  0x0000000115e98531: add    $0x8,%r13
  0x0000000115e98535: movabs $0x10e101040,%r10
  0x0000000115e9853f: jmpq   *(%r10,%rbx,8)
  0x0000000115e98543: mov    -0x10(%rbp),%rsp
  0x0000000115e98547: movq   $0x0,-0x10(%rbp)
  0x0000000115e9854f: mov    -0x38(%rbp),%r13
  0x0000000115e98553: mov    -0x30(%rbp),%r14
  0x0000000115e98557: movzwl 0x1(%r13),%ecx
  0x0000000115e9855c: mov    -0x28(%rbp),%rbx
  0x0000000115e98560: shl    $0x2,%ecx
  0x0000000115e98563: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98567: and    $0xff,%ebx
  0x0000000115e9856d: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98571: movzbl 0x8(%r13),%ebx
  0x0000000115e98576: add    $0x8,%r13
  0x0000000115e9857a: movabs $0x10e0ff040,%r10
  0x0000000115e98584: jmpq   *(%r10,%rbx,8)
  0x0000000115e98588: mov    -0x10(%rbp),%rsp
  0x0000000115e9858c: movq   $0x0,-0x10(%rbp)
  0x0000000115e98594: mov    -0x38(%rbp),%r13
  0x0000000115e98598: mov    -0x30(%rbp),%r14
  0x0000000115e9859c: movzwl 0x1(%r13),%ecx
  0x0000000115e985a1: mov    -0x28(%rbp),%rbx
  0x0000000115e985a5: shl    $0x2,%ecx
  0x0000000115e985a8: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e985ac: and    $0xff,%ebx
  0x0000000115e985b2: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e985b6: movzbl 0x8(%r13),%ebx
  0x0000000115e985bb: add    $0x8,%r13
  0x0000000115e985bf: movabs $0x10e0ff040,%r10
  0x0000000115e985c9: jmpq   *(%r10,%rbx,8)
  0x0000000115e985cd: mov    -0x10(%rbp),%rsp
  0x0000000115e985d1: movq   $0x0,-0x10(%rbp)
  0x0000000115e985d9: mov    -0x38(%rbp),%r13
  0x0000000115e985dd: mov    -0x30(%rbp),%r14
  0x0000000115e985e1: movzwl 0x1(%r13),%ecx
  0x0000000115e985e6: mov    -0x28(%rbp),%rbx
  0x0000000115e985ea: shl    $0x2,%ecx
  0x0000000115e985ed: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e985f1: and    $0xff,%ebx
  0x0000000115e985f7: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e985fb: movzbl 0x8(%r13),%ebx
  0x0000000115e98600: add    $0x8,%r13
  0x0000000115e98604: movabs $0x10e0ff040,%r10
  0x0000000115e9860e: jmpq   *(%r10,%rbx,8)
  0x0000000115e98612: mov    -0x10(%rbp),%rsp
  0x0000000115e98616: movq   $0x0,-0x10(%rbp)
  0x0000000115e9861e: mov    -0x38(%rbp),%r13
  0x0000000115e98622: mov    -0x30(%rbp),%r14
  0x0000000115e98626: movzwl 0x1(%r13),%ecx
  0x0000000115e9862b: mov    -0x28(%rbp),%rbx
  0x0000000115e9862f: shl    $0x2,%ecx
  0x0000000115e98632: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98636: and    $0xff,%ebx
  0x0000000115e9863c: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98640: movzbl 0x8(%r13),%ebx
  0x0000000115e98645: add    $0x8,%r13
  0x0000000115e98649: movabs $0x10e0ff040,%r10
  0x0000000115e98653: jmpq   *(%r10,%rbx,8)
  0x0000000115e98657: mov    -0x10(%rbp),%rsp
  0x0000000115e9865b: movq   $0x0,-0x10(%rbp)
  0x0000000115e98663: mov    -0x38(%rbp),%r13
  0x0000000115e98667: mov    -0x30(%rbp),%r14
  0x0000000115e9866b: movzwl 0x1(%r13),%ecx
  0x0000000115e98670: mov    -0x28(%rbp),%rbx
  0x0000000115e98674: shl    $0x2,%ecx
  0x0000000115e98677: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9867b: and    $0xff,%ebx
  0x0000000115e98681: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98685: movzbl 0x9(%r13),%ebx
  0x0000000115e9868a: add    $0x9,%r13
  0x0000000115e9868e: movabs $0x10e101840,%r10
  0x0000000115e98698: jmpq   *(%r10,%rbx,8)
  0x0000000115e9869c: mov    -0x10(%rbp),%rsp
  0x0000000115e986a0: movq   $0x0,-0x10(%rbp)
  0x0000000115e986a8: mov    -0x38(%rbp),%r13
  0x0000000115e986ac: mov    -0x30(%rbp),%r14
  0x0000000115e986b0: movzwl 0x1(%r13),%ecx
  0x0000000115e986b5: mov    -0x28(%rbp),%rbx
  0x0000000115e986b9: shl    $0x2,%ecx
  0x0000000115e986bc: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e986c0: and    $0xff,%ebx
  0x0000000115e986c6: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e986ca: movzbl 0x9(%r13),%ebx
  0x0000000115e986cf: add    $0x9,%r13
  0x0000000115e986d3: movabs $0x10e100840,%r10
  0x0000000115e986dd: jmpq   *(%r10,%rbx,8)
  0x0000000115e986e1: mov    -0x10(%rbp),%rsp
  0x0000000115e986e5: movq   $0x0,-0x10(%rbp)
  0x0000000115e986ed: mov    -0x38(%rbp),%r13
  0x0000000115e986f1: mov    -0x30(%rbp),%r14
  0x0000000115e986f5: movzwl 0x1(%r13),%ecx
  0x0000000115e986fa: mov    -0x28(%rbp),%rbx
  0x0000000115e986fe: shl    $0x2,%ecx
  0x0000000115e98701: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98705: and    $0xff,%ebx
  0x0000000115e9870b: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9870f: movzbl 0x9(%r13),%ebx
  0x0000000115e98714: add    $0x9,%r13
  0x0000000115e98718: movabs $0x10e100040,%r10
  0x0000000115e98722: jmpq   *(%r10,%rbx,8)
  0x0000000115e98726: mov    -0x10(%rbp),%rsp
  0x0000000115e9872a: movq   $0x0,-0x10(%rbp)
  0x0000000115e98732: mov    -0x38(%rbp),%r13
  0x0000000115e98736: mov    -0x30(%rbp),%r14
  0x0000000115e9873a: movzwl 0x1(%r13),%ecx
  0x0000000115e9873f: mov    -0x28(%rbp),%rbx
  0x0000000115e98743: shl    $0x2,%ecx
  0x0000000115e98746: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9874a: and    $0xff,%ebx
  0x0000000115e98750: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98754: movzbl 0x9(%r13),%ebx
  0x0000000115e98759: add    $0x9,%r13
  0x0000000115e9875d: movabs $0x10e0ff840,%r10
  0x0000000115e98767: jmpq   *(%r10,%rbx,8)
  0x0000000115e9876b: mov    -0x10(%rbp),%rsp
  0x0000000115e9876f: movq   $0x0,-0x10(%rbp)
  0x0000000115e98777: mov    -0x38(%rbp),%r13
  0x0000000115e9877b: mov    -0x30(%rbp),%r14
  0x0000000115e9877f: movzwl 0x1(%r13),%ecx
  0x0000000115e98784: mov    -0x28(%rbp),%rbx
  0x0000000115e98788: shl    $0x2,%ecx
  0x0000000115e9878b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9878f: and    $0xff,%ebx
  0x0000000115e98795: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98799: movzbl 0x9(%r13),%ebx
  0x0000000115e9879e: add    $0x9,%r13
  0x0000000115e987a2: movabs $0x10e0ff040,%r10
  0x0000000115e987ac: jmpq   *(%r10,%rbx,8)
  0x0000000115e987b0: mov    -0x10(%rbp),%rsp
  0x0000000115e987b4: movq   $0x0,-0x10(%rbp)
  0x0000000115e987bc: mov    -0x38(%rbp),%r13
  0x0000000115e987c0: mov    -0x30(%rbp),%r14
  0x0000000115e987c4: mov    -0x20(%rbp),%rbx
  0x0000000115e987c8: test   %rbx,%rbx
  0x0000000115e987cb: je     0x0000000115e98853
  0x0000000115e987d1: cmpb   $0xba,0x0(%r13)
  0x0000000115e987d6: je     0x0000000115e987f5
  0x0000000115e987dc: cmpb   $0xe9,0x0(%r13)
  0x0000000115e987e1: je     0x0000000115e987f5
  0x0000000115e987e7: mov    -0x18(%rbp),%rcx
  0x0000000115e987eb: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e987ef: jne    0x0000000115e98853
  0x0000000115e987f5: mov    %rax,%rcx
  0x0000000115e987f8: test   %rcx,%rcx
  0x0000000115e987fb: jne    0x0000000115e98807
  0x0000000115e987fd: orq    $0x1,-0x8(%rbx)
  0x0000000115e98805: jmp    0x0000000115e98853
  0x0000000115e98807: mov    0x8(%rcx),%ecx
  0x0000000115e9880a: shl    $0x3,%rcx
  0x0000000115e9880e: xor    -0x8(%rbx),%rcx
  0x0000000115e98812: test   $0xfffffffffffffffc,%rcx
  0x0000000115e98819: je     0x0000000115e98853
  0x0000000115e9881b: test   $0x2,%rcx
  0x0000000115e98822: jne    0x0000000115e98853
  0x0000000115e98824: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e9882c: je     0x0000000115e9884f
  0x0000000115e9882e: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e98836: je     0x0000000115e9884f
  0x0000000115e98838: xor    -0x8(%rbx),%rcx
  0x0000000115e9883c: test   $0xfffffffffffffffc,%rcx
  0x0000000115e98843: je     0x0000000115e98853
  0x0000000115e98845: orq    $0x2,-0x8(%rbx)
  0x0000000115e9884d: jmp    0x0000000115e98853
  0x0000000115e9884f: mov    %rcx,-0x8(%rbx)
  0x0000000115e98853: movzwl 0x1(%r13),%ecx
  0x0000000115e98858: mov    -0x28(%rbp),%rbx
  0x0000000115e9885c: shl    $0x2,%ecx
  0x0000000115e9885f: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98863: and    $0xff,%ebx
  0x0000000115e98869: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9886d: movzbl 0x9(%r13),%ebx
  0x0000000115e98872: add    $0x9,%r13
  0x0000000115e98876: movabs $0x10e101040,%r10
  0x0000000115e98880: jmpq   *(%r10,%rbx,8)
  0x0000000115e98884: mov    -0x10(%rbp),%rsp
  0x0000000115e98888: movq   $0x0,-0x10(%rbp)
  0x0000000115e98890: mov    -0x38(%rbp),%r13
  0x0000000115e98894: mov    -0x30(%rbp),%r14
  0x0000000115e98898: movzwl 0x1(%r13),%ecx
  0x0000000115e9889d: mov    -0x28(%rbp),%rbx
  0x0000000115e988a1: shl    $0x2,%ecx
  0x0000000115e988a4: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e988a8: and    $0xff,%ebx
  0x0000000115e988ae: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e988b2: movzbl 0x9(%r13),%ebx
  0x0000000115e988b7: add    $0x9,%r13
  0x0000000115e988bb: movabs $0x10e0ff040,%r10
  0x0000000115e988c5: jmpq   *(%r10,%rbx,8)
  0x0000000115e988c9: mov    -0x10(%rbp),%rsp
  0x0000000115e988cd: movq   $0x0,-0x10(%rbp)
  0x0000000115e988d5: mov    -0x38(%rbp),%r13
  0x0000000115e988d9: mov    -0x30(%rbp),%r14
  0x0000000115e988dd: movzwl 0x1(%r13),%ecx
  0x0000000115e988e2: mov    -0x28(%rbp),%rbx
  0x0000000115e988e6: shl    $0x2,%ecx
  0x0000000115e988e9: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e988ed: and    $0xff,%ebx
  0x0000000115e988f3: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e988f7: movzbl 0x9(%r13),%ebx
  0x0000000115e988fc: add    $0x9,%r13
  0x0000000115e98900: movabs $0x10e0ff040,%r10
  0x0000000115e9890a: jmpq   *(%r10,%rbx,8)
  0x0000000115e9890e: mov    -0x10(%rbp),%rsp
  0x0000000115e98912: movq   $0x0,-0x10(%rbp)
  0x0000000115e9891a: mov    -0x38(%rbp),%r13
  0x0000000115e9891e: mov    -0x30(%rbp),%r14
  0x0000000115e98922: movzwl 0x1(%r13),%ecx
  0x0000000115e98927: mov    -0x28(%rbp),%rbx
  0x0000000115e9892b: shl    $0x2,%ecx
  0x0000000115e9892e: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98932: and    $0xff,%ebx
  0x0000000115e98938: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e9893c: movzbl 0x9(%r13),%ebx
  0x0000000115e98941: add    $0x9,%r13
  0x0000000115e98945: movabs $0x10e0ff040,%r10
  0x0000000115e9894f: jmpq   *(%r10,%rbx,8)
  0x0000000115e98953: mov    -0x10(%rbp),%rsp
  0x0000000115e98957: movq   $0x0,-0x10(%rbp)
  0x0000000115e9895f: mov    -0x38(%rbp),%r13
  0x0000000115e98963: mov    -0x30(%rbp),%r14
  0x0000000115e98967: movzwl 0x1(%r13),%ecx
  0x0000000115e9896c: mov    -0x28(%rbp),%rbx
  0x0000000115e98970: shl    $0x2,%ecx
  0x0000000115e98973: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98977: and    $0xff,%ebx
  0x0000000115e9897d: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98981: movzbl 0x9(%r13),%ebx
  0x0000000115e98986: add    $0x9,%r13
  0x0000000115e9898a: movabs $0x10e0ff040,%r10
  0x0000000115e98994: jmpq   *(%r10,%rbx,8)
  0x0000000115e98998: add    %al,(%rax)
  0x0000000115e9899a: add    %al,(%rax)
  0x0000000115e9899c: add    %al,(%rax)
  0x0000000115e9899e: add    %al,(%rax)

----------------------------------------------------------------------
invoke return entry points  [0x0000000115e989c0, 0x0000000115e993a0]  2528 bytes

  0x0000000115e989c0: mov    -0x10(%rbp),%rsp
  0x0000000115e989c4: movq   $0x0,-0x10(%rbp)
  0x0000000115e989cc: mov    -0x38(%rbp),%r13
  0x0000000115e989d0: mov    -0x30(%rbp),%r14
  0x0000000115e989d4: movzwl 0x1(%r13),%ecx
  0x0000000115e989d9: mov    -0x28(%rbp),%rbx
  0x0000000115e989dd: shl    $0x2,%ecx
  0x0000000115e989e0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e989e4: and    $0xff,%ebx
  0x0000000115e989ea: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e989ee: movzbl 0x3(%r13),%ebx
  0x0000000115e989f3: add    $0x3,%r13
  0x0000000115e989f7: movabs $0x10e0ff040,%r10
  0x0000000115e98a01: jmpq   *(%r10,%rbx,8)
  0x0000000115e98a05: mov    -0x10(%rbp),%rsp
  0x0000000115e98a09: movq   $0x0,-0x10(%rbp)
  0x0000000115e98a11: mov    -0x38(%rbp),%r13
  0x0000000115e98a15: mov    -0x30(%rbp),%r14
  0x0000000115e98a19: movzwl 0x1(%r13),%ecx
  0x0000000115e98a1e: mov    -0x28(%rbp),%rbx
  0x0000000115e98a22: shl    $0x2,%ecx
  0x0000000115e98a25: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98a29: and    $0xff,%ebx
  0x0000000115e98a2f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98a33: movzbl 0x5(%r13),%ebx
  0x0000000115e98a38: add    $0x5,%r13
  0x0000000115e98a3c: movabs $0x10e0ff040,%r10
  0x0000000115e98a46: jmpq   *(%r10,%rbx,8)
  0x0000000115e98a4a: mov    -0x10(%rbp),%rsp
  0x0000000115e98a4e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98a56: mov    -0x38(%rbp),%r13
  0x0000000115e98a5a: mov    -0x30(%rbp),%r14
  0x0000000115e98a5e: mov    0x1(%r13),%ecx
  0x0000000115e98a62: not    %ecx
  0x0000000115e98a64: mov    -0x28(%rbp),%rbx
  0x0000000115e98a68: shl    $0x2,%ecx
  0x0000000115e98a6b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98a6f: and    $0xff,%ebx
  0x0000000115e98a75: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98a79: movzbl 0x5(%r13),%ebx
  0x0000000115e98a7e: add    $0x5,%r13
  0x0000000115e98a82: movabs $0x10e0ff040,%r10
  0x0000000115e98a8c: jmpq   *(%r10,%rbx,8)
  0x0000000115e98a90: mov    -0x10(%rbp),%rsp
  0x0000000115e98a94: movq   $0x0,-0x10(%rbp)
  0x0000000115e98a9c: mov    -0x38(%rbp),%r13
  0x0000000115e98aa0: mov    -0x30(%rbp),%r14
  0x0000000115e98aa4: movzwl 0x1(%r13),%ecx
  0x0000000115e98aa9: mov    -0x28(%rbp),%rbx
  0x0000000115e98aad: shl    $0x2,%ecx
  0x0000000115e98ab0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98ab4: and    $0xff,%ebx
  0x0000000115e98aba: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98abe: movzbl 0x3(%r13),%ebx
  0x0000000115e98ac3: add    $0x3,%r13
  0x0000000115e98ac7: movabs $0x10e0ff040,%r10
  0x0000000115e98ad1: jmpq   *(%r10,%rbx,8)
  0x0000000115e98ad5: mov    -0x10(%rbp),%rsp
  0x0000000115e98ad9: movq   $0x0,-0x10(%rbp)
  0x0000000115e98ae1: mov    -0x38(%rbp),%r13
  0x0000000115e98ae5: mov    -0x30(%rbp),%r14
  0x0000000115e98ae9: movzwl 0x1(%r13),%ecx
  0x0000000115e98aee: mov    -0x28(%rbp),%rbx
  0x0000000115e98af2: shl    $0x2,%ecx
  0x0000000115e98af5: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98af9: and    $0xff,%ebx
  0x0000000115e98aff: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98b03: movzbl 0x5(%r13),%ebx
  0x0000000115e98b08: add    $0x5,%r13
  0x0000000115e98b0c: movabs $0x10e0ff040,%r10
  0x0000000115e98b16: jmpq   *(%r10,%rbx,8)
  0x0000000115e98b1a: mov    -0x10(%rbp),%rsp
  0x0000000115e98b1e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98b26: mov    -0x38(%rbp),%r13
  0x0000000115e98b2a: mov    -0x30(%rbp),%r14
  0x0000000115e98b2e: mov    0x1(%r13),%ecx
  0x0000000115e98b32: not    %ecx
  0x0000000115e98b34: mov    -0x28(%rbp),%rbx
  0x0000000115e98b38: shl    $0x2,%ecx
  0x0000000115e98b3b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98b3f: and    $0xff,%ebx
  0x0000000115e98b45: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98b49: movzbl 0x5(%r13),%ebx
  0x0000000115e98b4e: add    $0x5,%r13
  0x0000000115e98b52: movabs $0x10e0ff040,%r10
  0x0000000115e98b5c: jmpq   *(%r10,%rbx,8)
  0x0000000115e98b60: mov    -0x10(%rbp),%rsp
  0x0000000115e98b64: movq   $0x0,-0x10(%rbp)
  0x0000000115e98b6c: mov    -0x38(%rbp),%r13
  0x0000000115e98b70: mov    -0x30(%rbp),%r14
  0x0000000115e98b74: movzwl 0x1(%r13),%ecx
  0x0000000115e98b79: mov    -0x28(%rbp),%rbx
  0x0000000115e98b7d: shl    $0x2,%ecx
  0x0000000115e98b80: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98b84: and    $0xff,%ebx
  0x0000000115e98b8a: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98b8e: movzbl 0x3(%r13),%ebx
  0x0000000115e98b93: add    $0x3,%r13
  0x0000000115e98b97: movabs $0x10e0ff040,%r10
  0x0000000115e98ba1: jmpq   *(%r10,%rbx,8)
  0x0000000115e98ba5: mov    -0x10(%rbp),%rsp
  0x0000000115e98ba9: movq   $0x0,-0x10(%rbp)
  0x0000000115e98bb1: mov    -0x38(%rbp),%r13
  0x0000000115e98bb5: mov    -0x30(%rbp),%r14
  0x0000000115e98bb9: movzwl 0x1(%r13),%ecx
  0x0000000115e98bbe: mov    -0x28(%rbp),%rbx
  0x0000000115e98bc2: shl    $0x2,%ecx
  0x0000000115e98bc5: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98bc9: and    $0xff,%ebx
  0x0000000115e98bcf: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98bd3: movzbl 0x5(%r13),%ebx
  0x0000000115e98bd8: add    $0x5,%r13
  0x0000000115e98bdc: movabs $0x10e0ff040,%r10
  0x0000000115e98be6: jmpq   *(%r10,%rbx,8)
  0x0000000115e98bea: mov    -0x10(%rbp),%rsp
  0x0000000115e98bee: movq   $0x0,-0x10(%rbp)
  0x0000000115e98bf6: mov    -0x38(%rbp),%r13
  0x0000000115e98bfa: mov    -0x30(%rbp),%r14
  0x0000000115e98bfe: mov    0x1(%r13),%ecx
  0x0000000115e98c02: not    %ecx
  0x0000000115e98c04: mov    -0x28(%rbp),%rbx
  0x0000000115e98c08: shl    $0x2,%ecx
  0x0000000115e98c0b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98c0f: and    $0xff,%ebx
  0x0000000115e98c15: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98c19: movzbl 0x5(%r13),%ebx
  0x0000000115e98c1e: add    $0x5,%r13
  0x0000000115e98c22: movabs $0x10e0ff040,%r10
  0x0000000115e98c2c: jmpq   *(%r10,%rbx,8)
  0x0000000115e98c30: mov    -0x10(%rbp),%rsp
  0x0000000115e98c34: movq   $0x0,-0x10(%rbp)
  0x0000000115e98c3c: mov    -0x38(%rbp),%r13
  0x0000000115e98c40: mov    -0x30(%rbp),%r14
  0x0000000115e98c44: movzwl 0x1(%r13),%ecx
  0x0000000115e98c49: mov    -0x28(%rbp),%rbx
  0x0000000115e98c4d: shl    $0x2,%ecx
  0x0000000115e98c50: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98c54: and    $0xff,%ebx
  0x0000000115e98c5a: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98c5e: movzbl 0x3(%r13),%ebx
  0x0000000115e98c63: add    $0x3,%r13
  0x0000000115e98c67: movabs $0x10e0ff040,%r10
  0x0000000115e98c71: jmpq   *(%r10,%rbx,8)
  0x0000000115e98c75: mov    -0x10(%rbp),%rsp
  0x0000000115e98c79: movq   $0x0,-0x10(%rbp)
  0x0000000115e98c81: mov    -0x38(%rbp),%r13
  0x0000000115e98c85: mov    -0x30(%rbp),%r14
  0x0000000115e98c89: movzwl 0x1(%r13),%ecx
  0x0000000115e98c8e: mov    -0x28(%rbp),%rbx
  0x0000000115e98c92: shl    $0x2,%ecx
  0x0000000115e98c95: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98c99: and    $0xff,%ebx
  0x0000000115e98c9f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98ca3: movzbl 0x5(%r13),%ebx
  0x0000000115e98ca8: add    $0x5,%r13
  0x0000000115e98cac: movabs $0x10e0ff040,%r10
  0x0000000115e98cb6: jmpq   *(%r10,%rbx,8)
  0x0000000115e98cba: mov    -0x10(%rbp),%rsp
  0x0000000115e98cbe: movq   $0x0,-0x10(%rbp)
  0x0000000115e98cc6: mov    -0x38(%rbp),%r13
  0x0000000115e98cca: mov    -0x30(%rbp),%r14
  0x0000000115e98cce: mov    0x1(%r13),%ecx
  0x0000000115e98cd2: not    %ecx
  0x0000000115e98cd4: mov    -0x28(%rbp),%rbx
  0x0000000115e98cd8: shl    $0x2,%ecx
  0x0000000115e98cdb: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98cdf: and    $0xff,%ebx
  0x0000000115e98ce5: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98ce9: movzbl 0x5(%r13),%ebx
  0x0000000115e98cee: add    $0x5,%r13
  0x0000000115e98cf2: movabs $0x10e0ff040,%r10
  0x0000000115e98cfc: jmpq   *(%r10,%rbx,8)
  0x0000000115e98d00: mov    -0x10(%rbp),%rsp
  0x0000000115e98d04: movq   $0x0,-0x10(%rbp)
  0x0000000115e98d0c: mov    -0x38(%rbp),%r13
  0x0000000115e98d10: mov    -0x30(%rbp),%r14
  0x0000000115e98d14: movzwl 0x1(%r13),%ecx
  0x0000000115e98d19: mov    -0x28(%rbp),%rbx
  0x0000000115e98d1d: shl    $0x2,%ecx
  0x0000000115e98d20: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98d24: and    $0xff,%ebx
  0x0000000115e98d2a: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98d2e: movzbl 0x3(%r13),%ebx
  0x0000000115e98d33: add    $0x3,%r13
  0x0000000115e98d37: movabs $0x10e0ff040,%r10
  0x0000000115e98d41: jmpq   *(%r10,%rbx,8)
  0x0000000115e98d45: mov    -0x10(%rbp),%rsp
  0x0000000115e98d49: movq   $0x0,-0x10(%rbp)
  0x0000000115e98d51: mov    -0x38(%rbp),%r13
  0x0000000115e98d55: mov    -0x30(%rbp),%r14
  0x0000000115e98d59: movzwl 0x1(%r13),%ecx
  0x0000000115e98d5e: mov    -0x28(%rbp),%rbx
  0x0000000115e98d62: shl    $0x2,%ecx
  0x0000000115e98d65: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98d69: and    $0xff,%ebx
  0x0000000115e98d6f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98d73: movzbl 0x5(%r13),%ebx
  0x0000000115e98d78: add    $0x5,%r13
  0x0000000115e98d7c: movabs $0x10e0ff040,%r10
  0x0000000115e98d86: jmpq   *(%r10,%rbx,8)
  0x0000000115e98d8a: mov    -0x10(%rbp),%rsp
  0x0000000115e98d8e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98d96: mov    -0x38(%rbp),%r13
  0x0000000115e98d9a: mov    -0x30(%rbp),%r14
  0x0000000115e98d9e: mov    0x1(%r13),%ecx
  0x0000000115e98da2: not    %ecx
  0x0000000115e98da4: mov    -0x28(%rbp),%rbx
  0x0000000115e98da8: shl    $0x2,%ecx
  0x0000000115e98dab: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98daf: and    $0xff,%ebx
  0x0000000115e98db5: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98db9: movzbl 0x5(%r13),%ebx
  0x0000000115e98dbe: add    $0x5,%r13
  0x0000000115e98dc2: movabs $0x10e0ff040,%r10
  0x0000000115e98dcc: jmpq   *(%r10,%rbx,8)
  0x0000000115e98dd0: mov    -0x10(%rbp),%rsp
  0x0000000115e98dd4: movq   $0x0,-0x10(%rbp)
  0x0000000115e98ddc: mov    -0x38(%rbp),%r13
  0x0000000115e98de0: mov    -0x30(%rbp),%r14
  0x0000000115e98de4: movzwl 0x1(%r13),%ecx
  0x0000000115e98de9: mov    -0x28(%rbp),%rbx
  0x0000000115e98ded: shl    $0x2,%ecx
  0x0000000115e98df0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98df4: and    $0xff,%ebx
  0x0000000115e98dfa: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98dfe: movzbl 0x3(%r13),%ebx
  0x0000000115e98e03: add    $0x3,%r13
  0x0000000115e98e07: movabs $0x10e0ff840,%r10
  0x0000000115e98e11: jmpq   *(%r10,%rbx,8)
  0x0000000115e98e15: mov    -0x10(%rbp),%rsp
  0x0000000115e98e19: movq   $0x0,-0x10(%rbp)
  0x0000000115e98e21: mov    -0x38(%rbp),%r13
  0x0000000115e98e25: mov    -0x30(%rbp),%r14
  0x0000000115e98e29: movzwl 0x1(%r13),%ecx
  0x0000000115e98e2e: mov    -0x28(%rbp),%rbx
  0x0000000115e98e32: shl    $0x2,%ecx
  0x0000000115e98e35: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98e39: and    $0xff,%ebx
  0x0000000115e98e3f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98e43: movzbl 0x5(%r13),%ebx
  0x0000000115e98e48: add    $0x5,%r13
  0x0000000115e98e4c: movabs $0x10e0ff840,%r10
  0x0000000115e98e56: jmpq   *(%r10,%rbx,8)
  0x0000000115e98e5a: mov    -0x10(%rbp),%rsp
  0x0000000115e98e5e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98e66: mov    -0x38(%rbp),%r13
  0x0000000115e98e6a: mov    -0x30(%rbp),%r14
  0x0000000115e98e6e: mov    0x1(%r13),%ecx
  0x0000000115e98e72: not    %ecx
  0x0000000115e98e74: mov    -0x28(%rbp),%rbx
  0x0000000115e98e78: shl    $0x2,%ecx
  0x0000000115e98e7b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98e7f: and    $0xff,%ebx
  0x0000000115e98e85: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98e89: movzbl 0x5(%r13),%ebx
  0x0000000115e98e8e: add    $0x5,%r13
  0x0000000115e98e92: movabs $0x10e0ff840,%r10
  0x0000000115e98e9c: jmpq   *(%r10,%rbx,8)
  0x0000000115e98ea0: mov    -0x10(%rbp),%rsp
  0x0000000115e98ea4: movq   $0x0,-0x10(%rbp)
  0x0000000115e98eac: mov    -0x38(%rbp),%r13
  0x0000000115e98eb0: mov    -0x30(%rbp),%r14
  0x0000000115e98eb4: movzwl 0x1(%r13),%ecx
  0x0000000115e98eb9: mov    -0x28(%rbp),%rbx
  0x0000000115e98ebd: shl    $0x2,%ecx
  0x0000000115e98ec0: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98ec4: and    $0xff,%ebx
  0x0000000115e98eca: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98ece: movzbl 0x3(%r13),%ebx
  0x0000000115e98ed3: add    $0x3,%r13
  0x0000000115e98ed7: movabs $0x10e100040,%r10
  0x0000000115e98ee1: jmpq   *(%r10,%rbx,8)
  0x0000000115e98ee5: mov    -0x10(%rbp),%rsp
  0x0000000115e98ee9: movq   $0x0,-0x10(%rbp)
  0x0000000115e98ef1: mov    -0x38(%rbp),%r13
  0x0000000115e98ef5: mov    -0x30(%rbp),%r14
  0x0000000115e98ef9: movzwl 0x1(%r13),%ecx
  0x0000000115e98efe: mov    -0x28(%rbp),%rbx
  0x0000000115e98f02: shl    $0x2,%ecx
  0x0000000115e98f05: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98f09: and    $0xff,%ebx
  0x0000000115e98f0f: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98f13: movzbl 0x5(%r13),%ebx
  0x0000000115e98f18: add    $0x5,%r13
  0x0000000115e98f1c: movabs $0x10e100040,%r10
  0x0000000115e98f26: jmpq   *(%r10,%rbx,8)
  0x0000000115e98f2a: mov    -0x10(%rbp),%rsp
  0x0000000115e98f2e: movq   $0x0,-0x10(%rbp)
  0x0000000115e98f36: mov    -0x38(%rbp),%r13
  0x0000000115e98f3a: mov    -0x30(%rbp),%r14
  0x0000000115e98f3e: mov    0x1(%r13),%ecx
  0x0000000115e98f42: not    %ecx
  0x0000000115e98f44: mov    -0x28(%rbp),%rbx
  0x0000000115e98f48: shl    $0x2,%ecx
  0x0000000115e98f4b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98f4f: and    $0xff,%ebx
  0x0000000115e98f55: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98f59: movzbl 0x5(%r13),%ebx
  0x0000000115e98f5e: add    $0x5,%r13
  0x0000000115e98f62: movabs $0x10e100040,%r10
  0x0000000115e98f6c: jmpq   *(%r10,%rbx,8)
  0x0000000115e98f70: mov    -0x10(%rbp),%rsp
  0x0000000115e98f74: movq   $0x0,-0x10(%rbp)
  0x0000000115e98f7c: mov    -0x38(%rbp),%r13
  0x0000000115e98f80: mov    -0x30(%rbp),%r14
  0x0000000115e98f84: movzwl 0x1(%r13),%ecx
  0x0000000115e98f89: mov    -0x28(%rbp),%rbx
  0x0000000115e98f8d: shl    $0x2,%ecx
  0x0000000115e98f90: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98f94: and    $0xff,%ebx
  0x0000000115e98f9a: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98f9e: movzbl 0x3(%r13),%ebx
  0x0000000115e98fa3: add    $0x3,%r13
  0x0000000115e98fa7: movabs $0x10e100840,%r10
  0x0000000115e98fb1: jmpq   *(%r10,%rbx,8)
  0x0000000115e98fb5: mov    -0x10(%rbp),%rsp
  0x0000000115e98fb9: movq   $0x0,-0x10(%rbp)
  0x0000000115e98fc1: mov    -0x38(%rbp),%r13
  0x0000000115e98fc5: mov    -0x30(%rbp),%r14
  0x0000000115e98fc9: movzwl 0x1(%r13),%ecx
  0x0000000115e98fce: mov    -0x28(%rbp),%rbx
  0x0000000115e98fd2: shl    $0x2,%ecx
  0x0000000115e98fd5: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e98fd9: and    $0xff,%ebx
  0x0000000115e98fdf: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e98fe3: movzbl 0x5(%r13),%ebx
  0x0000000115e98fe8: add    $0x5,%r13
  0x0000000115e98fec: movabs $0x10e100840,%r10
  0x0000000115e98ff6: jmpq   *(%r10,%rbx,8)
  0x0000000115e98ffa: mov    -0x10(%rbp),%rsp
  0x0000000115e98ffe: movq   $0x0,-0x10(%rbp)
  0x0000000115e99006: mov    -0x38(%rbp),%r13
  0x0000000115e9900a: mov    -0x30(%rbp),%r14
  0x0000000115e9900e: mov    0x1(%r13),%ecx
  0x0000000115e99012: not    %ecx
  0x0000000115e99014: mov    -0x28(%rbp),%rbx
  0x0000000115e99018: shl    $0x2,%ecx
  0x0000000115e9901b: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9901f: and    $0xff,%ebx
  0x0000000115e99025: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e99029: movzbl 0x5(%r13),%ebx
  0x0000000115e9902e: add    $0x5,%r13
  0x0000000115e99032: movabs $0x10e100840,%r10
  0x0000000115e9903c: jmpq   *(%r10,%rbx,8)
  0x0000000115e99040: mov    -0x10(%rbp),%rsp
  0x0000000115e99044: movq   $0x0,-0x10(%rbp)
  0x0000000115e9904c: mov    -0x38(%rbp),%r13
  0x0000000115e99050: mov    -0x30(%rbp),%r14
  0x0000000115e99054: mov    -0x20(%rbp),%rbx
  0x0000000115e99058: test   %rbx,%rbx
  0x0000000115e9905b: je     0x0000000115e990e3
  0x0000000115e99061: cmpb   $0xba,0x0(%r13)
  0x0000000115e99066: je     0x0000000115e99085
  0x0000000115e9906c: cmpb   $0xe9,0x0(%r13)
  0x0000000115e99071: je     0x0000000115e99085
  0x0000000115e99077: mov    -0x18(%rbp),%rcx
  0x0000000115e9907b: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e9907f: jne    0x0000000115e990e3
  0x0000000115e99085: mov    %rax,%rcx
  0x0000000115e99088: test   %rcx,%rcx
  0x0000000115e9908b: jne    0x0000000115e99097
  0x0000000115e9908d: orq    $0x1,-0x8(%rbx)
  0x0000000115e99095: jmp    0x0000000115e990e3
  0x0000000115e99097: mov    0x8(%rcx),%ecx
  0x0000000115e9909a: shl    $0x3,%rcx
  0x0000000115e9909e: xor    -0x8(%rbx),%rcx
  0x0000000115e990a2: test   $0xfffffffffffffffc,%rcx
  0x0000000115e990a9: je     0x0000000115e990e3
  0x0000000115e990ab: test   $0x2,%rcx
  0x0000000115e990b2: jne    0x0000000115e990e3
  0x0000000115e990b4: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e990bc: je     0x0000000115e990df
  0x0000000115e990be: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e990c6: je     0x0000000115e990df
  0x0000000115e990c8: xor    -0x8(%rbx),%rcx
  0x0000000115e990cc: test   $0xfffffffffffffffc,%rcx
  0x0000000115e990d3: je     0x0000000115e990e3
  0x0000000115e990d5: orq    $0x2,-0x8(%rbx)
  0x0000000115e990dd: jmp    0x0000000115e990e3
  0x0000000115e990df: mov    %rcx,-0x8(%rbx)
  0x0000000115e990e3: movzwl 0x1(%r13),%ecx
  0x0000000115e990e8: mov    -0x28(%rbp),%rbx
  0x0000000115e990ec: shl    $0x2,%ecx
  0x0000000115e990ef: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e990f3: and    $0xff,%ebx
  0x0000000115e990f9: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e990fd: movzbl 0x3(%r13),%ebx
  0x0000000115e99102: add    $0x3,%r13
  0x0000000115e99106: movabs $0x10e101040,%r10
  0x0000000115e99110: jmpq   *(%r10,%rbx,8)
  0x0000000115e99114: mov    -0x10(%rbp),%rsp
  0x0000000115e99118: movq   $0x0,-0x10(%rbp)
  0x0000000115e99120: mov    -0x38(%rbp),%r13
  0x0000000115e99124: mov    -0x30(%rbp),%r14
  0x0000000115e99128: mov    -0x20(%rbp),%rbx
  0x0000000115e9912c: test   %rbx,%rbx
  0x0000000115e9912f: je     0x0000000115e991b7
  0x0000000115e99135: cmpb   $0xba,0x0(%r13)
  0x0000000115e9913a: je     0x0000000115e99159
  0x0000000115e99140: cmpb   $0xe9,0x0(%r13)
  0x0000000115e99145: je     0x0000000115e99159
  0x0000000115e9914b: mov    -0x18(%rbp),%rcx
  0x0000000115e9914f: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e99153: jne    0x0000000115e991b7
  0x0000000115e99159: mov    %rax,%rcx
  0x0000000115e9915c: test   %rcx,%rcx
  0x0000000115e9915f: jne    0x0000000115e9916b
  0x0000000115e99161: orq    $0x1,-0x8(%rbx)
  0x0000000115e99169: jmp    0x0000000115e991b7
  0x0000000115e9916b: mov    0x8(%rcx),%ecx
  0x0000000115e9916e: shl    $0x3,%rcx
  0x0000000115e99172: xor    -0x8(%rbx),%rcx
  0x0000000115e99176: test   $0xfffffffffffffffc,%rcx
  0x0000000115e9917d: je     0x0000000115e991b7
  0x0000000115e9917f: test   $0x2,%rcx
  0x0000000115e99186: jne    0x0000000115e991b7
  0x0000000115e99188: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e99190: je     0x0000000115e991b3
  0x0000000115e99192: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e9919a: je     0x0000000115e991b3
  0x0000000115e9919c: xor    -0x8(%rbx),%rcx
  0x0000000115e991a0: test   $0xfffffffffffffffc,%rcx
  0x0000000115e991a7: je     0x0000000115e991b7
  0x0000000115e991a9: orq    $0x2,-0x8(%rbx)
  0x0000000115e991b1: jmp    0x0000000115e991b7
  0x0000000115e991b3: mov    %rcx,-0x8(%rbx)
  0x0000000115e991b7: movzwl 0x1(%r13),%ecx
  0x0000000115e991bc: mov    -0x28(%rbp),%rbx
  0x0000000115e991c0: shl    $0x2,%ecx
  0x0000000115e991c3: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e991c7: and    $0xff,%ebx
  0x0000000115e991cd: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e991d1: movzbl 0x5(%r13),%ebx
  0x0000000115e991d6: add    $0x5,%r13
  0x0000000115e991da: movabs $0x10e101040,%r10
  0x0000000115e991e4: jmpq   *(%r10,%rbx,8)
  0x0000000115e991e8: mov    -0x10(%rbp),%rsp
  0x0000000115e991ec: movq   $0x0,-0x10(%rbp)
  0x0000000115e991f4: mov    -0x38(%rbp),%r13
  0x0000000115e991f8: mov    -0x30(%rbp),%r14
  0x0000000115e991fc: mov    -0x20(%rbp),%rbx
  0x0000000115e99200: test   %rbx,%rbx
  0x0000000115e99203: je     0x0000000115e9928b
  0x0000000115e99209: cmpb   $0xba,0x0(%r13)
  0x0000000115e9920e: je     0x0000000115e9922d
  0x0000000115e99214: cmpb   $0xe9,0x0(%r13)
  0x0000000115e99219: je     0x0000000115e9922d
  0x0000000115e9921f: mov    -0x18(%rbp),%rcx
  0x0000000115e99223: cmpb   $0xbe,0x2a(%rcx)
  0x0000000115e99227: jne    0x0000000115e9928b
  0x0000000115e9922d: mov    %rax,%rcx
  0x0000000115e99230: test   %rcx,%rcx
  0x0000000115e99233: jne    0x0000000115e9923f
  0x0000000115e99235: orq    $0x1,-0x8(%rbx)
  0x0000000115e9923d: jmp    0x0000000115e9928b
  0x0000000115e9923f: mov    0x8(%rcx),%ecx
  0x0000000115e99242: shl    $0x3,%rcx
  0x0000000115e99246: xor    -0x8(%rbx),%rcx
  0x0000000115e9924a: test   $0xfffffffffffffffc,%rcx
  0x0000000115e99251: je     0x0000000115e9928b
  0x0000000115e99253: test   $0x2,%rcx
  0x0000000115e9925a: jne    0x0000000115e9928b
  0x0000000115e9925c: cmpq   $0x0,-0x8(%rbx)
  0x0000000115e99264: je     0x0000000115e99287
  0x0000000115e99266: cmpq   $0x1,-0x8(%rbx)
  0x0000000115e9926e: je     0x0000000115e99287
  0x0000000115e99270: xor    -0x8(%rbx),%rcx
  0x0000000115e99274: test   $0xfffffffffffffffc,%rcx
  0x0000000115e9927b: je     0x0000000115e9928b
  0x0000000115e9927d: orq    $0x2,-0x8(%rbx)
  0x0000000115e99285: jmp    0x0000000115e9928b
  0x0000000115e99287: mov    %rcx,-0x8(%rbx)
  0x0000000115e9928b: mov    0x1(%r13),%ecx
  0x0000000115e9928f: not    %ecx
  0x0000000115e99291: mov    -0x28(%rbp),%rbx
  0x0000000115e99295: shl    $0x2,%ecx
  0x0000000115e99298: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9929c: and    $0xff,%ebx
  0x0000000115e992a2: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e992a6: movzbl 0x5(%r13),%ebx
  0x0000000115e992ab: add    $0x5,%r13
  0x0000000115e992af: movabs $0x10e101040,%r10
  0x0000000115e992b9: jmpq   *(%r10,%rbx,8)
  0x0000000115e992bd: mov    -0x10(%rbp),%rsp
  0x0000000115e992c1: movq   $0x0,-0x10(%rbp)
  0x0000000115e992c9: mov    -0x38(%rbp),%r13
  0x0000000115e992cd: mov    -0x30(%rbp),%r14
  0x0000000115e992d1: movzwl 0x1(%r13),%ecx
  0x0000000115e992d6: mov    -0x28(%rbp),%rbx
  0x0000000115e992da: shl    $0x2,%ecx
  0x0000000115e992dd: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e992e1: and    $0xff,%ebx
  0x0000000115e992e7: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e992eb: movzbl 0x3(%r13),%ebx
  0x0000000115e992f0: add    $0x3,%r13
  0x0000000115e992f4: movabs $0x10e101840,%r10
  0x0000000115e992fe: jmpq   *(%r10,%rbx,8)
  0x0000000115e99302: mov    -0x10(%rbp),%rsp
  0x0000000115e99306: movq   $0x0,-0x10(%rbp)
  0x0000000115e9930e: mov    -0x38(%rbp),%r13
  0x0000000115e99312: mov    -0x30(%rbp),%r14
  0x0000000115e99316: movzwl 0x1(%r13),%ecx
  0x0000000115e9931b: mov    -0x28(%rbp),%rbx
  0x0000000115e9931f: shl    $0x2,%ecx
  0x0000000115e99322: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e99326: and    $0xff,%ebx
  0x0000000115e9932c: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e99330: movzbl 0x5(%r13),%ebx
  0x0000000115e99335: add    $0x5,%r13
  0x0000000115e99339: movabs $0x10e101840,%r10
  0x0000000115e99343: jmpq   *(%r10,%rbx,8)
  0x0000000115e99347: mov    -0x10(%rbp),%rsp
  0x0000000115e9934b: movq   $0x0,-0x10(%rbp)
  0x0000000115e99353: mov    -0x38(%rbp),%r13
  0x0000000115e99357: mov    -0x30(%rbp),%r14
  0x0000000115e9935b: mov    0x1(%r13),%ecx
  0x0000000115e9935f: not    %ecx
  0x0000000115e99361: mov    -0x28(%rbp),%rbx
  0x0000000115e99365: shl    $0x2,%ecx
  0x0000000115e99368: mov    0x28(%rbx,%rcx,8),%ebx
  0x0000000115e9936c: and    $0xff,%ebx
  0x0000000115e99372: lea    (%rsp,%rbx,8),%rsp
  0x0000000115e99376: movzbl 0x5(%r13),%ebx
  0x0000000115e9937b: add    $0x5,%r13
  0x0000000115e9937f: movabs $0x10e101840,%r10
  0x0000000115e99389: jmpq   *(%r10,%rbx,8)
  0x0000000115e9938d: data32 xchg %ax,%ax
  0x0000000115e99390: add    %al,(%rax)
  0x0000000115e99392: add    %al,(%rax)
  0x0000000115e99394: add    %al,(%rax)
  0x0000000115e99396: add    %al,(%rax)
  0x0000000115e99398: add    %al,(%rax)
  0x0000000115e9939a: add    %al,(%rax)
  0x0000000115e9939c: add    %al,(%rax)
  0x0000000115e9939e: add    %al,(%rax)

----------------------------------------------------------------------
earlyret entry points  [0x0000000115e993c0, 0x0000000115e9ade0]  6688 bytes

  0x0000000115e993c0: mov    -0x38(%rbp),%r13
  0x0000000115e993c4: mov    -0x30(%rbp),%r14
  0x0000000115e993c8: mov    -0x40(%rbp),%rsp
  0x0000000115e993cc: movq   $0x0,-0x10(%rbp)
  0x0000000115e993d4: mov    0x388(%r15),%rcx
  0x0000000115e993db: movl   $0xb,0x70(%rcx)
  0x0000000115e993e2: movl   $0x0,0x78(%rcx)
  0x0000000115e993e9: mov    0x388(%r15),%rdx
  0x0000000115e993f0: movl   $0x0,0x6c(%rdx)
  0x0000000115e993f7: mov    0x295(%r15),%dl
  0x0000000115e993fe: movb   $0x0,0x295(%r15)
  0x0000000115e99406: mov    -0x18(%rbp),%rbx
  0x0000000115e9940a: mov    0x20(%rbx),%ecx
  0x0000000115e9940d: test   $0x20,%ecx
  0x0000000115e99413: je     0x0000000115e99500
  0x0000000115e99419: test   $0xff,%dl
  0x0000000115e9941c: jne    0x0000000115e995f1
  0x0000000115e99422: lea    -0x50(%rbp),%rsi
  0x0000000115e99426: mov    0x8(%rsi),%rax
  0x0000000115e9942a: test   %rax,%rax
  0x0000000115e9942d: jne    0x0000000115e99438
  0x0000000115e99433: jmpq   0x0000000115e99500
  0x0000000115e99438: mov    %r13,-0x38(%rbp)
  0x0000000115e9943c: lea    (%rsi),%rax
  0x0000000115e9943f: mov    0x8(%rsi),%rcx
  0x0000000115e99443: movq   $0x0,0x8(%rsi)
  0x0000000115e9944b: mov    (%rcx),%rdx
  0x0000000115e9944e: and    $0x7,%rdx
  0x0000000115e99452: cmp    $0x5,%rdx
  0x0000000115e99456: je     0x0000000115e994fc
  0x0000000115e9945c: mov    (%rax),%rdx
  0x0000000115e9945f: test   %rdx,%rdx
  0x0000000115e99462: je     0x0000000115e994fc
  0x0000000115e99468: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9946d: je     0x0000000115e994fc
  0x0000000115e99473: mov    %rcx,0x8(%rsi)
  0x0000000115e99477: callq  0x0000000115e99481
  0x0000000115e9947c: jmpq   0x0000000115e994fc
  0x0000000115e99481: lea    0x8(%rsp),%rax
  0x0000000115e99486: mov    %r13,-0x38(%rbp)
  0x0000000115e9948a: mov    %r15,%rdi
  0x0000000115e9948d: mov    %rbp,0x1e8(%r15)
  0x0000000115e99494: mov    %rax,0x1d8(%r15)
  0x0000000115e9949b: test   $0xf,%esp
  0x0000000115e994a1: je     0x0000000115e994b9
  0x0000000115e994a7: sub    $0x8,%rsp
  0x0000000115e994ab: callq  0x000000010dae8608
  0x0000000115e994b0: add    $0x8,%rsp
  0x0000000115e994b4: jmpq   0x0000000115e994be
  0x0000000115e994b9: callq  0x000000010dae8608
  0x0000000115e994be: movabs $0x0,%r10
  0x0000000115e994c8: mov    %r10,0x1d8(%r15)
  0x0000000115e994cf: movabs $0x0,%r10
  0x0000000115e994d9: mov    %r10,0x1e8(%r15)
  0x0000000115e994e0: cmpq   $0x0,0x8(%r15)
  0x0000000115e994e8: je     0x0000000115e994f3
  0x0000000115e994ee: jmpq   0x0000000115e916e0
  0x0000000115e994f3: mov    -0x38(%rbp),%r13
  0x0000000115e994f7: mov    -0x30(%rbp),%r14
  0x0000000115e994fb: retq   
  0x0000000115e994fc: mov    -0x38(%rbp),%r13
  0x0000000115e99500: mov    -0x40(%rbp),%rsi
  0x0000000115e99504: lea    -0x40(%rbp),%rbx
  0x0000000115e99508: jmpq   0x0000000115e995ec
  0x0000000115e9950d: mov    %r13,-0x38(%rbp)
  0x0000000115e99511: lea    (%rsi),%rax
  0x0000000115e99514: mov    0x8(%rsi),%rcx
  0x0000000115e99518: movq   $0x0,0x8(%rsi)
  0x0000000115e99520: mov    (%rcx),%rdx
  0x0000000115e99523: and    $0x7,%rdx
  0x0000000115e99527: cmp    $0x5,%rdx
  0x0000000115e9952b: je     0x0000000115e995d1
  0x0000000115e99531: mov    (%rax),%rdx
  0x0000000115e99534: test   %rdx,%rdx
  0x0000000115e99537: je     0x0000000115e995d1
  0x0000000115e9953d: lock cmpxchg %rdx,(%rcx)
  0x0000000115e99542: je     0x0000000115e995d1
  0x0000000115e99548: mov    %rcx,0x8(%rsi)
  0x0000000115e9954c: callq  0x0000000115e99556
  0x0000000115e99551: jmpq   0x0000000115e995d1
  0x0000000115e99556: lea    0x8(%rsp),%rax
  0x0000000115e9955b: mov    %r13,-0x38(%rbp)
  0x0000000115e9955f: mov    %r15,%rdi
  0x0000000115e99562: mov    %rbp,0x1e8(%r15)
  0x0000000115e99569: mov    %rax,0x1d8(%r15)
  0x0000000115e99570: test   $0xf,%esp
  0x0000000115e99576: je     0x0000000115e9958e
  0x0000000115e9957c: sub    $0x8,%rsp
  0x0000000115e99580: callq  0x000000010dae8608
  0x0000000115e99585: add    $0x8,%rsp
  0x0000000115e99589: jmpq   0x0000000115e99593
  0x0000000115e9958e: callq  0x000000010dae8608
  0x0000000115e99593: movabs $0x0,%r10
  0x0000000115e9959d: mov    %r10,0x1d8(%r15)
  0x0000000115e995a4: movabs $0x0,%r10
  0x0000000115e995ae: mov    %r10,0x1e8(%r15)
  0x0000000115e995b5: cmpq   $0x0,0x8(%r15)
  0x0000000115e995bd: je     0x0000000115e995c8
  0x0000000115e995c3: jmpq   0x0000000115e916e0
  0x0000000115e995c8: mov    -0x38(%rbp),%r13
  0x0000000115e995cc: mov    -0x30(%rbp),%r14
  0x0000000115e995d0: retq   
  0x0000000115e995d1: mov    -0x38(%rbp),%r13
  0x0000000115e995d5: jmpq   0x0000000115e99500
  0x0000000115e995da: cmpq   $0x0,0x8(%rsi)
  0x0000000115e995e2: jne    0x0000000115e9950d
  0x0000000115e995e8: add    $0x10,%rsi
  0x0000000115e995ec: cmp    %rbx,%rsi
  0x0000000115e995ef: jne    0x0000000115e995da
  0x0000000115e995f1: cmpb   $0x0,-0x7db232e(%rip)        # 0x000000010e0e72ca
  0x0000000115e995f8: je     0x0000000115e99628
  0x0000000115e995fe: mov    -0x18(%rbp),%rsi
  0x0000000115e99602: mov    %r15,%rdi
  0x0000000115e99605: test   $0xf,%esp
  0x0000000115e9960b: je     0x0000000115e99623
  0x0000000115e99611: sub    $0x8,%rsp
  0x0000000115e99615: callq  0x000000010dce7696
  0x0000000115e9961a: add    $0x8,%rsp
  0x0000000115e9961e: jmpq   0x0000000115e99628
  0x0000000115e99623: callq  0x000000010dce7696
  0x0000000115e99628: mov    -0x8(%rbp),%rbx
  0x0000000115e9962c: leaveq 
  0x0000000115e9962d: pop    %rsi
  0x0000000115e9962e: mov    %rbx,%rsp
  0x0000000115e99631: jmpq   *%rsi
  0x0000000115e99633: mov    -0x38(%rbp),%r13
  0x0000000115e99637: mov    -0x30(%rbp),%r14
  0x0000000115e9963b: mov    -0x40(%rbp),%rsp
  0x0000000115e9963f: movq   $0x0,-0x10(%rbp)
  0x0000000115e99647: mov    0x388(%r15),%rcx
  0x0000000115e9964e: vmovsd 0x78(%rcx),%xmm0
  0x0000000115e99653: movl   $0xb,0x70(%rcx)
  0x0000000115e9965a: movl   $0x0,0x78(%rcx)
  0x0000000115e99661: mov    0x388(%r15),%rdx
  0x0000000115e99668: movl   $0x0,0x6c(%rdx)
  0x0000000115e9966f: mov    0x295(%r15),%dl
  0x0000000115e99676: movb   $0x0,0x295(%r15)
  0x0000000115e9967e: mov    -0x18(%rbp),%rbx
  0x0000000115e99682: mov    0x20(%rbx),%ecx
  0x0000000115e99685: test   $0x20,%ecx
  0x0000000115e9968b: je     0x0000000115e99793
  0x0000000115e99691: test   $0xff,%dl
  0x0000000115e99694: jne    0x0000000115e99896
  0x0000000115e9969a: sub    $0x10,%rsp
  0x0000000115e9969e: vmovsd %xmm0,(%rsp)
  0x0000000115e996a3: lea    -0x50(%rbp),%rsi
  0x0000000115e996a7: mov    0x8(%rsi),%rax
  0x0000000115e996ab: test   %rax,%rax
  0x0000000115e996ae: jne    0x0000000115e996c2
  0x0000000115e996b4: vmovsd (%rsp),%xmm0
  0x0000000115e996b9: add    $0x10,%rsp
  0x0000000115e996bd: jmpq   0x0000000115e99793
  0x0000000115e996c2: mov    %r13,-0x38(%rbp)
  0x0000000115e996c6: lea    (%rsi),%rax
  0x0000000115e996c9: mov    0x8(%rsi),%rcx
  0x0000000115e996cd: movq   $0x0,0x8(%rsi)
  0x0000000115e996d5: mov    (%rcx),%rdx
  0x0000000115e996d8: and    $0x7,%rdx
  0x0000000115e996dc: cmp    $0x5,%rdx
  0x0000000115e996e0: je     0x0000000115e99786
  0x0000000115e996e6: mov    (%rax),%rdx
  0x0000000115e996e9: test   %rdx,%rdx
  0x0000000115e996ec: je     0x0000000115e99786
  0x0000000115e996f2: lock cmpxchg %rdx,(%rcx)
  0x0000000115e996f7: je     0x0000000115e99786
  0x0000000115e996fd: mov    %rcx,0x8(%rsi)
  0x0000000115e99701: callq  0x0000000115e9970b
  0x0000000115e99706: jmpq   0x0000000115e99786
  0x0000000115e9970b: lea    0x8(%rsp),%rax
  0x0000000115e99710: mov    %r13,-0x38(%rbp)
  0x0000000115e99714: mov    %r15,%rdi
  0x0000000115e99717: mov    %rbp,0x1e8(%r15)
  0x0000000115e9971e: mov    %rax,0x1d8(%r15)
  0x0000000115e99725: test   $0xf,%esp
  0x0000000115e9972b: je     0x0000000115e99743
  0x0000000115e99731: sub    $0x8,%rsp
  0x0000000115e99735: callq  0x000000010dae8608
  0x0000000115e9973a: add    $0x8,%rsp
  0x0000000115e9973e: jmpq   0x0000000115e99748
  0x0000000115e99743: callq  0x000000010dae8608
  0x0000000115e99748: movabs $0x0,%r10
  0x0000000115e99752: mov    %r10,0x1d8(%r15)
  0x0000000115e99759: movabs $0x0,%r10
  0x0000000115e99763: mov    %r10,0x1e8(%r15)
  0x0000000115e9976a: cmpq   $0x0,0x8(%r15)
  0x0000000115e99772: je     0x0000000115e9977d
  0x0000000115e99778: jmpq   0x0000000115e916e0
  0x0000000115e9977d: mov    -0x38(%rbp),%r13
  0x0000000115e99781: mov    -0x30(%rbp),%r14
  0x0000000115e99785: retq   
  0x0000000115e99786: mov    -0x38(%rbp),%r13
  0x0000000115e9978a: vmovsd (%rsp),%xmm0
  0x0000000115e9978f: add    $0x10,%rsp
  0x0000000115e99793: mov    -0x40(%rbp),%rsi
  0x0000000115e99797: lea    -0x40(%rbp),%rbx
  0x0000000115e9979b: jmpq   0x0000000115e99891
  0x0000000115e997a0: sub    $0x10,%rsp
  0x0000000115e997a4: vmovsd %xmm0,(%rsp)
  0x0000000115e997a9: mov    %r13,-0x38(%rbp)
  0x0000000115e997ad: lea    (%rsi),%rax
  0x0000000115e997b0: mov    0x8(%rsi),%rcx
  0x0000000115e997b4: movq   $0x0,0x8(%rsi)
  0x0000000115e997bc: mov    (%rcx),%rdx
  0x0000000115e997bf: and    $0x7,%rdx
  0x0000000115e997c3: cmp    $0x5,%rdx
  0x0000000115e997c7: je     0x0000000115e9986d
  0x0000000115e997cd: mov    (%rax),%rdx
  0x0000000115e997d0: test   %rdx,%rdx
  0x0000000115e997d3: je     0x0000000115e9986d
  0x0000000115e997d9: lock cmpxchg %rdx,(%rcx)
  0x0000000115e997de: je     0x0000000115e9986d
  0x0000000115e997e4: mov    %rcx,0x8(%rsi)
  0x0000000115e997e8: callq  0x0000000115e997f2
  0x0000000115e997ed: jmpq   0x0000000115e9986d
  0x0000000115e997f2: lea    0x8(%rsp),%rax
  0x0000000115e997f7: mov    %r13,-0x38(%rbp)
  0x0000000115e997fb: mov    %r15,%rdi
  0x0000000115e997fe: mov    %rbp,0x1e8(%r15)
  0x0000000115e99805: mov    %rax,0x1d8(%r15)
  0x0000000115e9980c: test   $0xf,%esp
  0x0000000115e99812: je     0x0000000115e9982a
  0x0000000115e99818: sub    $0x8,%rsp
  0x0000000115e9981c: callq  0x000000010dae8608
  0x0000000115e99821: add    $0x8,%rsp
  0x0000000115e99825: jmpq   0x0000000115e9982f
  0x0000000115e9982a: callq  0x000000010dae8608
  0x0000000115e9982f: movabs $0x0,%r10
  0x0000000115e99839: mov    %r10,0x1d8(%r15)
  0x0000000115e99840: movabs $0x0,%r10
  0x0000000115e9984a: mov    %r10,0x1e8(%r15)
  0x0000000115e99851: cmpq   $0x0,0x8(%r15)
  0x0000000115e99859: je     0x0000000115e99864
  0x0000000115e9985f: jmpq   0x0000000115e916e0
  0x0000000115e99864: mov    -0x38(%rbp),%r13
  0x0000000115e99868: mov    -0x30(%rbp),%r14
  0x0000000115e9986c: retq   
  0x0000000115e9986d: mov    -0x38(%rbp),%r13
  0x0000000115e99871: vmovsd (%rsp),%xmm0
  0x0000000115e99876: add    $0x10,%rsp
  0x0000000115e9987a: jmpq   0x0000000115e99793
  0x0000000115e9987f: cmpq   $0x0,0x8(%rsi)
  0x0000000115e99887: jne    0x0000000115e997a0
  0x0000000115e9988d: add    $0x10,%rsi
  0x0000000115e99891: cmp    %rbx,%rsi
  0x0000000115e99894: jne    0x0000000115e9987f
  0x0000000115e99896: cmpb   $0x0,-0x7db25d3(%rip)        # 0x000000010e0e72ca
  0x0000000115e9989d: je     0x0000000115e998df
  0x0000000115e998a3: sub    $0x10,%rsp
  0x0000000115e998a7: vmovsd %xmm0,(%rsp)
  0x0000000115e998ac: mov    -0x18(%rbp),%rsi
  0x0000000115e998b0: mov    %r15,%rdi
  0x0000000115e998b3: test   $0xf,%esp
  0x0000000115e998b9: je     0x0000000115e998d1
  0x0000000115e998bf: sub    $0x8,%rsp
  0x0000000115e998c3: callq  0x000000010dce7696
  0x0000000115e998c8: add    $0x8,%rsp
  0x0000000115e998cc: jmpq   0x0000000115e998d6
  0x0000000115e998d1: callq  0x000000010dce7696
  0x0000000115e998d6: vmovsd (%rsp),%xmm0
  0x0000000115e998db: add    $0x10,%rsp
  0x0000000115e998df: mov    -0x8(%rbp),%rbx
  0x0000000115e998e3: leaveq 
  0x0000000115e998e4: pop    %rsi
  0x0000000115e998e5: mov    %rbx,%rsp
  0x0000000115e998e8: jmpq   *%rsi
  0x0000000115e998ea: mov    -0x38(%rbp),%r13
  0x0000000115e998ee: mov    -0x30(%rbp),%r14
  0x0000000115e998f2: mov    -0x40(%rbp),%rsp
  0x0000000115e998f6: movq   $0x0,-0x10(%rbp)
  0x0000000115e998fe: mov    0x388(%r15),%rcx
  0x0000000115e99905: vmovss 0x78(%rcx),%xmm0
  0x0000000115e9990a: movl   $0xb,0x70(%rcx)
  0x0000000115e99911: movl   $0x0,0x78(%rcx)
  0x0000000115e99918: mov    0x388(%r15),%rdx
  0x0000000115e9991f: movl   $0x0,0x6c(%rdx)
  0x0000000115e99926: mov    0x295(%r15),%dl
  0x0000000115e9992d: movb   $0x0,0x295(%r15)
  0x0000000115e99935: mov    -0x18(%rbp),%rbx
  0x0000000115e99939: mov    0x20(%rbx),%ecx
  0x0000000115e9993c: test   $0x20,%ecx
  0x0000000115e99942: je     0x0000000115e99a4a
  0x0000000115e99948: test   $0xff,%dl
  0x0000000115e9994b: jne    0x0000000115e99b4d
  0x0000000115e99951: sub    $0x8,%rsp
  0x0000000115e99955: vmovss %xmm0,(%rsp)
  0x0000000115e9995a: lea    -0x50(%rbp),%rsi
  0x0000000115e9995e: mov    0x8(%rsi),%rax
  0x0000000115e99962: test   %rax,%rax
  0x0000000115e99965: jne    0x0000000115e99979
  0x0000000115e9996b: vmovss (%rsp),%xmm0
  0x0000000115e99970: add    $0x8,%rsp
  0x0000000115e99974: jmpq   0x0000000115e99a4a
  0x0000000115e99979: mov    %r13,-0x38(%rbp)
  0x0000000115e9997d: lea    (%rsi),%rax
  0x0000000115e99980: mov    0x8(%rsi),%rcx
  0x0000000115e99984: movq   $0x0,0x8(%rsi)
  0x0000000115e9998c: mov    (%rcx),%rdx
  0x0000000115e9998f: and    $0x7,%rdx
  0x0000000115e99993: cmp    $0x5,%rdx
  0x0000000115e99997: je     0x0000000115e99a3d
  0x0000000115e9999d: mov    (%rax),%rdx
  0x0000000115e999a0: test   %rdx,%rdx
  0x0000000115e999a3: je     0x0000000115e99a3d
  0x0000000115e999a9: lock cmpxchg %rdx,(%rcx)
  0x0000000115e999ae: je     0x0000000115e99a3d
  0x0000000115e999b4: mov    %rcx,0x8(%rsi)
  0x0000000115e999b8: callq  0x0000000115e999c2
  0x0000000115e999bd: jmpq   0x0000000115e99a3d
  0x0000000115e999c2: lea    0x8(%rsp),%rax
  0x0000000115e999c7: mov    %r13,-0x38(%rbp)
  0x0000000115e999cb: mov    %r15,%rdi
  0x0000000115e999ce: mov    %rbp,0x1e8(%r15)
  0x0000000115e999d5: mov    %rax,0x1d8(%r15)
  0x0000000115e999dc: test   $0xf,%esp
  0x0000000115e999e2: je     0x0000000115e999fa
  0x0000000115e999e8: sub    $0x8,%rsp
  0x0000000115e999ec: callq  0x000000010dae8608
  0x0000000115e999f1: add    $0x8,%rsp
  0x0000000115e999f5: jmpq   0x0000000115e999ff
  0x0000000115e999fa: callq  0x000000010dae8608
  0x0000000115e999ff: movabs $0x0,%r10
  0x0000000115e99a09: mov    %r10,0x1d8(%r15)
  0x0000000115e99a10: movabs $0x0,%r10
  0x0000000115e99a1a: mov    %r10,0x1e8(%r15)
  0x0000000115e99a21: cmpq   $0x0,0x8(%r15)
  0x0000000115e99a29: je     0x0000000115e99a34
  0x0000000115e99a2f: jmpq   0x0000000115e916e0
  0x0000000115e99a34: mov    -0x38(%rbp),%r13
  0x0000000115e99a38: mov    -0x30(%rbp),%r14
  0x0000000115e99a3c: retq   
  0x0000000115e99a3d: mov    -0x38(%rbp),%r13
  0x0000000115e99a41: vmovss (%rsp),%xmm0
  0x0000000115e99a46: add    $0x8,%rsp
  0x0000000115e99a4a: mov    -0x40(%rbp),%rsi
  0x0000000115e99a4e: lea    -0x40(%rbp),%rbx
  0x0000000115e99a52: jmpq   0x0000000115e99b48
  0x0000000115e99a57: sub    $0x8,%rsp
  0x0000000115e99a5b: vmovss %xmm0,(%rsp)
  0x0000000115e99a60: mov    %r13,-0x38(%rbp)
  0x0000000115e99a64: lea    (%rsi),%rax
  0x0000000115e99a67: mov    0x8(%rsi),%rcx
  0x0000000115e99a6b: movq   $0x0,0x8(%rsi)
  0x0000000115e99a73: mov    (%rcx),%rdx
  0x0000000115e99a76: and    $0x7,%rdx
  0x0000000115e99a7a: cmp    $0x5,%rdx
  0x0000000115e99a7e: je     0x0000000115e99b24
  0x0000000115e99a84: mov    (%rax),%rdx
  0x0000000115e99a87: test   %rdx,%rdx
  0x0000000115e99a8a: je     0x0000000115e99b24
  0x0000000115e99a90: lock cmpxchg %rdx,(%rcx)
  0x0000000115e99a95: je     0x0000000115e99b24
  0x0000000115e99a9b: mov    %rcx,0x8(%rsi)
  0x0000000115e99a9f: callq  0x0000000115e99aa9
  0x0000000115e99aa4: jmpq   0x0000000115e99b24
  0x0000000115e99aa9: lea    0x8(%rsp),%rax
  0x0000000115e99aae: mov    %r13,-0x38(%rbp)
  0x0000000115e99ab2: mov    %r15,%rdi
  0x0000000115e99ab5: mov    %rbp,0x1e8(%r15)
  0x0000000115e99abc: mov    %rax,0x1d8(%r15)
  0x0000000115e99ac3: test   $0xf,%esp
  0x0000000115e99ac9: je     0x0000000115e99ae1
  0x0000000115e99acf: sub    $0x8,%rsp
  0x0000000115e99ad3: callq  0x000000010dae8608
  0x0000000115e99ad8: add    $0x8,%rsp
  0x0000000115e99adc: jmpq   0x0000000115e99ae6
  0x0000000115e99ae1: callq  0x000000010dae8608
  0x0000000115e99ae6: movabs $0x0,%r10
  0x0000000115e99af0: mov    %r10,0x1d8(%r15)
  0x0000000115e99af7: movabs $0x0,%r10
  0x0000000115e99b01: mov    %r10,0x1e8(%r15)
  0x0000000115e99b08: cmpq   $0x0,0x8(%r15)
  0x0000000115e99b10: je     0x0000000115e99b1b
  0x0000000115e99b16: jmpq   0x0000000115e916e0
  0x0000000115e99b1b: mov    -0x38(%rbp),%r13
  0x0000000115e99b1f: mov    -0x30(%rbp),%r14
  0x0000000115e99b23: retq   
  0x0000000115e99b24: mov    -0x38(%rbp),%r13
  0x0000000115e99b28: vmovss (%rsp),%xmm0
  0x0000000115e99b2d: add    $0x8,%rsp
  0x0000000115e99b31: jmpq   0x0000000115e99a4a
  0x0000000115e99b36: cmpq   $0x0,0x8(%rsi)
  0x0000000115e99b3e: jne    0x0000000115e99a57
  0x0000000115e99b44: add    $0x10,%rsi
  0x0000000115e99b48: cmp    %rbx,%rsi
  0x0000000115e99b4b: jne    0x0000000115e99b36
  0x0000000115e99b4d: cmpb   $0x0,-0x7db288a(%rip)        # 0x000000010e0e72ca
  0x0000000115e99b54: je     0x0000000115e99b96
  0x0000000115e99b5a: sub    $0x8,%rsp
  0x0000000115e99b5e: vmovss %xmm0,(%rsp)
  0x0000000115e99b63: mov    -0x18(%rbp),%rsi
  0x0000000115e99b67: mov    %r15,%rdi
  0x0000000115e99b6a: test   $0xf,%esp
  0x0000000115e99b70: je     0x0000000115e99b88
  0x0000000115e99b76: sub    $0x8,%rsp
  0x0000000115e99b7a: callq  0x000000010dce7696
  0x0000000115e99b7f: add    $0x8,%rsp
  0x0000000115e99b83: jmpq   0x0000000115e99b8d
  0x0000000115e99b88: callq  0x000000010dce7696
  0x0000000115e99b8d: vmovss (%rsp),%xmm0
  0x0000000115e99b92: add    $0x8,%rsp
  0x0000000115e99b96: mov    -0x8(%rbp),%rbx
  0x0000000115e99b9a: leaveq 
  0x0000000115e99b9b: pop    %rsi
  0x0000000115e99b9c: mov    %rbx,%rsp
  0x0000000115e99b9f: jmpq   *%rsi
  0x0000000115e99ba1: mov    -0x38(%rbp),%r13
  0x0000000115e99ba5: mov    -0x30(%rbp),%r14
  0x0000000115e99ba9: mov    -0x40(%rbp),%rsp
  0x0000000115e99bad: movq   $0x0,-0x10(%rbp)
  0x0000000115e99bb5: mov    0x388(%r15),%rcx
  0x0000000115e99bbc: mov    0x78(%rcx),%rax
  0x0000000115e99bc0: movl   $0xb,0x70(%rcx)
  0x0000000115e99bc7: movl   $0x0,0x78(%rcx)
  0x0000000115e99bce: mov    0x388(%r15),%rdx
  0x0000000115e99bd5: movl   $0x0,0x6c(%rdx)
  0x0000000115e99bdc: mov    0x295(%r15),%dl
  0x0000000115e99be3: movb   $0x0,0x295(%r15)
  0x0000000115e99beb: mov    -0x18(%rbp),%rbx
  0x0000000115e99bef: mov    0x20(%rbx),%ecx
  0x0000000115e99bf2: test   $0x20,%ecx
  0x0000000115e99bf8: je     0x0000000115e99cfd
  0x0000000115e99bfe: test   $0xff,%dl
  0x0000000115e99c01: jne    0x0000000115e99dfe
  0x0000000115e99c07: sub    $0x10,%rsp
  0x0000000115e99c0b: mov    %rax,(%rsp)
  0x0000000115e99c0f: lea    -0x50(%rbp),%rsi
  0x0000000115e99c13: mov    0x8(%rsi),%rax
  0x0000000115e99c17: test   %rax,%rax
  0x0000000115e99c1a: jne    0x0000000115e99c2d
  0x0000000115e99c20: mov    (%rsp),%rax
  0x0000000115e99c24: add    $0x10,%rsp
  0x0000000115e99c28: jmpq   0x0000000115e99cfd
  0x0000000115e99c2d: mov    %r13,-0x38(%rbp)
  0x0000000115e99c31: lea    (%rsi),%rax
  0x0000000115e99c34: mov    0x8(%rsi),%rcx
  0x0000000115e99c38: movq   $0x0,0x8(%rsi)
  0x0000000115e99c40: mov    (%rcx),%rdx
  0x0000000115e99c43: and    $0x7,%rdx
  0x0000000115e99c47: cmp    $0x5,%rdx
  0x0000000115e99c4b: je     0x0000000115e99cf1
  0x0000000115e99c51: mov    (%rax),%rdx
  0x0000000115e99c54: test   %rdx,%rdx
  0x0000000115e99c57: je     0x0000000115e99cf1
  0x0000000115e99c5d: lock cmpxchg %rdx,(%rcx)
  0x0000000115e99c62: je     0x0000000115e99cf1
  0x0000000115e99c68: mov    %rcx,0x8(%rsi)
  0x0000000115e99c6c: callq  0x0000000115e99c76
  0x0000000115e99c71: jmpq   0x0000000115e99cf1
  0x0000000115e99c76: lea    0x8(%rsp),%rax
  0x0000000115e99c7b: mov    %r13,-0x38(%rbp)
  0x0000000115e99c7f: mov    %r15,%rdi
  0x0000000115e99c82: mov    %rbp,0x1e8(%r15)
  0x0000000115e99c89: mov    %rax,0x1d8(%r15)
  0x0000000115e99c90: test   $0xf,%esp
  0x0000000115e99c96: je     0x0000000115e99cae
  0x0000000115e99c9c: sub    $0x8,%rsp
  0x0000000115e99ca0: callq  0x000000010dae8608
  0x0000000115e99ca5: add    $0x8,%rsp
  0x0000000115e99ca9: jmpq   0x0000000115e99cb3
  0x0000000115e99cae: callq  0x000000010dae8608
  0x0000000115e99cb3: movabs $0x0,%r10
  0x0000000115e99cbd: mov    %r10,0x1d8(%r15)
  0x0000000115e99cc4: movabs $0x0,%r10
  0x0000000115e99cce: mov    %r10,0x1e8(%r15)
  0x0000000115e99cd5: cmpq   $0x0,0x8(%r15)
  0x0000000115e99cdd: je     0x0000000115e99ce8
  0x0000000115e99ce3: jmpq   0x0000000115e916e0
  0x0000000115e99ce8: mov    -0x38(%rbp),%r13
  0x0000000115e99cec: mov    -0x30(%rbp),%r14
  0x0000000115e99cf0: retq   
  0x0000000115e99cf1: mov    -0x38(%rbp),%r13
  0x0000000115e99cf5: mov    (%rsp),%rax
  0x0000000115e99cf9: add    $0x10,%rsp
  0x0000000115e99cfd: mov    -0x40(%rbp),%rsi
  0x0000000115e99d01: lea    -0x40(%rbp),%rbx
  0x0000000115e99d05: jmpq   0x0000000115e99df9
  0x0000000115e99d0a: sub    $0x10,%rsp
  0x0000000115e99d0e: mov    %rax,(%rsp)
  0x0000000115e99d12: mov    %r13,-0x38(%rbp)
  0x0000000115e99d16: lea    (%rsi),%rax
  0x0000000115e99d19: mov    0x8(%rsi),%rcx
  0x0000000115e99d1d: movq   $0x0,0x8(%rsi)
  0x0000000115e99d25: mov    (%rcx),%rdx
  0x0000000115e99d28: and    $0x7,%rdx
  0x0000000115e99d2c: cmp    $0x5,%rdx
  0x0000000115e99d30: je     0x0000000115e99dd6
  0x0000000115e99d36: mov    (%rax),%rdx
  0x0000000115e99d39: test   %rdx,%rdx
  0x0000000115e99d3c: je     0x0000000115e99dd6
  0x0000000115e99d42: lock cmpxchg %rdx,(%rcx)
  0x0000000115e99d47: je     0x0000000115e99dd6
  0x0000000115e99d4d: mov    %rcx,0x8(%rsi)
  0x0000000115e99d51: callq  0x0000000115e99d5b
  0x0000000115e99d56: jmpq   0x0000000115e99dd6
  0x0000000115e99d5b: lea    0x8(%rsp),%rax
  0x0000000115e99d60: mov    %r13,-0x38(%rbp)
  0x0000000115e99d64: mov    %r15,%rdi
  0x0000000115e99d67: mov    %rbp,0x1e8(%r15)
  0x0000000115e99d6e: mov    %rax,0x1d8(%r15)
  0x0000000115e99d75: test   $0xf,%esp
  0x0000000115e99d7b: je     0x0000000115e99d93
  0x0000000115e99d81: sub    $0x8,%rsp
  0x0000000115e99d85: callq  0x000000010dae8608
  0x0000000115e99d8a: add    $0x8,%rsp
  0x0000000115e99d8e: jmpq   0x0000000115e99d98
  0x0000000115e99d93: callq  0x000000010dae8608
  0x0000000115e99d98: movabs $0x0,%r10
  0x0000000115e99da2: mov    %r10,0x1d8(%r15)
  0x0000000115e99da9: movabs $0x0,%r10
  0x0000000115e99db3: mov    %r10,0x1e8(%r15)
  0x0000000115e99dba: cmpq   $0x0,0x8(%r15)
  0x0000000115e99dc2: je     0x0000000115e99dcd
  0x0000000115e99dc8: jmpq   0x0000000115e916e0
  0x0000000115e99dcd: mov    -0x38(%rbp),%r13
  0x0000000115e99dd1: mov    -0x30(%rbp),%r14
  0x0000000115e99dd5: retq   
  0x0000000115e99dd6: mov    -0x38(%rbp),%r13
  0x0000000115e99dda: mov    (%rsp),%rax
  0x0000000115e99dde: add    $0x10,%rsp
  0x0000000115e99de2: jmpq   0x0000000115e99cfd
  0x0000000115e99de7: cmpq   $0x0,0x8(%rsi)
  0x0000000115e99def: jne    0x0000000115e99d0a
  0x0000000115e99df5: add    $0x10,%rsi
  0x0000000115e99df9: cmp    %rbx,%rsi
  0x0000000115e99dfc: jne    0x0000000115e99de7
  0x0000000115e99dfe: cmpb   $0x0,-0x7db2b3b(%rip)        # 0x000000010e0e72ca
  0x0000000115e99e05: je     0x0000000115e99e45
  0x0000000115e99e0b: sub    $0x10,%rsp
  0x0000000115e99e0f: mov    %rax,(%rsp)
  0x0000000115e99e13: mov    -0x18(%rbp),%rsi
  0x0000000115e99e17: mov    %r15,%rdi
  0x0000000115e99e1a: test   $0xf,%esp
  0x0000000115e99e20: je     0x0000000115e99e38
  0x0000000115e99e26: sub    $0x8,%rsp
  0x0000000115e99e2a: callq  0x000000010dce7696
  0x0000000115e99e2f: add    $0x8,%rsp
  0x0000000115e99e33: jmpq   0x0000000115e99e3d
  0x0000000115e99e38: callq  0x000000010dce7696
  0x0000000115e99e3d: mov    (%rsp),%rax
  0x0000000115e99e41: add    $0x10,%rsp
  0x0000000115e99e45: mov    -0x8(%rbp),%rbx
  0x0000000115e99e49: leaveq 
  0x0000000115e99e4a: pop    %rsi
  0x0000000115e99e4b: mov    %rbx,%rsp
  0x0000000115e99e4e: jmpq   *%rsi
  0x0000000115e99e50: mov    -0x38(%rbp),%r13
  0x0000000115e99e54: mov    -0x30(%rbp),%r14
  0x0000000115e99e58: mov    -0x40(%rbp),%rsp
  0x0000000115e99e5c: movq   $0x0,-0x10(%rbp)
  0x0000000115e99e64: mov    0x388(%r15),%rcx
  0x0000000115e99e6b: mov    0x78(%rcx),%eax
  0x0000000115e99e6e: movl   $0xb,0x70(%rcx)
  0x0000000115e99e75: movl   $0x0,0x78(%rcx)
  0x0000000115e99e7c: mov    0x388(%r15),%rdx
  0x0000000115e99e83: movl   $0x0,0x6c(%rdx)
  0x0000000115e99e8a: mov    0x295(%r15),%dl
  0x0000000115e99e91: movb   $0x0,0x295(%r15)
  0x0000000115e99e99: mov    -0x18(%rbp),%rbx
  0x0000000115e99e9d: mov    0x20(%rbx),%ecx
  0x0000000115e99ea0: test   $0x20,%ecx
  0x0000000115e99ea6: je     0x0000000115e99fa2
  0x0000000115e99eac: test   $0xff,%dl
  0x0000000115e99eaf: jne    0x0000000115e9a09b
  0x0000000115e99eb5: push   %rax
  0x0000000115e99eb6: lea    -0x50(%rbp),%rsi
  0x0000000115e99eba: mov    0x8(%rsi),%rax
  0x0000000115e99ebe: test   %rax,%rax
  0x0000000115e99ec1: jne    0x0000000115e99ed3
  0x0000000115e99ec7: mov    (%rsp),%eax
  0x0000000115e99eca: add    $0x8,%rsp
  0x0000000115e99ece: jmpq   0x0000000115e99fa2
  0x0000000115e99ed3: mov    %r13,-0x38(%rbp)
  0x0000000115e99ed7: lea    (%rsi),%rax
  0x0000000115e99eda: mov    0x8(%rsi),%rcx
  0x0000000115e99ede: movq   $0x0,0x8(%rsi)
  0x0000000115e99ee6: mov    (%rcx),%rdx
  0x0000000115e99ee9: and    $0x7,%rdx
  0x0000000115e99eed: cmp    $0x5,%rdx
  0x0000000115e99ef1: je     0x0000000115e99f97
  0x0000000115e99ef7: mov    (%rax),%rdx
  0x0000000115e99efa: test   %rdx,%rdx
  0x0000000115e99efd: je     0x0000000115e99f97
  0x0000000115e99f03: lock cmpxchg %rdx,(%rcx)
  0x0000000115e99f08: je     0x0000000115e99f97
  0x0000000115e99f0e: mov    %rcx,0x8(%rsi)
  0x0000000115e99f12: callq  0x0000000115e99f1c
  0x0000000115e99f17: jmpq   0x0000000115e99f97
  0x0000000115e99f1c: lea    0x8(%rsp),%rax
  0x0000000115e99f21: mov    %r13,-0x38(%rbp)
  0x0000000115e99f25: mov    %r15,%rdi
  0x0000000115e99f28: mov    %rbp,0x1e8(%r15)
  0x0000000115e99f2f: mov    %rax,0x1d8(%r15)
  0x0000000115e99f36: test   $0xf,%esp
  0x0000000115e99f3c: je     0x0000000115e99f54
  0x0000000115e99f42: sub    $0x8,%rsp
  0x0000000115e99f46: callq  0x000000010dae8608
  0x0000000115e99f4b: add    $0x8,%rsp
  0x0000000115e99f4f: jmpq   0x0000000115e99f59
  0x0000000115e99f54: callq  0x000000010dae8608
  0x0000000115e99f59: movabs $0x0,%r10
  0x0000000115e99f63: mov    %r10,0x1d8(%r15)
  0x0000000115e99f6a: movabs $0x0,%r10
  0x0000000115e99f74: mov    %r10,0x1e8(%r15)
  0x0000000115e99f7b: cmpq   $0x0,0x8(%r15)
  0x0000000115e99f83: je     0x0000000115e99f8e
  0x0000000115e99f89: jmpq   0x0000000115e916e0
  0x0000000115e99f8e: mov    -0x38(%rbp),%r13
  0x0000000115e99f92: mov    -0x30(%rbp),%r14
  0x0000000115e99f96: retq   
  0x0000000115e99f97: mov    -0x38(%rbp),%r13
  0x0000000115e99f9b: mov    (%rsp),%eax
  0x0000000115e99f9e: add    $0x8,%rsp
  0x0000000115e99fa2: mov    -0x40(%rbp),%rsi
  0x0000000115e99fa6: lea    -0x40(%rbp),%rbx
  0x0000000115e99faa: jmpq   0x0000000115e9a096
  0x0000000115e99faf: push   %rax
  0x0000000115e99fb0: mov    %r13,-0x38(%rbp)
  0x0000000115e99fb4: lea    (%rsi),%rax
  0x0000000115e99fb7: mov    0x8(%rsi),%rcx
  0x0000000115e99fbb: movq   $0x0,0x8(%rsi)
  0x0000000115e99fc3: mov    (%rcx),%rdx
  0x0000000115e99fc6: and    $0x7,%rdx
  0x0000000115e99fca: cmp    $0x5,%rdx
  0x0000000115e99fce: je     0x0000000115e9a074
  0x0000000115e99fd4: mov    (%rax),%rdx
  0x0000000115e99fd7: test   %rdx,%rdx
  0x0000000115e99fda: je     0x0000000115e9a074
  0x0000000115e99fe0: lock cmpxchg %rdx,(%rcx)
  0x0000000115e99fe5: je     0x0000000115e9a074
  0x0000000115e99feb: mov    %rcx,0x8(%rsi)
  0x0000000115e99fef: callq  0x0000000115e99ff9
  0x0000000115e99ff4: jmpq   0x0000000115e9a074
  0x0000000115e99ff9: lea    0x8(%rsp),%rax
  0x0000000115e99ffe: mov    %r13,-0x38(%rbp)
  0x0000000115e9a002: mov    %r15,%rdi
  0x0000000115e9a005: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a00c: mov    %rax,0x1d8(%r15)
  0x0000000115e9a013: test   $0xf,%esp
  0x0000000115e9a019: je     0x0000000115e9a031
  0x0000000115e9a01f: sub    $0x8,%rsp
  0x0000000115e9a023: callq  0x000000010dae8608
  0x0000000115e9a028: add    $0x8,%rsp
  0x0000000115e9a02c: jmpq   0x0000000115e9a036
  0x0000000115e9a031: callq  0x000000010dae8608
  0x0000000115e9a036: movabs $0x0,%r10
  0x0000000115e9a040: mov    %r10,0x1d8(%r15)
  0x0000000115e9a047: movabs $0x0,%r10
  0x0000000115e9a051: mov    %r10,0x1e8(%r15)
  0x0000000115e9a058: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a060: je     0x0000000115e9a06b
  0x0000000115e9a066: jmpq   0x0000000115e916e0
  0x0000000115e9a06b: mov    -0x38(%rbp),%r13
  0x0000000115e9a06f: mov    -0x30(%rbp),%r14
  0x0000000115e9a073: retq   
  0x0000000115e9a074: mov    -0x38(%rbp),%r13
  0x0000000115e9a078: mov    (%rsp),%eax
  0x0000000115e9a07b: add    $0x8,%rsp
  0x0000000115e9a07f: jmpq   0x0000000115e99fa2
  0x0000000115e9a084: cmpq   $0x0,0x8(%rsi)
  0x0000000115e9a08c: jne    0x0000000115e99faf
  0x0000000115e9a092: add    $0x10,%rsi
  0x0000000115e9a096: cmp    %rbx,%rsi
  0x0000000115e9a099: jne    0x0000000115e9a084
  0x0000000115e9a09b: cmpb   $0x0,-0x7db2dd8(%rip)        # 0x000000010e0e72ca
  0x0000000115e9a0a2: je     0x0000000115e9a0da
  0x0000000115e9a0a8: push   %rax
  0x0000000115e9a0a9: mov    -0x18(%rbp),%rsi
  0x0000000115e9a0ad: mov    %r15,%rdi
  0x0000000115e9a0b0: test   $0xf,%esp
  0x0000000115e9a0b6: je     0x0000000115e9a0ce
  0x0000000115e9a0bc: sub    $0x8,%rsp
  0x0000000115e9a0c0: callq  0x000000010dce7696
  0x0000000115e9a0c5: add    $0x8,%rsp
  0x0000000115e9a0c9: jmpq   0x0000000115e9a0d3
  0x0000000115e9a0ce: callq  0x000000010dce7696
  0x0000000115e9a0d3: mov    (%rsp),%eax
  0x0000000115e9a0d6: add    $0x8,%rsp
  0x0000000115e9a0da: mov    -0x8(%rbp),%rbx
  0x0000000115e9a0de: leaveq 
  0x0000000115e9a0df: pop    %rsi
  0x0000000115e9a0e0: mov    %rbx,%rsp
  0x0000000115e9a0e3: jmpq   *%rsi
  0x0000000115e9a0e5: mov    -0x38(%rbp),%r13
  0x0000000115e9a0e9: mov    -0x30(%rbp),%r14
  0x0000000115e9a0ed: mov    -0x40(%rbp),%rsp
  0x0000000115e9a0f1: movq   $0x0,-0x10(%rbp)
  0x0000000115e9a0f9: mov    0x388(%r15),%rcx
  0x0000000115e9a100: mov    0x80(%rcx),%rax
  0x0000000115e9a107: movq   $0x0,0x80(%rcx)
  0x0000000115e9a112: movl   $0xb,0x70(%rcx)
  0x0000000115e9a119: movl   $0x0,0x78(%rcx)
  0x0000000115e9a120: mov    0x388(%r15),%rdx
  0x0000000115e9a127: movl   $0x0,0x6c(%rdx)
  0x0000000115e9a12e: mov    0x295(%r15),%dl
  0x0000000115e9a135: movb   $0x0,0x295(%r15)
  0x0000000115e9a13d: mov    -0x18(%rbp),%rbx
  0x0000000115e9a141: mov    0x20(%rbx),%ecx
  0x0000000115e9a144: test   $0x20,%ecx
  0x0000000115e9a14a: je     0x0000000115e9a23a
  0x0000000115e9a150: test   $0xff,%dl
  0x0000000115e9a153: jne    0x0000000115e9a32d
  0x0000000115e9a159: push   %rax
  0x0000000115e9a15a: lea    -0x50(%rbp),%rsi
  0x0000000115e9a15e: mov    0x8(%rsi),%rax
  0x0000000115e9a162: test   %rax,%rax
  0x0000000115e9a165: jne    0x0000000115e9a171
  0x0000000115e9a16b: pop    %rax
  0x0000000115e9a16c: jmpq   0x0000000115e9a23a
  0x0000000115e9a171: mov    %r13,-0x38(%rbp)
  0x0000000115e9a175: lea    (%rsi),%rax
  0x0000000115e9a178: mov    0x8(%rsi),%rcx
  0x0000000115e9a17c: movq   $0x0,0x8(%rsi)
  0x0000000115e9a184: mov    (%rcx),%rdx
  0x0000000115e9a187: and    $0x7,%rdx
  0x0000000115e9a18b: cmp    $0x5,%rdx
  0x0000000115e9a18f: je     0x0000000115e9a235
  0x0000000115e9a195: mov    (%rax),%rdx
  0x0000000115e9a198: test   %rdx,%rdx
  0x0000000115e9a19b: je     0x0000000115e9a235
  0x0000000115e9a1a1: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a1a6: je     0x0000000115e9a235
  0x0000000115e9a1ac: mov    %rcx,0x8(%rsi)
  0x0000000115e9a1b0: callq  0x0000000115e9a1ba
  0x0000000115e9a1b5: jmpq   0x0000000115e9a235
  0x0000000115e9a1ba: lea    0x8(%rsp),%rax
  0x0000000115e9a1bf: mov    %r13,-0x38(%rbp)
  0x0000000115e9a1c3: mov    %r15,%rdi
  0x0000000115e9a1c6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a1cd: mov    %rax,0x1d8(%r15)
  0x0000000115e9a1d4: test   $0xf,%esp
  0x0000000115e9a1da: je     0x0000000115e9a1f2
  0x0000000115e9a1e0: sub    $0x8,%rsp
  0x0000000115e9a1e4: callq  0x000000010dae8608
  0x0000000115e9a1e9: add    $0x8,%rsp
  0x0000000115e9a1ed: jmpq   0x0000000115e9a1f7
  0x0000000115e9a1f2: callq  0x000000010dae8608
  0x0000000115e9a1f7: movabs $0x0,%r10
  0x0000000115e9a201: mov    %r10,0x1d8(%r15)
  0x0000000115e9a208: movabs $0x0,%r10
  0x0000000115e9a212: mov    %r10,0x1e8(%r15)
  0x0000000115e9a219: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a221: je     0x0000000115e9a22c
  0x0000000115e9a227: jmpq   0x0000000115e916e0
  0x0000000115e9a22c: mov    -0x38(%rbp),%r13
  0x0000000115e9a230: mov    -0x30(%rbp),%r14
  0x0000000115e9a234: retq   
  0x0000000115e9a235: mov    -0x38(%rbp),%r13
  0x0000000115e9a239: pop    %rax
  0x0000000115e9a23a: mov    -0x40(%rbp),%rsi
  0x0000000115e9a23e: lea    -0x40(%rbp),%rbx
  0x0000000115e9a242: jmpq   0x0000000115e9a328
  0x0000000115e9a247: push   %rax
  0x0000000115e9a248: mov    %r13,-0x38(%rbp)
  0x0000000115e9a24c: lea    (%rsi),%rax
  0x0000000115e9a24f: mov    0x8(%rsi),%rcx
  0x0000000115e9a253: movq   $0x0,0x8(%rsi)
  0x0000000115e9a25b: mov    (%rcx),%rdx
  0x0000000115e9a25e: and    $0x7,%rdx
  0x0000000115e9a262: cmp    $0x5,%rdx
  0x0000000115e9a266: je     0x0000000115e9a30c
  0x0000000115e9a26c: mov    (%rax),%rdx
  0x0000000115e9a26f: test   %rdx,%rdx
  0x0000000115e9a272: je     0x0000000115e9a30c
  0x0000000115e9a278: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a27d: je     0x0000000115e9a30c
  0x0000000115e9a283: mov    %rcx,0x8(%rsi)
  0x0000000115e9a287: callq  0x0000000115e9a291
  0x0000000115e9a28c: jmpq   0x0000000115e9a30c
  0x0000000115e9a291: lea    0x8(%rsp),%rax
  0x0000000115e9a296: mov    %r13,-0x38(%rbp)
  0x0000000115e9a29a: mov    %r15,%rdi
  0x0000000115e9a29d: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a2a4: mov    %rax,0x1d8(%r15)
  0x0000000115e9a2ab: test   $0xf,%esp
  0x0000000115e9a2b1: je     0x0000000115e9a2c9
  0x0000000115e9a2b7: sub    $0x8,%rsp
  0x0000000115e9a2bb: callq  0x000000010dae8608
  0x0000000115e9a2c0: add    $0x8,%rsp
  0x0000000115e9a2c4: jmpq   0x0000000115e9a2ce
  0x0000000115e9a2c9: callq  0x000000010dae8608
  0x0000000115e9a2ce: movabs $0x0,%r10
  0x0000000115e9a2d8: mov    %r10,0x1d8(%r15)
  0x0000000115e9a2df: movabs $0x0,%r10
  0x0000000115e9a2e9: mov    %r10,0x1e8(%r15)
  0x0000000115e9a2f0: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a2f8: je     0x0000000115e9a303
  0x0000000115e9a2fe: jmpq   0x0000000115e916e0
  0x0000000115e9a303: mov    -0x38(%rbp),%r13
  0x0000000115e9a307: mov    -0x30(%rbp),%r14
  0x0000000115e9a30b: retq   
  0x0000000115e9a30c: mov    -0x38(%rbp),%r13
  0x0000000115e9a310: pop    %rax
  0x0000000115e9a311: jmpq   0x0000000115e9a23a
  0x0000000115e9a316: cmpq   $0x0,0x8(%rsi)
  0x0000000115e9a31e: jne    0x0000000115e9a247
  0x0000000115e9a324: add    $0x10,%rsi
  0x0000000115e9a328: cmp    %rbx,%rsi
  0x0000000115e9a32b: jne    0x0000000115e9a316
  0x0000000115e9a32d: cmpb   $0x0,-0x7db306a(%rip)        # 0x000000010e0e72ca
  0x0000000115e9a334: je     0x0000000115e9a366
  0x0000000115e9a33a: push   %rax
  0x0000000115e9a33b: mov    -0x18(%rbp),%rsi
  0x0000000115e9a33f: mov    %r15,%rdi
  0x0000000115e9a342: test   $0xf,%esp
  0x0000000115e9a348: je     0x0000000115e9a360
  0x0000000115e9a34e: sub    $0x8,%rsp
  0x0000000115e9a352: callq  0x000000010dce7696
  0x0000000115e9a357: add    $0x8,%rsp
  0x0000000115e9a35b: jmpq   0x0000000115e9a365
  0x0000000115e9a360: callq  0x000000010dce7696
  0x0000000115e9a365: pop    %rax
  0x0000000115e9a366: mov    -0x8(%rbp),%rbx
  0x0000000115e9a36a: leaveq 
  0x0000000115e9a36b: pop    %rsi
  0x0000000115e9a36c: mov    %rbx,%rsp
  0x0000000115e9a36f: jmpq   *%rsi
  0x0000000115e9a371: mov    -0x38(%rbp),%r13
  0x0000000115e9a375: mov    -0x30(%rbp),%r14
  0x0000000115e9a379: mov    -0x40(%rbp),%rsp
  0x0000000115e9a37d: movq   $0x0,-0x10(%rbp)
  0x0000000115e9a385: mov    0x388(%r15),%rcx
  0x0000000115e9a38c: mov    0x78(%rcx),%eax
  0x0000000115e9a38f: movl   $0xb,0x70(%rcx)
  0x0000000115e9a396: movl   $0x0,0x78(%rcx)
  0x0000000115e9a39d: mov    0x388(%r15),%rdx
  0x0000000115e9a3a4: movl   $0x0,0x6c(%rdx)
  0x0000000115e9a3ab: mov    0x295(%r15),%dl
  0x0000000115e9a3b2: movb   $0x0,0x295(%r15)
  0x0000000115e9a3ba: mov    -0x18(%rbp),%rbx
  0x0000000115e9a3be: mov    0x20(%rbx),%ecx
  0x0000000115e9a3c1: test   $0x20,%ecx
  0x0000000115e9a3c7: je     0x0000000115e9a4c3
  0x0000000115e9a3cd: test   $0xff,%dl
  0x0000000115e9a3d0: jne    0x0000000115e9a5bc
  0x0000000115e9a3d6: push   %rax
  0x0000000115e9a3d7: lea    -0x50(%rbp),%rsi
  0x0000000115e9a3db: mov    0x8(%rsi),%rax
  0x0000000115e9a3df: test   %rax,%rax
  0x0000000115e9a3e2: jne    0x0000000115e9a3f4
  0x0000000115e9a3e8: mov    (%rsp),%eax
  0x0000000115e9a3eb: add    $0x8,%rsp
  0x0000000115e9a3ef: jmpq   0x0000000115e9a4c3
  0x0000000115e9a3f4: mov    %r13,-0x38(%rbp)
  0x0000000115e9a3f8: lea    (%rsi),%rax
  0x0000000115e9a3fb: mov    0x8(%rsi),%rcx
  0x0000000115e9a3ff: movq   $0x0,0x8(%rsi)
  0x0000000115e9a407: mov    (%rcx),%rdx
  0x0000000115e9a40a: and    $0x7,%rdx
  0x0000000115e9a40e: cmp    $0x5,%rdx
  0x0000000115e9a412: je     0x0000000115e9a4b8
  0x0000000115e9a418: mov    (%rax),%rdx
  0x0000000115e9a41b: test   %rdx,%rdx
  0x0000000115e9a41e: je     0x0000000115e9a4b8
  0x0000000115e9a424: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a429: je     0x0000000115e9a4b8
  0x0000000115e9a42f: mov    %rcx,0x8(%rsi)
  0x0000000115e9a433: callq  0x0000000115e9a43d
  0x0000000115e9a438: jmpq   0x0000000115e9a4b8
  0x0000000115e9a43d: lea    0x8(%rsp),%rax
  0x0000000115e9a442: mov    %r13,-0x38(%rbp)
  0x0000000115e9a446: mov    %r15,%rdi
  0x0000000115e9a449: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a450: mov    %rax,0x1d8(%r15)
  0x0000000115e9a457: test   $0xf,%esp
  0x0000000115e9a45d: je     0x0000000115e9a475
  0x0000000115e9a463: sub    $0x8,%rsp
  0x0000000115e9a467: callq  0x000000010dae8608
  0x0000000115e9a46c: add    $0x8,%rsp
  0x0000000115e9a470: jmpq   0x0000000115e9a47a
  0x0000000115e9a475: callq  0x000000010dae8608
  0x0000000115e9a47a: movabs $0x0,%r10
  0x0000000115e9a484: mov    %r10,0x1d8(%r15)
  0x0000000115e9a48b: movabs $0x0,%r10
  0x0000000115e9a495: mov    %r10,0x1e8(%r15)
  0x0000000115e9a49c: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a4a4: je     0x0000000115e9a4af
  0x0000000115e9a4aa: jmpq   0x0000000115e916e0
  0x0000000115e9a4af: mov    -0x38(%rbp),%r13
  0x0000000115e9a4b3: mov    -0x30(%rbp),%r14
  0x0000000115e9a4b7: retq   
  0x0000000115e9a4b8: mov    -0x38(%rbp),%r13
  0x0000000115e9a4bc: mov    (%rsp),%eax
  0x0000000115e9a4bf: add    $0x8,%rsp
  0x0000000115e9a4c3: mov    -0x40(%rbp),%rsi
  0x0000000115e9a4c7: lea    -0x40(%rbp),%rbx
  0x0000000115e9a4cb: jmpq   0x0000000115e9a5b7
  0x0000000115e9a4d0: push   %rax
  0x0000000115e9a4d1: mov    %r13,-0x38(%rbp)
  0x0000000115e9a4d5: lea    (%rsi),%rax
  0x0000000115e9a4d8: mov    0x8(%rsi),%rcx
  0x0000000115e9a4dc: movq   $0x0,0x8(%rsi)
  0x0000000115e9a4e4: mov    (%rcx),%rdx
  0x0000000115e9a4e7: and    $0x7,%rdx
  0x0000000115e9a4eb: cmp    $0x5,%rdx
  0x0000000115e9a4ef: je     0x0000000115e9a595
  0x0000000115e9a4f5: mov    (%rax),%rdx
  0x0000000115e9a4f8: test   %rdx,%rdx
  0x0000000115e9a4fb: je     0x0000000115e9a595
  0x0000000115e9a501: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a506: je     0x0000000115e9a595
  0x0000000115e9a50c: mov    %rcx,0x8(%rsi)
  0x0000000115e9a510: callq  0x0000000115e9a51a
  0x0000000115e9a515: jmpq   0x0000000115e9a595
  0x0000000115e9a51a: lea    0x8(%rsp),%rax
  0x0000000115e9a51f: mov    %r13,-0x38(%rbp)
  0x0000000115e9a523: mov    %r15,%rdi
  0x0000000115e9a526: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a52d: mov    %rax,0x1d8(%r15)
  0x0000000115e9a534: test   $0xf,%esp
  0x0000000115e9a53a: je     0x0000000115e9a552
  0x0000000115e9a540: sub    $0x8,%rsp
  0x0000000115e9a544: callq  0x000000010dae8608
  0x0000000115e9a549: add    $0x8,%rsp
  0x0000000115e9a54d: jmpq   0x0000000115e9a557
  0x0000000115e9a552: callq  0x000000010dae8608
  0x0000000115e9a557: movabs $0x0,%r10
  0x0000000115e9a561: mov    %r10,0x1d8(%r15)
  0x0000000115e9a568: movabs $0x0,%r10
  0x0000000115e9a572: mov    %r10,0x1e8(%r15)
  0x0000000115e9a579: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a581: je     0x0000000115e9a58c
  0x0000000115e9a587: jmpq   0x0000000115e916e0
  0x0000000115e9a58c: mov    -0x38(%rbp),%r13
  0x0000000115e9a590: mov    -0x30(%rbp),%r14
  0x0000000115e9a594: retq   
  0x0000000115e9a595: mov    -0x38(%rbp),%r13
  0x0000000115e9a599: mov    (%rsp),%eax
  0x0000000115e9a59c: add    $0x8,%rsp
  0x0000000115e9a5a0: jmpq   0x0000000115e9a4c3
  0x0000000115e9a5a5: cmpq   $0x0,0x8(%rsi)
  0x0000000115e9a5ad: jne    0x0000000115e9a4d0
  0x0000000115e9a5b3: add    $0x10,%rsi
  0x0000000115e9a5b7: cmp    %rbx,%rsi
  0x0000000115e9a5ba: jne    0x0000000115e9a5a5
  0x0000000115e9a5bc: cmpb   $0x0,-0x7db32f9(%rip)        # 0x000000010e0e72ca
  0x0000000115e9a5c3: je     0x0000000115e9a5fb
  0x0000000115e9a5c9: push   %rax
  0x0000000115e9a5ca: mov    -0x18(%rbp),%rsi
  0x0000000115e9a5ce: mov    %r15,%rdi
  0x0000000115e9a5d1: test   $0xf,%esp
  0x0000000115e9a5d7: je     0x0000000115e9a5ef
  0x0000000115e9a5dd: sub    $0x8,%rsp
  0x0000000115e9a5e1: callq  0x000000010dce7696
  0x0000000115e9a5e6: add    $0x8,%rsp
  0x0000000115e9a5ea: jmpq   0x0000000115e9a5f4
  0x0000000115e9a5ef: callq  0x000000010dce7696
  0x0000000115e9a5f4: mov    (%rsp),%eax
  0x0000000115e9a5f7: add    $0x8,%rsp
  0x0000000115e9a5fb: mov    -0x8(%rbp),%rbx
  0x0000000115e9a5ff: leaveq 
  0x0000000115e9a600: pop    %rsi
  0x0000000115e9a601: mov    %rbx,%rsp
  0x0000000115e9a604: jmpq   *%rsi
  0x0000000115e9a606: mov    -0x38(%rbp),%r13
  0x0000000115e9a60a: mov    -0x30(%rbp),%r14
  0x0000000115e9a60e: mov    -0x40(%rbp),%rsp
  0x0000000115e9a612: movq   $0x0,-0x10(%rbp)
  0x0000000115e9a61a: mov    0x388(%r15),%rcx
  0x0000000115e9a621: mov    0x78(%rcx),%eax
  0x0000000115e9a624: movl   $0xb,0x70(%rcx)
  0x0000000115e9a62b: movl   $0x0,0x78(%rcx)
  0x0000000115e9a632: mov    0x388(%r15),%rdx
  0x0000000115e9a639: movl   $0x0,0x6c(%rdx)
  0x0000000115e9a640: mov    0x295(%r15),%dl
  0x0000000115e9a647: movb   $0x0,0x295(%r15)
  0x0000000115e9a64f: mov    -0x18(%rbp),%rbx
  0x0000000115e9a653: mov    0x20(%rbx),%ecx
  0x0000000115e9a656: test   $0x20,%ecx
  0x0000000115e9a65c: je     0x0000000115e9a758
  0x0000000115e9a662: test   $0xff,%dl
  0x0000000115e9a665: jne    0x0000000115e9a851
  0x0000000115e9a66b: push   %rax
  0x0000000115e9a66c: lea    -0x50(%rbp),%rsi
  0x0000000115e9a670: mov    0x8(%rsi),%rax
  0x0000000115e9a674: test   %rax,%rax
  0x0000000115e9a677: jne    0x0000000115e9a689
  0x0000000115e9a67d: mov    (%rsp),%eax
  0x0000000115e9a680: add    $0x8,%rsp
  0x0000000115e9a684: jmpq   0x0000000115e9a758
  0x0000000115e9a689: mov    %r13,-0x38(%rbp)
  0x0000000115e9a68d: lea    (%rsi),%rax
  0x0000000115e9a690: mov    0x8(%rsi),%rcx
  0x0000000115e9a694: movq   $0x0,0x8(%rsi)
  0x0000000115e9a69c: mov    (%rcx),%rdx
  0x0000000115e9a69f: and    $0x7,%rdx
  0x0000000115e9a6a3: cmp    $0x5,%rdx
  0x0000000115e9a6a7: je     0x0000000115e9a74d
  0x0000000115e9a6ad: mov    (%rax),%rdx
  0x0000000115e9a6b0: test   %rdx,%rdx
  0x0000000115e9a6b3: je     0x0000000115e9a74d
  0x0000000115e9a6b9: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a6be: je     0x0000000115e9a74d
  0x0000000115e9a6c4: mov    %rcx,0x8(%rsi)
  0x0000000115e9a6c8: callq  0x0000000115e9a6d2
  0x0000000115e9a6cd: jmpq   0x0000000115e9a74d
  0x0000000115e9a6d2: lea    0x8(%rsp),%rax
  0x0000000115e9a6d7: mov    %r13,-0x38(%rbp)
  0x0000000115e9a6db: mov    %r15,%rdi
  0x0000000115e9a6de: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a6e5: mov    %rax,0x1d8(%r15)
  0x0000000115e9a6ec: test   $0xf,%esp
  0x0000000115e9a6f2: je     0x0000000115e9a70a
  0x0000000115e9a6f8: sub    $0x8,%rsp
  0x0000000115e9a6fc: callq  0x000000010dae8608
  0x0000000115e9a701: add    $0x8,%rsp
  0x0000000115e9a705: jmpq   0x0000000115e9a70f
  0x0000000115e9a70a: callq  0x000000010dae8608
  0x0000000115e9a70f: movabs $0x0,%r10
  0x0000000115e9a719: mov    %r10,0x1d8(%r15)
  0x0000000115e9a720: movabs $0x0,%r10
  0x0000000115e9a72a: mov    %r10,0x1e8(%r15)
  0x0000000115e9a731: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a739: je     0x0000000115e9a744
  0x0000000115e9a73f: jmpq   0x0000000115e916e0
  0x0000000115e9a744: mov    -0x38(%rbp),%r13
  0x0000000115e9a748: mov    -0x30(%rbp),%r14
  0x0000000115e9a74c: retq   
  0x0000000115e9a74d: mov    -0x38(%rbp),%r13
  0x0000000115e9a751: mov    (%rsp),%eax
  0x0000000115e9a754: add    $0x8,%rsp
  0x0000000115e9a758: mov    -0x40(%rbp),%rsi
  0x0000000115e9a75c: lea    -0x40(%rbp),%rbx
  0x0000000115e9a760: jmpq   0x0000000115e9a84c
  0x0000000115e9a765: push   %rax
  0x0000000115e9a766: mov    %r13,-0x38(%rbp)
  0x0000000115e9a76a: lea    (%rsi),%rax
  0x0000000115e9a76d: mov    0x8(%rsi),%rcx
  0x0000000115e9a771: movq   $0x0,0x8(%rsi)
  0x0000000115e9a779: mov    (%rcx),%rdx
  0x0000000115e9a77c: and    $0x7,%rdx
  0x0000000115e9a780: cmp    $0x5,%rdx
  0x0000000115e9a784: je     0x0000000115e9a82a
  0x0000000115e9a78a: mov    (%rax),%rdx
  0x0000000115e9a78d: test   %rdx,%rdx
  0x0000000115e9a790: je     0x0000000115e9a82a
  0x0000000115e9a796: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a79b: je     0x0000000115e9a82a
  0x0000000115e9a7a1: mov    %rcx,0x8(%rsi)
  0x0000000115e9a7a5: callq  0x0000000115e9a7af
  0x0000000115e9a7aa: jmpq   0x0000000115e9a82a
  0x0000000115e9a7af: lea    0x8(%rsp),%rax
  0x0000000115e9a7b4: mov    %r13,-0x38(%rbp)
  0x0000000115e9a7b8: mov    %r15,%rdi
  0x0000000115e9a7bb: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a7c2: mov    %rax,0x1d8(%r15)
  0x0000000115e9a7c9: test   $0xf,%esp
  0x0000000115e9a7cf: je     0x0000000115e9a7e7
  0x0000000115e9a7d5: sub    $0x8,%rsp
  0x0000000115e9a7d9: callq  0x000000010dae8608
  0x0000000115e9a7de: add    $0x8,%rsp
  0x0000000115e9a7e2: jmpq   0x0000000115e9a7ec
  0x0000000115e9a7e7: callq  0x000000010dae8608
  0x0000000115e9a7ec: movabs $0x0,%r10
  0x0000000115e9a7f6: mov    %r10,0x1d8(%r15)
  0x0000000115e9a7fd: movabs $0x0,%r10
  0x0000000115e9a807: mov    %r10,0x1e8(%r15)
  0x0000000115e9a80e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a816: je     0x0000000115e9a821
  0x0000000115e9a81c: jmpq   0x0000000115e916e0
  0x0000000115e9a821: mov    -0x38(%rbp),%r13
  0x0000000115e9a825: mov    -0x30(%rbp),%r14
  0x0000000115e9a829: retq   
  0x0000000115e9a82a: mov    -0x38(%rbp),%r13
  0x0000000115e9a82e: mov    (%rsp),%eax
  0x0000000115e9a831: add    $0x8,%rsp
  0x0000000115e9a835: jmpq   0x0000000115e9a758
  0x0000000115e9a83a: cmpq   $0x0,0x8(%rsi)
  0x0000000115e9a842: jne    0x0000000115e9a765
  0x0000000115e9a848: add    $0x10,%rsi
  0x0000000115e9a84c: cmp    %rbx,%rsi
  0x0000000115e9a84f: jne    0x0000000115e9a83a
  0x0000000115e9a851: cmpb   $0x0,-0x7db358e(%rip)        # 0x000000010e0e72ca
  0x0000000115e9a858: je     0x0000000115e9a890
  0x0000000115e9a85e: push   %rax
  0x0000000115e9a85f: mov    -0x18(%rbp),%rsi
  0x0000000115e9a863: mov    %r15,%rdi
  0x0000000115e9a866: test   $0xf,%esp
  0x0000000115e9a86c: je     0x0000000115e9a884
  0x0000000115e9a872: sub    $0x8,%rsp
  0x0000000115e9a876: callq  0x000000010dce7696
  0x0000000115e9a87b: add    $0x8,%rsp
  0x0000000115e9a87f: jmpq   0x0000000115e9a889
  0x0000000115e9a884: callq  0x000000010dce7696
  0x0000000115e9a889: mov    (%rsp),%eax
  0x0000000115e9a88c: add    $0x8,%rsp
  0x0000000115e9a890: mov    -0x8(%rbp),%rbx
  0x0000000115e9a894: leaveq 
  0x0000000115e9a895: pop    %rsi
  0x0000000115e9a896: mov    %rbx,%rsp
  0x0000000115e9a899: jmpq   *%rsi
  0x0000000115e9a89b: mov    -0x38(%rbp),%r13
  0x0000000115e9a89f: mov    -0x30(%rbp),%r14
  0x0000000115e9a8a3: mov    -0x40(%rbp),%rsp
  0x0000000115e9a8a7: movq   $0x0,-0x10(%rbp)
  0x0000000115e9a8af: mov    0x388(%r15),%rcx
  0x0000000115e9a8b6: mov    0x78(%rcx),%eax
  0x0000000115e9a8b9: movl   $0xb,0x70(%rcx)
  0x0000000115e9a8c0: movl   $0x0,0x78(%rcx)
  0x0000000115e9a8c7: mov    0x388(%r15),%rdx
  0x0000000115e9a8ce: movl   $0x0,0x6c(%rdx)
  0x0000000115e9a8d5: mov    0x295(%r15),%dl
  0x0000000115e9a8dc: movb   $0x0,0x295(%r15)
  0x0000000115e9a8e4: mov    -0x18(%rbp),%rbx
  0x0000000115e9a8e8: mov    0x20(%rbx),%ecx
  0x0000000115e9a8eb: test   $0x20,%ecx
  0x0000000115e9a8f1: je     0x0000000115e9a9ed
  0x0000000115e9a8f7: test   $0xff,%dl
  0x0000000115e9a8fa: jne    0x0000000115e9aae6
  0x0000000115e9a900: push   %rax
  0x0000000115e9a901: lea    -0x50(%rbp),%rsi
  0x0000000115e9a905: mov    0x8(%rsi),%rax
  0x0000000115e9a909: test   %rax,%rax
  0x0000000115e9a90c: jne    0x0000000115e9a91e
  0x0000000115e9a912: mov    (%rsp),%eax
  0x0000000115e9a915: add    $0x8,%rsp
  0x0000000115e9a919: jmpq   0x0000000115e9a9ed
  0x0000000115e9a91e: mov    %r13,-0x38(%rbp)
  0x0000000115e9a922: lea    (%rsi),%rax
  0x0000000115e9a925: mov    0x8(%rsi),%rcx
  0x0000000115e9a929: movq   $0x0,0x8(%rsi)
  0x0000000115e9a931: mov    (%rcx),%rdx
  0x0000000115e9a934: and    $0x7,%rdx
  0x0000000115e9a938: cmp    $0x5,%rdx
  0x0000000115e9a93c: je     0x0000000115e9a9e2
  0x0000000115e9a942: mov    (%rax),%rdx
  0x0000000115e9a945: test   %rdx,%rdx
  0x0000000115e9a948: je     0x0000000115e9a9e2
  0x0000000115e9a94e: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9a953: je     0x0000000115e9a9e2
  0x0000000115e9a959: mov    %rcx,0x8(%rsi)
  0x0000000115e9a95d: callq  0x0000000115e9a967
  0x0000000115e9a962: jmpq   0x0000000115e9a9e2
  0x0000000115e9a967: lea    0x8(%rsp),%rax
  0x0000000115e9a96c: mov    %r13,-0x38(%rbp)
  0x0000000115e9a970: mov    %r15,%rdi
  0x0000000115e9a973: mov    %rbp,0x1e8(%r15)
  0x0000000115e9a97a: mov    %rax,0x1d8(%r15)
  0x0000000115e9a981: test   $0xf,%esp
  0x0000000115e9a987: je     0x0000000115e9a99f
  0x0000000115e9a98d: sub    $0x8,%rsp
  0x0000000115e9a991: callq  0x000000010dae8608
  0x0000000115e9a996: add    $0x8,%rsp
  0x0000000115e9a99a: jmpq   0x0000000115e9a9a4
  0x0000000115e9a99f: callq  0x000000010dae8608
  0x0000000115e9a9a4: movabs $0x0,%r10
  0x0000000115e9a9ae: mov    %r10,0x1d8(%r15)
  0x0000000115e9a9b5: movabs $0x0,%r10
  0x0000000115e9a9bf: mov    %r10,0x1e8(%r15)
  0x0000000115e9a9c6: cmpq   $0x0,0x8(%r15)
  0x0000000115e9a9ce: je     0x0000000115e9a9d9
  0x0000000115e9a9d4: jmpq   0x0000000115e916e0
  0x0000000115e9a9d9: mov    -0x38(%rbp),%r13
  0x0000000115e9a9dd: mov    -0x30(%rbp),%r14
  0x0000000115e9a9e1: retq   
  0x0000000115e9a9e2: mov    -0x38(%rbp),%r13
  0x0000000115e9a9e6: mov    (%rsp),%eax
  0x0000000115e9a9e9: add    $0x8,%rsp
  0x0000000115e9a9ed: mov    -0x40(%rbp),%rsi
  0x0000000115e9a9f1: lea    -0x40(%rbp),%rbx
  0x0000000115e9a9f5: jmpq   0x0000000115e9aae1
  0x0000000115e9a9fa: push   %rax
  0x0000000115e9a9fb: mov    %r13,-0x38(%rbp)
  0x0000000115e9a9ff: lea    (%rsi),%rax
  0x0000000115e9aa02: mov    0x8(%rsi),%rcx
  0x0000000115e9aa06: movq   $0x0,0x8(%rsi)
  0x0000000115e9aa0e: mov    (%rcx),%rdx
  0x0000000115e9aa11: and    $0x7,%rdx
  0x0000000115e9aa15: cmp    $0x5,%rdx
  0x0000000115e9aa19: je     0x0000000115e9aabf
  0x0000000115e9aa1f: mov    (%rax),%rdx
  0x0000000115e9aa22: test   %rdx,%rdx
  0x0000000115e9aa25: je     0x0000000115e9aabf
  0x0000000115e9aa2b: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9aa30: je     0x0000000115e9aabf
  0x0000000115e9aa36: mov    %rcx,0x8(%rsi)
  0x0000000115e9aa3a: callq  0x0000000115e9aa44
  0x0000000115e9aa3f: jmpq   0x0000000115e9aabf
  0x0000000115e9aa44: lea    0x8(%rsp),%rax
  0x0000000115e9aa49: mov    %r13,-0x38(%rbp)
  0x0000000115e9aa4d: mov    %r15,%rdi
  0x0000000115e9aa50: mov    %rbp,0x1e8(%r15)
  0x0000000115e9aa57: mov    %rax,0x1d8(%r15)
  0x0000000115e9aa5e: test   $0xf,%esp
  0x0000000115e9aa64: je     0x0000000115e9aa7c
  0x0000000115e9aa6a: sub    $0x8,%rsp
  0x0000000115e9aa6e: callq  0x000000010dae8608
  0x0000000115e9aa73: add    $0x8,%rsp
  0x0000000115e9aa77: jmpq   0x0000000115e9aa81
  0x0000000115e9aa7c: callq  0x000000010dae8608
  0x0000000115e9aa81: movabs $0x0,%r10
  0x0000000115e9aa8b: mov    %r10,0x1d8(%r15)
  0x0000000115e9aa92: movabs $0x0,%r10
  0x0000000115e9aa9c: mov    %r10,0x1e8(%r15)
  0x0000000115e9aaa3: cmpq   $0x0,0x8(%r15)
  0x0000000115e9aaab: je     0x0000000115e9aab6
  0x0000000115e9aab1: jmpq   0x0000000115e916e0
  0x0000000115e9aab6: mov    -0x38(%rbp),%r13
  0x0000000115e9aaba: mov    -0x30(%rbp),%r14
  0x0000000115e9aabe: retq   
  0x0000000115e9aabf: mov    -0x38(%rbp),%r13
  0x0000000115e9aac3: mov    (%rsp),%eax
  0x0000000115e9aac6: add    $0x8,%rsp
  0x0000000115e9aaca: jmpq   0x0000000115e9a9ed
  0x0000000115e9aacf: cmpq   $0x0,0x8(%rsi)
  0x0000000115e9aad7: jne    0x0000000115e9a9fa
  0x0000000115e9aadd: add    $0x10,%rsi
  0x0000000115e9aae1: cmp    %rbx,%rsi
  0x0000000115e9aae4: jne    0x0000000115e9aacf
  0x0000000115e9aae6: cmpb   $0x0,-0x7db3823(%rip)        # 0x000000010e0e72ca
  0x0000000115e9aaed: je     0x0000000115e9ab25
  0x0000000115e9aaf3: push   %rax
  0x0000000115e9aaf4: mov    -0x18(%rbp),%rsi
  0x0000000115e9aaf8: mov    %r15,%rdi
  0x0000000115e9aafb: test   $0xf,%esp
  0x0000000115e9ab01: je     0x0000000115e9ab19
  0x0000000115e9ab07: sub    $0x8,%rsp
  0x0000000115e9ab0b: callq  0x000000010dce7696
  0x0000000115e9ab10: add    $0x8,%rsp
  0x0000000115e9ab14: jmpq   0x0000000115e9ab1e
  0x0000000115e9ab19: callq  0x000000010dce7696
  0x0000000115e9ab1e: mov    (%rsp),%eax
  0x0000000115e9ab21: add    $0x8,%rsp
  0x0000000115e9ab25: mov    -0x8(%rbp),%rbx
  0x0000000115e9ab29: leaveq 
  0x0000000115e9ab2a: pop    %rsi
  0x0000000115e9ab2b: mov    %rbx,%rsp
  0x0000000115e9ab2e: jmpq   *%rsi
  0x0000000115e9ab30: mov    -0x38(%rbp),%r13
  0x0000000115e9ab34: mov    -0x30(%rbp),%r14
  0x0000000115e9ab38: mov    -0x40(%rbp),%rsp
  0x0000000115e9ab3c: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ab44: mov    0x388(%r15),%rcx
  0x0000000115e9ab4b: mov    0x78(%rcx),%eax
  0x0000000115e9ab4e: movl   $0xb,0x70(%rcx)
  0x0000000115e9ab55: movl   $0x0,0x78(%rcx)
  0x0000000115e9ab5c: mov    0x388(%r15),%rdx
  0x0000000115e9ab63: movl   $0x0,0x6c(%rdx)
  0x0000000115e9ab6a: mov    0x295(%r15),%dl
  0x0000000115e9ab71: movb   $0x0,0x295(%r15)
  0x0000000115e9ab79: mov    -0x18(%rbp),%rbx
  0x0000000115e9ab7d: mov    0x20(%rbx),%ecx
  0x0000000115e9ab80: test   $0x20,%ecx
  0x0000000115e9ab86: je     0x0000000115e9ac82
  0x0000000115e9ab8c: test   $0xff,%dl
  0x0000000115e9ab8f: jne    0x0000000115e9ad7b
  0x0000000115e9ab95: push   %rax
  0x0000000115e9ab96: lea    -0x50(%rbp),%rsi
  0x0000000115e9ab9a: mov    0x8(%rsi),%rax
  0x0000000115e9ab9e: test   %rax,%rax
  0x0000000115e9aba1: jne    0x0000000115e9abb3
  0x0000000115e9aba7: mov    (%rsp),%eax
  0x0000000115e9abaa: add    $0x8,%rsp
  0x0000000115e9abae: jmpq   0x0000000115e9ac82
  0x0000000115e9abb3: mov    %r13,-0x38(%rbp)
  0x0000000115e9abb7: lea    (%rsi),%rax
  0x0000000115e9abba: mov    0x8(%rsi),%rcx
  0x0000000115e9abbe: movq   $0x0,0x8(%rsi)
  0x0000000115e9abc6: mov    (%rcx),%rdx
  0x0000000115e9abc9: and    $0x7,%rdx
  0x0000000115e9abcd: cmp    $0x5,%rdx
  0x0000000115e9abd1: je     0x0000000115e9ac77
  0x0000000115e9abd7: mov    (%rax),%rdx
  0x0000000115e9abda: test   %rdx,%rdx
  0x0000000115e9abdd: je     0x0000000115e9ac77
  0x0000000115e9abe3: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9abe8: je     0x0000000115e9ac77
  0x0000000115e9abee: mov    %rcx,0x8(%rsi)
  0x0000000115e9abf2: callq  0x0000000115e9abfc
  0x0000000115e9abf7: jmpq   0x0000000115e9ac77
  0x0000000115e9abfc: lea    0x8(%rsp),%rax
  0x0000000115e9ac01: mov    %r13,-0x38(%rbp)
  0x0000000115e9ac05: mov    %r15,%rdi
  0x0000000115e9ac08: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ac0f: mov    %rax,0x1d8(%r15)
  0x0000000115e9ac16: test   $0xf,%esp
  0x0000000115e9ac1c: je     0x0000000115e9ac34
  0x0000000115e9ac22: sub    $0x8,%rsp
  0x0000000115e9ac26: callq  0x000000010dae8608
  0x0000000115e9ac2b: add    $0x8,%rsp
  0x0000000115e9ac2f: jmpq   0x0000000115e9ac39
  0x0000000115e9ac34: callq  0x000000010dae8608
  0x0000000115e9ac39: movabs $0x0,%r10
  0x0000000115e9ac43: mov    %r10,0x1d8(%r15)
  0x0000000115e9ac4a: movabs $0x0,%r10
  0x0000000115e9ac54: mov    %r10,0x1e8(%r15)
  0x0000000115e9ac5b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ac63: je     0x0000000115e9ac6e
  0x0000000115e9ac69: jmpq   0x0000000115e916e0
  0x0000000115e9ac6e: mov    -0x38(%rbp),%r13
  0x0000000115e9ac72: mov    -0x30(%rbp),%r14
  0x0000000115e9ac76: retq   
  0x0000000115e9ac77: mov    -0x38(%rbp),%r13
  0x0000000115e9ac7b: mov    (%rsp),%eax
  0x0000000115e9ac7e: add    $0x8,%rsp
  0x0000000115e9ac82: mov    -0x40(%rbp),%rsi
  0x0000000115e9ac86: lea    -0x40(%rbp),%rbx
  0x0000000115e9ac8a: jmpq   0x0000000115e9ad76
  0x0000000115e9ac8f: push   %rax
  0x0000000115e9ac90: mov    %r13,-0x38(%rbp)
  0x0000000115e9ac94: lea    (%rsi),%rax
  0x0000000115e9ac97: mov    0x8(%rsi),%rcx
  0x0000000115e9ac9b: movq   $0x0,0x8(%rsi)
  0x0000000115e9aca3: mov    (%rcx),%rdx
  0x0000000115e9aca6: and    $0x7,%rdx
  0x0000000115e9acaa: cmp    $0x5,%rdx
  0x0000000115e9acae: je     0x0000000115e9ad54
  0x0000000115e9acb4: mov    (%rax),%rdx
  0x0000000115e9acb7: test   %rdx,%rdx
  0x0000000115e9acba: je     0x0000000115e9ad54
  0x0000000115e9acc0: lock cmpxchg %rdx,(%rcx)
  0x0000000115e9acc5: je     0x0000000115e9ad54
  0x0000000115e9accb: mov    %rcx,0x8(%rsi)
  0x0000000115e9accf: callq  0x0000000115e9acd9
  0x0000000115e9acd4: jmpq   0x0000000115e9ad54
  0x0000000115e9acd9: lea    0x8(%rsp),%rax
  0x0000000115e9acde: mov    %r13,-0x38(%rbp)
  0x0000000115e9ace2: mov    %r15,%rdi
  0x0000000115e9ace5: mov    %rbp,0x1e8(%r15)
  0x0000000115e9acec: mov    %rax,0x1d8(%r15)
  0x0000000115e9acf3: test   $0xf,%esp
  0x0000000115e9acf9: je     0x0000000115e9ad11
  0x0000000115e9acff: sub    $0x8,%rsp
  0x0000000115e9ad03: callq  0x000000010dae8608
  0x0000000115e9ad08: add    $0x8,%rsp
  0x0000000115e9ad0c: jmpq   0x0000000115e9ad16
  0x0000000115e9ad11: callq  0x000000010dae8608
  0x0000000115e9ad16: movabs $0x0,%r10
  0x0000000115e9ad20: mov    %r10,0x1d8(%r15)
  0x0000000115e9ad27: movabs $0x0,%r10
  0x0000000115e9ad31: mov    %r10,0x1e8(%r15)
  0x0000000115e9ad38: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ad40: je     0x0000000115e9ad4b
  0x0000000115e9ad46: jmpq   0x0000000115e916e0
  0x0000000115e9ad4b: mov    -0x38(%rbp),%r13
  0x0000000115e9ad4f: mov    -0x30(%rbp),%r14
  0x0000000115e9ad53: retq   
  0x0000000115e9ad54: mov    -0x38(%rbp),%r13
  0x0000000115e9ad58: mov    (%rsp),%eax
  0x0000000115e9ad5b: add    $0x8,%rsp
  0x0000000115e9ad5f: jmpq   0x0000000115e9ac82
  0x0000000115e9ad64: cmpq   $0x0,0x8(%rsi)
  0x0000000115e9ad6c: jne    0x0000000115e9ac8f
  0x0000000115e9ad72: add    $0x10,%rsi
  0x0000000115e9ad76: cmp    %rbx,%rsi
  0x0000000115e9ad79: jne    0x0000000115e9ad64
  0x0000000115e9ad7b: cmpb   $0x0,-0x7db3ab8(%rip)        # 0x000000010e0e72ca
  0x0000000115e9ad82: je     0x0000000115e9adba
  0x0000000115e9ad88: push   %rax
  0x0000000115e9ad89: mov    -0x18(%rbp),%rsi
  0x0000000115e9ad8d: mov    %r15,%rdi
  0x0000000115e9ad90: test   $0xf,%esp
  0x0000000115e9ad96: je     0x0000000115e9adae
  0x0000000115e9ad9c: sub    $0x8,%rsp
  0x0000000115e9ada0: callq  0x000000010dce7696
  0x0000000115e9ada5: add    $0x8,%rsp
  0x0000000115e9ada9: jmpq   0x0000000115e9adb3
  0x0000000115e9adae: callq  0x000000010dce7696
  0x0000000115e9adb3: mov    (%rsp),%eax
  0x0000000115e9adb6: add    $0x8,%rsp
  0x0000000115e9adba: mov    -0x8(%rbp),%rbx
  0x0000000115e9adbe: leaveq 
  0x0000000115e9adbf: pop    %rsi
  0x0000000115e9adc0: mov    %rbx,%rsp
  0x0000000115e9adc3: jmpq   *%rsi
  0x0000000115e9adc5: data32 xchg %ax,%ax
  0x0000000115e9adc8: add    %al,(%rax)
  0x0000000115e9adca: add    %al,(%rax)
  0x0000000115e9adcc: add    %al,(%rax)
  0x0000000115e9adce: add    %al,(%rax)
  0x0000000115e9add0: add    %al,(%rax)
  0x0000000115e9add2: add    %al,(%rax)
  0x0000000115e9add4: add    %al,(%rax)
  0x0000000115e9add6: add    %al,(%rax)
  0x0000000115e9add8: add    %al,(%rax)
  0x0000000115e9adda: add    %al,(%rax)
  0x0000000115e9addc: add    %al,(%rax)
  0x0000000115e9adde: add    %al,(%rax)

----------------------------------------------------------------------
deoptimization entry points  [0x0000000115e9ae00, 0x0000000115ea2500]  30464 bytes

  0x0000000115e9ae00: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ae08: mov    -0x38(%rbp),%r13
  0x0000000115e9ae0c: mov    -0x30(%rbp),%r14
  0x0000000115e9ae10: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ae18: je     0x0000000115e9af1a
  0x0000000115e9ae1e: callq  0x0000000115e9ae28
  0x0000000115e9ae23: jmpq   0x0000000115e9aea3
  0x0000000115e9ae28: lea    0x8(%rsp),%rax
  0x0000000115e9ae2d: mov    %r13,-0x38(%rbp)
  0x0000000115e9ae31: mov    %r15,%rdi
  0x0000000115e9ae34: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ae3b: mov    %rax,0x1d8(%r15)
  0x0000000115e9ae42: test   $0xf,%esp
  0x0000000115e9ae48: je     0x0000000115e9ae60
  0x0000000115e9ae4e: sub    $0x8,%rsp
  0x0000000115e9ae52: callq  0x000000010dae5ebc
  0x0000000115e9ae57: add    $0x8,%rsp
  0x0000000115e9ae5b: jmpq   0x0000000115e9ae65
  0x0000000115e9ae60: callq  0x000000010dae5ebc
  0x0000000115e9ae65: movabs $0x0,%r10
  0x0000000115e9ae6f: mov    %r10,0x1d8(%r15)
  0x0000000115e9ae76: movabs $0x0,%r10
  0x0000000115e9ae80: mov    %r10,0x1e8(%r15)
  0x0000000115e9ae87: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ae8f: je     0x0000000115e9ae9a
  0x0000000115e9ae95: jmpq   0x0000000115e916e0
  0x0000000115e9ae9a: mov    -0x38(%rbp),%r13
  0x0000000115e9ae9e: mov    -0x30(%rbp),%r14
  0x0000000115e9aea2: retq   
  0x0000000115e9aea3: mov    %rsp,-0x28(%rsp)
  0x0000000115e9aea8: sub    $0x80,%rsp
  0x0000000115e9aeaf: mov    %rax,0x78(%rsp)
  0x0000000115e9aeb4: mov    %rcx,0x70(%rsp)
  0x0000000115e9aeb9: mov    %rdx,0x68(%rsp)
  0x0000000115e9aebe: mov    %rbx,0x60(%rsp)
  0x0000000115e9aec3: mov    %rbp,0x50(%rsp)
  0x0000000115e9aec8: mov    %rsi,0x48(%rsp)
  0x0000000115e9aecd: mov    %rdi,0x40(%rsp)
  0x0000000115e9aed2: mov    %r8,0x38(%rsp)
  0x0000000115e9aed7: mov    %r9,0x30(%rsp)
  0x0000000115e9aedc: mov    %r10,0x28(%rsp)
  0x0000000115e9aee1: mov    %r11,0x20(%rsp)
  0x0000000115e9aee6: mov    %r12,0x18(%rsp)
  0x0000000115e9aeeb: mov    %r13,0x10(%rsp)
  0x0000000115e9aef0: mov    %r14,0x8(%rsp)
  0x0000000115e9aef5: mov    %r15,(%rsp)
  0x0000000115e9aef9: movabs $0x10ddd8000,%rdi
  0x0000000115e9af03: movabs $0x115e9aea3,%rsi
  0x0000000115e9af0d: mov    %rsp,%rdx
  0x0000000115e9af10: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9af14: callq  0x000000010dc0341e
  0x0000000115e9af19: hlt    
  0x0000000115e9af1a: movzbl 0x0(%r13),%ebx
  0x0000000115e9af1f: movabs $0x10e101840,%r10
  0x0000000115e9af29: jmpq   *(%r10,%rbx,8)
  0x0000000115e9af2d: movq   $0x0,-0x10(%rbp)
  0x0000000115e9af35: mov    -0x38(%rbp),%r13
  0x0000000115e9af39: mov    -0x30(%rbp),%r14
  0x0000000115e9af3d: cmpq   $0x0,0x8(%r15)
  0x0000000115e9af45: je     0x0000000115e9b047
  0x0000000115e9af4b: callq  0x0000000115e9af55
  0x0000000115e9af50: jmpq   0x0000000115e9afd0
  0x0000000115e9af55: lea    0x8(%rsp),%rax
  0x0000000115e9af5a: mov    %r13,-0x38(%rbp)
  0x0000000115e9af5e: mov    %r15,%rdi
  0x0000000115e9af61: mov    %rbp,0x1e8(%r15)
  0x0000000115e9af68: mov    %rax,0x1d8(%r15)
  0x0000000115e9af6f: test   $0xf,%esp
  0x0000000115e9af75: je     0x0000000115e9af8d
  0x0000000115e9af7b: sub    $0x8,%rsp
  0x0000000115e9af7f: callq  0x000000010dae5ebc
  0x0000000115e9af84: add    $0x8,%rsp
  0x0000000115e9af88: jmpq   0x0000000115e9af92
  0x0000000115e9af8d: callq  0x000000010dae5ebc
  0x0000000115e9af92: movabs $0x0,%r10
  0x0000000115e9af9c: mov    %r10,0x1d8(%r15)
  0x0000000115e9afa3: movabs $0x0,%r10
  0x0000000115e9afad: mov    %r10,0x1e8(%r15)
  0x0000000115e9afb4: cmpq   $0x0,0x8(%r15)
  0x0000000115e9afbc: je     0x0000000115e9afc7
  0x0000000115e9afc2: jmpq   0x0000000115e916e0
  0x0000000115e9afc7: mov    -0x38(%rbp),%r13
  0x0000000115e9afcb: mov    -0x30(%rbp),%r14
  0x0000000115e9afcf: retq   
  0x0000000115e9afd0: mov    %rsp,-0x28(%rsp)
  0x0000000115e9afd5: sub    $0x80,%rsp
  0x0000000115e9afdc: mov    %rax,0x78(%rsp)
  0x0000000115e9afe1: mov    %rcx,0x70(%rsp)
  0x0000000115e9afe6: mov    %rdx,0x68(%rsp)
  0x0000000115e9afeb: mov    %rbx,0x60(%rsp)
  0x0000000115e9aff0: mov    %rbp,0x50(%rsp)
  0x0000000115e9aff5: mov    %rsi,0x48(%rsp)
  0x0000000115e9affa: mov    %rdi,0x40(%rsp)
  0x0000000115e9afff: mov    %r8,0x38(%rsp)
  0x0000000115e9b004: mov    %r9,0x30(%rsp)
  0x0000000115e9b009: mov    %r10,0x28(%rsp)
  0x0000000115e9b00e: mov    %r11,0x20(%rsp)
  0x0000000115e9b013: mov    %r12,0x18(%rsp)
  0x0000000115e9b018: mov    %r13,0x10(%rsp)
  0x0000000115e9b01d: mov    %r14,0x8(%rsp)
  0x0000000115e9b022: mov    %r15,(%rsp)
  0x0000000115e9b026: movabs $0x10ddd8000,%rdi
  0x0000000115e9b030: movabs $0x115e9afd0,%rsi
  0x0000000115e9b03a: mov    %rsp,%rdx
  0x0000000115e9b03d: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b041: callq  0x000000010dc0341e
  0x0000000115e9b046: hlt    
  0x0000000115e9b047: movzbl 0x0(%r13),%ebx
  0x0000000115e9b04c: movabs $0x10e100840,%r10
  0x0000000115e9b056: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b05a: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b062: mov    -0x38(%rbp),%r13
  0x0000000115e9b066: mov    -0x30(%rbp),%r14
  0x0000000115e9b06a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b072: je     0x0000000115e9b174
  0x0000000115e9b078: callq  0x0000000115e9b082
  0x0000000115e9b07d: jmpq   0x0000000115e9b0fd
  0x0000000115e9b082: lea    0x8(%rsp),%rax
  0x0000000115e9b087: mov    %r13,-0x38(%rbp)
  0x0000000115e9b08b: mov    %r15,%rdi
  0x0000000115e9b08e: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b095: mov    %rax,0x1d8(%r15)
  0x0000000115e9b09c: test   $0xf,%esp
  0x0000000115e9b0a2: je     0x0000000115e9b0ba
  0x0000000115e9b0a8: sub    $0x8,%rsp
  0x0000000115e9b0ac: callq  0x000000010dae5ebc
  0x0000000115e9b0b1: add    $0x8,%rsp
  0x0000000115e9b0b5: jmpq   0x0000000115e9b0bf
  0x0000000115e9b0ba: callq  0x000000010dae5ebc
  0x0000000115e9b0bf: movabs $0x0,%r10
  0x0000000115e9b0c9: mov    %r10,0x1d8(%r15)
  0x0000000115e9b0d0: movabs $0x0,%r10
  0x0000000115e9b0da: mov    %r10,0x1e8(%r15)
  0x0000000115e9b0e1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b0e9: je     0x0000000115e9b0f4
  0x0000000115e9b0ef: jmpq   0x0000000115e916e0
  0x0000000115e9b0f4: mov    -0x38(%rbp),%r13
  0x0000000115e9b0f8: mov    -0x30(%rbp),%r14
  0x0000000115e9b0fc: retq   
  0x0000000115e9b0fd: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b102: sub    $0x80,%rsp
  0x0000000115e9b109: mov    %rax,0x78(%rsp)
  0x0000000115e9b10e: mov    %rcx,0x70(%rsp)
  0x0000000115e9b113: mov    %rdx,0x68(%rsp)
  0x0000000115e9b118: mov    %rbx,0x60(%rsp)
  0x0000000115e9b11d: mov    %rbp,0x50(%rsp)
  0x0000000115e9b122: mov    %rsi,0x48(%rsp)
  0x0000000115e9b127: mov    %rdi,0x40(%rsp)
  0x0000000115e9b12c: mov    %r8,0x38(%rsp)
  0x0000000115e9b131: mov    %r9,0x30(%rsp)
  0x0000000115e9b136: mov    %r10,0x28(%rsp)
  0x0000000115e9b13b: mov    %r11,0x20(%rsp)
  0x0000000115e9b140: mov    %r12,0x18(%rsp)
  0x0000000115e9b145: mov    %r13,0x10(%rsp)
  0x0000000115e9b14a: mov    %r14,0x8(%rsp)
  0x0000000115e9b14f: mov    %r15,(%rsp)
  0x0000000115e9b153: movabs $0x10ddd8000,%rdi
  0x0000000115e9b15d: movabs $0x115e9b0fd,%rsi
  0x0000000115e9b167: mov    %rsp,%rdx
  0x0000000115e9b16a: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b16e: callq  0x000000010dc0341e
  0x0000000115e9b173: hlt    
  0x0000000115e9b174: movzbl 0x0(%r13),%ebx
  0x0000000115e9b179: movabs $0x10e100040,%r10
  0x0000000115e9b183: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b187: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b18f: mov    -0x38(%rbp),%r13
  0x0000000115e9b193: mov    -0x30(%rbp),%r14
  0x0000000115e9b197: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b19f: je     0x0000000115e9b2a1
  0x0000000115e9b1a5: callq  0x0000000115e9b1af
  0x0000000115e9b1aa: jmpq   0x0000000115e9b22a
  0x0000000115e9b1af: lea    0x8(%rsp),%rax
  0x0000000115e9b1b4: mov    %r13,-0x38(%rbp)
  0x0000000115e9b1b8: mov    %r15,%rdi
  0x0000000115e9b1bb: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b1c2: mov    %rax,0x1d8(%r15)
  0x0000000115e9b1c9: test   $0xf,%esp
  0x0000000115e9b1cf: je     0x0000000115e9b1e7
  0x0000000115e9b1d5: sub    $0x8,%rsp
  0x0000000115e9b1d9: callq  0x000000010dae5ebc
  0x0000000115e9b1de: add    $0x8,%rsp
  0x0000000115e9b1e2: jmpq   0x0000000115e9b1ec
  0x0000000115e9b1e7: callq  0x000000010dae5ebc
  0x0000000115e9b1ec: movabs $0x0,%r10
  0x0000000115e9b1f6: mov    %r10,0x1d8(%r15)
  0x0000000115e9b1fd: movabs $0x0,%r10
  0x0000000115e9b207: mov    %r10,0x1e8(%r15)
  0x0000000115e9b20e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b216: je     0x0000000115e9b221
  0x0000000115e9b21c: jmpq   0x0000000115e916e0
  0x0000000115e9b221: mov    -0x38(%rbp),%r13
  0x0000000115e9b225: mov    -0x30(%rbp),%r14
  0x0000000115e9b229: retq   
  0x0000000115e9b22a: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b22f: sub    $0x80,%rsp
  0x0000000115e9b236: mov    %rax,0x78(%rsp)
  0x0000000115e9b23b: mov    %rcx,0x70(%rsp)
  0x0000000115e9b240: mov    %rdx,0x68(%rsp)
  0x0000000115e9b245: mov    %rbx,0x60(%rsp)
  0x0000000115e9b24a: mov    %rbp,0x50(%rsp)
  0x0000000115e9b24f: mov    %rsi,0x48(%rsp)
  0x0000000115e9b254: mov    %rdi,0x40(%rsp)
  0x0000000115e9b259: mov    %r8,0x38(%rsp)
  0x0000000115e9b25e: mov    %r9,0x30(%rsp)
  0x0000000115e9b263: mov    %r10,0x28(%rsp)
  0x0000000115e9b268: mov    %r11,0x20(%rsp)
  0x0000000115e9b26d: mov    %r12,0x18(%rsp)
  0x0000000115e9b272: mov    %r13,0x10(%rsp)
  0x0000000115e9b277: mov    %r14,0x8(%rsp)
  0x0000000115e9b27c: mov    %r15,(%rsp)
  0x0000000115e9b280: movabs $0x10ddd8000,%rdi
  0x0000000115e9b28a: movabs $0x115e9b22a,%rsi
  0x0000000115e9b294: mov    %rsp,%rdx
  0x0000000115e9b297: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b29b: callq  0x000000010dc0341e
  0x0000000115e9b2a0: hlt    
  0x0000000115e9b2a1: movzbl 0x0(%r13),%ebx
  0x0000000115e9b2a6: movabs $0x10e0ff840,%r10
  0x0000000115e9b2b0: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b2b4: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b2bc: mov    -0x38(%rbp),%r13
  0x0000000115e9b2c0: mov    -0x30(%rbp),%r14
  0x0000000115e9b2c4: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b2cc: je     0x0000000115e9b3ce
  0x0000000115e9b2d2: callq  0x0000000115e9b2dc
  0x0000000115e9b2d7: jmpq   0x0000000115e9b357
  0x0000000115e9b2dc: lea    0x8(%rsp),%rax
  0x0000000115e9b2e1: mov    %r13,-0x38(%rbp)
  0x0000000115e9b2e5: mov    %r15,%rdi
  0x0000000115e9b2e8: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b2ef: mov    %rax,0x1d8(%r15)
  0x0000000115e9b2f6: test   $0xf,%esp
  0x0000000115e9b2fc: je     0x0000000115e9b314
  0x0000000115e9b302: sub    $0x8,%rsp
  0x0000000115e9b306: callq  0x000000010dae5ebc
  0x0000000115e9b30b: add    $0x8,%rsp
  0x0000000115e9b30f: jmpq   0x0000000115e9b319
  0x0000000115e9b314: callq  0x000000010dae5ebc
  0x0000000115e9b319: movabs $0x0,%r10
  0x0000000115e9b323: mov    %r10,0x1d8(%r15)
  0x0000000115e9b32a: movabs $0x0,%r10
  0x0000000115e9b334: mov    %r10,0x1e8(%r15)
  0x0000000115e9b33b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b343: je     0x0000000115e9b34e
  0x0000000115e9b349: jmpq   0x0000000115e916e0
  0x0000000115e9b34e: mov    -0x38(%rbp),%r13
  0x0000000115e9b352: mov    -0x30(%rbp),%r14
  0x0000000115e9b356: retq   
  0x0000000115e9b357: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b35c: sub    $0x80,%rsp
  0x0000000115e9b363: mov    %rax,0x78(%rsp)
  0x0000000115e9b368: mov    %rcx,0x70(%rsp)
  0x0000000115e9b36d: mov    %rdx,0x68(%rsp)
  0x0000000115e9b372: mov    %rbx,0x60(%rsp)
  0x0000000115e9b377: mov    %rbp,0x50(%rsp)
  0x0000000115e9b37c: mov    %rsi,0x48(%rsp)
  0x0000000115e9b381: mov    %rdi,0x40(%rsp)
  0x0000000115e9b386: mov    %r8,0x38(%rsp)
  0x0000000115e9b38b: mov    %r9,0x30(%rsp)
  0x0000000115e9b390: mov    %r10,0x28(%rsp)
  0x0000000115e9b395: mov    %r11,0x20(%rsp)
  0x0000000115e9b39a: mov    %r12,0x18(%rsp)
  0x0000000115e9b39f: mov    %r13,0x10(%rsp)
  0x0000000115e9b3a4: mov    %r14,0x8(%rsp)
  0x0000000115e9b3a9: mov    %r15,(%rsp)
  0x0000000115e9b3ad: movabs $0x10ddd8000,%rdi
  0x0000000115e9b3b7: movabs $0x115e9b357,%rsi
  0x0000000115e9b3c1: mov    %rsp,%rdx
  0x0000000115e9b3c4: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b3c8: callq  0x000000010dc0341e
  0x0000000115e9b3cd: hlt    
  0x0000000115e9b3ce: movzbl 0x0(%r13),%ebx
  0x0000000115e9b3d3: movabs $0x10e0ff040,%r10
  0x0000000115e9b3dd: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b3e1: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b3e9: mov    -0x38(%rbp),%r13
  0x0000000115e9b3ed: mov    -0x30(%rbp),%r14
  0x0000000115e9b3f1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b3f9: je     0x0000000115e9b4fb
  0x0000000115e9b3ff: callq  0x0000000115e9b409
  0x0000000115e9b404: jmpq   0x0000000115e9b484
  0x0000000115e9b409: lea    0x8(%rsp),%rax
  0x0000000115e9b40e: mov    %r13,-0x38(%rbp)
  0x0000000115e9b412: mov    %r15,%rdi
  0x0000000115e9b415: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b41c: mov    %rax,0x1d8(%r15)
  0x0000000115e9b423: test   $0xf,%esp
  0x0000000115e9b429: je     0x0000000115e9b441
  0x0000000115e9b42f: sub    $0x8,%rsp
  0x0000000115e9b433: callq  0x000000010dae5ebc
  0x0000000115e9b438: add    $0x8,%rsp
  0x0000000115e9b43c: jmpq   0x0000000115e9b446
  0x0000000115e9b441: callq  0x000000010dae5ebc
  0x0000000115e9b446: movabs $0x0,%r10
  0x0000000115e9b450: mov    %r10,0x1d8(%r15)
  0x0000000115e9b457: movabs $0x0,%r10
  0x0000000115e9b461: mov    %r10,0x1e8(%r15)
  0x0000000115e9b468: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b470: je     0x0000000115e9b47b
  0x0000000115e9b476: jmpq   0x0000000115e916e0
  0x0000000115e9b47b: mov    -0x38(%rbp),%r13
  0x0000000115e9b47f: mov    -0x30(%rbp),%r14
  0x0000000115e9b483: retq   
  0x0000000115e9b484: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b489: sub    $0x80,%rsp
  0x0000000115e9b490: mov    %rax,0x78(%rsp)
  0x0000000115e9b495: mov    %rcx,0x70(%rsp)
  0x0000000115e9b49a: mov    %rdx,0x68(%rsp)
  0x0000000115e9b49f: mov    %rbx,0x60(%rsp)
  0x0000000115e9b4a4: mov    %rbp,0x50(%rsp)
  0x0000000115e9b4a9: mov    %rsi,0x48(%rsp)
  0x0000000115e9b4ae: mov    %rdi,0x40(%rsp)
  0x0000000115e9b4b3: mov    %r8,0x38(%rsp)
  0x0000000115e9b4b8: mov    %r9,0x30(%rsp)
  0x0000000115e9b4bd: mov    %r10,0x28(%rsp)
  0x0000000115e9b4c2: mov    %r11,0x20(%rsp)
  0x0000000115e9b4c7: mov    %r12,0x18(%rsp)
  0x0000000115e9b4cc: mov    %r13,0x10(%rsp)
  0x0000000115e9b4d1: mov    %r14,0x8(%rsp)
  0x0000000115e9b4d6: mov    %r15,(%rsp)
  0x0000000115e9b4da: movabs $0x10ddd8000,%rdi
  0x0000000115e9b4e4: movabs $0x115e9b484,%rsi
  0x0000000115e9b4ee: mov    %rsp,%rdx
  0x0000000115e9b4f1: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b4f5: callq  0x000000010dc0341e
  0x0000000115e9b4fa: hlt    
  0x0000000115e9b4fb: movzbl 0x0(%r13),%ebx
  0x0000000115e9b500: movabs $0x10e101040,%r10
  0x0000000115e9b50a: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b50e: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b516: mov    -0x38(%rbp),%r13
  0x0000000115e9b51a: mov    -0x30(%rbp),%r14
  0x0000000115e9b51e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b526: je     0x0000000115e9b628
  0x0000000115e9b52c: callq  0x0000000115e9b536
  0x0000000115e9b531: jmpq   0x0000000115e9b5b1
  0x0000000115e9b536: lea    0x8(%rsp),%rax
  0x0000000115e9b53b: mov    %r13,-0x38(%rbp)
  0x0000000115e9b53f: mov    %r15,%rdi
  0x0000000115e9b542: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b549: mov    %rax,0x1d8(%r15)
  0x0000000115e9b550: test   $0xf,%esp
  0x0000000115e9b556: je     0x0000000115e9b56e
  0x0000000115e9b55c: sub    $0x8,%rsp
  0x0000000115e9b560: callq  0x000000010dae5ebc
  0x0000000115e9b565: add    $0x8,%rsp
  0x0000000115e9b569: jmpq   0x0000000115e9b573
  0x0000000115e9b56e: callq  0x000000010dae5ebc
  0x0000000115e9b573: movabs $0x0,%r10
  0x0000000115e9b57d: mov    %r10,0x1d8(%r15)
  0x0000000115e9b584: movabs $0x0,%r10
  0x0000000115e9b58e: mov    %r10,0x1e8(%r15)
  0x0000000115e9b595: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b59d: je     0x0000000115e9b5a8
  0x0000000115e9b5a3: jmpq   0x0000000115e916e0
  0x0000000115e9b5a8: mov    -0x38(%rbp),%r13
  0x0000000115e9b5ac: mov    -0x30(%rbp),%r14
  0x0000000115e9b5b0: retq   
  0x0000000115e9b5b1: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b5b6: sub    $0x80,%rsp
  0x0000000115e9b5bd: mov    %rax,0x78(%rsp)
  0x0000000115e9b5c2: mov    %rcx,0x70(%rsp)
  0x0000000115e9b5c7: mov    %rdx,0x68(%rsp)
  0x0000000115e9b5cc: mov    %rbx,0x60(%rsp)
  0x0000000115e9b5d1: mov    %rbp,0x50(%rsp)
  0x0000000115e9b5d6: mov    %rsi,0x48(%rsp)
  0x0000000115e9b5db: mov    %rdi,0x40(%rsp)
  0x0000000115e9b5e0: mov    %r8,0x38(%rsp)
  0x0000000115e9b5e5: mov    %r9,0x30(%rsp)
  0x0000000115e9b5ea: mov    %r10,0x28(%rsp)
  0x0000000115e9b5ef: mov    %r11,0x20(%rsp)
  0x0000000115e9b5f4: mov    %r12,0x18(%rsp)
  0x0000000115e9b5f9: mov    %r13,0x10(%rsp)
  0x0000000115e9b5fe: mov    %r14,0x8(%rsp)
  0x0000000115e9b603: mov    %r15,(%rsp)
  0x0000000115e9b607: movabs $0x10ddd8000,%rdi
  0x0000000115e9b611: movabs $0x115e9b5b1,%rsi
  0x0000000115e9b61b: mov    %rsp,%rdx
  0x0000000115e9b61e: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b622: callq  0x000000010dc0341e
  0x0000000115e9b627: hlt    
  0x0000000115e9b628: movzbl 0x0(%r13),%ebx
  0x0000000115e9b62d: movabs $0x10e0ff040,%r10
  0x0000000115e9b637: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b63b: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b643: mov    -0x38(%rbp),%r13
  0x0000000115e9b647: mov    -0x30(%rbp),%r14
  0x0000000115e9b64b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b653: je     0x0000000115e9b755
  0x0000000115e9b659: callq  0x0000000115e9b663
  0x0000000115e9b65e: jmpq   0x0000000115e9b6de
  0x0000000115e9b663: lea    0x8(%rsp),%rax
  0x0000000115e9b668: mov    %r13,-0x38(%rbp)
  0x0000000115e9b66c: mov    %r15,%rdi
  0x0000000115e9b66f: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b676: mov    %rax,0x1d8(%r15)
  0x0000000115e9b67d: test   $0xf,%esp
  0x0000000115e9b683: je     0x0000000115e9b69b
  0x0000000115e9b689: sub    $0x8,%rsp
  0x0000000115e9b68d: callq  0x000000010dae5ebc
  0x0000000115e9b692: add    $0x8,%rsp
  0x0000000115e9b696: jmpq   0x0000000115e9b6a0
  0x0000000115e9b69b: callq  0x000000010dae5ebc
  0x0000000115e9b6a0: movabs $0x0,%r10
  0x0000000115e9b6aa: mov    %r10,0x1d8(%r15)
  0x0000000115e9b6b1: movabs $0x0,%r10
  0x0000000115e9b6bb: mov    %r10,0x1e8(%r15)
  0x0000000115e9b6c2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b6ca: je     0x0000000115e9b6d5
  0x0000000115e9b6d0: jmpq   0x0000000115e916e0
  0x0000000115e9b6d5: mov    -0x38(%rbp),%r13
  0x0000000115e9b6d9: mov    -0x30(%rbp),%r14
  0x0000000115e9b6dd: retq   
  0x0000000115e9b6de: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b6e3: sub    $0x80,%rsp
  0x0000000115e9b6ea: mov    %rax,0x78(%rsp)
  0x0000000115e9b6ef: mov    %rcx,0x70(%rsp)
  0x0000000115e9b6f4: mov    %rdx,0x68(%rsp)
  0x0000000115e9b6f9: mov    %rbx,0x60(%rsp)
  0x0000000115e9b6fe: mov    %rbp,0x50(%rsp)
  0x0000000115e9b703: mov    %rsi,0x48(%rsp)
  0x0000000115e9b708: mov    %rdi,0x40(%rsp)
  0x0000000115e9b70d: mov    %r8,0x38(%rsp)
  0x0000000115e9b712: mov    %r9,0x30(%rsp)
  0x0000000115e9b717: mov    %r10,0x28(%rsp)
  0x0000000115e9b71c: mov    %r11,0x20(%rsp)
  0x0000000115e9b721: mov    %r12,0x18(%rsp)
  0x0000000115e9b726: mov    %r13,0x10(%rsp)
  0x0000000115e9b72b: mov    %r14,0x8(%rsp)
  0x0000000115e9b730: mov    %r15,(%rsp)
  0x0000000115e9b734: movabs $0x10ddd8000,%rdi
  0x0000000115e9b73e: movabs $0x115e9b6de,%rsi
  0x0000000115e9b748: mov    %rsp,%rdx
  0x0000000115e9b74b: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b74f: callq  0x000000010dc0341e
  0x0000000115e9b754: hlt    
  0x0000000115e9b755: movzbl 0x0(%r13),%ebx
  0x0000000115e9b75a: movabs $0x10e0ff040,%r10
  0x0000000115e9b764: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b768: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b770: mov    -0x38(%rbp),%r13
  0x0000000115e9b774: mov    -0x30(%rbp),%r14
  0x0000000115e9b778: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b780: je     0x0000000115e9b882
  0x0000000115e9b786: callq  0x0000000115e9b790
  0x0000000115e9b78b: jmpq   0x0000000115e9b80b
  0x0000000115e9b790: lea    0x8(%rsp),%rax
  0x0000000115e9b795: mov    %r13,-0x38(%rbp)
  0x0000000115e9b799: mov    %r15,%rdi
  0x0000000115e9b79c: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b7a3: mov    %rax,0x1d8(%r15)
  0x0000000115e9b7aa: test   $0xf,%esp
  0x0000000115e9b7b0: je     0x0000000115e9b7c8
  0x0000000115e9b7b6: sub    $0x8,%rsp
  0x0000000115e9b7ba: callq  0x000000010dae5ebc
  0x0000000115e9b7bf: add    $0x8,%rsp
  0x0000000115e9b7c3: jmpq   0x0000000115e9b7cd
  0x0000000115e9b7c8: callq  0x000000010dae5ebc
  0x0000000115e9b7cd: movabs $0x0,%r10
  0x0000000115e9b7d7: mov    %r10,0x1d8(%r15)
  0x0000000115e9b7de: movabs $0x0,%r10
  0x0000000115e9b7e8: mov    %r10,0x1e8(%r15)
  0x0000000115e9b7ef: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b7f7: je     0x0000000115e9b802
  0x0000000115e9b7fd: jmpq   0x0000000115e916e0
  0x0000000115e9b802: mov    -0x38(%rbp),%r13
  0x0000000115e9b806: mov    -0x30(%rbp),%r14
  0x0000000115e9b80a: retq   
  0x0000000115e9b80b: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b810: sub    $0x80,%rsp
  0x0000000115e9b817: mov    %rax,0x78(%rsp)
  0x0000000115e9b81c: mov    %rcx,0x70(%rsp)
  0x0000000115e9b821: mov    %rdx,0x68(%rsp)
  0x0000000115e9b826: mov    %rbx,0x60(%rsp)
  0x0000000115e9b82b: mov    %rbp,0x50(%rsp)
  0x0000000115e9b830: mov    %rsi,0x48(%rsp)
  0x0000000115e9b835: mov    %rdi,0x40(%rsp)
  0x0000000115e9b83a: mov    %r8,0x38(%rsp)
  0x0000000115e9b83f: mov    %r9,0x30(%rsp)
  0x0000000115e9b844: mov    %r10,0x28(%rsp)
  0x0000000115e9b849: mov    %r11,0x20(%rsp)
  0x0000000115e9b84e: mov    %r12,0x18(%rsp)
  0x0000000115e9b853: mov    %r13,0x10(%rsp)
  0x0000000115e9b858: mov    %r14,0x8(%rsp)
  0x0000000115e9b85d: mov    %r15,(%rsp)
  0x0000000115e9b861: movabs $0x10ddd8000,%rdi
  0x0000000115e9b86b: movabs $0x115e9b80b,%rsi
  0x0000000115e9b875: mov    %rsp,%rdx
  0x0000000115e9b878: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b87c: callq  0x000000010dc0341e
  0x0000000115e9b881: hlt    
  0x0000000115e9b882: movzbl 0x0(%r13),%ebx
  0x0000000115e9b887: movabs $0x10e0ff040,%r10
  0x0000000115e9b891: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b895: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b89d: mov    -0x38(%rbp),%r13
  0x0000000115e9b8a1: mov    -0x30(%rbp),%r14
  0x0000000115e9b8a5: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b8ad: je     0x0000000115e9b9af
  0x0000000115e9b8b3: callq  0x0000000115e9b8bd
  0x0000000115e9b8b8: jmpq   0x0000000115e9b938
  0x0000000115e9b8bd: lea    0x8(%rsp),%rax
  0x0000000115e9b8c2: mov    %r13,-0x38(%rbp)
  0x0000000115e9b8c6: mov    %r15,%rdi
  0x0000000115e9b8c9: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b8d0: mov    %rax,0x1d8(%r15)
  0x0000000115e9b8d7: test   $0xf,%esp
  0x0000000115e9b8dd: je     0x0000000115e9b8f5
  0x0000000115e9b8e3: sub    $0x8,%rsp
  0x0000000115e9b8e7: callq  0x000000010dae5ebc
  0x0000000115e9b8ec: add    $0x8,%rsp
  0x0000000115e9b8f0: jmpq   0x0000000115e9b8fa
  0x0000000115e9b8f5: callq  0x000000010dae5ebc
  0x0000000115e9b8fa: movabs $0x0,%r10
  0x0000000115e9b904: mov    %r10,0x1d8(%r15)
  0x0000000115e9b90b: movabs $0x0,%r10
  0x0000000115e9b915: mov    %r10,0x1e8(%r15)
  0x0000000115e9b91c: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b924: je     0x0000000115e9b92f
  0x0000000115e9b92a: jmpq   0x0000000115e916e0
  0x0000000115e9b92f: mov    -0x38(%rbp),%r13
  0x0000000115e9b933: mov    -0x30(%rbp),%r14
  0x0000000115e9b937: retq   
  0x0000000115e9b938: mov    %rsp,-0x28(%rsp)
  0x0000000115e9b93d: sub    $0x80,%rsp
  0x0000000115e9b944: mov    %rax,0x78(%rsp)
  0x0000000115e9b949: mov    %rcx,0x70(%rsp)
  0x0000000115e9b94e: mov    %rdx,0x68(%rsp)
  0x0000000115e9b953: mov    %rbx,0x60(%rsp)
  0x0000000115e9b958: mov    %rbp,0x50(%rsp)
  0x0000000115e9b95d: mov    %rsi,0x48(%rsp)
  0x0000000115e9b962: mov    %rdi,0x40(%rsp)
  0x0000000115e9b967: mov    %r8,0x38(%rsp)
  0x0000000115e9b96c: mov    %r9,0x30(%rsp)
  0x0000000115e9b971: mov    %r10,0x28(%rsp)
  0x0000000115e9b976: mov    %r11,0x20(%rsp)
  0x0000000115e9b97b: mov    %r12,0x18(%rsp)
  0x0000000115e9b980: mov    %r13,0x10(%rsp)
  0x0000000115e9b985: mov    %r14,0x8(%rsp)
  0x0000000115e9b98a: mov    %r15,(%rsp)
  0x0000000115e9b98e: movabs $0x10ddd8000,%rdi
  0x0000000115e9b998: movabs $0x115e9b938,%rsi
  0x0000000115e9b9a2: mov    %rsp,%rdx
  0x0000000115e9b9a5: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9b9a9: callq  0x000000010dc0341e
  0x0000000115e9b9ae: hlt    
  0x0000000115e9b9af: movzbl 0x0(%r13),%ebx
  0x0000000115e9b9b4: movabs $0x10e0ff040,%r10
  0x0000000115e9b9be: jmpq   *(%r10,%rbx,8)
  0x0000000115e9b9c2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9b9ca: mov    -0x38(%rbp),%r13
  0x0000000115e9b9ce: mov    -0x30(%rbp),%r14
  0x0000000115e9b9d2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9b9da: je     0x0000000115e9badc
  0x0000000115e9b9e0: callq  0x0000000115e9b9ea
  0x0000000115e9b9e5: jmpq   0x0000000115e9ba65
  0x0000000115e9b9ea: lea    0x8(%rsp),%rax
  0x0000000115e9b9ef: mov    %r13,-0x38(%rbp)
  0x0000000115e9b9f3: mov    %r15,%rdi
  0x0000000115e9b9f6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9b9fd: mov    %rax,0x1d8(%r15)
  0x0000000115e9ba04: test   $0xf,%esp
  0x0000000115e9ba0a: je     0x0000000115e9ba22
  0x0000000115e9ba10: sub    $0x8,%rsp
  0x0000000115e9ba14: callq  0x000000010dae5ebc
  0x0000000115e9ba19: add    $0x8,%rsp
  0x0000000115e9ba1d: jmpq   0x0000000115e9ba27
  0x0000000115e9ba22: callq  0x000000010dae5ebc
  0x0000000115e9ba27: movabs $0x0,%r10
  0x0000000115e9ba31: mov    %r10,0x1d8(%r15)
  0x0000000115e9ba38: movabs $0x0,%r10
  0x0000000115e9ba42: mov    %r10,0x1e8(%r15)
  0x0000000115e9ba49: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ba51: je     0x0000000115e9ba5c
  0x0000000115e9ba57: jmpq   0x0000000115e916e0
  0x0000000115e9ba5c: mov    -0x38(%rbp),%r13
  0x0000000115e9ba60: mov    -0x30(%rbp),%r14
  0x0000000115e9ba64: retq   
  0x0000000115e9ba65: mov    %rsp,-0x28(%rsp)
  0x0000000115e9ba6a: sub    $0x80,%rsp
  0x0000000115e9ba71: mov    %rax,0x78(%rsp)
  0x0000000115e9ba76: mov    %rcx,0x70(%rsp)
  0x0000000115e9ba7b: mov    %rdx,0x68(%rsp)
  0x0000000115e9ba80: mov    %rbx,0x60(%rsp)
  0x0000000115e9ba85: mov    %rbp,0x50(%rsp)
  0x0000000115e9ba8a: mov    %rsi,0x48(%rsp)
  0x0000000115e9ba8f: mov    %rdi,0x40(%rsp)
  0x0000000115e9ba94: mov    %r8,0x38(%rsp)
  0x0000000115e9ba99: mov    %r9,0x30(%rsp)
  0x0000000115e9ba9e: mov    %r10,0x28(%rsp)
  0x0000000115e9baa3: mov    %r11,0x20(%rsp)
  0x0000000115e9baa8: mov    %r12,0x18(%rsp)
  0x0000000115e9baad: mov    %r13,0x10(%rsp)
  0x0000000115e9bab2: mov    %r14,0x8(%rsp)
  0x0000000115e9bab7: mov    %r15,(%rsp)
  0x0000000115e9babb: movabs $0x10ddd8000,%rdi
  0x0000000115e9bac5: movabs $0x115e9ba65,%rsi
  0x0000000115e9bacf: mov    %rsp,%rdx
  0x0000000115e9bad2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9bad6: callq  0x000000010dc0341e
  0x0000000115e9badb: hlt    
  0x0000000115e9badc: movzbl 0x1(%r13),%ebx
  0x0000000115e9bae1: inc    %r13
  0x0000000115e9bae4: movabs $0x10e101840,%r10
  0x0000000115e9baee: jmpq   *(%r10,%rbx,8)
  0x0000000115e9baf2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9bafa: mov    -0x38(%rbp),%r13
  0x0000000115e9bafe: mov    -0x30(%rbp),%r14
  0x0000000115e9bb02: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bb0a: je     0x0000000115e9bc0c
  0x0000000115e9bb10: callq  0x0000000115e9bb1a
  0x0000000115e9bb15: jmpq   0x0000000115e9bb95
  0x0000000115e9bb1a: lea    0x8(%rsp),%rax
  0x0000000115e9bb1f: mov    %r13,-0x38(%rbp)
  0x0000000115e9bb23: mov    %r15,%rdi
  0x0000000115e9bb26: mov    %rbp,0x1e8(%r15)
  0x0000000115e9bb2d: mov    %rax,0x1d8(%r15)
  0x0000000115e9bb34: test   $0xf,%esp
  0x0000000115e9bb3a: je     0x0000000115e9bb52
  0x0000000115e9bb40: sub    $0x8,%rsp
  0x0000000115e9bb44: callq  0x000000010dae5ebc
  0x0000000115e9bb49: add    $0x8,%rsp
  0x0000000115e9bb4d: jmpq   0x0000000115e9bb57
  0x0000000115e9bb52: callq  0x000000010dae5ebc
  0x0000000115e9bb57: movabs $0x0,%r10
  0x0000000115e9bb61: mov    %r10,0x1d8(%r15)
  0x0000000115e9bb68: movabs $0x0,%r10
  0x0000000115e9bb72: mov    %r10,0x1e8(%r15)
  0x0000000115e9bb79: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bb81: je     0x0000000115e9bb8c
  0x0000000115e9bb87: jmpq   0x0000000115e916e0
  0x0000000115e9bb8c: mov    -0x38(%rbp),%r13
  0x0000000115e9bb90: mov    -0x30(%rbp),%r14
  0x0000000115e9bb94: retq   
  0x0000000115e9bb95: mov    %rsp,-0x28(%rsp)
  0x0000000115e9bb9a: sub    $0x80,%rsp
  0x0000000115e9bba1: mov    %rax,0x78(%rsp)
  0x0000000115e9bba6: mov    %rcx,0x70(%rsp)
  0x0000000115e9bbab: mov    %rdx,0x68(%rsp)
  0x0000000115e9bbb0: mov    %rbx,0x60(%rsp)
  0x0000000115e9bbb5: mov    %rbp,0x50(%rsp)
  0x0000000115e9bbba: mov    %rsi,0x48(%rsp)
  0x0000000115e9bbbf: mov    %rdi,0x40(%rsp)
  0x0000000115e9bbc4: mov    %r8,0x38(%rsp)
  0x0000000115e9bbc9: mov    %r9,0x30(%rsp)
  0x0000000115e9bbce: mov    %r10,0x28(%rsp)
  0x0000000115e9bbd3: mov    %r11,0x20(%rsp)
  0x0000000115e9bbd8: mov    %r12,0x18(%rsp)
  0x0000000115e9bbdd: mov    %r13,0x10(%rsp)
  0x0000000115e9bbe2: mov    %r14,0x8(%rsp)
  0x0000000115e9bbe7: mov    %r15,(%rsp)
  0x0000000115e9bbeb: movabs $0x10ddd8000,%rdi
  0x0000000115e9bbf5: movabs $0x115e9bb95,%rsi
  0x0000000115e9bbff: mov    %rsp,%rdx
  0x0000000115e9bc02: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9bc06: callq  0x000000010dc0341e
  0x0000000115e9bc0b: hlt    
  0x0000000115e9bc0c: movzbl 0x1(%r13),%ebx
  0x0000000115e9bc11: inc    %r13
  0x0000000115e9bc14: movabs $0x10e100840,%r10
  0x0000000115e9bc1e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9bc22: movq   $0x0,-0x10(%rbp)
  0x0000000115e9bc2a: mov    -0x38(%rbp),%r13
  0x0000000115e9bc2e: mov    -0x30(%rbp),%r14
  0x0000000115e9bc32: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bc3a: je     0x0000000115e9bd3c
  0x0000000115e9bc40: callq  0x0000000115e9bc4a
  0x0000000115e9bc45: jmpq   0x0000000115e9bcc5
  0x0000000115e9bc4a: lea    0x8(%rsp),%rax
  0x0000000115e9bc4f: mov    %r13,-0x38(%rbp)
  0x0000000115e9bc53: mov    %r15,%rdi
  0x0000000115e9bc56: mov    %rbp,0x1e8(%r15)
  0x0000000115e9bc5d: mov    %rax,0x1d8(%r15)
  0x0000000115e9bc64: test   $0xf,%esp
  0x0000000115e9bc6a: je     0x0000000115e9bc82
  0x0000000115e9bc70: sub    $0x8,%rsp
  0x0000000115e9bc74: callq  0x000000010dae5ebc
  0x0000000115e9bc79: add    $0x8,%rsp
  0x0000000115e9bc7d: jmpq   0x0000000115e9bc87
  0x0000000115e9bc82: callq  0x000000010dae5ebc
  0x0000000115e9bc87: movabs $0x0,%r10
  0x0000000115e9bc91: mov    %r10,0x1d8(%r15)
  0x0000000115e9bc98: movabs $0x0,%r10
  0x0000000115e9bca2: mov    %r10,0x1e8(%r15)
  0x0000000115e9bca9: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bcb1: je     0x0000000115e9bcbc
  0x0000000115e9bcb7: jmpq   0x0000000115e916e0
  0x0000000115e9bcbc: mov    -0x38(%rbp),%r13
  0x0000000115e9bcc0: mov    -0x30(%rbp),%r14
  0x0000000115e9bcc4: retq   
  0x0000000115e9bcc5: mov    %rsp,-0x28(%rsp)
  0x0000000115e9bcca: sub    $0x80,%rsp
  0x0000000115e9bcd1: mov    %rax,0x78(%rsp)
  0x0000000115e9bcd6: mov    %rcx,0x70(%rsp)
  0x0000000115e9bcdb: mov    %rdx,0x68(%rsp)
  0x0000000115e9bce0: mov    %rbx,0x60(%rsp)
  0x0000000115e9bce5: mov    %rbp,0x50(%rsp)
  0x0000000115e9bcea: mov    %rsi,0x48(%rsp)
  0x0000000115e9bcef: mov    %rdi,0x40(%rsp)
  0x0000000115e9bcf4: mov    %r8,0x38(%rsp)
  0x0000000115e9bcf9: mov    %r9,0x30(%rsp)
  0x0000000115e9bcfe: mov    %r10,0x28(%rsp)
  0x0000000115e9bd03: mov    %r11,0x20(%rsp)
  0x0000000115e9bd08: mov    %r12,0x18(%rsp)
  0x0000000115e9bd0d: mov    %r13,0x10(%rsp)
  0x0000000115e9bd12: mov    %r14,0x8(%rsp)
  0x0000000115e9bd17: mov    %r15,(%rsp)
  0x0000000115e9bd1b: movabs $0x10ddd8000,%rdi
  0x0000000115e9bd25: movabs $0x115e9bcc5,%rsi
  0x0000000115e9bd2f: mov    %rsp,%rdx
  0x0000000115e9bd32: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9bd36: callq  0x000000010dc0341e
  0x0000000115e9bd3b: hlt    
  0x0000000115e9bd3c: movzbl 0x1(%r13),%ebx
  0x0000000115e9bd41: inc    %r13
  0x0000000115e9bd44: movabs $0x10e100040,%r10
  0x0000000115e9bd4e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9bd52: movq   $0x0,-0x10(%rbp)
  0x0000000115e9bd5a: mov    -0x38(%rbp),%r13
  0x0000000115e9bd5e: mov    -0x30(%rbp),%r14
  0x0000000115e9bd62: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bd6a: je     0x0000000115e9be6c
  0x0000000115e9bd70: callq  0x0000000115e9bd7a
  0x0000000115e9bd75: jmpq   0x0000000115e9bdf5
  0x0000000115e9bd7a: lea    0x8(%rsp),%rax
  0x0000000115e9bd7f: mov    %r13,-0x38(%rbp)
  0x0000000115e9bd83: mov    %r15,%rdi
  0x0000000115e9bd86: mov    %rbp,0x1e8(%r15)
  0x0000000115e9bd8d: mov    %rax,0x1d8(%r15)
  0x0000000115e9bd94: test   $0xf,%esp
  0x0000000115e9bd9a: je     0x0000000115e9bdb2
  0x0000000115e9bda0: sub    $0x8,%rsp
  0x0000000115e9bda4: callq  0x000000010dae5ebc
  0x0000000115e9bda9: add    $0x8,%rsp
  0x0000000115e9bdad: jmpq   0x0000000115e9bdb7
  0x0000000115e9bdb2: callq  0x000000010dae5ebc
  0x0000000115e9bdb7: movabs $0x0,%r10
  0x0000000115e9bdc1: mov    %r10,0x1d8(%r15)
  0x0000000115e9bdc8: movabs $0x0,%r10
  0x0000000115e9bdd2: mov    %r10,0x1e8(%r15)
  0x0000000115e9bdd9: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bde1: je     0x0000000115e9bdec
  0x0000000115e9bde7: jmpq   0x0000000115e916e0
  0x0000000115e9bdec: mov    -0x38(%rbp),%r13
  0x0000000115e9bdf0: mov    -0x30(%rbp),%r14
  0x0000000115e9bdf4: retq   
  0x0000000115e9bdf5: mov    %rsp,-0x28(%rsp)
  0x0000000115e9bdfa: sub    $0x80,%rsp
  0x0000000115e9be01: mov    %rax,0x78(%rsp)
  0x0000000115e9be06: mov    %rcx,0x70(%rsp)
  0x0000000115e9be0b: mov    %rdx,0x68(%rsp)
  0x0000000115e9be10: mov    %rbx,0x60(%rsp)
  0x0000000115e9be15: mov    %rbp,0x50(%rsp)
  0x0000000115e9be1a: mov    %rsi,0x48(%rsp)
  0x0000000115e9be1f: mov    %rdi,0x40(%rsp)
  0x0000000115e9be24: mov    %r8,0x38(%rsp)
  0x0000000115e9be29: mov    %r9,0x30(%rsp)
  0x0000000115e9be2e: mov    %r10,0x28(%rsp)
  0x0000000115e9be33: mov    %r11,0x20(%rsp)
  0x0000000115e9be38: mov    %r12,0x18(%rsp)
  0x0000000115e9be3d: mov    %r13,0x10(%rsp)
  0x0000000115e9be42: mov    %r14,0x8(%rsp)
  0x0000000115e9be47: mov    %r15,(%rsp)
  0x0000000115e9be4b: movabs $0x10ddd8000,%rdi
  0x0000000115e9be55: movabs $0x115e9bdf5,%rsi
  0x0000000115e9be5f: mov    %rsp,%rdx
  0x0000000115e9be62: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9be66: callq  0x000000010dc0341e
  0x0000000115e9be6b: hlt    
  0x0000000115e9be6c: movzbl 0x1(%r13),%ebx
  0x0000000115e9be71: inc    %r13
  0x0000000115e9be74: movabs $0x10e0ff840,%r10
  0x0000000115e9be7e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9be82: movq   $0x0,-0x10(%rbp)
  0x0000000115e9be8a: mov    -0x38(%rbp),%r13
  0x0000000115e9be8e: mov    -0x30(%rbp),%r14
  0x0000000115e9be92: cmpq   $0x0,0x8(%r15)
  0x0000000115e9be9a: je     0x0000000115e9bf9c
  0x0000000115e9bea0: callq  0x0000000115e9beaa
  0x0000000115e9bea5: jmpq   0x0000000115e9bf25
  0x0000000115e9beaa: lea    0x8(%rsp),%rax
  0x0000000115e9beaf: mov    %r13,-0x38(%rbp)
  0x0000000115e9beb3: mov    %r15,%rdi
  0x0000000115e9beb6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9bebd: mov    %rax,0x1d8(%r15)
  0x0000000115e9bec4: test   $0xf,%esp
  0x0000000115e9beca: je     0x0000000115e9bee2
  0x0000000115e9bed0: sub    $0x8,%rsp
  0x0000000115e9bed4: callq  0x000000010dae5ebc
  0x0000000115e9bed9: add    $0x8,%rsp
  0x0000000115e9bedd: jmpq   0x0000000115e9bee7
  0x0000000115e9bee2: callq  0x000000010dae5ebc
  0x0000000115e9bee7: movabs $0x0,%r10
  0x0000000115e9bef1: mov    %r10,0x1d8(%r15)
  0x0000000115e9bef8: movabs $0x0,%r10
  0x0000000115e9bf02: mov    %r10,0x1e8(%r15)
  0x0000000115e9bf09: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bf11: je     0x0000000115e9bf1c
  0x0000000115e9bf17: jmpq   0x0000000115e916e0
  0x0000000115e9bf1c: mov    -0x38(%rbp),%r13
  0x0000000115e9bf20: mov    -0x30(%rbp),%r14
  0x0000000115e9bf24: retq   
  0x0000000115e9bf25: mov    %rsp,-0x28(%rsp)
  0x0000000115e9bf2a: sub    $0x80,%rsp
  0x0000000115e9bf31: mov    %rax,0x78(%rsp)
  0x0000000115e9bf36: mov    %rcx,0x70(%rsp)
  0x0000000115e9bf3b: mov    %rdx,0x68(%rsp)
  0x0000000115e9bf40: mov    %rbx,0x60(%rsp)
  0x0000000115e9bf45: mov    %rbp,0x50(%rsp)
  0x0000000115e9bf4a: mov    %rsi,0x48(%rsp)
  0x0000000115e9bf4f: mov    %rdi,0x40(%rsp)
  0x0000000115e9bf54: mov    %r8,0x38(%rsp)
  0x0000000115e9bf59: mov    %r9,0x30(%rsp)
  0x0000000115e9bf5e: mov    %r10,0x28(%rsp)
  0x0000000115e9bf63: mov    %r11,0x20(%rsp)
  0x0000000115e9bf68: mov    %r12,0x18(%rsp)
  0x0000000115e9bf6d: mov    %r13,0x10(%rsp)
  0x0000000115e9bf72: mov    %r14,0x8(%rsp)
  0x0000000115e9bf77: mov    %r15,(%rsp)
  0x0000000115e9bf7b: movabs $0x10ddd8000,%rdi
  0x0000000115e9bf85: movabs $0x115e9bf25,%rsi
  0x0000000115e9bf8f: mov    %rsp,%rdx
  0x0000000115e9bf92: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9bf96: callq  0x000000010dc0341e
  0x0000000115e9bf9b: hlt    
  0x0000000115e9bf9c: movzbl 0x1(%r13),%ebx
  0x0000000115e9bfa1: inc    %r13
  0x0000000115e9bfa4: movabs $0x10e0ff040,%r10
  0x0000000115e9bfae: jmpq   *(%r10,%rbx,8)
  0x0000000115e9bfb2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9bfba: mov    -0x38(%rbp),%r13
  0x0000000115e9bfbe: mov    -0x30(%rbp),%r14
  0x0000000115e9bfc2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9bfca: je     0x0000000115e9c0cc
  0x0000000115e9bfd0: callq  0x0000000115e9bfda
  0x0000000115e9bfd5: jmpq   0x0000000115e9c055
  0x0000000115e9bfda: lea    0x8(%rsp),%rax
  0x0000000115e9bfdf: mov    %r13,-0x38(%rbp)
  0x0000000115e9bfe3: mov    %r15,%rdi
  0x0000000115e9bfe6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9bfed: mov    %rax,0x1d8(%r15)
  0x0000000115e9bff4: test   $0xf,%esp
  0x0000000115e9bffa: je     0x0000000115e9c012
  0x0000000115e9c000: sub    $0x8,%rsp
  0x0000000115e9c004: callq  0x000000010dae5ebc
  0x0000000115e9c009: add    $0x8,%rsp
  0x0000000115e9c00d: jmpq   0x0000000115e9c017
  0x0000000115e9c012: callq  0x000000010dae5ebc
  0x0000000115e9c017: movabs $0x0,%r10
  0x0000000115e9c021: mov    %r10,0x1d8(%r15)
  0x0000000115e9c028: movabs $0x0,%r10
  0x0000000115e9c032: mov    %r10,0x1e8(%r15)
  0x0000000115e9c039: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c041: je     0x0000000115e9c04c
  0x0000000115e9c047: jmpq   0x0000000115e916e0
  0x0000000115e9c04c: mov    -0x38(%rbp),%r13
  0x0000000115e9c050: mov    -0x30(%rbp),%r14
  0x0000000115e9c054: retq   
  0x0000000115e9c055: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c05a: sub    $0x80,%rsp
  0x0000000115e9c061: mov    %rax,0x78(%rsp)
  0x0000000115e9c066: mov    %rcx,0x70(%rsp)
  0x0000000115e9c06b: mov    %rdx,0x68(%rsp)
  0x0000000115e9c070: mov    %rbx,0x60(%rsp)
  0x0000000115e9c075: mov    %rbp,0x50(%rsp)
  0x0000000115e9c07a: mov    %rsi,0x48(%rsp)
  0x0000000115e9c07f: mov    %rdi,0x40(%rsp)
  0x0000000115e9c084: mov    %r8,0x38(%rsp)
  0x0000000115e9c089: mov    %r9,0x30(%rsp)
  0x0000000115e9c08e: mov    %r10,0x28(%rsp)
  0x0000000115e9c093: mov    %r11,0x20(%rsp)
  0x0000000115e9c098: mov    %r12,0x18(%rsp)
  0x0000000115e9c09d: mov    %r13,0x10(%rsp)
  0x0000000115e9c0a2: mov    %r14,0x8(%rsp)
  0x0000000115e9c0a7: mov    %r15,(%rsp)
  0x0000000115e9c0ab: movabs $0x10ddd8000,%rdi
  0x0000000115e9c0b5: movabs $0x115e9c055,%rsi
  0x0000000115e9c0bf: mov    %rsp,%rdx
  0x0000000115e9c0c2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c0c6: callq  0x000000010dc0341e
  0x0000000115e9c0cb: hlt    
  0x0000000115e9c0cc: movzbl 0x1(%r13),%ebx
  0x0000000115e9c0d1: inc    %r13
  0x0000000115e9c0d4: movabs $0x10e101040,%r10
  0x0000000115e9c0de: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c0e2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c0ea: mov    -0x38(%rbp),%r13
  0x0000000115e9c0ee: mov    -0x30(%rbp),%r14
  0x0000000115e9c0f2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c0fa: je     0x0000000115e9c1fc
  0x0000000115e9c100: callq  0x0000000115e9c10a
  0x0000000115e9c105: jmpq   0x0000000115e9c185
  0x0000000115e9c10a: lea    0x8(%rsp),%rax
  0x0000000115e9c10f: mov    %r13,-0x38(%rbp)
  0x0000000115e9c113: mov    %r15,%rdi
  0x0000000115e9c116: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c11d: mov    %rax,0x1d8(%r15)
  0x0000000115e9c124: test   $0xf,%esp
  0x0000000115e9c12a: je     0x0000000115e9c142
  0x0000000115e9c130: sub    $0x8,%rsp
  0x0000000115e9c134: callq  0x000000010dae5ebc
  0x0000000115e9c139: add    $0x8,%rsp
  0x0000000115e9c13d: jmpq   0x0000000115e9c147
  0x0000000115e9c142: callq  0x000000010dae5ebc
  0x0000000115e9c147: movabs $0x0,%r10
  0x0000000115e9c151: mov    %r10,0x1d8(%r15)
  0x0000000115e9c158: movabs $0x0,%r10
  0x0000000115e9c162: mov    %r10,0x1e8(%r15)
  0x0000000115e9c169: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c171: je     0x0000000115e9c17c
  0x0000000115e9c177: jmpq   0x0000000115e916e0
  0x0000000115e9c17c: mov    -0x38(%rbp),%r13
  0x0000000115e9c180: mov    -0x30(%rbp),%r14
  0x0000000115e9c184: retq   
  0x0000000115e9c185: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c18a: sub    $0x80,%rsp
  0x0000000115e9c191: mov    %rax,0x78(%rsp)
  0x0000000115e9c196: mov    %rcx,0x70(%rsp)
  0x0000000115e9c19b: mov    %rdx,0x68(%rsp)
  0x0000000115e9c1a0: mov    %rbx,0x60(%rsp)
  0x0000000115e9c1a5: mov    %rbp,0x50(%rsp)
  0x0000000115e9c1aa: mov    %rsi,0x48(%rsp)
  0x0000000115e9c1af: mov    %rdi,0x40(%rsp)
  0x0000000115e9c1b4: mov    %r8,0x38(%rsp)
  0x0000000115e9c1b9: mov    %r9,0x30(%rsp)
  0x0000000115e9c1be: mov    %r10,0x28(%rsp)
  0x0000000115e9c1c3: mov    %r11,0x20(%rsp)
  0x0000000115e9c1c8: mov    %r12,0x18(%rsp)
  0x0000000115e9c1cd: mov    %r13,0x10(%rsp)
  0x0000000115e9c1d2: mov    %r14,0x8(%rsp)
  0x0000000115e9c1d7: mov    %r15,(%rsp)
  0x0000000115e9c1db: movabs $0x10ddd8000,%rdi
  0x0000000115e9c1e5: movabs $0x115e9c185,%rsi
  0x0000000115e9c1ef: mov    %rsp,%rdx
  0x0000000115e9c1f2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c1f6: callq  0x000000010dc0341e
  0x0000000115e9c1fb: hlt    
  0x0000000115e9c1fc: movzbl 0x1(%r13),%ebx
  0x0000000115e9c201: inc    %r13
  0x0000000115e9c204: movabs $0x10e0ff040,%r10
  0x0000000115e9c20e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c212: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c21a: mov    -0x38(%rbp),%r13
  0x0000000115e9c21e: mov    -0x30(%rbp),%r14
  0x0000000115e9c222: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c22a: je     0x0000000115e9c32c
  0x0000000115e9c230: callq  0x0000000115e9c23a
  0x0000000115e9c235: jmpq   0x0000000115e9c2b5
  0x0000000115e9c23a: lea    0x8(%rsp),%rax
  0x0000000115e9c23f: mov    %r13,-0x38(%rbp)
  0x0000000115e9c243: mov    %r15,%rdi
  0x0000000115e9c246: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c24d: mov    %rax,0x1d8(%r15)
  0x0000000115e9c254: test   $0xf,%esp
  0x0000000115e9c25a: je     0x0000000115e9c272
  0x0000000115e9c260: sub    $0x8,%rsp
  0x0000000115e9c264: callq  0x000000010dae5ebc
  0x0000000115e9c269: add    $0x8,%rsp
  0x0000000115e9c26d: jmpq   0x0000000115e9c277
  0x0000000115e9c272: callq  0x000000010dae5ebc
  0x0000000115e9c277: movabs $0x0,%r10
  0x0000000115e9c281: mov    %r10,0x1d8(%r15)
  0x0000000115e9c288: movabs $0x0,%r10
  0x0000000115e9c292: mov    %r10,0x1e8(%r15)
  0x0000000115e9c299: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c2a1: je     0x0000000115e9c2ac
  0x0000000115e9c2a7: jmpq   0x0000000115e916e0
  0x0000000115e9c2ac: mov    -0x38(%rbp),%r13
  0x0000000115e9c2b0: mov    -0x30(%rbp),%r14
  0x0000000115e9c2b4: retq   
  0x0000000115e9c2b5: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c2ba: sub    $0x80,%rsp
  0x0000000115e9c2c1: mov    %rax,0x78(%rsp)
  0x0000000115e9c2c6: mov    %rcx,0x70(%rsp)
  0x0000000115e9c2cb: mov    %rdx,0x68(%rsp)
  0x0000000115e9c2d0: mov    %rbx,0x60(%rsp)
  0x0000000115e9c2d5: mov    %rbp,0x50(%rsp)
  0x0000000115e9c2da: mov    %rsi,0x48(%rsp)
  0x0000000115e9c2df: mov    %rdi,0x40(%rsp)
  0x0000000115e9c2e4: mov    %r8,0x38(%rsp)
  0x0000000115e9c2e9: mov    %r9,0x30(%rsp)
  0x0000000115e9c2ee: mov    %r10,0x28(%rsp)
  0x0000000115e9c2f3: mov    %r11,0x20(%rsp)
  0x0000000115e9c2f8: mov    %r12,0x18(%rsp)
  0x0000000115e9c2fd: mov    %r13,0x10(%rsp)
  0x0000000115e9c302: mov    %r14,0x8(%rsp)
  0x0000000115e9c307: mov    %r15,(%rsp)
  0x0000000115e9c30b: movabs $0x10ddd8000,%rdi
  0x0000000115e9c315: movabs $0x115e9c2b5,%rsi
  0x0000000115e9c31f: mov    %rsp,%rdx
  0x0000000115e9c322: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c326: callq  0x000000010dc0341e
  0x0000000115e9c32b: hlt    
  0x0000000115e9c32c: movzbl 0x1(%r13),%ebx
  0x0000000115e9c331: inc    %r13
  0x0000000115e9c334: movabs $0x10e0ff040,%r10
  0x0000000115e9c33e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c342: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c34a: mov    -0x38(%rbp),%r13
  0x0000000115e9c34e: mov    -0x30(%rbp),%r14
  0x0000000115e9c352: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c35a: je     0x0000000115e9c45c
  0x0000000115e9c360: callq  0x0000000115e9c36a
  0x0000000115e9c365: jmpq   0x0000000115e9c3e5
  0x0000000115e9c36a: lea    0x8(%rsp),%rax
  0x0000000115e9c36f: mov    %r13,-0x38(%rbp)
  0x0000000115e9c373: mov    %r15,%rdi
  0x0000000115e9c376: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c37d: mov    %rax,0x1d8(%r15)
  0x0000000115e9c384: test   $0xf,%esp
  0x0000000115e9c38a: je     0x0000000115e9c3a2
  0x0000000115e9c390: sub    $0x8,%rsp
  0x0000000115e9c394: callq  0x000000010dae5ebc
  0x0000000115e9c399: add    $0x8,%rsp
  0x0000000115e9c39d: jmpq   0x0000000115e9c3a7
  0x0000000115e9c3a2: callq  0x000000010dae5ebc
  0x0000000115e9c3a7: movabs $0x0,%r10
  0x0000000115e9c3b1: mov    %r10,0x1d8(%r15)
  0x0000000115e9c3b8: movabs $0x0,%r10
  0x0000000115e9c3c2: mov    %r10,0x1e8(%r15)
  0x0000000115e9c3c9: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c3d1: je     0x0000000115e9c3dc
  0x0000000115e9c3d7: jmpq   0x0000000115e916e0
  0x0000000115e9c3dc: mov    -0x38(%rbp),%r13
  0x0000000115e9c3e0: mov    -0x30(%rbp),%r14
  0x0000000115e9c3e4: retq   
  0x0000000115e9c3e5: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c3ea: sub    $0x80,%rsp
  0x0000000115e9c3f1: mov    %rax,0x78(%rsp)
  0x0000000115e9c3f6: mov    %rcx,0x70(%rsp)
  0x0000000115e9c3fb: mov    %rdx,0x68(%rsp)
  0x0000000115e9c400: mov    %rbx,0x60(%rsp)
  0x0000000115e9c405: mov    %rbp,0x50(%rsp)
  0x0000000115e9c40a: mov    %rsi,0x48(%rsp)
  0x0000000115e9c40f: mov    %rdi,0x40(%rsp)
  0x0000000115e9c414: mov    %r8,0x38(%rsp)
  0x0000000115e9c419: mov    %r9,0x30(%rsp)
  0x0000000115e9c41e: mov    %r10,0x28(%rsp)
  0x0000000115e9c423: mov    %r11,0x20(%rsp)
  0x0000000115e9c428: mov    %r12,0x18(%rsp)
  0x0000000115e9c42d: mov    %r13,0x10(%rsp)
  0x0000000115e9c432: mov    %r14,0x8(%rsp)
  0x0000000115e9c437: mov    %r15,(%rsp)
  0x0000000115e9c43b: movabs $0x10ddd8000,%rdi
  0x0000000115e9c445: movabs $0x115e9c3e5,%rsi
  0x0000000115e9c44f: mov    %rsp,%rdx
  0x0000000115e9c452: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c456: callq  0x000000010dc0341e
  0x0000000115e9c45b: hlt    
  0x0000000115e9c45c: movzbl 0x1(%r13),%ebx
  0x0000000115e9c461: inc    %r13
  0x0000000115e9c464: movabs $0x10e0ff040,%r10
  0x0000000115e9c46e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c472: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c47a: mov    -0x38(%rbp),%r13
  0x0000000115e9c47e: mov    -0x30(%rbp),%r14
  0x0000000115e9c482: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c48a: je     0x0000000115e9c58c
  0x0000000115e9c490: callq  0x0000000115e9c49a
  0x0000000115e9c495: jmpq   0x0000000115e9c515
  0x0000000115e9c49a: lea    0x8(%rsp),%rax
  0x0000000115e9c49f: mov    %r13,-0x38(%rbp)
  0x0000000115e9c4a3: mov    %r15,%rdi
  0x0000000115e9c4a6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c4ad: mov    %rax,0x1d8(%r15)
  0x0000000115e9c4b4: test   $0xf,%esp
  0x0000000115e9c4ba: je     0x0000000115e9c4d2
  0x0000000115e9c4c0: sub    $0x8,%rsp
  0x0000000115e9c4c4: callq  0x000000010dae5ebc
  0x0000000115e9c4c9: add    $0x8,%rsp
  0x0000000115e9c4cd: jmpq   0x0000000115e9c4d7
  0x0000000115e9c4d2: callq  0x000000010dae5ebc
  0x0000000115e9c4d7: movabs $0x0,%r10
  0x0000000115e9c4e1: mov    %r10,0x1d8(%r15)
  0x0000000115e9c4e8: movabs $0x0,%r10
  0x0000000115e9c4f2: mov    %r10,0x1e8(%r15)
  0x0000000115e9c4f9: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c501: je     0x0000000115e9c50c
  0x0000000115e9c507: jmpq   0x0000000115e916e0
  0x0000000115e9c50c: mov    -0x38(%rbp),%r13
  0x0000000115e9c510: mov    -0x30(%rbp),%r14
  0x0000000115e9c514: retq   
  0x0000000115e9c515: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c51a: sub    $0x80,%rsp
  0x0000000115e9c521: mov    %rax,0x78(%rsp)
  0x0000000115e9c526: mov    %rcx,0x70(%rsp)
  0x0000000115e9c52b: mov    %rdx,0x68(%rsp)
  0x0000000115e9c530: mov    %rbx,0x60(%rsp)
  0x0000000115e9c535: mov    %rbp,0x50(%rsp)
  0x0000000115e9c53a: mov    %rsi,0x48(%rsp)
  0x0000000115e9c53f: mov    %rdi,0x40(%rsp)
  0x0000000115e9c544: mov    %r8,0x38(%rsp)
  0x0000000115e9c549: mov    %r9,0x30(%rsp)
  0x0000000115e9c54e: mov    %r10,0x28(%rsp)
  0x0000000115e9c553: mov    %r11,0x20(%rsp)
  0x0000000115e9c558: mov    %r12,0x18(%rsp)
  0x0000000115e9c55d: mov    %r13,0x10(%rsp)
  0x0000000115e9c562: mov    %r14,0x8(%rsp)
  0x0000000115e9c567: mov    %r15,(%rsp)
  0x0000000115e9c56b: movabs $0x10ddd8000,%rdi
  0x0000000115e9c575: movabs $0x115e9c515,%rsi
  0x0000000115e9c57f: mov    %rsp,%rdx
  0x0000000115e9c582: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c586: callq  0x000000010dc0341e
  0x0000000115e9c58b: hlt    
  0x0000000115e9c58c: movzbl 0x1(%r13),%ebx
  0x0000000115e9c591: inc    %r13
  0x0000000115e9c594: movabs $0x10e0ff040,%r10
  0x0000000115e9c59e: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c5a2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c5aa: mov    -0x38(%rbp),%r13
  0x0000000115e9c5ae: mov    -0x30(%rbp),%r14
  0x0000000115e9c5b2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c5ba: je     0x0000000115e9c6bc
  0x0000000115e9c5c0: callq  0x0000000115e9c5ca
  0x0000000115e9c5c5: jmpq   0x0000000115e9c645
  0x0000000115e9c5ca: lea    0x8(%rsp),%rax
  0x0000000115e9c5cf: mov    %r13,-0x38(%rbp)
  0x0000000115e9c5d3: mov    %r15,%rdi
  0x0000000115e9c5d6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c5dd: mov    %rax,0x1d8(%r15)
  0x0000000115e9c5e4: test   $0xf,%esp
  0x0000000115e9c5ea: je     0x0000000115e9c602
  0x0000000115e9c5f0: sub    $0x8,%rsp
  0x0000000115e9c5f4: callq  0x000000010dae5ebc
  0x0000000115e9c5f9: add    $0x8,%rsp
  0x0000000115e9c5fd: jmpq   0x0000000115e9c607
  0x0000000115e9c602: callq  0x000000010dae5ebc
  0x0000000115e9c607: movabs $0x0,%r10
  0x0000000115e9c611: mov    %r10,0x1d8(%r15)
  0x0000000115e9c618: movabs $0x0,%r10
  0x0000000115e9c622: mov    %r10,0x1e8(%r15)
  0x0000000115e9c629: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c631: je     0x0000000115e9c63c
  0x0000000115e9c637: jmpq   0x0000000115e916e0
  0x0000000115e9c63c: mov    -0x38(%rbp),%r13
  0x0000000115e9c640: mov    -0x30(%rbp),%r14
  0x0000000115e9c644: retq   
  0x0000000115e9c645: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c64a: sub    $0x80,%rsp
  0x0000000115e9c651: mov    %rax,0x78(%rsp)
  0x0000000115e9c656: mov    %rcx,0x70(%rsp)
  0x0000000115e9c65b: mov    %rdx,0x68(%rsp)
  0x0000000115e9c660: mov    %rbx,0x60(%rsp)
  0x0000000115e9c665: mov    %rbp,0x50(%rsp)
  0x0000000115e9c66a: mov    %rsi,0x48(%rsp)
  0x0000000115e9c66f: mov    %rdi,0x40(%rsp)
  0x0000000115e9c674: mov    %r8,0x38(%rsp)
  0x0000000115e9c679: mov    %r9,0x30(%rsp)
  0x0000000115e9c67e: mov    %r10,0x28(%rsp)
  0x0000000115e9c683: mov    %r11,0x20(%rsp)
  0x0000000115e9c688: mov    %r12,0x18(%rsp)
  0x0000000115e9c68d: mov    %r13,0x10(%rsp)
  0x0000000115e9c692: mov    %r14,0x8(%rsp)
  0x0000000115e9c697: mov    %r15,(%rsp)
  0x0000000115e9c69b: movabs $0x10ddd8000,%rdi
  0x0000000115e9c6a5: movabs $0x115e9c645,%rsi
  0x0000000115e9c6af: mov    %rsp,%rdx
  0x0000000115e9c6b2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c6b6: callq  0x000000010dc0341e
  0x0000000115e9c6bb: hlt    
  0x0000000115e9c6bc: movzbl 0x2(%r13),%ebx
  0x0000000115e9c6c1: add    $0x2,%r13
  0x0000000115e9c6c5: movabs $0x10e101840,%r10
  0x0000000115e9c6cf: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c6d3: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c6db: mov    -0x38(%rbp),%r13
  0x0000000115e9c6df: mov    -0x30(%rbp),%r14
  0x0000000115e9c6e3: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c6eb: je     0x0000000115e9c7ed
  0x0000000115e9c6f1: callq  0x0000000115e9c6fb
  0x0000000115e9c6f6: jmpq   0x0000000115e9c776
  0x0000000115e9c6fb: lea    0x8(%rsp),%rax
  0x0000000115e9c700: mov    %r13,-0x38(%rbp)
  0x0000000115e9c704: mov    %r15,%rdi
  0x0000000115e9c707: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c70e: mov    %rax,0x1d8(%r15)
  0x0000000115e9c715: test   $0xf,%esp
  0x0000000115e9c71b: je     0x0000000115e9c733
  0x0000000115e9c721: sub    $0x8,%rsp
  0x0000000115e9c725: callq  0x000000010dae5ebc
  0x0000000115e9c72a: add    $0x8,%rsp
  0x0000000115e9c72e: jmpq   0x0000000115e9c738
  0x0000000115e9c733: callq  0x000000010dae5ebc
  0x0000000115e9c738: movabs $0x0,%r10
  0x0000000115e9c742: mov    %r10,0x1d8(%r15)
  0x0000000115e9c749: movabs $0x0,%r10
  0x0000000115e9c753: mov    %r10,0x1e8(%r15)
  0x0000000115e9c75a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c762: je     0x0000000115e9c76d
  0x0000000115e9c768: jmpq   0x0000000115e916e0
  0x0000000115e9c76d: mov    -0x38(%rbp),%r13
  0x0000000115e9c771: mov    -0x30(%rbp),%r14
  0x0000000115e9c775: retq   
  0x0000000115e9c776: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c77b: sub    $0x80,%rsp
  0x0000000115e9c782: mov    %rax,0x78(%rsp)
  0x0000000115e9c787: mov    %rcx,0x70(%rsp)
  0x0000000115e9c78c: mov    %rdx,0x68(%rsp)
  0x0000000115e9c791: mov    %rbx,0x60(%rsp)
  0x0000000115e9c796: mov    %rbp,0x50(%rsp)
  0x0000000115e9c79b: mov    %rsi,0x48(%rsp)
  0x0000000115e9c7a0: mov    %rdi,0x40(%rsp)
  0x0000000115e9c7a5: mov    %r8,0x38(%rsp)
  0x0000000115e9c7aa: mov    %r9,0x30(%rsp)
  0x0000000115e9c7af: mov    %r10,0x28(%rsp)
  0x0000000115e9c7b4: mov    %r11,0x20(%rsp)
  0x0000000115e9c7b9: mov    %r12,0x18(%rsp)
  0x0000000115e9c7be: mov    %r13,0x10(%rsp)
  0x0000000115e9c7c3: mov    %r14,0x8(%rsp)
  0x0000000115e9c7c8: mov    %r15,(%rsp)
  0x0000000115e9c7cc: movabs $0x10ddd8000,%rdi
  0x0000000115e9c7d6: movabs $0x115e9c776,%rsi
  0x0000000115e9c7e0: mov    %rsp,%rdx
  0x0000000115e9c7e3: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c7e7: callq  0x000000010dc0341e
  0x0000000115e9c7ec: hlt    
  0x0000000115e9c7ed: movzbl 0x2(%r13),%ebx
  0x0000000115e9c7f2: add    $0x2,%r13
  0x0000000115e9c7f6: movabs $0x10e100840,%r10
  0x0000000115e9c800: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c804: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c80c: mov    -0x38(%rbp),%r13
  0x0000000115e9c810: mov    -0x30(%rbp),%r14
  0x0000000115e9c814: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c81c: je     0x0000000115e9c91e
  0x0000000115e9c822: callq  0x0000000115e9c82c
  0x0000000115e9c827: jmpq   0x0000000115e9c8a7
  0x0000000115e9c82c: lea    0x8(%rsp),%rax
  0x0000000115e9c831: mov    %r13,-0x38(%rbp)
  0x0000000115e9c835: mov    %r15,%rdi
  0x0000000115e9c838: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c83f: mov    %rax,0x1d8(%r15)
  0x0000000115e9c846: test   $0xf,%esp
  0x0000000115e9c84c: je     0x0000000115e9c864
  0x0000000115e9c852: sub    $0x8,%rsp
  0x0000000115e9c856: callq  0x000000010dae5ebc
  0x0000000115e9c85b: add    $0x8,%rsp
  0x0000000115e9c85f: jmpq   0x0000000115e9c869
  0x0000000115e9c864: callq  0x000000010dae5ebc
  0x0000000115e9c869: movabs $0x0,%r10
  0x0000000115e9c873: mov    %r10,0x1d8(%r15)
  0x0000000115e9c87a: movabs $0x0,%r10
  0x0000000115e9c884: mov    %r10,0x1e8(%r15)
  0x0000000115e9c88b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c893: je     0x0000000115e9c89e
  0x0000000115e9c899: jmpq   0x0000000115e916e0
  0x0000000115e9c89e: mov    -0x38(%rbp),%r13
  0x0000000115e9c8a2: mov    -0x30(%rbp),%r14
  0x0000000115e9c8a6: retq   
  0x0000000115e9c8a7: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c8ac: sub    $0x80,%rsp
  0x0000000115e9c8b3: mov    %rax,0x78(%rsp)
  0x0000000115e9c8b8: mov    %rcx,0x70(%rsp)
  0x0000000115e9c8bd: mov    %rdx,0x68(%rsp)
  0x0000000115e9c8c2: mov    %rbx,0x60(%rsp)
  0x0000000115e9c8c7: mov    %rbp,0x50(%rsp)
  0x0000000115e9c8cc: mov    %rsi,0x48(%rsp)
  0x0000000115e9c8d1: mov    %rdi,0x40(%rsp)
  0x0000000115e9c8d6: mov    %r8,0x38(%rsp)
  0x0000000115e9c8db: mov    %r9,0x30(%rsp)
  0x0000000115e9c8e0: mov    %r10,0x28(%rsp)
  0x0000000115e9c8e5: mov    %r11,0x20(%rsp)
  0x0000000115e9c8ea: mov    %r12,0x18(%rsp)
  0x0000000115e9c8ef: mov    %r13,0x10(%rsp)
  0x0000000115e9c8f4: mov    %r14,0x8(%rsp)
  0x0000000115e9c8f9: mov    %r15,(%rsp)
  0x0000000115e9c8fd: movabs $0x10ddd8000,%rdi
  0x0000000115e9c907: movabs $0x115e9c8a7,%rsi
  0x0000000115e9c911: mov    %rsp,%rdx
  0x0000000115e9c914: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9c918: callq  0x000000010dc0341e
  0x0000000115e9c91d: hlt    
  0x0000000115e9c91e: movzbl 0x2(%r13),%ebx
  0x0000000115e9c923: add    $0x2,%r13
  0x0000000115e9c927: movabs $0x10e100040,%r10
  0x0000000115e9c931: jmpq   *(%r10,%rbx,8)
  0x0000000115e9c935: movq   $0x0,-0x10(%rbp)
  0x0000000115e9c93d: mov    -0x38(%rbp),%r13
  0x0000000115e9c941: mov    -0x30(%rbp),%r14
  0x0000000115e9c945: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c94d: je     0x0000000115e9ca4f
  0x0000000115e9c953: callq  0x0000000115e9c95d
  0x0000000115e9c958: jmpq   0x0000000115e9c9d8
  0x0000000115e9c95d: lea    0x8(%rsp),%rax
  0x0000000115e9c962: mov    %r13,-0x38(%rbp)
  0x0000000115e9c966: mov    %r15,%rdi
  0x0000000115e9c969: mov    %rbp,0x1e8(%r15)
  0x0000000115e9c970: mov    %rax,0x1d8(%r15)
  0x0000000115e9c977: test   $0xf,%esp
  0x0000000115e9c97d: je     0x0000000115e9c995
  0x0000000115e9c983: sub    $0x8,%rsp
  0x0000000115e9c987: callq  0x000000010dae5ebc
  0x0000000115e9c98c: add    $0x8,%rsp
  0x0000000115e9c990: jmpq   0x0000000115e9c99a
  0x0000000115e9c995: callq  0x000000010dae5ebc
  0x0000000115e9c99a: movabs $0x0,%r10
  0x0000000115e9c9a4: mov    %r10,0x1d8(%r15)
  0x0000000115e9c9ab: movabs $0x0,%r10
  0x0000000115e9c9b5: mov    %r10,0x1e8(%r15)
  0x0000000115e9c9bc: cmpq   $0x0,0x8(%r15)
  0x0000000115e9c9c4: je     0x0000000115e9c9cf
  0x0000000115e9c9ca: jmpq   0x0000000115e916e0
  0x0000000115e9c9cf: mov    -0x38(%rbp),%r13
  0x0000000115e9c9d3: mov    -0x30(%rbp),%r14
  0x0000000115e9c9d7: retq   
  0x0000000115e9c9d8: mov    %rsp,-0x28(%rsp)
  0x0000000115e9c9dd: sub    $0x80,%rsp
  0x0000000115e9c9e4: mov    %rax,0x78(%rsp)
  0x0000000115e9c9e9: mov    %rcx,0x70(%rsp)
  0x0000000115e9c9ee: mov    %rdx,0x68(%rsp)
  0x0000000115e9c9f3: mov    %rbx,0x60(%rsp)
  0x0000000115e9c9f8: mov    %rbp,0x50(%rsp)
  0x0000000115e9c9fd: mov    %rsi,0x48(%rsp)
  0x0000000115e9ca02: mov    %rdi,0x40(%rsp)
  0x0000000115e9ca07: mov    %r8,0x38(%rsp)
  0x0000000115e9ca0c: mov    %r9,0x30(%rsp)
  0x0000000115e9ca11: mov    %r10,0x28(%rsp)
  0x0000000115e9ca16: mov    %r11,0x20(%rsp)
  0x0000000115e9ca1b: mov    %r12,0x18(%rsp)
  0x0000000115e9ca20: mov    %r13,0x10(%rsp)
  0x0000000115e9ca25: mov    %r14,0x8(%rsp)
  0x0000000115e9ca2a: mov    %r15,(%rsp)
  0x0000000115e9ca2e: movabs $0x10ddd8000,%rdi
  0x0000000115e9ca38: movabs $0x115e9c9d8,%rsi
  0x0000000115e9ca42: mov    %rsp,%rdx
  0x0000000115e9ca45: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ca49: callq  0x000000010dc0341e
  0x0000000115e9ca4e: hlt    
  0x0000000115e9ca4f: movzbl 0x2(%r13),%ebx
  0x0000000115e9ca54: add    $0x2,%r13
  0x0000000115e9ca58: movabs $0x10e0ff840,%r10
  0x0000000115e9ca62: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ca66: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ca6e: mov    -0x38(%rbp),%r13
  0x0000000115e9ca72: mov    -0x30(%rbp),%r14
  0x0000000115e9ca76: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ca7e: je     0x0000000115e9cb80
  0x0000000115e9ca84: callq  0x0000000115e9ca8e
  0x0000000115e9ca89: jmpq   0x0000000115e9cb09
  0x0000000115e9ca8e: lea    0x8(%rsp),%rax
  0x0000000115e9ca93: mov    %r13,-0x38(%rbp)
  0x0000000115e9ca97: mov    %r15,%rdi
  0x0000000115e9ca9a: mov    %rbp,0x1e8(%r15)
  0x0000000115e9caa1: mov    %rax,0x1d8(%r15)
  0x0000000115e9caa8: test   $0xf,%esp
  0x0000000115e9caae: je     0x0000000115e9cac6
  0x0000000115e9cab4: sub    $0x8,%rsp
  0x0000000115e9cab8: callq  0x000000010dae5ebc
  0x0000000115e9cabd: add    $0x8,%rsp
  0x0000000115e9cac1: jmpq   0x0000000115e9cacb
  0x0000000115e9cac6: callq  0x000000010dae5ebc
  0x0000000115e9cacb: movabs $0x0,%r10
  0x0000000115e9cad5: mov    %r10,0x1d8(%r15)
  0x0000000115e9cadc: movabs $0x0,%r10
  0x0000000115e9cae6: mov    %r10,0x1e8(%r15)
  0x0000000115e9caed: cmpq   $0x0,0x8(%r15)
  0x0000000115e9caf5: je     0x0000000115e9cb00
  0x0000000115e9cafb: jmpq   0x0000000115e916e0
  0x0000000115e9cb00: mov    -0x38(%rbp),%r13
  0x0000000115e9cb04: mov    -0x30(%rbp),%r14
  0x0000000115e9cb08: retq   
  0x0000000115e9cb09: mov    %rsp,-0x28(%rsp)
  0x0000000115e9cb0e: sub    $0x80,%rsp
  0x0000000115e9cb15: mov    %rax,0x78(%rsp)
  0x0000000115e9cb1a: mov    %rcx,0x70(%rsp)
  0x0000000115e9cb1f: mov    %rdx,0x68(%rsp)
  0x0000000115e9cb24: mov    %rbx,0x60(%rsp)
  0x0000000115e9cb29: mov    %rbp,0x50(%rsp)
  0x0000000115e9cb2e: mov    %rsi,0x48(%rsp)
  0x0000000115e9cb33: mov    %rdi,0x40(%rsp)
  0x0000000115e9cb38: mov    %r8,0x38(%rsp)
  0x0000000115e9cb3d: mov    %r9,0x30(%rsp)
  0x0000000115e9cb42: mov    %r10,0x28(%rsp)
  0x0000000115e9cb47: mov    %r11,0x20(%rsp)
  0x0000000115e9cb4c: mov    %r12,0x18(%rsp)
  0x0000000115e9cb51: mov    %r13,0x10(%rsp)
  0x0000000115e9cb56: mov    %r14,0x8(%rsp)
  0x0000000115e9cb5b: mov    %r15,(%rsp)
  0x0000000115e9cb5f: movabs $0x10ddd8000,%rdi
  0x0000000115e9cb69: movabs $0x115e9cb09,%rsi
  0x0000000115e9cb73: mov    %rsp,%rdx
  0x0000000115e9cb76: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9cb7a: callq  0x000000010dc0341e
  0x0000000115e9cb7f: hlt    
  0x0000000115e9cb80: movzbl 0x2(%r13),%ebx
  0x0000000115e9cb85: add    $0x2,%r13
  0x0000000115e9cb89: movabs $0x10e0ff040,%r10
  0x0000000115e9cb93: jmpq   *(%r10,%rbx,8)
  0x0000000115e9cb97: movq   $0x0,-0x10(%rbp)
  0x0000000115e9cb9f: mov    -0x38(%rbp),%r13
  0x0000000115e9cba3: mov    -0x30(%rbp),%r14
  0x0000000115e9cba7: cmpq   $0x0,0x8(%r15)
  0x0000000115e9cbaf: je     0x0000000115e9ccb1
  0x0000000115e9cbb5: callq  0x0000000115e9cbbf
  0x0000000115e9cbba: jmpq   0x0000000115e9cc3a
  0x0000000115e9cbbf: lea    0x8(%rsp),%rax
  0x0000000115e9cbc4: mov    %r13,-0x38(%rbp)
  0x0000000115e9cbc8: mov    %r15,%rdi
  0x0000000115e9cbcb: mov    %rbp,0x1e8(%r15)
  0x0000000115e9cbd2: mov    %rax,0x1d8(%r15)
  0x0000000115e9cbd9: test   $0xf,%esp
  0x0000000115e9cbdf: je     0x0000000115e9cbf7
  0x0000000115e9cbe5: sub    $0x8,%rsp
  0x0000000115e9cbe9: callq  0x000000010dae5ebc
  0x0000000115e9cbee: add    $0x8,%rsp
  0x0000000115e9cbf2: jmpq   0x0000000115e9cbfc
  0x0000000115e9cbf7: callq  0x000000010dae5ebc
  0x0000000115e9cbfc: movabs $0x0,%r10
  0x0000000115e9cc06: mov    %r10,0x1d8(%r15)
  0x0000000115e9cc0d: movabs $0x0,%r10
  0x0000000115e9cc17: mov    %r10,0x1e8(%r15)
  0x0000000115e9cc1e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9cc26: je     0x0000000115e9cc31
  0x0000000115e9cc2c: jmpq   0x0000000115e916e0
  0x0000000115e9cc31: mov    -0x38(%rbp),%r13
  0x0000000115e9cc35: mov    -0x30(%rbp),%r14
  0x0000000115e9cc39: retq   
  0x0000000115e9cc3a: mov    %rsp,-0x28(%rsp)
  0x0000000115e9cc3f: sub    $0x80,%rsp
  0x0000000115e9cc46: mov    %rax,0x78(%rsp)
  0x0000000115e9cc4b: mov    %rcx,0x70(%rsp)
  0x0000000115e9cc50: mov    %rdx,0x68(%rsp)
  0x0000000115e9cc55: mov    %rbx,0x60(%rsp)
  0x0000000115e9cc5a: mov    %rbp,0x50(%rsp)
  0x0000000115e9cc5f: mov    %rsi,0x48(%rsp)
  0x0000000115e9cc64: mov    %rdi,0x40(%rsp)
  0x0000000115e9cc69: mov    %r8,0x38(%rsp)
  0x0000000115e9cc6e: mov    %r9,0x30(%rsp)
  0x0000000115e9cc73: mov    %r10,0x28(%rsp)
  0x0000000115e9cc78: mov    %r11,0x20(%rsp)
  0x0000000115e9cc7d: mov    %r12,0x18(%rsp)
  0x0000000115e9cc82: mov    %r13,0x10(%rsp)
  0x0000000115e9cc87: mov    %r14,0x8(%rsp)
  0x0000000115e9cc8c: mov    %r15,(%rsp)
  0x0000000115e9cc90: movabs $0x10ddd8000,%rdi
  0x0000000115e9cc9a: movabs $0x115e9cc3a,%rsi
  0x0000000115e9cca4: mov    %rsp,%rdx
  0x0000000115e9cca7: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ccab: callq  0x000000010dc0341e
  0x0000000115e9ccb0: hlt    
  0x0000000115e9ccb1: movzbl 0x2(%r13),%ebx
  0x0000000115e9ccb6: add    $0x2,%r13
  0x0000000115e9ccba: movabs $0x10e101040,%r10
  0x0000000115e9ccc4: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ccc8: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ccd0: mov    -0x38(%rbp),%r13
  0x0000000115e9ccd4: mov    -0x30(%rbp),%r14
  0x0000000115e9ccd8: cmpq   $0x0,0x8(%r15)
  0x0000000115e9cce0: je     0x0000000115e9cde2
  0x0000000115e9cce6: callq  0x0000000115e9ccf0
  0x0000000115e9cceb: jmpq   0x0000000115e9cd6b
  0x0000000115e9ccf0: lea    0x8(%rsp),%rax
  0x0000000115e9ccf5: mov    %r13,-0x38(%rbp)
  0x0000000115e9ccf9: mov    %r15,%rdi
  0x0000000115e9ccfc: mov    %rbp,0x1e8(%r15)
  0x0000000115e9cd03: mov    %rax,0x1d8(%r15)
  0x0000000115e9cd0a: test   $0xf,%esp
  0x0000000115e9cd10: je     0x0000000115e9cd28
  0x0000000115e9cd16: sub    $0x8,%rsp
  0x0000000115e9cd1a: callq  0x000000010dae5ebc
  0x0000000115e9cd1f: add    $0x8,%rsp
  0x0000000115e9cd23: jmpq   0x0000000115e9cd2d
  0x0000000115e9cd28: callq  0x000000010dae5ebc
  0x0000000115e9cd2d: movabs $0x0,%r10
  0x0000000115e9cd37: mov    %r10,0x1d8(%r15)
  0x0000000115e9cd3e: movabs $0x0,%r10
  0x0000000115e9cd48: mov    %r10,0x1e8(%r15)
  0x0000000115e9cd4f: cmpq   $0x0,0x8(%r15)
  0x0000000115e9cd57: je     0x0000000115e9cd62
  0x0000000115e9cd5d: jmpq   0x0000000115e916e0
  0x0000000115e9cd62: mov    -0x38(%rbp),%r13
  0x0000000115e9cd66: mov    -0x30(%rbp),%r14
  0x0000000115e9cd6a: retq   
  0x0000000115e9cd6b: mov    %rsp,-0x28(%rsp)
  0x0000000115e9cd70: sub    $0x80,%rsp
  0x0000000115e9cd77: mov    %rax,0x78(%rsp)
  0x0000000115e9cd7c: mov    %rcx,0x70(%rsp)
  0x0000000115e9cd81: mov    %rdx,0x68(%rsp)
  0x0000000115e9cd86: mov    %rbx,0x60(%rsp)
  0x0000000115e9cd8b: mov    %rbp,0x50(%rsp)
  0x0000000115e9cd90: mov    %rsi,0x48(%rsp)
  0x0000000115e9cd95: mov    %rdi,0x40(%rsp)
  0x0000000115e9cd9a: mov    %r8,0x38(%rsp)
  0x0000000115e9cd9f: mov    %r9,0x30(%rsp)
  0x0000000115e9cda4: mov    %r10,0x28(%rsp)
  0x0000000115e9cda9: mov    %r11,0x20(%rsp)
  0x0000000115e9cdae: mov    %r12,0x18(%rsp)
  0x0000000115e9cdb3: mov    %r13,0x10(%rsp)
  0x0000000115e9cdb8: mov    %r14,0x8(%rsp)
  0x0000000115e9cdbd: mov    %r15,(%rsp)
  0x0000000115e9cdc1: movabs $0x10ddd8000,%rdi
  0x0000000115e9cdcb: movabs $0x115e9cd6b,%rsi
  0x0000000115e9cdd5: mov    %rsp,%rdx
  0x0000000115e9cdd8: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9cddc: callq  0x000000010dc0341e
  0x0000000115e9cde1: hlt    
  0x0000000115e9cde2: movzbl 0x2(%r13),%ebx
  0x0000000115e9cde7: add    $0x2,%r13
  0x0000000115e9cdeb: movabs $0x10e0ff040,%r10
  0x0000000115e9cdf5: jmpq   *(%r10,%rbx,8)
  0x0000000115e9cdf9: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ce01: mov    -0x38(%rbp),%r13
  0x0000000115e9ce05: mov    -0x30(%rbp),%r14
  0x0000000115e9ce09: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ce11: je     0x0000000115e9cf13
  0x0000000115e9ce17: callq  0x0000000115e9ce21
  0x0000000115e9ce1c: jmpq   0x0000000115e9ce9c
  0x0000000115e9ce21: lea    0x8(%rsp),%rax
  0x0000000115e9ce26: mov    %r13,-0x38(%rbp)
  0x0000000115e9ce2a: mov    %r15,%rdi
  0x0000000115e9ce2d: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ce34: mov    %rax,0x1d8(%r15)
  0x0000000115e9ce3b: test   $0xf,%esp
  0x0000000115e9ce41: je     0x0000000115e9ce59
  0x0000000115e9ce47: sub    $0x8,%rsp
  0x0000000115e9ce4b: callq  0x000000010dae5ebc
  0x0000000115e9ce50: add    $0x8,%rsp
  0x0000000115e9ce54: jmpq   0x0000000115e9ce5e
  0x0000000115e9ce59: callq  0x000000010dae5ebc
  0x0000000115e9ce5e: movabs $0x0,%r10
  0x0000000115e9ce68: mov    %r10,0x1d8(%r15)
  0x0000000115e9ce6f: movabs $0x0,%r10
  0x0000000115e9ce79: mov    %r10,0x1e8(%r15)
  0x0000000115e9ce80: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ce88: je     0x0000000115e9ce93
  0x0000000115e9ce8e: jmpq   0x0000000115e916e0
  0x0000000115e9ce93: mov    -0x38(%rbp),%r13
  0x0000000115e9ce97: mov    -0x30(%rbp),%r14
  0x0000000115e9ce9b: retq   
  0x0000000115e9ce9c: mov    %rsp,-0x28(%rsp)
  0x0000000115e9cea1: sub    $0x80,%rsp
  0x0000000115e9cea8: mov    %rax,0x78(%rsp)
  0x0000000115e9cead: mov    %rcx,0x70(%rsp)
  0x0000000115e9ceb2: mov    %rdx,0x68(%rsp)
  0x0000000115e9ceb7: mov    %rbx,0x60(%rsp)
  0x0000000115e9cebc: mov    %rbp,0x50(%rsp)
  0x0000000115e9cec1: mov    %rsi,0x48(%rsp)
  0x0000000115e9cec6: mov    %rdi,0x40(%rsp)
  0x0000000115e9cecb: mov    %r8,0x38(%rsp)
  0x0000000115e9ced0: mov    %r9,0x30(%rsp)
  0x0000000115e9ced5: mov    %r10,0x28(%rsp)
  0x0000000115e9ceda: mov    %r11,0x20(%rsp)
  0x0000000115e9cedf: mov    %r12,0x18(%rsp)
  0x0000000115e9cee4: mov    %r13,0x10(%rsp)
  0x0000000115e9cee9: mov    %r14,0x8(%rsp)
  0x0000000115e9ceee: mov    %r15,(%rsp)
  0x0000000115e9cef2: movabs $0x10ddd8000,%rdi
  0x0000000115e9cefc: movabs $0x115e9ce9c,%rsi
  0x0000000115e9cf06: mov    %rsp,%rdx
  0x0000000115e9cf09: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9cf0d: callq  0x000000010dc0341e
  0x0000000115e9cf12: hlt    
  0x0000000115e9cf13: movzbl 0x2(%r13),%ebx
  0x0000000115e9cf18: add    $0x2,%r13
  0x0000000115e9cf1c: movabs $0x10e0ff040,%r10
  0x0000000115e9cf26: jmpq   *(%r10,%rbx,8)
  0x0000000115e9cf2a: movq   $0x0,-0x10(%rbp)
  0x0000000115e9cf32: mov    -0x38(%rbp),%r13
  0x0000000115e9cf36: mov    -0x30(%rbp),%r14
  0x0000000115e9cf3a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9cf42: je     0x0000000115e9d044
  0x0000000115e9cf48: callq  0x0000000115e9cf52
  0x0000000115e9cf4d: jmpq   0x0000000115e9cfcd
  0x0000000115e9cf52: lea    0x8(%rsp),%rax
  0x0000000115e9cf57: mov    %r13,-0x38(%rbp)
  0x0000000115e9cf5b: mov    %r15,%rdi
  0x0000000115e9cf5e: mov    %rbp,0x1e8(%r15)
  0x0000000115e9cf65: mov    %rax,0x1d8(%r15)
  0x0000000115e9cf6c: test   $0xf,%esp
  0x0000000115e9cf72: je     0x0000000115e9cf8a
  0x0000000115e9cf78: sub    $0x8,%rsp
  0x0000000115e9cf7c: callq  0x000000010dae5ebc
  0x0000000115e9cf81: add    $0x8,%rsp
  0x0000000115e9cf85: jmpq   0x0000000115e9cf8f
  0x0000000115e9cf8a: callq  0x000000010dae5ebc
  0x0000000115e9cf8f: movabs $0x0,%r10
  0x0000000115e9cf99: mov    %r10,0x1d8(%r15)
  0x0000000115e9cfa0: movabs $0x0,%r10
  0x0000000115e9cfaa: mov    %r10,0x1e8(%r15)
  0x0000000115e9cfb1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9cfb9: je     0x0000000115e9cfc4
  0x0000000115e9cfbf: jmpq   0x0000000115e916e0
  0x0000000115e9cfc4: mov    -0x38(%rbp),%r13
  0x0000000115e9cfc8: mov    -0x30(%rbp),%r14
  0x0000000115e9cfcc: retq   
  0x0000000115e9cfcd: mov    %rsp,-0x28(%rsp)
  0x0000000115e9cfd2: sub    $0x80,%rsp
  0x0000000115e9cfd9: mov    %rax,0x78(%rsp)
  0x0000000115e9cfde: mov    %rcx,0x70(%rsp)
  0x0000000115e9cfe3: mov    %rdx,0x68(%rsp)
  0x0000000115e9cfe8: mov    %rbx,0x60(%rsp)
  0x0000000115e9cfed: mov    %rbp,0x50(%rsp)
  0x0000000115e9cff2: mov    %rsi,0x48(%rsp)
  0x0000000115e9cff7: mov    %rdi,0x40(%rsp)
  0x0000000115e9cffc: mov    %r8,0x38(%rsp)
  0x0000000115e9d001: mov    %r9,0x30(%rsp)
  0x0000000115e9d006: mov    %r10,0x28(%rsp)
  0x0000000115e9d00b: mov    %r11,0x20(%rsp)
  0x0000000115e9d010: mov    %r12,0x18(%rsp)
  0x0000000115e9d015: mov    %r13,0x10(%rsp)
  0x0000000115e9d01a: mov    %r14,0x8(%rsp)
  0x0000000115e9d01f: mov    %r15,(%rsp)
  0x0000000115e9d023: movabs $0x10ddd8000,%rdi
  0x0000000115e9d02d: movabs $0x115e9cfcd,%rsi
  0x0000000115e9d037: mov    %rsp,%rdx
  0x0000000115e9d03a: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d03e: callq  0x000000010dc0341e
  0x0000000115e9d043: hlt    
  0x0000000115e9d044: movzbl 0x2(%r13),%ebx
  0x0000000115e9d049: add    $0x2,%r13
  0x0000000115e9d04d: movabs $0x10e0ff040,%r10
  0x0000000115e9d057: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d05b: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d063: mov    -0x38(%rbp),%r13
  0x0000000115e9d067: mov    -0x30(%rbp),%r14
  0x0000000115e9d06b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d073: je     0x0000000115e9d175
  0x0000000115e9d079: callq  0x0000000115e9d083
  0x0000000115e9d07e: jmpq   0x0000000115e9d0fe
  0x0000000115e9d083: lea    0x8(%rsp),%rax
  0x0000000115e9d088: mov    %r13,-0x38(%rbp)
  0x0000000115e9d08c: mov    %r15,%rdi
  0x0000000115e9d08f: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d096: mov    %rax,0x1d8(%r15)
  0x0000000115e9d09d: test   $0xf,%esp
  0x0000000115e9d0a3: je     0x0000000115e9d0bb
  0x0000000115e9d0a9: sub    $0x8,%rsp
  0x0000000115e9d0ad: callq  0x000000010dae5ebc
  0x0000000115e9d0b2: add    $0x8,%rsp
  0x0000000115e9d0b6: jmpq   0x0000000115e9d0c0
  0x0000000115e9d0bb: callq  0x000000010dae5ebc
  0x0000000115e9d0c0: movabs $0x0,%r10
  0x0000000115e9d0ca: mov    %r10,0x1d8(%r15)
  0x0000000115e9d0d1: movabs $0x0,%r10
  0x0000000115e9d0db: mov    %r10,0x1e8(%r15)
  0x0000000115e9d0e2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d0ea: je     0x0000000115e9d0f5
  0x0000000115e9d0f0: jmpq   0x0000000115e916e0
  0x0000000115e9d0f5: mov    -0x38(%rbp),%r13
  0x0000000115e9d0f9: mov    -0x30(%rbp),%r14
  0x0000000115e9d0fd: retq   
  0x0000000115e9d0fe: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d103: sub    $0x80,%rsp
  0x0000000115e9d10a: mov    %rax,0x78(%rsp)
  0x0000000115e9d10f: mov    %rcx,0x70(%rsp)
  0x0000000115e9d114: mov    %rdx,0x68(%rsp)
  0x0000000115e9d119: mov    %rbx,0x60(%rsp)
  0x0000000115e9d11e: mov    %rbp,0x50(%rsp)
  0x0000000115e9d123: mov    %rsi,0x48(%rsp)
  0x0000000115e9d128: mov    %rdi,0x40(%rsp)
  0x0000000115e9d12d: mov    %r8,0x38(%rsp)
  0x0000000115e9d132: mov    %r9,0x30(%rsp)
  0x0000000115e9d137: mov    %r10,0x28(%rsp)
  0x0000000115e9d13c: mov    %r11,0x20(%rsp)
  0x0000000115e9d141: mov    %r12,0x18(%rsp)
  0x0000000115e9d146: mov    %r13,0x10(%rsp)
  0x0000000115e9d14b: mov    %r14,0x8(%rsp)
  0x0000000115e9d150: mov    %r15,(%rsp)
  0x0000000115e9d154: movabs $0x10ddd8000,%rdi
  0x0000000115e9d15e: movabs $0x115e9d0fe,%rsi
  0x0000000115e9d168: mov    %rsp,%rdx
  0x0000000115e9d16b: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d16f: callq  0x000000010dc0341e
  0x0000000115e9d174: hlt    
  0x0000000115e9d175: movzbl 0x2(%r13),%ebx
  0x0000000115e9d17a: add    $0x2,%r13
  0x0000000115e9d17e: movabs $0x10e0ff040,%r10
  0x0000000115e9d188: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d18c: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d194: mov    -0x38(%rbp),%r13
  0x0000000115e9d198: mov    -0x30(%rbp),%r14
  0x0000000115e9d19c: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d1a4: je     0x0000000115e9d2a6
  0x0000000115e9d1aa: callq  0x0000000115e9d1b4
  0x0000000115e9d1af: jmpq   0x0000000115e9d22f
  0x0000000115e9d1b4: lea    0x8(%rsp),%rax
  0x0000000115e9d1b9: mov    %r13,-0x38(%rbp)
  0x0000000115e9d1bd: mov    %r15,%rdi
  0x0000000115e9d1c0: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d1c7: mov    %rax,0x1d8(%r15)
  0x0000000115e9d1ce: test   $0xf,%esp
  0x0000000115e9d1d4: je     0x0000000115e9d1ec
  0x0000000115e9d1da: sub    $0x8,%rsp
  0x0000000115e9d1de: callq  0x000000010dae5ebc
  0x0000000115e9d1e3: add    $0x8,%rsp
  0x0000000115e9d1e7: jmpq   0x0000000115e9d1f1
  0x0000000115e9d1ec: callq  0x000000010dae5ebc
  0x0000000115e9d1f1: movabs $0x0,%r10
  0x0000000115e9d1fb: mov    %r10,0x1d8(%r15)
  0x0000000115e9d202: movabs $0x0,%r10
  0x0000000115e9d20c: mov    %r10,0x1e8(%r15)
  0x0000000115e9d213: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d21b: je     0x0000000115e9d226
  0x0000000115e9d221: jmpq   0x0000000115e916e0
  0x0000000115e9d226: mov    -0x38(%rbp),%r13
  0x0000000115e9d22a: mov    -0x30(%rbp),%r14
  0x0000000115e9d22e: retq   
  0x0000000115e9d22f: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d234: sub    $0x80,%rsp
  0x0000000115e9d23b: mov    %rax,0x78(%rsp)
  0x0000000115e9d240: mov    %rcx,0x70(%rsp)
  0x0000000115e9d245: mov    %rdx,0x68(%rsp)
  0x0000000115e9d24a: mov    %rbx,0x60(%rsp)
  0x0000000115e9d24f: mov    %rbp,0x50(%rsp)
  0x0000000115e9d254: mov    %rsi,0x48(%rsp)
  0x0000000115e9d259: mov    %rdi,0x40(%rsp)
  0x0000000115e9d25e: mov    %r8,0x38(%rsp)
  0x0000000115e9d263: mov    %r9,0x30(%rsp)
  0x0000000115e9d268: mov    %r10,0x28(%rsp)
  0x0000000115e9d26d: mov    %r11,0x20(%rsp)
  0x0000000115e9d272: mov    %r12,0x18(%rsp)
  0x0000000115e9d277: mov    %r13,0x10(%rsp)
  0x0000000115e9d27c: mov    %r14,0x8(%rsp)
  0x0000000115e9d281: mov    %r15,(%rsp)
  0x0000000115e9d285: movabs $0x10ddd8000,%rdi
  0x0000000115e9d28f: movabs $0x115e9d22f,%rsi
  0x0000000115e9d299: mov    %rsp,%rdx
  0x0000000115e9d29c: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d2a0: callq  0x000000010dc0341e
  0x0000000115e9d2a5: hlt    
  0x0000000115e9d2a6: movzbl 0x3(%r13),%ebx
  0x0000000115e9d2ab: add    $0x3,%r13
  0x0000000115e9d2af: movabs $0x10e101840,%r10
  0x0000000115e9d2b9: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d2bd: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d2c5: mov    -0x38(%rbp),%r13
  0x0000000115e9d2c9: mov    -0x30(%rbp),%r14
  0x0000000115e9d2cd: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d2d5: je     0x0000000115e9d3d7
  0x0000000115e9d2db: callq  0x0000000115e9d2e5
  0x0000000115e9d2e0: jmpq   0x0000000115e9d360
  0x0000000115e9d2e5: lea    0x8(%rsp),%rax
  0x0000000115e9d2ea: mov    %r13,-0x38(%rbp)
  0x0000000115e9d2ee: mov    %r15,%rdi
  0x0000000115e9d2f1: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d2f8: mov    %rax,0x1d8(%r15)
  0x0000000115e9d2ff: test   $0xf,%esp
  0x0000000115e9d305: je     0x0000000115e9d31d
  0x0000000115e9d30b: sub    $0x8,%rsp
  0x0000000115e9d30f: callq  0x000000010dae5ebc
  0x0000000115e9d314: add    $0x8,%rsp
  0x0000000115e9d318: jmpq   0x0000000115e9d322
  0x0000000115e9d31d: callq  0x000000010dae5ebc
  0x0000000115e9d322: movabs $0x0,%r10
  0x0000000115e9d32c: mov    %r10,0x1d8(%r15)
  0x0000000115e9d333: movabs $0x0,%r10
  0x0000000115e9d33d: mov    %r10,0x1e8(%r15)
  0x0000000115e9d344: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d34c: je     0x0000000115e9d357
  0x0000000115e9d352: jmpq   0x0000000115e916e0
  0x0000000115e9d357: mov    -0x38(%rbp),%r13
  0x0000000115e9d35b: mov    -0x30(%rbp),%r14
  0x0000000115e9d35f: retq   
  0x0000000115e9d360: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d365: sub    $0x80,%rsp
  0x0000000115e9d36c: mov    %rax,0x78(%rsp)
  0x0000000115e9d371: mov    %rcx,0x70(%rsp)
  0x0000000115e9d376: mov    %rdx,0x68(%rsp)
  0x0000000115e9d37b: mov    %rbx,0x60(%rsp)
  0x0000000115e9d380: mov    %rbp,0x50(%rsp)
  0x0000000115e9d385: mov    %rsi,0x48(%rsp)
  0x0000000115e9d38a: mov    %rdi,0x40(%rsp)
  0x0000000115e9d38f: mov    %r8,0x38(%rsp)
  0x0000000115e9d394: mov    %r9,0x30(%rsp)
  0x0000000115e9d399: mov    %r10,0x28(%rsp)
  0x0000000115e9d39e: mov    %r11,0x20(%rsp)
  0x0000000115e9d3a3: mov    %r12,0x18(%rsp)
  0x0000000115e9d3a8: mov    %r13,0x10(%rsp)
  0x0000000115e9d3ad: mov    %r14,0x8(%rsp)
  0x0000000115e9d3b2: mov    %r15,(%rsp)
  0x0000000115e9d3b6: movabs $0x10ddd8000,%rdi
  0x0000000115e9d3c0: movabs $0x115e9d360,%rsi
  0x0000000115e9d3ca: mov    %rsp,%rdx
  0x0000000115e9d3cd: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d3d1: callq  0x000000010dc0341e
  0x0000000115e9d3d6: hlt    
  0x0000000115e9d3d7: movzbl 0x3(%r13),%ebx
  0x0000000115e9d3dc: add    $0x3,%r13
  0x0000000115e9d3e0: movabs $0x10e100840,%r10
  0x0000000115e9d3ea: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d3ee: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d3f6: mov    -0x38(%rbp),%r13
  0x0000000115e9d3fa: mov    -0x30(%rbp),%r14
  0x0000000115e9d3fe: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d406: je     0x0000000115e9d508
  0x0000000115e9d40c: callq  0x0000000115e9d416
  0x0000000115e9d411: jmpq   0x0000000115e9d491
  0x0000000115e9d416: lea    0x8(%rsp),%rax
  0x0000000115e9d41b: mov    %r13,-0x38(%rbp)
  0x0000000115e9d41f: mov    %r15,%rdi
  0x0000000115e9d422: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d429: mov    %rax,0x1d8(%r15)
  0x0000000115e9d430: test   $0xf,%esp
  0x0000000115e9d436: je     0x0000000115e9d44e
  0x0000000115e9d43c: sub    $0x8,%rsp
  0x0000000115e9d440: callq  0x000000010dae5ebc
  0x0000000115e9d445: add    $0x8,%rsp
  0x0000000115e9d449: jmpq   0x0000000115e9d453
  0x0000000115e9d44e: callq  0x000000010dae5ebc
  0x0000000115e9d453: movabs $0x0,%r10
  0x0000000115e9d45d: mov    %r10,0x1d8(%r15)
  0x0000000115e9d464: movabs $0x0,%r10
  0x0000000115e9d46e: mov    %r10,0x1e8(%r15)
  0x0000000115e9d475: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d47d: je     0x0000000115e9d488
  0x0000000115e9d483: jmpq   0x0000000115e916e0
  0x0000000115e9d488: mov    -0x38(%rbp),%r13
  0x0000000115e9d48c: mov    -0x30(%rbp),%r14
  0x0000000115e9d490: retq   
  0x0000000115e9d491: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d496: sub    $0x80,%rsp
  0x0000000115e9d49d: mov    %rax,0x78(%rsp)
  0x0000000115e9d4a2: mov    %rcx,0x70(%rsp)
  0x0000000115e9d4a7: mov    %rdx,0x68(%rsp)
  0x0000000115e9d4ac: mov    %rbx,0x60(%rsp)
  0x0000000115e9d4b1: mov    %rbp,0x50(%rsp)
  0x0000000115e9d4b6: mov    %rsi,0x48(%rsp)
  0x0000000115e9d4bb: mov    %rdi,0x40(%rsp)
  0x0000000115e9d4c0: mov    %r8,0x38(%rsp)
  0x0000000115e9d4c5: mov    %r9,0x30(%rsp)
  0x0000000115e9d4ca: mov    %r10,0x28(%rsp)
  0x0000000115e9d4cf: mov    %r11,0x20(%rsp)
  0x0000000115e9d4d4: mov    %r12,0x18(%rsp)
  0x0000000115e9d4d9: mov    %r13,0x10(%rsp)
  0x0000000115e9d4de: mov    %r14,0x8(%rsp)
  0x0000000115e9d4e3: mov    %r15,(%rsp)
  0x0000000115e9d4e7: movabs $0x10ddd8000,%rdi
  0x0000000115e9d4f1: movabs $0x115e9d491,%rsi
  0x0000000115e9d4fb: mov    %rsp,%rdx
  0x0000000115e9d4fe: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d502: callq  0x000000010dc0341e
  0x0000000115e9d507: hlt    
  0x0000000115e9d508: movzbl 0x3(%r13),%ebx
  0x0000000115e9d50d: add    $0x3,%r13
  0x0000000115e9d511: movabs $0x10e100040,%r10
  0x0000000115e9d51b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d51f: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d527: mov    -0x38(%rbp),%r13
  0x0000000115e9d52b: mov    -0x30(%rbp),%r14
  0x0000000115e9d52f: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d537: je     0x0000000115e9d639
  0x0000000115e9d53d: callq  0x0000000115e9d547
  0x0000000115e9d542: jmpq   0x0000000115e9d5c2
  0x0000000115e9d547: lea    0x8(%rsp),%rax
  0x0000000115e9d54c: mov    %r13,-0x38(%rbp)
  0x0000000115e9d550: mov    %r15,%rdi
  0x0000000115e9d553: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d55a: mov    %rax,0x1d8(%r15)
  0x0000000115e9d561: test   $0xf,%esp
  0x0000000115e9d567: je     0x0000000115e9d57f
  0x0000000115e9d56d: sub    $0x8,%rsp
  0x0000000115e9d571: callq  0x000000010dae5ebc
  0x0000000115e9d576: add    $0x8,%rsp
  0x0000000115e9d57a: jmpq   0x0000000115e9d584
  0x0000000115e9d57f: callq  0x000000010dae5ebc
  0x0000000115e9d584: movabs $0x0,%r10
  0x0000000115e9d58e: mov    %r10,0x1d8(%r15)
  0x0000000115e9d595: movabs $0x0,%r10
  0x0000000115e9d59f: mov    %r10,0x1e8(%r15)
  0x0000000115e9d5a6: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d5ae: je     0x0000000115e9d5b9
  0x0000000115e9d5b4: jmpq   0x0000000115e916e0
  0x0000000115e9d5b9: mov    -0x38(%rbp),%r13
  0x0000000115e9d5bd: mov    -0x30(%rbp),%r14
  0x0000000115e9d5c1: retq   
  0x0000000115e9d5c2: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d5c7: sub    $0x80,%rsp
  0x0000000115e9d5ce: mov    %rax,0x78(%rsp)
  0x0000000115e9d5d3: mov    %rcx,0x70(%rsp)
  0x0000000115e9d5d8: mov    %rdx,0x68(%rsp)
  0x0000000115e9d5dd: mov    %rbx,0x60(%rsp)
  0x0000000115e9d5e2: mov    %rbp,0x50(%rsp)
  0x0000000115e9d5e7: mov    %rsi,0x48(%rsp)
  0x0000000115e9d5ec: mov    %rdi,0x40(%rsp)
  0x0000000115e9d5f1: mov    %r8,0x38(%rsp)
  0x0000000115e9d5f6: mov    %r9,0x30(%rsp)
  0x0000000115e9d5fb: mov    %r10,0x28(%rsp)
  0x0000000115e9d600: mov    %r11,0x20(%rsp)
  0x0000000115e9d605: mov    %r12,0x18(%rsp)
  0x0000000115e9d60a: mov    %r13,0x10(%rsp)
  0x0000000115e9d60f: mov    %r14,0x8(%rsp)
  0x0000000115e9d614: mov    %r15,(%rsp)
  0x0000000115e9d618: movabs $0x10ddd8000,%rdi
  0x0000000115e9d622: movabs $0x115e9d5c2,%rsi
  0x0000000115e9d62c: mov    %rsp,%rdx
  0x0000000115e9d62f: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d633: callq  0x000000010dc0341e
  0x0000000115e9d638: hlt    
  0x0000000115e9d639: movzbl 0x3(%r13),%ebx
  0x0000000115e9d63e: add    $0x3,%r13
  0x0000000115e9d642: movabs $0x10e0ff840,%r10
  0x0000000115e9d64c: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d650: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d658: mov    -0x38(%rbp),%r13
  0x0000000115e9d65c: mov    -0x30(%rbp),%r14
  0x0000000115e9d660: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d668: je     0x0000000115e9d76a
  0x0000000115e9d66e: callq  0x0000000115e9d678
  0x0000000115e9d673: jmpq   0x0000000115e9d6f3
  0x0000000115e9d678: lea    0x8(%rsp),%rax
  0x0000000115e9d67d: mov    %r13,-0x38(%rbp)
  0x0000000115e9d681: mov    %r15,%rdi
  0x0000000115e9d684: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d68b: mov    %rax,0x1d8(%r15)
  0x0000000115e9d692: test   $0xf,%esp
  0x0000000115e9d698: je     0x0000000115e9d6b0
  0x0000000115e9d69e: sub    $0x8,%rsp
  0x0000000115e9d6a2: callq  0x000000010dae5ebc
  0x0000000115e9d6a7: add    $0x8,%rsp
  0x0000000115e9d6ab: jmpq   0x0000000115e9d6b5
  0x0000000115e9d6b0: callq  0x000000010dae5ebc
  0x0000000115e9d6b5: movabs $0x0,%r10
  0x0000000115e9d6bf: mov    %r10,0x1d8(%r15)
  0x0000000115e9d6c6: movabs $0x0,%r10
  0x0000000115e9d6d0: mov    %r10,0x1e8(%r15)
  0x0000000115e9d6d7: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d6df: je     0x0000000115e9d6ea
  0x0000000115e9d6e5: jmpq   0x0000000115e916e0
  0x0000000115e9d6ea: mov    -0x38(%rbp),%r13
  0x0000000115e9d6ee: mov    -0x30(%rbp),%r14
  0x0000000115e9d6f2: retq   
  0x0000000115e9d6f3: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d6f8: sub    $0x80,%rsp
  0x0000000115e9d6ff: mov    %rax,0x78(%rsp)
  0x0000000115e9d704: mov    %rcx,0x70(%rsp)
  0x0000000115e9d709: mov    %rdx,0x68(%rsp)
  0x0000000115e9d70e: mov    %rbx,0x60(%rsp)
  0x0000000115e9d713: mov    %rbp,0x50(%rsp)
  0x0000000115e9d718: mov    %rsi,0x48(%rsp)
  0x0000000115e9d71d: mov    %rdi,0x40(%rsp)
  0x0000000115e9d722: mov    %r8,0x38(%rsp)
  0x0000000115e9d727: mov    %r9,0x30(%rsp)
  0x0000000115e9d72c: mov    %r10,0x28(%rsp)
  0x0000000115e9d731: mov    %r11,0x20(%rsp)
  0x0000000115e9d736: mov    %r12,0x18(%rsp)
  0x0000000115e9d73b: mov    %r13,0x10(%rsp)
  0x0000000115e9d740: mov    %r14,0x8(%rsp)
  0x0000000115e9d745: mov    %r15,(%rsp)
  0x0000000115e9d749: movabs $0x10ddd8000,%rdi
  0x0000000115e9d753: movabs $0x115e9d6f3,%rsi
  0x0000000115e9d75d: mov    %rsp,%rdx
  0x0000000115e9d760: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d764: callq  0x000000010dc0341e
  0x0000000115e9d769: hlt    
  0x0000000115e9d76a: movzbl 0x3(%r13),%ebx
  0x0000000115e9d76f: add    $0x3,%r13
  0x0000000115e9d773: movabs $0x10e0ff040,%r10
  0x0000000115e9d77d: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d781: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d789: mov    -0x38(%rbp),%r13
  0x0000000115e9d78d: mov    -0x30(%rbp),%r14
  0x0000000115e9d791: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d799: je     0x0000000115e9d89b
  0x0000000115e9d79f: callq  0x0000000115e9d7a9
  0x0000000115e9d7a4: jmpq   0x0000000115e9d824
  0x0000000115e9d7a9: lea    0x8(%rsp),%rax
  0x0000000115e9d7ae: mov    %r13,-0x38(%rbp)
  0x0000000115e9d7b2: mov    %r15,%rdi
  0x0000000115e9d7b5: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d7bc: mov    %rax,0x1d8(%r15)
  0x0000000115e9d7c3: test   $0xf,%esp
  0x0000000115e9d7c9: je     0x0000000115e9d7e1
  0x0000000115e9d7cf: sub    $0x8,%rsp
  0x0000000115e9d7d3: callq  0x000000010dae5ebc
  0x0000000115e9d7d8: add    $0x8,%rsp
  0x0000000115e9d7dc: jmpq   0x0000000115e9d7e6
  0x0000000115e9d7e1: callq  0x000000010dae5ebc
  0x0000000115e9d7e6: movabs $0x0,%r10
  0x0000000115e9d7f0: mov    %r10,0x1d8(%r15)
  0x0000000115e9d7f7: movabs $0x0,%r10
  0x0000000115e9d801: mov    %r10,0x1e8(%r15)
  0x0000000115e9d808: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d810: je     0x0000000115e9d81b
  0x0000000115e9d816: jmpq   0x0000000115e916e0
  0x0000000115e9d81b: mov    -0x38(%rbp),%r13
  0x0000000115e9d81f: mov    -0x30(%rbp),%r14
  0x0000000115e9d823: retq   
  0x0000000115e9d824: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d829: sub    $0x80,%rsp
  0x0000000115e9d830: mov    %rax,0x78(%rsp)
  0x0000000115e9d835: mov    %rcx,0x70(%rsp)
  0x0000000115e9d83a: mov    %rdx,0x68(%rsp)
  0x0000000115e9d83f: mov    %rbx,0x60(%rsp)
  0x0000000115e9d844: mov    %rbp,0x50(%rsp)
  0x0000000115e9d849: mov    %rsi,0x48(%rsp)
  0x0000000115e9d84e: mov    %rdi,0x40(%rsp)
  0x0000000115e9d853: mov    %r8,0x38(%rsp)
  0x0000000115e9d858: mov    %r9,0x30(%rsp)
  0x0000000115e9d85d: mov    %r10,0x28(%rsp)
  0x0000000115e9d862: mov    %r11,0x20(%rsp)
  0x0000000115e9d867: mov    %r12,0x18(%rsp)
  0x0000000115e9d86c: mov    %r13,0x10(%rsp)
  0x0000000115e9d871: mov    %r14,0x8(%rsp)
  0x0000000115e9d876: mov    %r15,(%rsp)
  0x0000000115e9d87a: movabs $0x10ddd8000,%rdi
  0x0000000115e9d884: movabs $0x115e9d824,%rsi
  0x0000000115e9d88e: mov    %rsp,%rdx
  0x0000000115e9d891: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d895: callq  0x000000010dc0341e
  0x0000000115e9d89a: hlt    
  0x0000000115e9d89b: movzbl 0x3(%r13),%ebx
  0x0000000115e9d8a0: add    $0x3,%r13
  0x0000000115e9d8a4: movabs $0x10e101040,%r10
  0x0000000115e9d8ae: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d8b2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d8ba: mov    -0x38(%rbp),%r13
  0x0000000115e9d8be: mov    -0x30(%rbp),%r14
  0x0000000115e9d8c2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d8ca: je     0x0000000115e9d9cc
  0x0000000115e9d8d0: callq  0x0000000115e9d8da
  0x0000000115e9d8d5: jmpq   0x0000000115e9d955
  0x0000000115e9d8da: lea    0x8(%rsp),%rax
  0x0000000115e9d8df: mov    %r13,-0x38(%rbp)
  0x0000000115e9d8e3: mov    %r15,%rdi
  0x0000000115e9d8e6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9d8ed: mov    %rax,0x1d8(%r15)
  0x0000000115e9d8f4: test   $0xf,%esp
  0x0000000115e9d8fa: je     0x0000000115e9d912
  0x0000000115e9d900: sub    $0x8,%rsp
  0x0000000115e9d904: callq  0x000000010dae5ebc
  0x0000000115e9d909: add    $0x8,%rsp
  0x0000000115e9d90d: jmpq   0x0000000115e9d917
  0x0000000115e9d912: callq  0x000000010dae5ebc
  0x0000000115e9d917: movabs $0x0,%r10
  0x0000000115e9d921: mov    %r10,0x1d8(%r15)
  0x0000000115e9d928: movabs $0x0,%r10
  0x0000000115e9d932: mov    %r10,0x1e8(%r15)
  0x0000000115e9d939: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d941: je     0x0000000115e9d94c
  0x0000000115e9d947: jmpq   0x0000000115e916e0
  0x0000000115e9d94c: mov    -0x38(%rbp),%r13
  0x0000000115e9d950: mov    -0x30(%rbp),%r14
  0x0000000115e9d954: retq   
  0x0000000115e9d955: mov    %rsp,-0x28(%rsp)
  0x0000000115e9d95a: sub    $0x80,%rsp
  0x0000000115e9d961: mov    %rax,0x78(%rsp)
  0x0000000115e9d966: mov    %rcx,0x70(%rsp)
  0x0000000115e9d96b: mov    %rdx,0x68(%rsp)
  0x0000000115e9d970: mov    %rbx,0x60(%rsp)
  0x0000000115e9d975: mov    %rbp,0x50(%rsp)
  0x0000000115e9d97a: mov    %rsi,0x48(%rsp)
  0x0000000115e9d97f: mov    %rdi,0x40(%rsp)
  0x0000000115e9d984: mov    %r8,0x38(%rsp)
  0x0000000115e9d989: mov    %r9,0x30(%rsp)
  0x0000000115e9d98e: mov    %r10,0x28(%rsp)
  0x0000000115e9d993: mov    %r11,0x20(%rsp)
  0x0000000115e9d998: mov    %r12,0x18(%rsp)
  0x0000000115e9d99d: mov    %r13,0x10(%rsp)
  0x0000000115e9d9a2: mov    %r14,0x8(%rsp)
  0x0000000115e9d9a7: mov    %r15,(%rsp)
  0x0000000115e9d9ab: movabs $0x10ddd8000,%rdi
  0x0000000115e9d9b5: movabs $0x115e9d955,%rsi
  0x0000000115e9d9bf: mov    %rsp,%rdx
  0x0000000115e9d9c2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9d9c6: callq  0x000000010dc0341e
  0x0000000115e9d9cb: hlt    
  0x0000000115e9d9cc: movzbl 0x3(%r13),%ebx
  0x0000000115e9d9d1: add    $0x3,%r13
  0x0000000115e9d9d5: movabs $0x10e0ff040,%r10
  0x0000000115e9d9df: jmpq   *(%r10,%rbx,8)
  0x0000000115e9d9e3: movq   $0x0,-0x10(%rbp)
  0x0000000115e9d9eb: mov    -0x38(%rbp),%r13
  0x0000000115e9d9ef: mov    -0x30(%rbp),%r14
  0x0000000115e9d9f3: cmpq   $0x0,0x8(%r15)
  0x0000000115e9d9fb: je     0x0000000115e9dafd
  0x0000000115e9da01: callq  0x0000000115e9da0b
  0x0000000115e9da06: jmpq   0x0000000115e9da86
  0x0000000115e9da0b: lea    0x8(%rsp),%rax
  0x0000000115e9da10: mov    %r13,-0x38(%rbp)
  0x0000000115e9da14: mov    %r15,%rdi
  0x0000000115e9da17: mov    %rbp,0x1e8(%r15)
  0x0000000115e9da1e: mov    %rax,0x1d8(%r15)
  0x0000000115e9da25: test   $0xf,%esp
  0x0000000115e9da2b: je     0x0000000115e9da43
  0x0000000115e9da31: sub    $0x8,%rsp
  0x0000000115e9da35: callq  0x000000010dae5ebc
  0x0000000115e9da3a: add    $0x8,%rsp
  0x0000000115e9da3e: jmpq   0x0000000115e9da48
  0x0000000115e9da43: callq  0x000000010dae5ebc
  0x0000000115e9da48: movabs $0x0,%r10
  0x0000000115e9da52: mov    %r10,0x1d8(%r15)
  0x0000000115e9da59: movabs $0x0,%r10
  0x0000000115e9da63: mov    %r10,0x1e8(%r15)
  0x0000000115e9da6a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9da72: je     0x0000000115e9da7d
  0x0000000115e9da78: jmpq   0x0000000115e916e0
  0x0000000115e9da7d: mov    -0x38(%rbp),%r13
  0x0000000115e9da81: mov    -0x30(%rbp),%r14
  0x0000000115e9da85: retq   
  0x0000000115e9da86: mov    %rsp,-0x28(%rsp)
  0x0000000115e9da8b: sub    $0x80,%rsp
  0x0000000115e9da92: mov    %rax,0x78(%rsp)
  0x0000000115e9da97: mov    %rcx,0x70(%rsp)
  0x0000000115e9da9c: mov    %rdx,0x68(%rsp)
  0x0000000115e9daa1: mov    %rbx,0x60(%rsp)
  0x0000000115e9daa6: mov    %rbp,0x50(%rsp)
  0x0000000115e9daab: mov    %rsi,0x48(%rsp)
  0x0000000115e9dab0: mov    %rdi,0x40(%rsp)
  0x0000000115e9dab5: mov    %r8,0x38(%rsp)
  0x0000000115e9daba: mov    %r9,0x30(%rsp)
  0x0000000115e9dabf: mov    %r10,0x28(%rsp)
  0x0000000115e9dac4: mov    %r11,0x20(%rsp)
  0x0000000115e9dac9: mov    %r12,0x18(%rsp)
  0x0000000115e9dace: mov    %r13,0x10(%rsp)
  0x0000000115e9dad3: mov    %r14,0x8(%rsp)
  0x0000000115e9dad8: mov    %r15,(%rsp)
  0x0000000115e9dadc: movabs $0x10ddd8000,%rdi
  0x0000000115e9dae6: movabs $0x115e9da86,%rsi
  0x0000000115e9daf0: mov    %rsp,%rdx
  0x0000000115e9daf3: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9daf7: callq  0x000000010dc0341e
  0x0000000115e9dafc: hlt    
  0x0000000115e9dafd: movzbl 0x3(%r13),%ebx
  0x0000000115e9db02: add    $0x3,%r13
  0x0000000115e9db06: movabs $0x10e0ff040,%r10
  0x0000000115e9db10: jmpq   *(%r10,%rbx,8)
  0x0000000115e9db14: movq   $0x0,-0x10(%rbp)
  0x0000000115e9db1c: mov    -0x38(%rbp),%r13
  0x0000000115e9db20: mov    -0x30(%rbp),%r14
  0x0000000115e9db24: cmpq   $0x0,0x8(%r15)
  0x0000000115e9db2c: je     0x0000000115e9dc2e
  0x0000000115e9db32: callq  0x0000000115e9db3c
  0x0000000115e9db37: jmpq   0x0000000115e9dbb7
  0x0000000115e9db3c: lea    0x8(%rsp),%rax
  0x0000000115e9db41: mov    %r13,-0x38(%rbp)
  0x0000000115e9db45: mov    %r15,%rdi
  0x0000000115e9db48: mov    %rbp,0x1e8(%r15)
  0x0000000115e9db4f: mov    %rax,0x1d8(%r15)
  0x0000000115e9db56: test   $0xf,%esp
  0x0000000115e9db5c: je     0x0000000115e9db74
  0x0000000115e9db62: sub    $0x8,%rsp
  0x0000000115e9db66: callq  0x000000010dae5ebc
  0x0000000115e9db6b: add    $0x8,%rsp
  0x0000000115e9db6f: jmpq   0x0000000115e9db79
  0x0000000115e9db74: callq  0x000000010dae5ebc
  0x0000000115e9db79: movabs $0x0,%r10
  0x0000000115e9db83: mov    %r10,0x1d8(%r15)
  0x0000000115e9db8a: movabs $0x0,%r10
  0x0000000115e9db94: mov    %r10,0x1e8(%r15)
  0x0000000115e9db9b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9dba3: je     0x0000000115e9dbae
  0x0000000115e9dba9: jmpq   0x0000000115e916e0
  0x0000000115e9dbae: mov    -0x38(%rbp),%r13
  0x0000000115e9dbb2: mov    -0x30(%rbp),%r14
  0x0000000115e9dbb6: retq   
  0x0000000115e9dbb7: mov    %rsp,-0x28(%rsp)
  0x0000000115e9dbbc: sub    $0x80,%rsp
  0x0000000115e9dbc3: mov    %rax,0x78(%rsp)
  0x0000000115e9dbc8: mov    %rcx,0x70(%rsp)
  0x0000000115e9dbcd: mov    %rdx,0x68(%rsp)
  0x0000000115e9dbd2: mov    %rbx,0x60(%rsp)
  0x0000000115e9dbd7: mov    %rbp,0x50(%rsp)
  0x0000000115e9dbdc: mov    %rsi,0x48(%rsp)
  0x0000000115e9dbe1: mov    %rdi,0x40(%rsp)
  0x0000000115e9dbe6: mov    %r8,0x38(%rsp)
  0x0000000115e9dbeb: mov    %r9,0x30(%rsp)
  0x0000000115e9dbf0: mov    %r10,0x28(%rsp)
  0x0000000115e9dbf5: mov    %r11,0x20(%rsp)
  0x0000000115e9dbfa: mov    %r12,0x18(%rsp)
  0x0000000115e9dbff: mov    %r13,0x10(%rsp)
  0x0000000115e9dc04: mov    %r14,0x8(%rsp)
  0x0000000115e9dc09: mov    %r15,(%rsp)
  0x0000000115e9dc0d: movabs $0x10ddd8000,%rdi
  0x0000000115e9dc17: movabs $0x115e9dbb7,%rsi
  0x0000000115e9dc21: mov    %rsp,%rdx
  0x0000000115e9dc24: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9dc28: callq  0x000000010dc0341e
  0x0000000115e9dc2d: hlt    
  0x0000000115e9dc2e: movzbl 0x3(%r13),%ebx
  0x0000000115e9dc33: add    $0x3,%r13
  0x0000000115e9dc37: movabs $0x10e0ff040,%r10
  0x0000000115e9dc41: jmpq   *(%r10,%rbx,8)
  0x0000000115e9dc45: movq   $0x0,-0x10(%rbp)
  0x0000000115e9dc4d: mov    -0x38(%rbp),%r13
  0x0000000115e9dc51: mov    -0x30(%rbp),%r14
  0x0000000115e9dc55: cmpq   $0x0,0x8(%r15)
  0x0000000115e9dc5d: je     0x0000000115e9dd5f
  0x0000000115e9dc63: callq  0x0000000115e9dc6d
  0x0000000115e9dc68: jmpq   0x0000000115e9dce8
  0x0000000115e9dc6d: lea    0x8(%rsp),%rax
  0x0000000115e9dc72: mov    %r13,-0x38(%rbp)
  0x0000000115e9dc76: mov    %r15,%rdi
  0x0000000115e9dc79: mov    %rbp,0x1e8(%r15)
  0x0000000115e9dc80: mov    %rax,0x1d8(%r15)
  0x0000000115e9dc87: test   $0xf,%esp
  0x0000000115e9dc8d: je     0x0000000115e9dca5
  0x0000000115e9dc93: sub    $0x8,%rsp
  0x0000000115e9dc97: callq  0x000000010dae5ebc
  0x0000000115e9dc9c: add    $0x8,%rsp
  0x0000000115e9dca0: jmpq   0x0000000115e9dcaa
  0x0000000115e9dca5: callq  0x000000010dae5ebc
  0x0000000115e9dcaa: movabs $0x0,%r10
  0x0000000115e9dcb4: mov    %r10,0x1d8(%r15)
  0x0000000115e9dcbb: movabs $0x0,%r10
  0x0000000115e9dcc5: mov    %r10,0x1e8(%r15)
  0x0000000115e9dccc: cmpq   $0x0,0x8(%r15)
  0x0000000115e9dcd4: je     0x0000000115e9dcdf
  0x0000000115e9dcda: jmpq   0x0000000115e916e0
  0x0000000115e9dcdf: mov    -0x38(%rbp),%r13
  0x0000000115e9dce3: mov    -0x30(%rbp),%r14
  0x0000000115e9dce7: retq   
  0x0000000115e9dce8: mov    %rsp,-0x28(%rsp)
  0x0000000115e9dced: sub    $0x80,%rsp
  0x0000000115e9dcf4: mov    %rax,0x78(%rsp)
  0x0000000115e9dcf9: mov    %rcx,0x70(%rsp)
  0x0000000115e9dcfe: mov    %rdx,0x68(%rsp)
  0x0000000115e9dd03: mov    %rbx,0x60(%rsp)
  0x0000000115e9dd08: mov    %rbp,0x50(%rsp)
  0x0000000115e9dd0d: mov    %rsi,0x48(%rsp)
  0x0000000115e9dd12: mov    %rdi,0x40(%rsp)
  0x0000000115e9dd17: mov    %r8,0x38(%rsp)
  0x0000000115e9dd1c: mov    %r9,0x30(%rsp)
  0x0000000115e9dd21: mov    %r10,0x28(%rsp)
  0x0000000115e9dd26: mov    %r11,0x20(%rsp)
  0x0000000115e9dd2b: mov    %r12,0x18(%rsp)
  0x0000000115e9dd30: mov    %r13,0x10(%rsp)
  0x0000000115e9dd35: mov    %r14,0x8(%rsp)
  0x0000000115e9dd3a: mov    %r15,(%rsp)
  0x0000000115e9dd3e: movabs $0x10ddd8000,%rdi
  0x0000000115e9dd48: movabs $0x115e9dce8,%rsi
  0x0000000115e9dd52: mov    %rsp,%rdx
  0x0000000115e9dd55: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9dd59: callq  0x000000010dc0341e
  0x0000000115e9dd5e: hlt    
  0x0000000115e9dd5f: movzbl 0x3(%r13),%ebx
  0x0000000115e9dd64: add    $0x3,%r13
  0x0000000115e9dd68: movabs $0x10e0ff040,%r10
  0x0000000115e9dd72: jmpq   *(%r10,%rbx,8)
  0x0000000115e9dd76: movq   $0x0,-0x10(%rbp)
  0x0000000115e9dd7e: mov    -0x38(%rbp),%r13
  0x0000000115e9dd82: mov    -0x30(%rbp),%r14
  0x0000000115e9dd86: cmpq   $0x0,0x8(%r15)
  0x0000000115e9dd8e: je     0x0000000115e9de90
  0x0000000115e9dd94: callq  0x0000000115e9dd9e
  0x0000000115e9dd99: jmpq   0x0000000115e9de19
  0x0000000115e9dd9e: lea    0x8(%rsp),%rax
  0x0000000115e9dda3: mov    %r13,-0x38(%rbp)
  0x0000000115e9dda7: mov    %r15,%rdi
  0x0000000115e9ddaa: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ddb1: mov    %rax,0x1d8(%r15)
  0x0000000115e9ddb8: test   $0xf,%esp
  0x0000000115e9ddbe: je     0x0000000115e9ddd6
  0x0000000115e9ddc4: sub    $0x8,%rsp
  0x0000000115e9ddc8: callq  0x000000010dae5ebc
  0x0000000115e9ddcd: add    $0x8,%rsp
  0x0000000115e9ddd1: jmpq   0x0000000115e9dddb
  0x0000000115e9ddd6: callq  0x000000010dae5ebc
  0x0000000115e9dddb: movabs $0x0,%r10
  0x0000000115e9dde5: mov    %r10,0x1d8(%r15)
  0x0000000115e9ddec: movabs $0x0,%r10
  0x0000000115e9ddf6: mov    %r10,0x1e8(%r15)
  0x0000000115e9ddfd: cmpq   $0x0,0x8(%r15)
  0x0000000115e9de05: je     0x0000000115e9de10
  0x0000000115e9de0b: jmpq   0x0000000115e916e0
  0x0000000115e9de10: mov    -0x38(%rbp),%r13
  0x0000000115e9de14: mov    -0x30(%rbp),%r14
  0x0000000115e9de18: retq   
  0x0000000115e9de19: mov    %rsp,-0x28(%rsp)
  0x0000000115e9de1e: sub    $0x80,%rsp
  0x0000000115e9de25: mov    %rax,0x78(%rsp)
  0x0000000115e9de2a: mov    %rcx,0x70(%rsp)
  0x0000000115e9de2f: mov    %rdx,0x68(%rsp)
  0x0000000115e9de34: mov    %rbx,0x60(%rsp)
  0x0000000115e9de39: mov    %rbp,0x50(%rsp)
  0x0000000115e9de3e: mov    %rsi,0x48(%rsp)
  0x0000000115e9de43: mov    %rdi,0x40(%rsp)
  0x0000000115e9de48: mov    %r8,0x38(%rsp)
  0x0000000115e9de4d: mov    %r9,0x30(%rsp)
  0x0000000115e9de52: mov    %r10,0x28(%rsp)
  0x0000000115e9de57: mov    %r11,0x20(%rsp)
  0x0000000115e9de5c: mov    %r12,0x18(%rsp)
  0x0000000115e9de61: mov    %r13,0x10(%rsp)
  0x0000000115e9de66: mov    %r14,0x8(%rsp)
  0x0000000115e9de6b: mov    %r15,(%rsp)
  0x0000000115e9de6f: movabs $0x10ddd8000,%rdi
  0x0000000115e9de79: movabs $0x115e9de19,%rsi
  0x0000000115e9de83: mov    %rsp,%rdx
  0x0000000115e9de86: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9de8a: callq  0x000000010dc0341e
  0x0000000115e9de8f: hlt    
  0x0000000115e9de90: movzbl 0x4(%r13),%ebx
  0x0000000115e9de95: add    $0x4,%r13
  0x0000000115e9de99: movabs $0x10e101840,%r10
  0x0000000115e9dea3: jmpq   *(%r10,%rbx,8)
  0x0000000115e9dea7: movq   $0x0,-0x10(%rbp)
  0x0000000115e9deaf: mov    -0x38(%rbp),%r13
  0x0000000115e9deb3: mov    -0x30(%rbp),%r14
  0x0000000115e9deb7: cmpq   $0x0,0x8(%r15)
  0x0000000115e9debf: je     0x0000000115e9dfc1
  0x0000000115e9dec5: callq  0x0000000115e9decf
  0x0000000115e9deca: jmpq   0x0000000115e9df4a
  0x0000000115e9decf: lea    0x8(%rsp),%rax
  0x0000000115e9ded4: mov    %r13,-0x38(%rbp)
  0x0000000115e9ded8: mov    %r15,%rdi
  0x0000000115e9dedb: mov    %rbp,0x1e8(%r15)
  0x0000000115e9dee2: mov    %rax,0x1d8(%r15)
  0x0000000115e9dee9: test   $0xf,%esp
  0x0000000115e9deef: je     0x0000000115e9df07
  0x0000000115e9def5: sub    $0x8,%rsp
  0x0000000115e9def9: callq  0x000000010dae5ebc
  0x0000000115e9defe: add    $0x8,%rsp
  0x0000000115e9df02: jmpq   0x0000000115e9df0c
  0x0000000115e9df07: callq  0x000000010dae5ebc
  0x0000000115e9df0c: movabs $0x0,%r10
  0x0000000115e9df16: mov    %r10,0x1d8(%r15)
  0x0000000115e9df1d: movabs $0x0,%r10
  0x0000000115e9df27: mov    %r10,0x1e8(%r15)
  0x0000000115e9df2e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9df36: je     0x0000000115e9df41
  0x0000000115e9df3c: jmpq   0x0000000115e916e0
  0x0000000115e9df41: mov    -0x38(%rbp),%r13
  0x0000000115e9df45: mov    -0x30(%rbp),%r14
  0x0000000115e9df49: retq   
  0x0000000115e9df4a: mov    %rsp,-0x28(%rsp)
  0x0000000115e9df4f: sub    $0x80,%rsp
  0x0000000115e9df56: mov    %rax,0x78(%rsp)
  0x0000000115e9df5b: mov    %rcx,0x70(%rsp)
  0x0000000115e9df60: mov    %rdx,0x68(%rsp)
  0x0000000115e9df65: mov    %rbx,0x60(%rsp)
  0x0000000115e9df6a: mov    %rbp,0x50(%rsp)
  0x0000000115e9df6f: mov    %rsi,0x48(%rsp)
  0x0000000115e9df74: mov    %rdi,0x40(%rsp)
  0x0000000115e9df79: mov    %r8,0x38(%rsp)
  0x0000000115e9df7e: mov    %r9,0x30(%rsp)
  0x0000000115e9df83: mov    %r10,0x28(%rsp)
  0x0000000115e9df88: mov    %r11,0x20(%rsp)
  0x0000000115e9df8d: mov    %r12,0x18(%rsp)
  0x0000000115e9df92: mov    %r13,0x10(%rsp)
  0x0000000115e9df97: mov    %r14,0x8(%rsp)
  0x0000000115e9df9c: mov    %r15,(%rsp)
  0x0000000115e9dfa0: movabs $0x10ddd8000,%rdi
  0x0000000115e9dfaa: movabs $0x115e9df4a,%rsi
  0x0000000115e9dfb4: mov    %rsp,%rdx
  0x0000000115e9dfb7: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9dfbb: callq  0x000000010dc0341e
  0x0000000115e9dfc0: hlt    
  0x0000000115e9dfc1: movzbl 0x4(%r13),%ebx
  0x0000000115e9dfc6: add    $0x4,%r13
  0x0000000115e9dfca: movabs $0x10e100840,%r10
  0x0000000115e9dfd4: jmpq   *(%r10,%rbx,8)
  0x0000000115e9dfd8: movq   $0x0,-0x10(%rbp)
  0x0000000115e9dfe0: mov    -0x38(%rbp),%r13
  0x0000000115e9dfe4: mov    -0x30(%rbp),%r14
  0x0000000115e9dfe8: cmpq   $0x0,0x8(%r15)
  0x0000000115e9dff0: je     0x0000000115e9e0f2
  0x0000000115e9dff6: callq  0x0000000115e9e000
  0x0000000115e9dffb: jmpq   0x0000000115e9e07b
  0x0000000115e9e000: lea    0x8(%rsp),%rax
  0x0000000115e9e005: mov    %r13,-0x38(%rbp)
  0x0000000115e9e009: mov    %r15,%rdi
  0x0000000115e9e00c: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e013: mov    %rax,0x1d8(%r15)
  0x0000000115e9e01a: test   $0xf,%esp
  0x0000000115e9e020: je     0x0000000115e9e038
  0x0000000115e9e026: sub    $0x8,%rsp
  0x0000000115e9e02a: callq  0x000000010dae5ebc
  0x0000000115e9e02f: add    $0x8,%rsp
  0x0000000115e9e033: jmpq   0x0000000115e9e03d
  0x0000000115e9e038: callq  0x000000010dae5ebc
  0x0000000115e9e03d: movabs $0x0,%r10
  0x0000000115e9e047: mov    %r10,0x1d8(%r15)
  0x0000000115e9e04e: movabs $0x0,%r10
  0x0000000115e9e058: mov    %r10,0x1e8(%r15)
  0x0000000115e9e05f: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e067: je     0x0000000115e9e072
  0x0000000115e9e06d: jmpq   0x0000000115e916e0
  0x0000000115e9e072: mov    -0x38(%rbp),%r13
  0x0000000115e9e076: mov    -0x30(%rbp),%r14
  0x0000000115e9e07a: retq   
  0x0000000115e9e07b: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e080: sub    $0x80,%rsp
  0x0000000115e9e087: mov    %rax,0x78(%rsp)
  0x0000000115e9e08c: mov    %rcx,0x70(%rsp)
  0x0000000115e9e091: mov    %rdx,0x68(%rsp)
  0x0000000115e9e096: mov    %rbx,0x60(%rsp)
  0x0000000115e9e09b: mov    %rbp,0x50(%rsp)
  0x0000000115e9e0a0: mov    %rsi,0x48(%rsp)
  0x0000000115e9e0a5: mov    %rdi,0x40(%rsp)
  0x0000000115e9e0aa: mov    %r8,0x38(%rsp)
  0x0000000115e9e0af: mov    %r9,0x30(%rsp)
  0x0000000115e9e0b4: mov    %r10,0x28(%rsp)
  0x0000000115e9e0b9: mov    %r11,0x20(%rsp)
  0x0000000115e9e0be: mov    %r12,0x18(%rsp)
  0x0000000115e9e0c3: mov    %r13,0x10(%rsp)
  0x0000000115e9e0c8: mov    %r14,0x8(%rsp)
  0x0000000115e9e0cd: mov    %r15,(%rsp)
  0x0000000115e9e0d1: movabs $0x10ddd8000,%rdi
  0x0000000115e9e0db: movabs $0x115e9e07b,%rsi
  0x0000000115e9e0e5: mov    %rsp,%rdx
  0x0000000115e9e0e8: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e0ec: callq  0x000000010dc0341e
  0x0000000115e9e0f1: hlt    
  0x0000000115e9e0f2: movzbl 0x4(%r13),%ebx
  0x0000000115e9e0f7: add    $0x4,%r13
  0x0000000115e9e0fb: movabs $0x10e100040,%r10
  0x0000000115e9e105: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e109: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e111: mov    -0x38(%rbp),%r13
  0x0000000115e9e115: mov    -0x30(%rbp),%r14
  0x0000000115e9e119: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e121: je     0x0000000115e9e223
  0x0000000115e9e127: callq  0x0000000115e9e131
  0x0000000115e9e12c: jmpq   0x0000000115e9e1ac
  0x0000000115e9e131: lea    0x8(%rsp),%rax
  0x0000000115e9e136: mov    %r13,-0x38(%rbp)
  0x0000000115e9e13a: mov    %r15,%rdi
  0x0000000115e9e13d: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e144: mov    %rax,0x1d8(%r15)
  0x0000000115e9e14b: test   $0xf,%esp
  0x0000000115e9e151: je     0x0000000115e9e169
  0x0000000115e9e157: sub    $0x8,%rsp
  0x0000000115e9e15b: callq  0x000000010dae5ebc
  0x0000000115e9e160: add    $0x8,%rsp
  0x0000000115e9e164: jmpq   0x0000000115e9e16e
  0x0000000115e9e169: callq  0x000000010dae5ebc
  0x0000000115e9e16e: movabs $0x0,%r10
  0x0000000115e9e178: mov    %r10,0x1d8(%r15)
  0x0000000115e9e17f: movabs $0x0,%r10
  0x0000000115e9e189: mov    %r10,0x1e8(%r15)
  0x0000000115e9e190: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e198: je     0x0000000115e9e1a3
  0x0000000115e9e19e: jmpq   0x0000000115e916e0
  0x0000000115e9e1a3: mov    -0x38(%rbp),%r13
  0x0000000115e9e1a7: mov    -0x30(%rbp),%r14
  0x0000000115e9e1ab: retq   
  0x0000000115e9e1ac: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e1b1: sub    $0x80,%rsp
  0x0000000115e9e1b8: mov    %rax,0x78(%rsp)
  0x0000000115e9e1bd: mov    %rcx,0x70(%rsp)
  0x0000000115e9e1c2: mov    %rdx,0x68(%rsp)
  0x0000000115e9e1c7: mov    %rbx,0x60(%rsp)
  0x0000000115e9e1cc: mov    %rbp,0x50(%rsp)
  0x0000000115e9e1d1: mov    %rsi,0x48(%rsp)
  0x0000000115e9e1d6: mov    %rdi,0x40(%rsp)
  0x0000000115e9e1db: mov    %r8,0x38(%rsp)
  0x0000000115e9e1e0: mov    %r9,0x30(%rsp)
  0x0000000115e9e1e5: mov    %r10,0x28(%rsp)
  0x0000000115e9e1ea: mov    %r11,0x20(%rsp)
  0x0000000115e9e1ef: mov    %r12,0x18(%rsp)
  0x0000000115e9e1f4: mov    %r13,0x10(%rsp)
  0x0000000115e9e1f9: mov    %r14,0x8(%rsp)
  0x0000000115e9e1fe: mov    %r15,(%rsp)
  0x0000000115e9e202: movabs $0x10ddd8000,%rdi
  0x0000000115e9e20c: movabs $0x115e9e1ac,%rsi
  0x0000000115e9e216: mov    %rsp,%rdx
  0x0000000115e9e219: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e21d: callq  0x000000010dc0341e
  0x0000000115e9e222: hlt    
  0x0000000115e9e223: movzbl 0x4(%r13),%ebx
  0x0000000115e9e228: add    $0x4,%r13
  0x0000000115e9e22c: movabs $0x10e0ff840,%r10
  0x0000000115e9e236: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e23a: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e242: mov    -0x38(%rbp),%r13
  0x0000000115e9e246: mov    -0x30(%rbp),%r14
  0x0000000115e9e24a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e252: je     0x0000000115e9e354
  0x0000000115e9e258: callq  0x0000000115e9e262
  0x0000000115e9e25d: jmpq   0x0000000115e9e2dd
  0x0000000115e9e262: lea    0x8(%rsp),%rax
  0x0000000115e9e267: mov    %r13,-0x38(%rbp)
  0x0000000115e9e26b: mov    %r15,%rdi
  0x0000000115e9e26e: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e275: mov    %rax,0x1d8(%r15)
  0x0000000115e9e27c: test   $0xf,%esp
  0x0000000115e9e282: je     0x0000000115e9e29a
  0x0000000115e9e288: sub    $0x8,%rsp
  0x0000000115e9e28c: callq  0x000000010dae5ebc
  0x0000000115e9e291: add    $0x8,%rsp
  0x0000000115e9e295: jmpq   0x0000000115e9e29f
  0x0000000115e9e29a: callq  0x000000010dae5ebc
  0x0000000115e9e29f: movabs $0x0,%r10
  0x0000000115e9e2a9: mov    %r10,0x1d8(%r15)
  0x0000000115e9e2b0: movabs $0x0,%r10
  0x0000000115e9e2ba: mov    %r10,0x1e8(%r15)
  0x0000000115e9e2c1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e2c9: je     0x0000000115e9e2d4
  0x0000000115e9e2cf: jmpq   0x0000000115e916e0
  0x0000000115e9e2d4: mov    -0x38(%rbp),%r13
  0x0000000115e9e2d8: mov    -0x30(%rbp),%r14
  0x0000000115e9e2dc: retq   
  0x0000000115e9e2dd: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e2e2: sub    $0x80,%rsp
  0x0000000115e9e2e9: mov    %rax,0x78(%rsp)
  0x0000000115e9e2ee: mov    %rcx,0x70(%rsp)
  0x0000000115e9e2f3: mov    %rdx,0x68(%rsp)
  0x0000000115e9e2f8: mov    %rbx,0x60(%rsp)
  0x0000000115e9e2fd: mov    %rbp,0x50(%rsp)
  0x0000000115e9e302: mov    %rsi,0x48(%rsp)
  0x0000000115e9e307: mov    %rdi,0x40(%rsp)
  0x0000000115e9e30c: mov    %r8,0x38(%rsp)
  0x0000000115e9e311: mov    %r9,0x30(%rsp)
  0x0000000115e9e316: mov    %r10,0x28(%rsp)
  0x0000000115e9e31b: mov    %r11,0x20(%rsp)
  0x0000000115e9e320: mov    %r12,0x18(%rsp)
  0x0000000115e9e325: mov    %r13,0x10(%rsp)
  0x0000000115e9e32a: mov    %r14,0x8(%rsp)
  0x0000000115e9e32f: mov    %r15,(%rsp)
  0x0000000115e9e333: movabs $0x10ddd8000,%rdi
  0x0000000115e9e33d: movabs $0x115e9e2dd,%rsi
  0x0000000115e9e347: mov    %rsp,%rdx
  0x0000000115e9e34a: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e34e: callq  0x000000010dc0341e
  0x0000000115e9e353: hlt    
  0x0000000115e9e354: movzbl 0x4(%r13),%ebx
  0x0000000115e9e359: add    $0x4,%r13
  0x0000000115e9e35d: movabs $0x10e0ff040,%r10
  0x0000000115e9e367: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e36b: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e373: mov    -0x38(%rbp),%r13
  0x0000000115e9e377: mov    -0x30(%rbp),%r14
  0x0000000115e9e37b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e383: je     0x0000000115e9e485
  0x0000000115e9e389: callq  0x0000000115e9e393
  0x0000000115e9e38e: jmpq   0x0000000115e9e40e
  0x0000000115e9e393: lea    0x8(%rsp),%rax
  0x0000000115e9e398: mov    %r13,-0x38(%rbp)
  0x0000000115e9e39c: mov    %r15,%rdi
  0x0000000115e9e39f: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e3a6: mov    %rax,0x1d8(%r15)
  0x0000000115e9e3ad: test   $0xf,%esp
  0x0000000115e9e3b3: je     0x0000000115e9e3cb
  0x0000000115e9e3b9: sub    $0x8,%rsp
  0x0000000115e9e3bd: callq  0x000000010dae5ebc
  0x0000000115e9e3c2: add    $0x8,%rsp
  0x0000000115e9e3c6: jmpq   0x0000000115e9e3d0
  0x0000000115e9e3cb: callq  0x000000010dae5ebc
  0x0000000115e9e3d0: movabs $0x0,%r10
  0x0000000115e9e3da: mov    %r10,0x1d8(%r15)
  0x0000000115e9e3e1: movabs $0x0,%r10
  0x0000000115e9e3eb: mov    %r10,0x1e8(%r15)
  0x0000000115e9e3f2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e3fa: je     0x0000000115e9e405
  0x0000000115e9e400: jmpq   0x0000000115e916e0
  0x0000000115e9e405: mov    -0x38(%rbp),%r13
  0x0000000115e9e409: mov    -0x30(%rbp),%r14
  0x0000000115e9e40d: retq   
  0x0000000115e9e40e: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e413: sub    $0x80,%rsp
  0x0000000115e9e41a: mov    %rax,0x78(%rsp)
  0x0000000115e9e41f: mov    %rcx,0x70(%rsp)
  0x0000000115e9e424: mov    %rdx,0x68(%rsp)
  0x0000000115e9e429: mov    %rbx,0x60(%rsp)
  0x0000000115e9e42e: mov    %rbp,0x50(%rsp)
  0x0000000115e9e433: mov    %rsi,0x48(%rsp)
  0x0000000115e9e438: mov    %rdi,0x40(%rsp)
  0x0000000115e9e43d: mov    %r8,0x38(%rsp)
  0x0000000115e9e442: mov    %r9,0x30(%rsp)
  0x0000000115e9e447: mov    %r10,0x28(%rsp)
  0x0000000115e9e44c: mov    %r11,0x20(%rsp)
  0x0000000115e9e451: mov    %r12,0x18(%rsp)
  0x0000000115e9e456: mov    %r13,0x10(%rsp)
  0x0000000115e9e45b: mov    %r14,0x8(%rsp)
  0x0000000115e9e460: mov    %r15,(%rsp)
  0x0000000115e9e464: movabs $0x10ddd8000,%rdi
  0x0000000115e9e46e: movabs $0x115e9e40e,%rsi
  0x0000000115e9e478: mov    %rsp,%rdx
  0x0000000115e9e47b: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e47f: callq  0x000000010dc0341e
  0x0000000115e9e484: hlt    
  0x0000000115e9e485: movzbl 0x4(%r13),%ebx
  0x0000000115e9e48a: add    $0x4,%r13
  0x0000000115e9e48e: movabs $0x10e101040,%r10
  0x0000000115e9e498: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e49c: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e4a4: mov    -0x38(%rbp),%r13
  0x0000000115e9e4a8: mov    -0x30(%rbp),%r14
  0x0000000115e9e4ac: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e4b4: je     0x0000000115e9e5b6
  0x0000000115e9e4ba: callq  0x0000000115e9e4c4
  0x0000000115e9e4bf: jmpq   0x0000000115e9e53f
  0x0000000115e9e4c4: lea    0x8(%rsp),%rax
  0x0000000115e9e4c9: mov    %r13,-0x38(%rbp)
  0x0000000115e9e4cd: mov    %r15,%rdi
  0x0000000115e9e4d0: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e4d7: mov    %rax,0x1d8(%r15)
  0x0000000115e9e4de: test   $0xf,%esp
  0x0000000115e9e4e4: je     0x0000000115e9e4fc
  0x0000000115e9e4ea: sub    $0x8,%rsp
  0x0000000115e9e4ee: callq  0x000000010dae5ebc
  0x0000000115e9e4f3: add    $0x8,%rsp
  0x0000000115e9e4f7: jmpq   0x0000000115e9e501
  0x0000000115e9e4fc: callq  0x000000010dae5ebc
  0x0000000115e9e501: movabs $0x0,%r10
  0x0000000115e9e50b: mov    %r10,0x1d8(%r15)
  0x0000000115e9e512: movabs $0x0,%r10
  0x0000000115e9e51c: mov    %r10,0x1e8(%r15)
  0x0000000115e9e523: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e52b: je     0x0000000115e9e536
  0x0000000115e9e531: jmpq   0x0000000115e916e0
  0x0000000115e9e536: mov    -0x38(%rbp),%r13
  0x0000000115e9e53a: mov    -0x30(%rbp),%r14
  0x0000000115e9e53e: retq   
  0x0000000115e9e53f: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e544: sub    $0x80,%rsp
  0x0000000115e9e54b: mov    %rax,0x78(%rsp)
  0x0000000115e9e550: mov    %rcx,0x70(%rsp)
  0x0000000115e9e555: mov    %rdx,0x68(%rsp)
  0x0000000115e9e55a: mov    %rbx,0x60(%rsp)
  0x0000000115e9e55f: mov    %rbp,0x50(%rsp)
  0x0000000115e9e564: mov    %rsi,0x48(%rsp)
  0x0000000115e9e569: mov    %rdi,0x40(%rsp)
  0x0000000115e9e56e: mov    %r8,0x38(%rsp)
  0x0000000115e9e573: mov    %r9,0x30(%rsp)
  0x0000000115e9e578: mov    %r10,0x28(%rsp)
  0x0000000115e9e57d: mov    %r11,0x20(%rsp)
  0x0000000115e9e582: mov    %r12,0x18(%rsp)
  0x0000000115e9e587: mov    %r13,0x10(%rsp)
  0x0000000115e9e58c: mov    %r14,0x8(%rsp)
  0x0000000115e9e591: mov    %r15,(%rsp)
  0x0000000115e9e595: movabs $0x10ddd8000,%rdi
  0x0000000115e9e59f: movabs $0x115e9e53f,%rsi
  0x0000000115e9e5a9: mov    %rsp,%rdx
  0x0000000115e9e5ac: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e5b0: callq  0x000000010dc0341e
  0x0000000115e9e5b5: hlt    
  0x0000000115e9e5b6: movzbl 0x4(%r13),%ebx
  0x0000000115e9e5bb: add    $0x4,%r13
  0x0000000115e9e5bf: movabs $0x10e0ff040,%r10
  0x0000000115e9e5c9: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e5cd: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e5d5: mov    -0x38(%rbp),%r13
  0x0000000115e9e5d9: mov    -0x30(%rbp),%r14
  0x0000000115e9e5dd: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e5e5: je     0x0000000115e9e6e7
  0x0000000115e9e5eb: callq  0x0000000115e9e5f5
  0x0000000115e9e5f0: jmpq   0x0000000115e9e670
  0x0000000115e9e5f5: lea    0x8(%rsp),%rax
  0x0000000115e9e5fa: mov    %r13,-0x38(%rbp)
  0x0000000115e9e5fe: mov    %r15,%rdi
  0x0000000115e9e601: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e608: mov    %rax,0x1d8(%r15)
  0x0000000115e9e60f: test   $0xf,%esp
  0x0000000115e9e615: je     0x0000000115e9e62d
  0x0000000115e9e61b: sub    $0x8,%rsp
  0x0000000115e9e61f: callq  0x000000010dae5ebc
  0x0000000115e9e624: add    $0x8,%rsp
  0x0000000115e9e628: jmpq   0x0000000115e9e632
  0x0000000115e9e62d: callq  0x000000010dae5ebc
  0x0000000115e9e632: movabs $0x0,%r10
  0x0000000115e9e63c: mov    %r10,0x1d8(%r15)
  0x0000000115e9e643: movabs $0x0,%r10
  0x0000000115e9e64d: mov    %r10,0x1e8(%r15)
  0x0000000115e9e654: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e65c: je     0x0000000115e9e667
  0x0000000115e9e662: jmpq   0x0000000115e916e0
  0x0000000115e9e667: mov    -0x38(%rbp),%r13
  0x0000000115e9e66b: mov    -0x30(%rbp),%r14
  0x0000000115e9e66f: retq   
  0x0000000115e9e670: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e675: sub    $0x80,%rsp
  0x0000000115e9e67c: mov    %rax,0x78(%rsp)
  0x0000000115e9e681: mov    %rcx,0x70(%rsp)
  0x0000000115e9e686: mov    %rdx,0x68(%rsp)
  0x0000000115e9e68b: mov    %rbx,0x60(%rsp)
  0x0000000115e9e690: mov    %rbp,0x50(%rsp)
  0x0000000115e9e695: mov    %rsi,0x48(%rsp)
  0x0000000115e9e69a: mov    %rdi,0x40(%rsp)
  0x0000000115e9e69f: mov    %r8,0x38(%rsp)
  0x0000000115e9e6a4: mov    %r9,0x30(%rsp)
  0x0000000115e9e6a9: mov    %r10,0x28(%rsp)
  0x0000000115e9e6ae: mov    %r11,0x20(%rsp)
  0x0000000115e9e6b3: mov    %r12,0x18(%rsp)
  0x0000000115e9e6b8: mov    %r13,0x10(%rsp)
  0x0000000115e9e6bd: mov    %r14,0x8(%rsp)
  0x0000000115e9e6c2: mov    %r15,(%rsp)
  0x0000000115e9e6c6: movabs $0x10ddd8000,%rdi
  0x0000000115e9e6d0: movabs $0x115e9e670,%rsi
  0x0000000115e9e6da: mov    %rsp,%rdx
  0x0000000115e9e6dd: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e6e1: callq  0x000000010dc0341e
  0x0000000115e9e6e6: hlt    
  0x0000000115e9e6e7: movzbl 0x4(%r13),%ebx
  0x0000000115e9e6ec: add    $0x4,%r13
  0x0000000115e9e6f0: movabs $0x10e0ff040,%r10
  0x0000000115e9e6fa: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e6fe: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e706: mov    -0x38(%rbp),%r13
  0x0000000115e9e70a: mov    -0x30(%rbp),%r14
  0x0000000115e9e70e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e716: je     0x0000000115e9e818
  0x0000000115e9e71c: callq  0x0000000115e9e726
  0x0000000115e9e721: jmpq   0x0000000115e9e7a1
  0x0000000115e9e726: lea    0x8(%rsp),%rax
  0x0000000115e9e72b: mov    %r13,-0x38(%rbp)
  0x0000000115e9e72f: mov    %r15,%rdi
  0x0000000115e9e732: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e739: mov    %rax,0x1d8(%r15)
  0x0000000115e9e740: test   $0xf,%esp
  0x0000000115e9e746: je     0x0000000115e9e75e
  0x0000000115e9e74c: sub    $0x8,%rsp
  0x0000000115e9e750: callq  0x000000010dae5ebc
  0x0000000115e9e755: add    $0x8,%rsp
  0x0000000115e9e759: jmpq   0x0000000115e9e763
  0x0000000115e9e75e: callq  0x000000010dae5ebc
  0x0000000115e9e763: movabs $0x0,%r10
  0x0000000115e9e76d: mov    %r10,0x1d8(%r15)
  0x0000000115e9e774: movabs $0x0,%r10
  0x0000000115e9e77e: mov    %r10,0x1e8(%r15)
  0x0000000115e9e785: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e78d: je     0x0000000115e9e798
  0x0000000115e9e793: jmpq   0x0000000115e916e0
  0x0000000115e9e798: mov    -0x38(%rbp),%r13
  0x0000000115e9e79c: mov    -0x30(%rbp),%r14
  0x0000000115e9e7a0: retq   
  0x0000000115e9e7a1: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e7a6: sub    $0x80,%rsp
  0x0000000115e9e7ad: mov    %rax,0x78(%rsp)
  0x0000000115e9e7b2: mov    %rcx,0x70(%rsp)
  0x0000000115e9e7b7: mov    %rdx,0x68(%rsp)
  0x0000000115e9e7bc: mov    %rbx,0x60(%rsp)
  0x0000000115e9e7c1: mov    %rbp,0x50(%rsp)
  0x0000000115e9e7c6: mov    %rsi,0x48(%rsp)
  0x0000000115e9e7cb: mov    %rdi,0x40(%rsp)
  0x0000000115e9e7d0: mov    %r8,0x38(%rsp)
  0x0000000115e9e7d5: mov    %r9,0x30(%rsp)
  0x0000000115e9e7da: mov    %r10,0x28(%rsp)
  0x0000000115e9e7df: mov    %r11,0x20(%rsp)
  0x0000000115e9e7e4: mov    %r12,0x18(%rsp)
  0x0000000115e9e7e9: mov    %r13,0x10(%rsp)
  0x0000000115e9e7ee: mov    %r14,0x8(%rsp)
  0x0000000115e9e7f3: mov    %r15,(%rsp)
  0x0000000115e9e7f7: movabs $0x10ddd8000,%rdi
  0x0000000115e9e801: movabs $0x115e9e7a1,%rsi
  0x0000000115e9e80b: mov    %rsp,%rdx
  0x0000000115e9e80e: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e812: callq  0x000000010dc0341e
  0x0000000115e9e817: hlt    
  0x0000000115e9e818: movzbl 0x4(%r13),%ebx
  0x0000000115e9e81d: add    $0x4,%r13
  0x0000000115e9e821: movabs $0x10e0ff040,%r10
  0x0000000115e9e82b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e82f: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e837: mov    -0x38(%rbp),%r13
  0x0000000115e9e83b: mov    -0x30(%rbp),%r14
  0x0000000115e9e83f: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e847: je     0x0000000115e9e949
  0x0000000115e9e84d: callq  0x0000000115e9e857
  0x0000000115e9e852: jmpq   0x0000000115e9e8d2
  0x0000000115e9e857: lea    0x8(%rsp),%rax
  0x0000000115e9e85c: mov    %r13,-0x38(%rbp)
  0x0000000115e9e860: mov    %r15,%rdi
  0x0000000115e9e863: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e86a: mov    %rax,0x1d8(%r15)
  0x0000000115e9e871: test   $0xf,%esp
  0x0000000115e9e877: je     0x0000000115e9e88f
  0x0000000115e9e87d: sub    $0x8,%rsp
  0x0000000115e9e881: callq  0x000000010dae5ebc
  0x0000000115e9e886: add    $0x8,%rsp
  0x0000000115e9e88a: jmpq   0x0000000115e9e894
  0x0000000115e9e88f: callq  0x000000010dae5ebc
  0x0000000115e9e894: movabs $0x0,%r10
  0x0000000115e9e89e: mov    %r10,0x1d8(%r15)
  0x0000000115e9e8a5: movabs $0x0,%r10
  0x0000000115e9e8af: mov    %r10,0x1e8(%r15)
  0x0000000115e9e8b6: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e8be: je     0x0000000115e9e8c9
  0x0000000115e9e8c4: jmpq   0x0000000115e916e0
  0x0000000115e9e8c9: mov    -0x38(%rbp),%r13
  0x0000000115e9e8cd: mov    -0x30(%rbp),%r14
  0x0000000115e9e8d1: retq   
  0x0000000115e9e8d2: mov    %rsp,-0x28(%rsp)
  0x0000000115e9e8d7: sub    $0x80,%rsp
  0x0000000115e9e8de: mov    %rax,0x78(%rsp)
  0x0000000115e9e8e3: mov    %rcx,0x70(%rsp)
  0x0000000115e9e8e8: mov    %rdx,0x68(%rsp)
  0x0000000115e9e8ed: mov    %rbx,0x60(%rsp)
  0x0000000115e9e8f2: mov    %rbp,0x50(%rsp)
  0x0000000115e9e8f7: mov    %rsi,0x48(%rsp)
  0x0000000115e9e8fc: mov    %rdi,0x40(%rsp)
  0x0000000115e9e901: mov    %r8,0x38(%rsp)
  0x0000000115e9e906: mov    %r9,0x30(%rsp)
  0x0000000115e9e90b: mov    %r10,0x28(%rsp)
  0x0000000115e9e910: mov    %r11,0x20(%rsp)
  0x0000000115e9e915: mov    %r12,0x18(%rsp)
  0x0000000115e9e91a: mov    %r13,0x10(%rsp)
  0x0000000115e9e91f: mov    %r14,0x8(%rsp)
  0x0000000115e9e924: mov    %r15,(%rsp)
  0x0000000115e9e928: movabs $0x10ddd8000,%rdi
  0x0000000115e9e932: movabs $0x115e9e8d2,%rsi
  0x0000000115e9e93c: mov    %rsp,%rdx
  0x0000000115e9e93f: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9e943: callq  0x000000010dc0341e
  0x0000000115e9e948: hlt    
  0x0000000115e9e949: movzbl 0x4(%r13),%ebx
  0x0000000115e9e94e: add    $0x4,%r13
  0x0000000115e9e952: movabs $0x10e0ff040,%r10
  0x0000000115e9e95c: jmpq   *(%r10,%rbx,8)
  0x0000000115e9e960: movq   $0x0,-0x10(%rbp)
  0x0000000115e9e968: mov    -0x38(%rbp),%r13
  0x0000000115e9e96c: mov    -0x30(%rbp),%r14
  0x0000000115e9e970: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e978: je     0x0000000115e9ea7a
  0x0000000115e9e97e: callq  0x0000000115e9e988
  0x0000000115e9e983: jmpq   0x0000000115e9ea03
  0x0000000115e9e988: lea    0x8(%rsp),%rax
  0x0000000115e9e98d: mov    %r13,-0x38(%rbp)
  0x0000000115e9e991: mov    %r15,%rdi
  0x0000000115e9e994: mov    %rbp,0x1e8(%r15)
  0x0000000115e9e99b: mov    %rax,0x1d8(%r15)
  0x0000000115e9e9a2: test   $0xf,%esp
  0x0000000115e9e9a8: je     0x0000000115e9e9c0
  0x0000000115e9e9ae: sub    $0x8,%rsp
  0x0000000115e9e9b2: callq  0x000000010dae5ebc
  0x0000000115e9e9b7: add    $0x8,%rsp
  0x0000000115e9e9bb: jmpq   0x0000000115e9e9c5
  0x0000000115e9e9c0: callq  0x000000010dae5ebc
  0x0000000115e9e9c5: movabs $0x0,%r10
  0x0000000115e9e9cf: mov    %r10,0x1d8(%r15)
  0x0000000115e9e9d6: movabs $0x0,%r10
  0x0000000115e9e9e0: mov    %r10,0x1e8(%r15)
  0x0000000115e9e9e7: cmpq   $0x0,0x8(%r15)
  0x0000000115e9e9ef: je     0x0000000115e9e9fa
  0x0000000115e9e9f5: jmpq   0x0000000115e916e0
  0x0000000115e9e9fa: mov    -0x38(%rbp),%r13
  0x0000000115e9e9fe: mov    -0x30(%rbp),%r14
  0x0000000115e9ea02: retq   
  0x0000000115e9ea03: mov    %rsp,-0x28(%rsp)
  0x0000000115e9ea08: sub    $0x80,%rsp
  0x0000000115e9ea0f: mov    %rax,0x78(%rsp)
  0x0000000115e9ea14: mov    %rcx,0x70(%rsp)
  0x0000000115e9ea19: mov    %rdx,0x68(%rsp)
  0x0000000115e9ea1e: mov    %rbx,0x60(%rsp)
  0x0000000115e9ea23: mov    %rbp,0x50(%rsp)
  0x0000000115e9ea28: mov    %rsi,0x48(%rsp)
  0x0000000115e9ea2d: mov    %rdi,0x40(%rsp)
  0x0000000115e9ea32: mov    %r8,0x38(%rsp)
  0x0000000115e9ea37: mov    %r9,0x30(%rsp)
  0x0000000115e9ea3c: mov    %r10,0x28(%rsp)
  0x0000000115e9ea41: mov    %r11,0x20(%rsp)
  0x0000000115e9ea46: mov    %r12,0x18(%rsp)
  0x0000000115e9ea4b: mov    %r13,0x10(%rsp)
  0x0000000115e9ea50: mov    %r14,0x8(%rsp)
  0x0000000115e9ea55: mov    %r15,(%rsp)
  0x0000000115e9ea59: movabs $0x10ddd8000,%rdi
  0x0000000115e9ea63: movabs $0x115e9ea03,%rsi
  0x0000000115e9ea6d: mov    %rsp,%rdx
  0x0000000115e9ea70: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ea74: callq  0x000000010dc0341e
  0x0000000115e9ea79: hlt    
  0x0000000115e9ea7a: movzbl 0x5(%r13),%ebx
  0x0000000115e9ea7f: add    $0x5,%r13
  0x0000000115e9ea83: movabs $0x10e101840,%r10
  0x0000000115e9ea8d: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ea91: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ea99: mov    -0x38(%rbp),%r13
  0x0000000115e9ea9d: mov    -0x30(%rbp),%r14
  0x0000000115e9eaa1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9eaa9: je     0x0000000115e9ebab
  0x0000000115e9eaaf: callq  0x0000000115e9eab9
  0x0000000115e9eab4: jmpq   0x0000000115e9eb34
  0x0000000115e9eab9: lea    0x8(%rsp),%rax
  0x0000000115e9eabe: mov    %r13,-0x38(%rbp)
  0x0000000115e9eac2: mov    %r15,%rdi
  0x0000000115e9eac5: mov    %rbp,0x1e8(%r15)
  0x0000000115e9eacc: mov    %rax,0x1d8(%r15)
  0x0000000115e9ead3: test   $0xf,%esp
  0x0000000115e9ead9: je     0x0000000115e9eaf1
  0x0000000115e9eadf: sub    $0x8,%rsp
  0x0000000115e9eae3: callq  0x000000010dae5ebc
  0x0000000115e9eae8: add    $0x8,%rsp
  0x0000000115e9eaec: jmpq   0x0000000115e9eaf6
  0x0000000115e9eaf1: callq  0x000000010dae5ebc
  0x0000000115e9eaf6: movabs $0x0,%r10
  0x0000000115e9eb00: mov    %r10,0x1d8(%r15)
  0x0000000115e9eb07: movabs $0x0,%r10
  0x0000000115e9eb11: mov    %r10,0x1e8(%r15)
  0x0000000115e9eb18: cmpq   $0x0,0x8(%r15)
  0x0000000115e9eb20: je     0x0000000115e9eb2b
  0x0000000115e9eb26: jmpq   0x0000000115e916e0
  0x0000000115e9eb2b: mov    -0x38(%rbp),%r13
  0x0000000115e9eb2f: mov    -0x30(%rbp),%r14
  0x0000000115e9eb33: retq   
  0x0000000115e9eb34: mov    %rsp,-0x28(%rsp)
  0x0000000115e9eb39: sub    $0x80,%rsp
  0x0000000115e9eb40: mov    %rax,0x78(%rsp)
  0x0000000115e9eb45: mov    %rcx,0x70(%rsp)
  0x0000000115e9eb4a: mov    %rdx,0x68(%rsp)
  0x0000000115e9eb4f: mov    %rbx,0x60(%rsp)
  0x0000000115e9eb54: mov    %rbp,0x50(%rsp)
  0x0000000115e9eb59: mov    %rsi,0x48(%rsp)
  0x0000000115e9eb5e: mov    %rdi,0x40(%rsp)
  0x0000000115e9eb63: mov    %r8,0x38(%rsp)
  0x0000000115e9eb68: mov    %r9,0x30(%rsp)
  0x0000000115e9eb6d: mov    %r10,0x28(%rsp)
  0x0000000115e9eb72: mov    %r11,0x20(%rsp)
  0x0000000115e9eb77: mov    %r12,0x18(%rsp)
  0x0000000115e9eb7c: mov    %r13,0x10(%rsp)
  0x0000000115e9eb81: mov    %r14,0x8(%rsp)
  0x0000000115e9eb86: mov    %r15,(%rsp)
  0x0000000115e9eb8a: movabs $0x10ddd8000,%rdi
  0x0000000115e9eb94: movabs $0x115e9eb34,%rsi
  0x0000000115e9eb9e: mov    %rsp,%rdx
  0x0000000115e9eba1: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9eba5: callq  0x000000010dc0341e
  0x0000000115e9ebaa: hlt    
  0x0000000115e9ebab: movzbl 0x5(%r13),%ebx
  0x0000000115e9ebb0: add    $0x5,%r13
  0x0000000115e9ebb4: movabs $0x10e100840,%r10
  0x0000000115e9ebbe: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ebc2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ebca: mov    -0x38(%rbp),%r13
  0x0000000115e9ebce: mov    -0x30(%rbp),%r14
  0x0000000115e9ebd2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ebda: je     0x0000000115e9ecdc
  0x0000000115e9ebe0: callq  0x0000000115e9ebea
  0x0000000115e9ebe5: jmpq   0x0000000115e9ec65
  0x0000000115e9ebea: lea    0x8(%rsp),%rax
  0x0000000115e9ebef: mov    %r13,-0x38(%rbp)
  0x0000000115e9ebf3: mov    %r15,%rdi
  0x0000000115e9ebf6: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ebfd: mov    %rax,0x1d8(%r15)
  0x0000000115e9ec04: test   $0xf,%esp
  0x0000000115e9ec0a: je     0x0000000115e9ec22
  0x0000000115e9ec10: sub    $0x8,%rsp
  0x0000000115e9ec14: callq  0x000000010dae5ebc
  0x0000000115e9ec19: add    $0x8,%rsp
  0x0000000115e9ec1d: jmpq   0x0000000115e9ec27
  0x0000000115e9ec22: callq  0x000000010dae5ebc
  0x0000000115e9ec27: movabs $0x0,%r10
  0x0000000115e9ec31: mov    %r10,0x1d8(%r15)
  0x0000000115e9ec38: movabs $0x0,%r10
  0x0000000115e9ec42: mov    %r10,0x1e8(%r15)
  0x0000000115e9ec49: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ec51: je     0x0000000115e9ec5c
  0x0000000115e9ec57: jmpq   0x0000000115e916e0
  0x0000000115e9ec5c: mov    -0x38(%rbp),%r13
  0x0000000115e9ec60: mov    -0x30(%rbp),%r14
  0x0000000115e9ec64: retq   
  0x0000000115e9ec65: mov    %rsp,-0x28(%rsp)
  0x0000000115e9ec6a: sub    $0x80,%rsp
  0x0000000115e9ec71: mov    %rax,0x78(%rsp)
  0x0000000115e9ec76: mov    %rcx,0x70(%rsp)
  0x0000000115e9ec7b: mov    %rdx,0x68(%rsp)
  0x0000000115e9ec80: mov    %rbx,0x60(%rsp)
  0x0000000115e9ec85: mov    %rbp,0x50(%rsp)
  0x0000000115e9ec8a: mov    %rsi,0x48(%rsp)
  0x0000000115e9ec8f: mov    %rdi,0x40(%rsp)
  0x0000000115e9ec94: mov    %r8,0x38(%rsp)
  0x0000000115e9ec99: mov    %r9,0x30(%rsp)
  0x0000000115e9ec9e: mov    %r10,0x28(%rsp)
  0x0000000115e9eca3: mov    %r11,0x20(%rsp)
  0x0000000115e9eca8: mov    %r12,0x18(%rsp)
  0x0000000115e9ecad: mov    %r13,0x10(%rsp)
  0x0000000115e9ecb2: mov    %r14,0x8(%rsp)
  0x0000000115e9ecb7: mov    %r15,(%rsp)
  0x0000000115e9ecbb: movabs $0x10ddd8000,%rdi
  0x0000000115e9ecc5: movabs $0x115e9ec65,%rsi
  0x0000000115e9eccf: mov    %rsp,%rdx
  0x0000000115e9ecd2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ecd6: callq  0x000000010dc0341e
  0x0000000115e9ecdb: hlt    
  0x0000000115e9ecdc: movzbl 0x5(%r13),%ebx
  0x0000000115e9ece1: add    $0x5,%r13
  0x0000000115e9ece5: movabs $0x10e100040,%r10
  0x0000000115e9ecef: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ecf3: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ecfb: mov    -0x38(%rbp),%r13
  0x0000000115e9ecff: mov    -0x30(%rbp),%r14
  0x0000000115e9ed03: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ed0b: je     0x0000000115e9ee0d
  0x0000000115e9ed11: callq  0x0000000115e9ed1b
  0x0000000115e9ed16: jmpq   0x0000000115e9ed96
  0x0000000115e9ed1b: lea    0x8(%rsp),%rax
  0x0000000115e9ed20: mov    %r13,-0x38(%rbp)
  0x0000000115e9ed24: mov    %r15,%rdi
  0x0000000115e9ed27: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ed2e: mov    %rax,0x1d8(%r15)
  0x0000000115e9ed35: test   $0xf,%esp
  0x0000000115e9ed3b: je     0x0000000115e9ed53
  0x0000000115e9ed41: sub    $0x8,%rsp
  0x0000000115e9ed45: callq  0x000000010dae5ebc
  0x0000000115e9ed4a: add    $0x8,%rsp
  0x0000000115e9ed4e: jmpq   0x0000000115e9ed58
  0x0000000115e9ed53: callq  0x000000010dae5ebc
  0x0000000115e9ed58: movabs $0x0,%r10
  0x0000000115e9ed62: mov    %r10,0x1d8(%r15)
  0x0000000115e9ed69: movabs $0x0,%r10
  0x0000000115e9ed73: mov    %r10,0x1e8(%r15)
  0x0000000115e9ed7a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ed82: je     0x0000000115e9ed8d
  0x0000000115e9ed88: jmpq   0x0000000115e916e0
  0x0000000115e9ed8d: mov    -0x38(%rbp),%r13
  0x0000000115e9ed91: mov    -0x30(%rbp),%r14
  0x0000000115e9ed95: retq   
  0x0000000115e9ed96: mov    %rsp,-0x28(%rsp)
  0x0000000115e9ed9b: sub    $0x80,%rsp
  0x0000000115e9eda2: mov    %rax,0x78(%rsp)
  0x0000000115e9eda7: mov    %rcx,0x70(%rsp)
  0x0000000115e9edac: mov    %rdx,0x68(%rsp)
  0x0000000115e9edb1: mov    %rbx,0x60(%rsp)
  0x0000000115e9edb6: mov    %rbp,0x50(%rsp)
  0x0000000115e9edbb: mov    %rsi,0x48(%rsp)
  0x0000000115e9edc0: mov    %rdi,0x40(%rsp)
  0x0000000115e9edc5: mov    %r8,0x38(%rsp)
  0x0000000115e9edca: mov    %r9,0x30(%rsp)
  0x0000000115e9edcf: mov    %r10,0x28(%rsp)
  0x0000000115e9edd4: mov    %r11,0x20(%rsp)
  0x0000000115e9edd9: mov    %r12,0x18(%rsp)
  0x0000000115e9edde: mov    %r13,0x10(%rsp)
  0x0000000115e9ede3: mov    %r14,0x8(%rsp)
  0x0000000115e9ede8: mov    %r15,(%rsp)
  0x0000000115e9edec: movabs $0x10ddd8000,%rdi
  0x0000000115e9edf6: movabs $0x115e9ed96,%rsi
  0x0000000115e9ee00: mov    %rsp,%rdx
  0x0000000115e9ee03: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ee07: callq  0x000000010dc0341e
  0x0000000115e9ee0c: hlt    
  0x0000000115e9ee0d: movzbl 0x5(%r13),%ebx
  0x0000000115e9ee12: add    $0x5,%r13
  0x0000000115e9ee16: movabs $0x10e0ff840,%r10
  0x0000000115e9ee20: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ee24: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ee2c: mov    -0x38(%rbp),%r13
  0x0000000115e9ee30: mov    -0x30(%rbp),%r14
  0x0000000115e9ee34: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ee3c: je     0x0000000115e9ef3e
  0x0000000115e9ee42: callq  0x0000000115e9ee4c
  0x0000000115e9ee47: jmpq   0x0000000115e9eec7
  0x0000000115e9ee4c: lea    0x8(%rsp),%rax
  0x0000000115e9ee51: mov    %r13,-0x38(%rbp)
  0x0000000115e9ee55: mov    %r15,%rdi
  0x0000000115e9ee58: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ee5f: mov    %rax,0x1d8(%r15)
  0x0000000115e9ee66: test   $0xf,%esp
  0x0000000115e9ee6c: je     0x0000000115e9ee84
  0x0000000115e9ee72: sub    $0x8,%rsp
  0x0000000115e9ee76: callq  0x000000010dae5ebc
  0x0000000115e9ee7b: add    $0x8,%rsp
  0x0000000115e9ee7f: jmpq   0x0000000115e9ee89
  0x0000000115e9ee84: callq  0x000000010dae5ebc
  0x0000000115e9ee89: movabs $0x0,%r10
  0x0000000115e9ee93: mov    %r10,0x1d8(%r15)
  0x0000000115e9ee9a: movabs $0x0,%r10
  0x0000000115e9eea4: mov    %r10,0x1e8(%r15)
  0x0000000115e9eeab: cmpq   $0x0,0x8(%r15)
  0x0000000115e9eeb3: je     0x0000000115e9eebe
  0x0000000115e9eeb9: jmpq   0x0000000115e916e0
  0x0000000115e9eebe: mov    -0x38(%rbp),%r13
  0x0000000115e9eec2: mov    -0x30(%rbp),%r14
  0x0000000115e9eec6: retq   
  0x0000000115e9eec7: mov    %rsp,-0x28(%rsp)
  0x0000000115e9eecc: sub    $0x80,%rsp
  0x0000000115e9eed3: mov    %rax,0x78(%rsp)
  0x0000000115e9eed8: mov    %rcx,0x70(%rsp)
  0x0000000115e9eedd: mov    %rdx,0x68(%rsp)
  0x0000000115e9eee2: mov    %rbx,0x60(%rsp)
  0x0000000115e9eee7: mov    %rbp,0x50(%rsp)
  0x0000000115e9eeec: mov    %rsi,0x48(%rsp)
  0x0000000115e9eef1: mov    %rdi,0x40(%rsp)
  0x0000000115e9eef6: mov    %r8,0x38(%rsp)
  0x0000000115e9eefb: mov    %r9,0x30(%rsp)
  0x0000000115e9ef00: mov    %r10,0x28(%rsp)
  0x0000000115e9ef05: mov    %r11,0x20(%rsp)
  0x0000000115e9ef0a: mov    %r12,0x18(%rsp)
  0x0000000115e9ef0f: mov    %r13,0x10(%rsp)
  0x0000000115e9ef14: mov    %r14,0x8(%rsp)
  0x0000000115e9ef19: mov    %r15,(%rsp)
  0x0000000115e9ef1d: movabs $0x10ddd8000,%rdi
  0x0000000115e9ef27: movabs $0x115e9eec7,%rsi
  0x0000000115e9ef31: mov    %rsp,%rdx
  0x0000000115e9ef34: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ef38: callq  0x000000010dc0341e
  0x0000000115e9ef3d: hlt    
  0x0000000115e9ef3e: movzbl 0x5(%r13),%ebx
  0x0000000115e9ef43: add    $0x5,%r13
  0x0000000115e9ef47: movabs $0x10e0ff040,%r10
  0x0000000115e9ef51: jmpq   *(%r10,%rbx,8)
  0x0000000115e9ef55: movq   $0x0,-0x10(%rbp)
  0x0000000115e9ef5d: mov    -0x38(%rbp),%r13
  0x0000000115e9ef61: mov    -0x30(%rbp),%r14
  0x0000000115e9ef65: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ef6d: je     0x0000000115e9f06f
  0x0000000115e9ef73: callq  0x0000000115e9ef7d
  0x0000000115e9ef78: jmpq   0x0000000115e9eff8
  0x0000000115e9ef7d: lea    0x8(%rsp),%rax
  0x0000000115e9ef82: mov    %r13,-0x38(%rbp)
  0x0000000115e9ef86: mov    %r15,%rdi
  0x0000000115e9ef89: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ef90: mov    %rax,0x1d8(%r15)
  0x0000000115e9ef97: test   $0xf,%esp
  0x0000000115e9ef9d: je     0x0000000115e9efb5
  0x0000000115e9efa3: sub    $0x8,%rsp
  0x0000000115e9efa7: callq  0x000000010dae5ebc
  0x0000000115e9efac: add    $0x8,%rsp
  0x0000000115e9efb0: jmpq   0x0000000115e9efba
  0x0000000115e9efb5: callq  0x000000010dae5ebc
  0x0000000115e9efba: movabs $0x0,%r10
  0x0000000115e9efc4: mov    %r10,0x1d8(%r15)
  0x0000000115e9efcb: movabs $0x0,%r10
  0x0000000115e9efd5: mov    %r10,0x1e8(%r15)
  0x0000000115e9efdc: cmpq   $0x0,0x8(%r15)
  0x0000000115e9efe4: je     0x0000000115e9efef
  0x0000000115e9efea: jmpq   0x0000000115e916e0
  0x0000000115e9efef: mov    -0x38(%rbp),%r13
  0x0000000115e9eff3: mov    -0x30(%rbp),%r14
  0x0000000115e9eff7: retq   
  0x0000000115e9eff8: mov    %rsp,-0x28(%rsp)
  0x0000000115e9effd: sub    $0x80,%rsp
  0x0000000115e9f004: mov    %rax,0x78(%rsp)
  0x0000000115e9f009: mov    %rcx,0x70(%rsp)
  0x0000000115e9f00e: mov    %rdx,0x68(%rsp)
  0x0000000115e9f013: mov    %rbx,0x60(%rsp)
  0x0000000115e9f018: mov    %rbp,0x50(%rsp)
  0x0000000115e9f01d: mov    %rsi,0x48(%rsp)
  0x0000000115e9f022: mov    %rdi,0x40(%rsp)
  0x0000000115e9f027: mov    %r8,0x38(%rsp)
  0x0000000115e9f02c: mov    %r9,0x30(%rsp)
  0x0000000115e9f031: mov    %r10,0x28(%rsp)
  0x0000000115e9f036: mov    %r11,0x20(%rsp)
  0x0000000115e9f03b: mov    %r12,0x18(%rsp)
  0x0000000115e9f040: mov    %r13,0x10(%rsp)
  0x0000000115e9f045: mov    %r14,0x8(%rsp)
  0x0000000115e9f04a: mov    %r15,(%rsp)
  0x0000000115e9f04e: movabs $0x10ddd8000,%rdi
  0x0000000115e9f058: movabs $0x115e9eff8,%rsi
  0x0000000115e9f062: mov    %rsp,%rdx
  0x0000000115e9f065: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f069: callq  0x000000010dc0341e
  0x0000000115e9f06e: hlt    
  0x0000000115e9f06f: movzbl 0x5(%r13),%ebx
  0x0000000115e9f074: add    $0x5,%r13
  0x0000000115e9f078: movabs $0x10e101040,%r10
  0x0000000115e9f082: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f086: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f08e: mov    -0x38(%rbp),%r13
  0x0000000115e9f092: mov    -0x30(%rbp),%r14
  0x0000000115e9f096: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f09e: je     0x0000000115e9f1a0
  0x0000000115e9f0a4: callq  0x0000000115e9f0ae
  0x0000000115e9f0a9: jmpq   0x0000000115e9f129
  0x0000000115e9f0ae: lea    0x8(%rsp),%rax
  0x0000000115e9f0b3: mov    %r13,-0x38(%rbp)
  0x0000000115e9f0b7: mov    %r15,%rdi
  0x0000000115e9f0ba: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f0c1: mov    %rax,0x1d8(%r15)
  0x0000000115e9f0c8: test   $0xf,%esp
  0x0000000115e9f0ce: je     0x0000000115e9f0e6
  0x0000000115e9f0d4: sub    $0x8,%rsp
  0x0000000115e9f0d8: callq  0x000000010dae5ebc
  0x0000000115e9f0dd: add    $0x8,%rsp
  0x0000000115e9f0e1: jmpq   0x0000000115e9f0eb
  0x0000000115e9f0e6: callq  0x000000010dae5ebc
  0x0000000115e9f0eb: movabs $0x0,%r10
  0x0000000115e9f0f5: mov    %r10,0x1d8(%r15)
  0x0000000115e9f0fc: movabs $0x0,%r10
  0x0000000115e9f106: mov    %r10,0x1e8(%r15)
  0x0000000115e9f10d: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f115: je     0x0000000115e9f120
  0x0000000115e9f11b: jmpq   0x0000000115e916e0
  0x0000000115e9f120: mov    -0x38(%rbp),%r13
  0x0000000115e9f124: mov    -0x30(%rbp),%r14
  0x0000000115e9f128: retq   
  0x0000000115e9f129: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f12e: sub    $0x80,%rsp
  0x0000000115e9f135: mov    %rax,0x78(%rsp)
  0x0000000115e9f13a: mov    %rcx,0x70(%rsp)
  0x0000000115e9f13f: mov    %rdx,0x68(%rsp)
  0x0000000115e9f144: mov    %rbx,0x60(%rsp)
  0x0000000115e9f149: mov    %rbp,0x50(%rsp)
  0x0000000115e9f14e: mov    %rsi,0x48(%rsp)
  0x0000000115e9f153: mov    %rdi,0x40(%rsp)
  0x0000000115e9f158: mov    %r8,0x38(%rsp)
  0x0000000115e9f15d: mov    %r9,0x30(%rsp)
  0x0000000115e9f162: mov    %r10,0x28(%rsp)
  0x0000000115e9f167: mov    %r11,0x20(%rsp)
  0x0000000115e9f16c: mov    %r12,0x18(%rsp)
  0x0000000115e9f171: mov    %r13,0x10(%rsp)
  0x0000000115e9f176: mov    %r14,0x8(%rsp)
  0x0000000115e9f17b: mov    %r15,(%rsp)
  0x0000000115e9f17f: movabs $0x10ddd8000,%rdi
  0x0000000115e9f189: movabs $0x115e9f129,%rsi
  0x0000000115e9f193: mov    %rsp,%rdx
  0x0000000115e9f196: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f19a: callq  0x000000010dc0341e
  0x0000000115e9f19f: hlt    
  0x0000000115e9f1a0: movzbl 0x5(%r13),%ebx
  0x0000000115e9f1a5: add    $0x5,%r13
  0x0000000115e9f1a9: movabs $0x10e0ff040,%r10
  0x0000000115e9f1b3: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f1b7: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f1bf: mov    -0x38(%rbp),%r13
  0x0000000115e9f1c3: mov    -0x30(%rbp),%r14
  0x0000000115e9f1c7: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f1cf: je     0x0000000115e9f2d1
  0x0000000115e9f1d5: callq  0x0000000115e9f1df
  0x0000000115e9f1da: jmpq   0x0000000115e9f25a
  0x0000000115e9f1df: lea    0x8(%rsp),%rax
  0x0000000115e9f1e4: mov    %r13,-0x38(%rbp)
  0x0000000115e9f1e8: mov    %r15,%rdi
  0x0000000115e9f1eb: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f1f2: mov    %rax,0x1d8(%r15)
  0x0000000115e9f1f9: test   $0xf,%esp
  0x0000000115e9f1ff: je     0x0000000115e9f217
  0x0000000115e9f205: sub    $0x8,%rsp
  0x0000000115e9f209: callq  0x000000010dae5ebc
  0x0000000115e9f20e: add    $0x8,%rsp
  0x0000000115e9f212: jmpq   0x0000000115e9f21c
  0x0000000115e9f217: callq  0x000000010dae5ebc
  0x0000000115e9f21c: movabs $0x0,%r10
  0x0000000115e9f226: mov    %r10,0x1d8(%r15)
  0x0000000115e9f22d: movabs $0x0,%r10
  0x0000000115e9f237: mov    %r10,0x1e8(%r15)
  0x0000000115e9f23e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f246: je     0x0000000115e9f251
  0x0000000115e9f24c: jmpq   0x0000000115e916e0
  0x0000000115e9f251: mov    -0x38(%rbp),%r13
  0x0000000115e9f255: mov    -0x30(%rbp),%r14
  0x0000000115e9f259: retq   
  0x0000000115e9f25a: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f25f: sub    $0x80,%rsp
  0x0000000115e9f266: mov    %rax,0x78(%rsp)
  0x0000000115e9f26b: mov    %rcx,0x70(%rsp)
  0x0000000115e9f270: mov    %rdx,0x68(%rsp)
  0x0000000115e9f275: mov    %rbx,0x60(%rsp)
  0x0000000115e9f27a: mov    %rbp,0x50(%rsp)
  0x0000000115e9f27f: mov    %rsi,0x48(%rsp)
  0x0000000115e9f284: mov    %rdi,0x40(%rsp)
  0x0000000115e9f289: mov    %r8,0x38(%rsp)
  0x0000000115e9f28e: mov    %r9,0x30(%rsp)
  0x0000000115e9f293: mov    %r10,0x28(%rsp)
  0x0000000115e9f298: mov    %r11,0x20(%rsp)
  0x0000000115e9f29d: mov    %r12,0x18(%rsp)
  0x0000000115e9f2a2: mov    %r13,0x10(%rsp)
  0x0000000115e9f2a7: mov    %r14,0x8(%rsp)
  0x0000000115e9f2ac: mov    %r15,(%rsp)
  0x0000000115e9f2b0: movabs $0x10ddd8000,%rdi
  0x0000000115e9f2ba: movabs $0x115e9f25a,%rsi
  0x0000000115e9f2c4: mov    %rsp,%rdx
  0x0000000115e9f2c7: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f2cb: callq  0x000000010dc0341e
  0x0000000115e9f2d0: hlt    
  0x0000000115e9f2d1: movzbl 0x5(%r13),%ebx
  0x0000000115e9f2d6: add    $0x5,%r13
  0x0000000115e9f2da: movabs $0x10e0ff040,%r10
  0x0000000115e9f2e4: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f2e8: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f2f0: mov    -0x38(%rbp),%r13
  0x0000000115e9f2f4: mov    -0x30(%rbp),%r14
  0x0000000115e9f2f8: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f300: je     0x0000000115e9f402
  0x0000000115e9f306: callq  0x0000000115e9f310
  0x0000000115e9f30b: jmpq   0x0000000115e9f38b
  0x0000000115e9f310: lea    0x8(%rsp),%rax
  0x0000000115e9f315: mov    %r13,-0x38(%rbp)
  0x0000000115e9f319: mov    %r15,%rdi
  0x0000000115e9f31c: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f323: mov    %rax,0x1d8(%r15)
  0x0000000115e9f32a: test   $0xf,%esp
  0x0000000115e9f330: je     0x0000000115e9f348
  0x0000000115e9f336: sub    $0x8,%rsp
  0x0000000115e9f33a: callq  0x000000010dae5ebc
  0x0000000115e9f33f: add    $0x8,%rsp
  0x0000000115e9f343: jmpq   0x0000000115e9f34d
  0x0000000115e9f348: callq  0x000000010dae5ebc
  0x0000000115e9f34d: movabs $0x0,%r10
  0x0000000115e9f357: mov    %r10,0x1d8(%r15)
  0x0000000115e9f35e: movabs $0x0,%r10
  0x0000000115e9f368: mov    %r10,0x1e8(%r15)
  0x0000000115e9f36f: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f377: je     0x0000000115e9f382
  0x0000000115e9f37d: jmpq   0x0000000115e916e0
  0x0000000115e9f382: mov    -0x38(%rbp),%r13
  0x0000000115e9f386: mov    -0x30(%rbp),%r14
  0x0000000115e9f38a: retq   
  0x0000000115e9f38b: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f390: sub    $0x80,%rsp
  0x0000000115e9f397: mov    %rax,0x78(%rsp)
  0x0000000115e9f39c: mov    %rcx,0x70(%rsp)
  0x0000000115e9f3a1: mov    %rdx,0x68(%rsp)
  0x0000000115e9f3a6: mov    %rbx,0x60(%rsp)
  0x0000000115e9f3ab: mov    %rbp,0x50(%rsp)
  0x0000000115e9f3b0: mov    %rsi,0x48(%rsp)
  0x0000000115e9f3b5: mov    %rdi,0x40(%rsp)
  0x0000000115e9f3ba: mov    %r8,0x38(%rsp)
  0x0000000115e9f3bf: mov    %r9,0x30(%rsp)
  0x0000000115e9f3c4: mov    %r10,0x28(%rsp)
  0x0000000115e9f3c9: mov    %r11,0x20(%rsp)
  0x0000000115e9f3ce: mov    %r12,0x18(%rsp)
  0x0000000115e9f3d3: mov    %r13,0x10(%rsp)
  0x0000000115e9f3d8: mov    %r14,0x8(%rsp)
  0x0000000115e9f3dd: mov    %r15,(%rsp)
  0x0000000115e9f3e1: movabs $0x10ddd8000,%rdi
  0x0000000115e9f3eb: movabs $0x115e9f38b,%rsi
  0x0000000115e9f3f5: mov    %rsp,%rdx
  0x0000000115e9f3f8: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f3fc: callq  0x000000010dc0341e
  0x0000000115e9f401: hlt    
  0x0000000115e9f402: movzbl 0x5(%r13),%ebx
  0x0000000115e9f407: add    $0x5,%r13
  0x0000000115e9f40b: movabs $0x10e0ff040,%r10
  0x0000000115e9f415: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f419: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f421: mov    -0x38(%rbp),%r13
  0x0000000115e9f425: mov    -0x30(%rbp),%r14
  0x0000000115e9f429: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f431: je     0x0000000115e9f533
  0x0000000115e9f437: callq  0x0000000115e9f441
  0x0000000115e9f43c: jmpq   0x0000000115e9f4bc
  0x0000000115e9f441: lea    0x8(%rsp),%rax
  0x0000000115e9f446: mov    %r13,-0x38(%rbp)
  0x0000000115e9f44a: mov    %r15,%rdi
  0x0000000115e9f44d: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f454: mov    %rax,0x1d8(%r15)
  0x0000000115e9f45b: test   $0xf,%esp
  0x0000000115e9f461: je     0x0000000115e9f479
  0x0000000115e9f467: sub    $0x8,%rsp
  0x0000000115e9f46b: callq  0x000000010dae5ebc
  0x0000000115e9f470: add    $0x8,%rsp
  0x0000000115e9f474: jmpq   0x0000000115e9f47e
  0x0000000115e9f479: callq  0x000000010dae5ebc
  0x0000000115e9f47e: movabs $0x0,%r10
  0x0000000115e9f488: mov    %r10,0x1d8(%r15)
  0x0000000115e9f48f: movabs $0x0,%r10
  0x0000000115e9f499: mov    %r10,0x1e8(%r15)
  0x0000000115e9f4a0: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f4a8: je     0x0000000115e9f4b3
  0x0000000115e9f4ae: jmpq   0x0000000115e916e0
  0x0000000115e9f4b3: mov    -0x38(%rbp),%r13
  0x0000000115e9f4b7: mov    -0x30(%rbp),%r14
  0x0000000115e9f4bb: retq   
  0x0000000115e9f4bc: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f4c1: sub    $0x80,%rsp
  0x0000000115e9f4c8: mov    %rax,0x78(%rsp)
  0x0000000115e9f4cd: mov    %rcx,0x70(%rsp)
  0x0000000115e9f4d2: mov    %rdx,0x68(%rsp)
  0x0000000115e9f4d7: mov    %rbx,0x60(%rsp)
  0x0000000115e9f4dc: mov    %rbp,0x50(%rsp)
  0x0000000115e9f4e1: mov    %rsi,0x48(%rsp)
  0x0000000115e9f4e6: mov    %rdi,0x40(%rsp)
  0x0000000115e9f4eb: mov    %r8,0x38(%rsp)
  0x0000000115e9f4f0: mov    %r9,0x30(%rsp)
  0x0000000115e9f4f5: mov    %r10,0x28(%rsp)
  0x0000000115e9f4fa: mov    %r11,0x20(%rsp)
  0x0000000115e9f4ff: mov    %r12,0x18(%rsp)
  0x0000000115e9f504: mov    %r13,0x10(%rsp)
  0x0000000115e9f509: mov    %r14,0x8(%rsp)
  0x0000000115e9f50e: mov    %r15,(%rsp)
  0x0000000115e9f512: movabs $0x10ddd8000,%rdi
  0x0000000115e9f51c: movabs $0x115e9f4bc,%rsi
  0x0000000115e9f526: mov    %rsp,%rdx
  0x0000000115e9f529: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f52d: callq  0x000000010dc0341e
  0x0000000115e9f532: hlt    
  0x0000000115e9f533: movzbl 0x5(%r13),%ebx
  0x0000000115e9f538: add    $0x5,%r13
  0x0000000115e9f53c: movabs $0x10e0ff040,%r10
  0x0000000115e9f546: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f54a: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f552: mov    -0x38(%rbp),%r13
  0x0000000115e9f556: mov    -0x30(%rbp),%r14
  0x0000000115e9f55a: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f562: je     0x0000000115e9f664
  0x0000000115e9f568: callq  0x0000000115e9f572
  0x0000000115e9f56d: jmpq   0x0000000115e9f5ed
  0x0000000115e9f572: lea    0x8(%rsp),%rax
  0x0000000115e9f577: mov    %r13,-0x38(%rbp)
  0x0000000115e9f57b: mov    %r15,%rdi
  0x0000000115e9f57e: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f585: mov    %rax,0x1d8(%r15)
  0x0000000115e9f58c: test   $0xf,%esp
  0x0000000115e9f592: je     0x0000000115e9f5aa
  0x0000000115e9f598: sub    $0x8,%rsp
  0x0000000115e9f59c: callq  0x000000010dae5ebc
  0x0000000115e9f5a1: add    $0x8,%rsp
  0x0000000115e9f5a5: jmpq   0x0000000115e9f5af
  0x0000000115e9f5aa: callq  0x000000010dae5ebc
  0x0000000115e9f5af: movabs $0x0,%r10
  0x0000000115e9f5b9: mov    %r10,0x1d8(%r15)
  0x0000000115e9f5c0: movabs $0x0,%r10
  0x0000000115e9f5ca: mov    %r10,0x1e8(%r15)
  0x0000000115e9f5d1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f5d9: je     0x0000000115e9f5e4
  0x0000000115e9f5df: jmpq   0x0000000115e916e0
  0x0000000115e9f5e4: mov    -0x38(%rbp),%r13
  0x0000000115e9f5e8: mov    -0x30(%rbp),%r14
  0x0000000115e9f5ec: retq   
  0x0000000115e9f5ed: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f5f2: sub    $0x80,%rsp
  0x0000000115e9f5f9: mov    %rax,0x78(%rsp)
  0x0000000115e9f5fe: mov    %rcx,0x70(%rsp)
  0x0000000115e9f603: mov    %rdx,0x68(%rsp)
  0x0000000115e9f608: mov    %rbx,0x60(%rsp)
  0x0000000115e9f60d: mov    %rbp,0x50(%rsp)
  0x0000000115e9f612: mov    %rsi,0x48(%rsp)
  0x0000000115e9f617: mov    %rdi,0x40(%rsp)
  0x0000000115e9f61c: mov    %r8,0x38(%rsp)
  0x0000000115e9f621: mov    %r9,0x30(%rsp)
  0x0000000115e9f626: mov    %r10,0x28(%rsp)
  0x0000000115e9f62b: mov    %r11,0x20(%rsp)
  0x0000000115e9f630: mov    %r12,0x18(%rsp)
  0x0000000115e9f635: mov    %r13,0x10(%rsp)
  0x0000000115e9f63a: mov    %r14,0x8(%rsp)
  0x0000000115e9f63f: mov    %r15,(%rsp)
  0x0000000115e9f643: movabs $0x10ddd8000,%rdi
  0x0000000115e9f64d: movabs $0x115e9f5ed,%rsi
  0x0000000115e9f657: mov    %rsp,%rdx
  0x0000000115e9f65a: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f65e: callq  0x000000010dc0341e
  0x0000000115e9f663: hlt    
  0x0000000115e9f664: movzbl 0x6(%r13),%ebx
  0x0000000115e9f669: add    $0x6,%r13
  0x0000000115e9f66d: movabs $0x10e101840,%r10
  0x0000000115e9f677: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f67b: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f683: mov    -0x38(%rbp),%r13
  0x0000000115e9f687: mov    -0x30(%rbp),%r14
  0x0000000115e9f68b: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f693: je     0x0000000115e9f795
  0x0000000115e9f699: callq  0x0000000115e9f6a3
  0x0000000115e9f69e: jmpq   0x0000000115e9f71e
  0x0000000115e9f6a3: lea    0x8(%rsp),%rax
  0x0000000115e9f6a8: mov    %r13,-0x38(%rbp)
  0x0000000115e9f6ac: mov    %r15,%rdi
  0x0000000115e9f6af: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f6b6: mov    %rax,0x1d8(%r15)
  0x0000000115e9f6bd: test   $0xf,%esp
  0x0000000115e9f6c3: je     0x0000000115e9f6db
  0x0000000115e9f6c9: sub    $0x8,%rsp
  0x0000000115e9f6cd: callq  0x000000010dae5ebc
  0x0000000115e9f6d2: add    $0x8,%rsp
  0x0000000115e9f6d6: jmpq   0x0000000115e9f6e0
  0x0000000115e9f6db: callq  0x000000010dae5ebc
  0x0000000115e9f6e0: movabs $0x0,%r10
  0x0000000115e9f6ea: mov    %r10,0x1d8(%r15)
  0x0000000115e9f6f1: movabs $0x0,%r10
  0x0000000115e9f6fb: mov    %r10,0x1e8(%r15)
  0x0000000115e9f702: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f70a: je     0x0000000115e9f715
  0x0000000115e9f710: jmpq   0x0000000115e916e0
  0x0000000115e9f715: mov    -0x38(%rbp),%r13
  0x0000000115e9f719: mov    -0x30(%rbp),%r14
  0x0000000115e9f71d: retq   
  0x0000000115e9f71e: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f723: sub    $0x80,%rsp
  0x0000000115e9f72a: mov    %rax,0x78(%rsp)
  0x0000000115e9f72f: mov    %rcx,0x70(%rsp)
  0x0000000115e9f734: mov    %rdx,0x68(%rsp)
  0x0000000115e9f739: mov    %rbx,0x60(%rsp)
  0x0000000115e9f73e: mov    %rbp,0x50(%rsp)
  0x0000000115e9f743: mov    %rsi,0x48(%rsp)
  0x0000000115e9f748: mov    %rdi,0x40(%rsp)
  0x0000000115e9f74d: mov    %r8,0x38(%rsp)
  0x0000000115e9f752: mov    %r9,0x30(%rsp)
  0x0000000115e9f757: mov    %r10,0x28(%rsp)
  0x0000000115e9f75c: mov    %r11,0x20(%rsp)
  0x0000000115e9f761: mov    %r12,0x18(%rsp)
  0x0000000115e9f766: mov    %r13,0x10(%rsp)
  0x0000000115e9f76b: mov    %r14,0x8(%rsp)
  0x0000000115e9f770: mov    %r15,(%rsp)
  0x0000000115e9f774: movabs $0x10ddd8000,%rdi
  0x0000000115e9f77e: movabs $0x115e9f71e,%rsi
  0x0000000115e9f788: mov    %rsp,%rdx
  0x0000000115e9f78b: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f78f: callq  0x000000010dc0341e
  0x0000000115e9f794: hlt    
  0x0000000115e9f795: movzbl 0x6(%r13),%ebx
  0x0000000115e9f79a: add    $0x6,%r13
  0x0000000115e9f79e: movabs $0x10e100840,%r10
  0x0000000115e9f7a8: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f7ac: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f7b4: mov    -0x38(%rbp),%r13
  0x0000000115e9f7b8: mov    -0x30(%rbp),%r14
  0x0000000115e9f7bc: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f7c4: je     0x0000000115e9f8c6
  0x0000000115e9f7ca: callq  0x0000000115e9f7d4
  0x0000000115e9f7cf: jmpq   0x0000000115e9f84f
  0x0000000115e9f7d4: lea    0x8(%rsp),%rax
  0x0000000115e9f7d9: mov    %r13,-0x38(%rbp)
  0x0000000115e9f7dd: mov    %r15,%rdi
  0x0000000115e9f7e0: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f7e7: mov    %rax,0x1d8(%r15)
  0x0000000115e9f7ee: test   $0xf,%esp
  0x0000000115e9f7f4: je     0x0000000115e9f80c
  0x0000000115e9f7fa: sub    $0x8,%rsp
  0x0000000115e9f7fe: callq  0x000000010dae5ebc
  0x0000000115e9f803: add    $0x8,%rsp
  0x0000000115e9f807: jmpq   0x0000000115e9f811
  0x0000000115e9f80c: callq  0x000000010dae5ebc
  0x0000000115e9f811: movabs $0x0,%r10
  0x0000000115e9f81b: mov    %r10,0x1d8(%r15)
  0x0000000115e9f822: movabs $0x0,%r10
  0x0000000115e9f82c: mov    %r10,0x1e8(%r15)
  0x0000000115e9f833: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f83b: je     0x0000000115e9f846
  0x0000000115e9f841: jmpq   0x0000000115e916e0
  0x0000000115e9f846: mov    -0x38(%rbp),%r13
  0x0000000115e9f84a: mov    -0x30(%rbp),%r14
  0x0000000115e9f84e: retq   
  0x0000000115e9f84f: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f854: sub    $0x80,%rsp
  0x0000000115e9f85b: mov    %rax,0x78(%rsp)
  0x0000000115e9f860: mov    %rcx,0x70(%rsp)
  0x0000000115e9f865: mov    %rdx,0x68(%rsp)
  0x0000000115e9f86a: mov    %rbx,0x60(%rsp)
  0x0000000115e9f86f: mov    %rbp,0x50(%rsp)
  0x0000000115e9f874: mov    %rsi,0x48(%rsp)
  0x0000000115e9f879: mov    %rdi,0x40(%rsp)
  0x0000000115e9f87e: mov    %r8,0x38(%rsp)
  0x0000000115e9f883: mov    %r9,0x30(%rsp)
  0x0000000115e9f888: mov    %r10,0x28(%rsp)
  0x0000000115e9f88d: mov    %r11,0x20(%rsp)
  0x0000000115e9f892: mov    %r12,0x18(%rsp)
  0x0000000115e9f897: mov    %r13,0x10(%rsp)
  0x0000000115e9f89c: mov    %r14,0x8(%rsp)
  0x0000000115e9f8a1: mov    %r15,(%rsp)
  0x0000000115e9f8a5: movabs $0x10ddd8000,%rdi
  0x0000000115e9f8af: movabs $0x115e9f84f,%rsi
  0x0000000115e9f8b9: mov    %rsp,%rdx
  0x0000000115e9f8bc: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f8c0: callq  0x000000010dc0341e
  0x0000000115e9f8c5: hlt    
  0x0000000115e9f8c6: movzbl 0x6(%r13),%ebx
  0x0000000115e9f8cb: add    $0x6,%r13
  0x0000000115e9f8cf: movabs $0x10e100040,%r10
  0x0000000115e9f8d9: jmpq   *(%r10,%rbx,8)
  0x0000000115e9f8dd: movq   $0x0,-0x10(%rbp)
  0x0000000115e9f8e5: mov    -0x38(%rbp),%r13
  0x0000000115e9f8e9: mov    -0x30(%rbp),%r14
  0x0000000115e9f8ed: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f8f5: je     0x0000000115e9f9f7
  0x0000000115e9f8fb: callq  0x0000000115e9f905
  0x0000000115e9f900: jmpq   0x0000000115e9f980
  0x0000000115e9f905: lea    0x8(%rsp),%rax
  0x0000000115e9f90a: mov    %r13,-0x38(%rbp)
  0x0000000115e9f90e: mov    %r15,%rdi
  0x0000000115e9f911: mov    %rbp,0x1e8(%r15)
  0x0000000115e9f918: mov    %rax,0x1d8(%r15)
  0x0000000115e9f91f: test   $0xf,%esp
  0x0000000115e9f925: je     0x0000000115e9f93d
  0x0000000115e9f92b: sub    $0x8,%rsp
  0x0000000115e9f92f: callq  0x000000010dae5ebc
  0x0000000115e9f934: add    $0x8,%rsp
  0x0000000115e9f938: jmpq   0x0000000115e9f942
  0x0000000115e9f93d: callq  0x000000010dae5ebc
  0x0000000115e9f942: movabs $0x0,%r10
  0x0000000115e9f94c: mov    %r10,0x1d8(%r15)
  0x0000000115e9f953: movabs $0x0,%r10
  0x0000000115e9f95d: mov    %r10,0x1e8(%r15)
  0x0000000115e9f964: cmpq   $0x0,0x8(%r15)
  0x0000000115e9f96c: je     0x0000000115e9f977
  0x0000000115e9f972: jmpq   0x0000000115e916e0
  0x0000000115e9f977: mov    -0x38(%rbp),%r13
  0x0000000115e9f97b: mov    -0x30(%rbp),%r14
  0x0000000115e9f97f: retq   
  0x0000000115e9f980: mov    %rsp,-0x28(%rsp)
  0x0000000115e9f985: sub    $0x80,%rsp
  0x0000000115e9f98c: mov    %rax,0x78(%rsp)
  0x0000000115e9f991: mov    %rcx,0x70(%rsp)
  0x0000000115e9f996: mov    %rdx,0x68(%rsp)
  0x0000000115e9f99b: mov    %rbx,0x60(%rsp)
  0x0000000115e9f9a0: mov    %rbp,0x50(%rsp)
  0x0000000115e9f9a5: mov    %rsi,0x48(%rsp)
  0x0000000115e9f9aa: mov    %rdi,0x40(%rsp)
  0x0000000115e9f9af: mov    %r8,0x38(%rsp)
  0x0000000115e9f9b4: mov    %r9,0x30(%rsp)
  0x0000000115e9f9b9: mov    %r10,0x28(%rsp)
  0x0000000115e9f9be: mov    %r11,0x20(%rsp)
  0x0000000115e9f9c3: mov    %r12,0x18(%rsp)
  0x0000000115e9f9c8: mov    %r13,0x10(%rsp)
  0x0000000115e9f9cd: mov    %r14,0x8(%rsp)
  0x0000000115e9f9d2: mov    %r15,(%rsp)
  0x0000000115e9f9d6: movabs $0x10ddd8000,%rdi
  0x0000000115e9f9e0: movabs $0x115e9f980,%rsi
  0x0000000115e9f9ea: mov    %rsp,%rdx
  0x0000000115e9f9ed: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9f9f1: callq  0x000000010dc0341e
  0x0000000115e9f9f6: hlt    
  0x0000000115e9f9f7: movzbl 0x6(%r13),%ebx
  0x0000000115e9f9fc: add    $0x6,%r13
  0x0000000115e9fa00: movabs $0x10e0ff840,%r10
  0x0000000115e9fa0a: jmpq   *(%r10,%rbx,8)
  0x0000000115e9fa0e: movq   $0x0,-0x10(%rbp)
  0x0000000115e9fa16: mov    -0x38(%rbp),%r13
  0x0000000115e9fa1a: mov    -0x30(%rbp),%r14
  0x0000000115e9fa1e: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fa26: je     0x0000000115e9fb28
  0x0000000115e9fa2c: callq  0x0000000115e9fa36
  0x0000000115e9fa31: jmpq   0x0000000115e9fab1
  0x0000000115e9fa36: lea    0x8(%rsp),%rax
  0x0000000115e9fa3b: mov    %r13,-0x38(%rbp)
  0x0000000115e9fa3f: mov    %r15,%rdi
  0x0000000115e9fa42: mov    %rbp,0x1e8(%r15)
  0x0000000115e9fa49: mov    %rax,0x1d8(%r15)
  0x0000000115e9fa50: test   $0xf,%esp
  0x0000000115e9fa56: je     0x0000000115e9fa6e
  0x0000000115e9fa5c: sub    $0x8,%rsp
  0x0000000115e9fa60: callq  0x000000010dae5ebc
  0x0000000115e9fa65: add    $0x8,%rsp
  0x0000000115e9fa69: jmpq   0x0000000115e9fa73
  0x0000000115e9fa6e: callq  0x000000010dae5ebc
  0x0000000115e9fa73: movabs $0x0,%r10
  0x0000000115e9fa7d: mov    %r10,0x1d8(%r15)
  0x0000000115e9fa84: movabs $0x0,%r10
  0x0000000115e9fa8e: mov    %r10,0x1e8(%r15)
  0x0000000115e9fa95: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fa9d: je     0x0000000115e9faa8
  0x0000000115e9faa3: jmpq   0x0000000115e916e0
  0x0000000115e9faa8: mov    -0x38(%rbp),%r13
  0x0000000115e9faac: mov    -0x30(%rbp),%r14
  0x0000000115e9fab0: retq   
  0x0000000115e9fab1: mov    %rsp,-0x28(%rsp)
  0x0000000115e9fab6: sub    $0x80,%rsp
  0x0000000115e9fabd: mov    %rax,0x78(%rsp)
  0x0000000115e9fac2: mov    %rcx,0x70(%rsp)
  0x0000000115e9fac7: mov    %rdx,0x68(%rsp)
  0x0000000115e9facc: mov    %rbx,0x60(%rsp)
  0x0000000115e9fad1: mov    %rbp,0x50(%rsp)
  0x0000000115e9fad6: mov    %rsi,0x48(%rsp)
  0x0000000115e9fadb: mov    %rdi,0x40(%rsp)
  0x0000000115e9fae0: mov    %r8,0x38(%rsp)
  0x0000000115e9fae5: mov    %r9,0x30(%rsp)
  0x0000000115e9faea: mov    %r10,0x28(%rsp)
  0x0000000115e9faef: mov    %r11,0x20(%rsp)
  0x0000000115e9faf4: mov    %r12,0x18(%rsp)
  0x0000000115e9faf9: mov    %r13,0x10(%rsp)
  0x0000000115e9fafe: mov    %r14,0x8(%rsp)
  0x0000000115e9fb03: mov    %r15,(%rsp)
  0x0000000115e9fb07: movabs $0x10ddd8000,%rdi
  0x0000000115e9fb11: movabs $0x115e9fab1,%rsi
  0x0000000115e9fb1b: mov    %rsp,%rdx
  0x0000000115e9fb1e: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9fb22: callq  0x000000010dc0341e
  0x0000000115e9fb27: hlt    
  0x0000000115e9fb28: movzbl 0x6(%r13),%ebx
  0x0000000115e9fb2d: add    $0x6,%r13
  0x0000000115e9fb31: movabs $0x10e0ff040,%r10
  0x0000000115e9fb3b: jmpq   *(%r10,%rbx,8)
  0x0000000115e9fb3f: movq   $0x0,-0x10(%rbp)
  0x0000000115e9fb47: mov    -0x38(%rbp),%r13
  0x0000000115e9fb4b: mov    -0x30(%rbp),%r14
  0x0000000115e9fb4f: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fb57: je     0x0000000115e9fc59
  0x0000000115e9fb5d: callq  0x0000000115e9fb67
  0x0000000115e9fb62: jmpq   0x0000000115e9fbe2
  0x0000000115e9fb67: lea    0x8(%rsp),%rax
  0x0000000115e9fb6c: mov    %r13,-0x38(%rbp)
  0x0000000115e9fb70: mov    %r15,%rdi
  0x0000000115e9fb73: mov    %rbp,0x1e8(%r15)
  0x0000000115e9fb7a: mov    %rax,0x1d8(%r15)
  0x0000000115e9fb81: test   $0xf,%esp
  0x0000000115e9fb87: je     0x0000000115e9fb9f
  0x0000000115e9fb8d: sub    $0x8,%rsp
  0x0000000115e9fb91: callq  0x000000010dae5ebc
  0x0000000115e9fb96: add    $0x8,%rsp
  0x0000000115e9fb9a: jmpq   0x0000000115e9fba4
  0x0000000115e9fb9f: callq  0x000000010dae5ebc
  0x0000000115e9fba4: movabs $0x0,%r10
  0x0000000115e9fbae: mov    %r10,0x1d8(%r15)
  0x0000000115e9fbb5: movabs $0x0,%r10
  0x0000000115e9fbbf: mov    %r10,0x1e8(%r15)
  0x0000000115e9fbc6: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fbce: je     0x0000000115e9fbd9
  0x0000000115e9fbd4: jmpq   0x0000000115e916e0
  0x0000000115e9fbd9: mov    -0x38(%rbp),%r13
  0x0000000115e9fbdd: mov    -0x30(%rbp),%r14
  0x0000000115e9fbe1: retq   
  0x0000000115e9fbe2: mov    %rsp,-0x28(%rsp)
  0x0000000115e9fbe7: sub    $0x80,%rsp
  0x0000000115e9fbee: mov    %rax,0x78(%rsp)
  0x0000000115e9fbf3: mov    %rcx,0x70(%rsp)
  0x0000000115e9fbf8: mov    %rdx,0x68(%rsp)
  0x0000000115e9fbfd: mov    %rbx,0x60(%rsp)
  0x0000000115e9fc02: mov    %rbp,0x50(%rsp)
  0x0000000115e9fc07: mov    %rsi,0x48(%rsp)
  0x0000000115e9fc0c: mov    %rdi,0x40(%rsp)
  0x0000000115e9fc11: mov    %r8,0x38(%rsp)
  0x0000000115e9fc16: mov    %r9,0x30(%rsp)
  0x0000000115e9fc1b: mov    %r10,0x28(%rsp)
  0x0000000115e9fc20: mov    %r11,0x20(%rsp)
  0x0000000115e9fc25: mov    %r12,0x18(%rsp)
  0x0000000115e9fc2a: mov    %r13,0x10(%rsp)
  0x0000000115e9fc2f: mov    %r14,0x8(%rsp)
  0x0000000115e9fc34: mov    %r15,(%rsp)
  0x0000000115e9fc38: movabs $0x10ddd8000,%rdi
  0x0000000115e9fc42: movabs $0x115e9fbe2,%rsi
  0x0000000115e9fc4c: mov    %rsp,%rdx
  0x0000000115e9fc4f: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9fc53: callq  0x000000010dc0341e
  0x0000000115e9fc58: hlt    
  0x0000000115e9fc59: movzbl 0x6(%r13),%ebx
  0x0000000115e9fc5e: add    $0x6,%r13
  0x0000000115e9fc62: movabs $0x10e101040,%r10
  0x0000000115e9fc6c: jmpq   *(%r10,%rbx,8)
  0x0000000115e9fc70: movq   $0x0,-0x10(%rbp)
  0x0000000115e9fc78: mov    -0x38(%rbp),%r13
  0x0000000115e9fc7c: mov    -0x30(%rbp),%r14
  0x0000000115e9fc80: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fc88: je     0x0000000115e9fd8a
  0x0000000115e9fc8e: callq  0x0000000115e9fc98
  0x0000000115e9fc93: jmpq   0x0000000115e9fd13
  0x0000000115e9fc98: lea    0x8(%rsp),%rax
  0x0000000115e9fc9d: mov    %r13,-0x38(%rbp)
  0x0000000115e9fca1: mov    %r15,%rdi
  0x0000000115e9fca4: mov    %rbp,0x1e8(%r15)
  0x0000000115e9fcab: mov    %rax,0x1d8(%r15)
  0x0000000115e9fcb2: test   $0xf,%esp
  0x0000000115e9fcb8: je     0x0000000115e9fcd0
  0x0000000115e9fcbe: sub    $0x8,%rsp
  0x0000000115e9fcc2: callq  0x000000010dae5ebc
  0x0000000115e9fcc7: add    $0x8,%rsp
  0x0000000115e9fccb: jmpq   0x0000000115e9fcd5
  0x0000000115e9fcd0: callq  0x000000010dae5ebc
  0x0000000115e9fcd5: movabs $0x0,%r10
  0x0000000115e9fcdf: mov    %r10,0x1d8(%r15)
  0x0000000115e9fce6: movabs $0x0,%r10
  0x0000000115e9fcf0: mov    %r10,0x1e8(%r15)
  0x0000000115e9fcf7: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fcff: je     0x0000000115e9fd0a
  0x0000000115e9fd05: jmpq   0x0000000115e916e0
  0x0000000115e9fd0a: mov    -0x38(%rbp),%r13
  0x0000000115e9fd0e: mov    -0x30(%rbp),%r14
  0x0000000115e9fd12: retq   
  0x0000000115e9fd13: mov    %rsp,-0x28(%rsp)
  0x0000000115e9fd18: sub    $0x80,%rsp
  0x0000000115e9fd1f: mov    %rax,0x78(%rsp)
  0x0000000115e9fd24: mov    %rcx,0x70(%rsp)
  0x0000000115e9fd29: mov    %rdx,0x68(%rsp)
  0x0000000115e9fd2e: mov    %rbx,0x60(%rsp)
  0x0000000115e9fd33: mov    %rbp,0x50(%rsp)
  0x0000000115e9fd38: mov    %rsi,0x48(%rsp)
  0x0000000115e9fd3d: mov    %rdi,0x40(%rsp)
  0x0000000115e9fd42: mov    %r8,0x38(%rsp)
  0x0000000115e9fd47: mov    %r9,0x30(%rsp)
  0x0000000115e9fd4c: mov    %r10,0x28(%rsp)
  0x0000000115e9fd51: mov    %r11,0x20(%rsp)
  0x0000000115e9fd56: mov    %r12,0x18(%rsp)
  0x0000000115e9fd5b: mov    %r13,0x10(%rsp)
  0x0000000115e9fd60: mov    %r14,0x8(%rsp)
  0x0000000115e9fd65: mov    %r15,(%rsp)
  0x0000000115e9fd69: movabs $0x10ddd8000,%rdi
  0x0000000115e9fd73: movabs $0x115e9fd13,%rsi
  0x0000000115e9fd7d: mov    %rsp,%rdx
  0x0000000115e9fd80: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9fd84: callq  0x000000010dc0341e
  0x0000000115e9fd89: hlt    
  0x0000000115e9fd8a: movzbl 0x6(%r13),%ebx
  0x0000000115e9fd8f: add    $0x6,%r13
  0x0000000115e9fd93: movabs $0x10e0ff040,%r10
  0x0000000115e9fd9d: jmpq   *(%r10,%rbx,8)
  0x0000000115e9fda1: movq   $0x0,-0x10(%rbp)
  0x0000000115e9fda9: mov    -0x38(%rbp),%r13
  0x0000000115e9fdad: mov    -0x30(%rbp),%r14
  0x0000000115e9fdb1: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fdb9: je     0x0000000115e9febb
  0x0000000115e9fdbf: callq  0x0000000115e9fdc9
  0x0000000115e9fdc4: jmpq   0x0000000115e9fe44
  0x0000000115e9fdc9: lea    0x8(%rsp),%rax
  0x0000000115e9fdce: mov    %r13,-0x38(%rbp)
  0x0000000115e9fdd2: mov    %r15,%rdi
  0x0000000115e9fdd5: mov    %rbp,0x1e8(%r15)
  0x0000000115e9fddc: mov    %rax,0x1d8(%r15)
  0x0000000115e9fde3: test   $0xf,%esp
  0x0000000115e9fde9: je     0x0000000115e9fe01
  0x0000000115e9fdef: sub    $0x8,%rsp
  0x0000000115e9fdf3: callq  0x000000010dae5ebc
  0x0000000115e9fdf8: add    $0x8,%rsp
  0x0000000115e9fdfc: jmpq   0x0000000115e9fe06
  0x0000000115e9fe01: callq  0x000000010dae5ebc
  0x0000000115e9fe06: movabs $0x0,%r10
  0x0000000115e9fe10: mov    %r10,0x1d8(%r15)
  0x0000000115e9fe17: movabs $0x0,%r10
  0x0000000115e9fe21: mov    %r10,0x1e8(%r15)
  0x0000000115e9fe28: cmpq   $0x0,0x8(%r15)
  0x0000000115e9fe30: je     0x0000000115e9fe3b
  0x0000000115e9fe36: jmpq   0x0000000115e916e0
  0x0000000115e9fe3b: mov    -0x38(%rbp),%r13
  0x0000000115e9fe3f: mov    -0x30(%rbp),%r14
  0x0000000115e9fe43: retq   
  0x0000000115e9fe44: mov    %rsp,-0x28(%rsp)
  0x0000000115e9fe49: sub    $0x80,%rsp
  0x0000000115e9fe50: mov    %rax,0x78(%rsp)
  0x0000000115e9fe55: mov    %rcx,0x70(%rsp)
  0x0000000115e9fe5a: mov    %rdx,0x68(%rsp)
  0x0000000115e9fe5f: mov    %rbx,0x60(%rsp)
  0x0000000115e9fe64: mov    %rbp,0x50(%rsp)
  0x0000000115e9fe69: mov    %rsi,0x48(%rsp)
  0x0000000115e9fe6e: mov    %rdi,0x40(%rsp)
  0x0000000115e9fe73: mov    %r8,0x38(%rsp)
  0x0000000115e9fe78: mov    %r9,0x30(%rsp)
  0x0000000115e9fe7d: mov    %r10,0x28(%rsp)
  0x0000000115e9fe82: mov    %r11,0x20(%rsp)
  0x0000000115e9fe87: mov    %r12,0x18(%rsp)
  0x0000000115e9fe8c: mov    %r13,0x10(%rsp)
  0x0000000115e9fe91: mov    %r14,0x8(%rsp)
  0x0000000115e9fe96: mov    %r15,(%rsp)
  0x0000000115e9fe9a: movabs $0x10ddd8000,%rdi
  0x0000000115e9fea4: movabs $0x115e9fe44,%rsi
  0x0000000115e9feae: mov    %rsp,%rdx
  0x0000000115e9feb1: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9feb5: callq  0x000000010dc0341e
  0x0000000115e9feba: hlt    
  0x0000000115e9febb: movzbl 0x6(%r13),%ebx
  0x0000000115e9fec0: add    $0x6,%r13
  0x0000000115e9fec4: movabs $0x10e0ff040,%r10
  0x0000000115e9fece: jmpq   *(%r10,%rbx,8)
  0x0000000115e9fed2: movq   $0x0,-0x10(%rbp)
  0x0000000115e9feda: mov    -0x38(%rbp),%r13
  0x0000000115e9fede: mov    -0x30(%rbp),%r14
  0x0000000115e9fee2: cmpq   $0x0,0x8(%r15)
  0x0000000115e9feea: je     0x0000000115e9ffec
  0x0000000115e9fef0: callq  0x0000000115e9fefa
  0x0000000115e9fef5: jmpq   0x0000000115e9ff75
  0x0000000115e9fefa: lea    0x8(%rsp),%rax
  0x0000000115e9feff: mov    %r13,-0x38(%rbp)
  0x0000000115e9ff03: mov    %r15,%rdi
  0x0000000115e9ff06: mov    %rbp,0x1e8(%r15)
  0x0000000115e9ff0d: mov    %rax,0x1d8(%r15)
  0x0000000115e9ff14: test   $0xf,%esp
  0x0000000115e9ff1a: je     0x0000000115e9ff32
  0x0000000115e9ff20: sub    $0x8,%rsp
  0x0000000115e9ff24: callq  0x000000010dae5ebc
  0x0000000115e9ff29: add    $0x8,%rsp
  0x0000000115e9ff2d: jmpq   0x0000000115e9ff37
  0x0000000115e9ff32: callq  0x000000010dae5ebc
  0x0000000115e9ff37: movabs $0x0,%r10
  0x0000000115e9ff41: mov    %r10,0x1d8(%r15)
  0x0000000115e9ff48: movabs $0x0,%r10
  0x0000000115e9ff52: mov    %r10,0x1e8(%r15)
  0x0000000115e9ff59: cmpq   $0x0,0x8(%r15)
  0x0000000115e9ff61: je     0x0000000115e9ff6c
  0x0000000115e9ff67: jmpq   0x0000000115e916e0
  0x0000000115e9ff6c: mov    -0x38(%rbp),%r13
  0x0000000115e9ff70: mov    -0x30(%rbp),%r14
  0x0000000115e9ff74: retq   
  0x0000000115e9ff75: mov    %rsp,-0x28(%rsp)
  0x0000000115e9ff7a: sub    $0x80,%rsp
  0x0000000115e9ff81: mov    %rax,0x78(%rsp)
  0x0000000115e9ff86: mov    %rcx,0x70(%rsp)
  0x0000000115e9ff8b: mov    %rdx,0x68(%rsp)
  0x0000000115e9ff90: mov    %rbx,0x60(%rsp)
  0x0000000115e9ff95: mov    %rbp,0x50(%rsp)
  0x0000000115e9ff9a: mov    %rsi,0x48(%rsp)
  0x0000000115e9ff9f: mov    %rdi,0x40(%rsp)
  0x0000000115e9ffa4: mov    %r8,0x38(%rsp)
  0x0000000115e9ffa9: mov    %r9,0x30(%rsp)
  0x0000000115e9ffae: mov    %r10,0x28(%rsp)
  0x0000000115e9ffb3: mov    %r11,0x20(%rsp)
  0x0000000115e9ffb8: mov    %r12,0x18(%rsp)
  0x0000000115e9ffbd: mov    %r13,0x10(%rsp)
  0x0000000115e9ffc2: mov    %r14,0x8(%rsp)
  0x0000000115e9ffc7: mov    %r15,(%rsp)
  0x0000000115e9ffcb: movabs $0x10ddd8000,%rdi
  0x0000000115e9ffd5: movabs $0x115e9ff75,%rsi
  0x0000000115e9ffdf: mov    %rsp,%rdx
  0x0000000115e9ffe2: and    $0xfffffffffffffff0,%rsp
  0x0000000115e9ffe6: callq  0x000000010dc0341e
  0x0000000115e9ffeb: hlt    
  0x0000000115e9ffec: movzbl 0x6(%r13),%ebx
  0x0000000115e9fff1: add    $0x6,%r13
  0x0000000115e9fff5: movabs $0x10e0ff040,%r10
  0x0000000115e9ffff: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0003: movq   $0x0,-0x10(%rbp)
  0x0000000115ea000b: mov    -0x38(%rbp),%r13
  0x0000000115ea000f: mov    -0x30(%rbp),%r14
  0x0000000115ea0013: cmpq   $0x0,0x8(%r15)
  0x0000000115ea001b: je     0x0000000115ea011d
  0x0000000115ea0021: callq  0x0000000115ea002b
  0x0000000115ea0026: jmpq   0x0000000115ea00a6
  0x0000000115ea002b: lea    0x8(%rsp),%rax
  0x0000000115ea0030: mov    %r13,-0x38(%rbp)
  0x0000000115ea0034: mov    %r15,%rdi
  0x0000000115ea0037: mov    %rbp,0x1e8(%r15)
  0x0000000115ea003e: mov    %rax,0x1d8(%r15)
  0x0000000115ea0045: test   $0xf,%esp
  0x0000000115ea004b: je     0x0000000115ea0063
  0x0000000115ea0051: sub    $0x8,%rsp
  0x0000000115ea0055: callq  0x000000010dae5ebc
  0x0000000115ea005a: add    $0x8,%rsp
  0x0000000115ea005e: jmpq   0x0000000115ea0068
  0x0000000115ea0063: callq  0x000000010dae5ebc
  0x0000000115ea0068: movabs $0x0,%r10
  0x0000000115ea0072: mov    %r10,0x1d8(%r15)
  0x0000000115ea0079: movabs $0x0,%r10
  0x0000000115ea0083: mov    %r10,0x1e8(%r15)
  0x0000000115ea008a: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0092: je     0x0000000115ea009d
  0x0000000115ea0098: jmpq   0x0000000115e916e0
  0x0000000115ea009d: mov    -0x38(%rbp),%r13
  0x0000000115ea00a1: mov    -0x30(%rbp),%r14
  0x0000000115ea00a5: retq   
  0x0000000115ea00a6: mov    %rsp,-0x28(%rsp)
  0x0000000115ea00ab: sub    $0x80,%rsp
  0x0000000115ea00b2: mov    %rax,0x78(%rsp)
  0x0000000115ea00b7: mov    %rcx,0x70(%rsp)
  0x0000000115ea00bc: mov    %rdx,0x68(%rsp)
  0x0000000115ea00c1: mov    %rbx,0x60(%rsp)
  0x0000000115ea00c6: mov    %rbp,0x50(%rsp)
  0x0000000115ea00cb: mov    %rsi,0x48(%rsp)
  0x0000000115ea00d0: mov    %rdi,0x40(%rsp)
  0x0000000115ea00d5: mov    %r8,0x38(%rsp)
  0x0000000115ea00da: mov    %r9,0x30(%rsp)
  0x0000000115ea00df: mov    %r10,0x28(%rsp)
  0x0000000115ea00e4: mov    %r11,0x20(%rsp)
  0x0000000115ea00e9: mov    %r12,0x18(%rsp)
  0x0000000115ea00ee: mov    %r13,0x10(%rsp)
  0x0000000115ea00f3: mov    %r14,0x8(%rsp)
  0x0000000115ea00f8: mov    %r15,(%rsp)
  0x0000000115ea00fc: movabs $0x10ddd8000,%rdi
  0x0000000115ea0106: movabs $0x115ea00a6,%rsi
  0x0000000115ea0110: mov    %rsp,%rdx
  0x0000000115ea0113: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0117: callq  0x000000010dc0341e
  0x0000000115ea011c: hlt    
  0x0000000115ea011d: movzbl 0x6(%r13),%ebx
  0x0000000115ea0122: add    $0x6,%r13
  0x0000000115ea0126: movabs $0x10e0ff040,%r10
  0x0000000115ea0130: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0134: movq   $0x0,-0x10(%rbp)
  0x0000000115ea013c: mov    -0x38(%rbp),%r13
  0x0000000115ea0140: mov    -0x30(%rbp),%r14
  0x0000000115ea0144: cmpq   $0x0,0x8(%r15)
  0x0000000115ea014c: je     0x0000000115ea024e
  0x0000000115ea0152: callq  0x0000000115ea015c
  0x0000000115ea0157: jmpq   0x0000000115ea01d7
  0x0000000115ea015c: lea    0x8(%rsp),%rax
  0x0000000115ea0161: mov    %r13,-0x38(%rbp)
  0x0000000115ea0165: mov    %r15,%rdi
  0x0000000115ea0168: mov    %rbp,0x1e8(%r15)
  0x0000000115ea016f: mov    %rax,0x1d8(%r15)
  0x0000000115ea0176: test   $0xf,%esp
  0x0000000115ea017c: je     0x0000000115ea0194
  0x0000000115ea0182: sub    $0x8,%rsp
  0x0000000115ea0186: callq  0x000000010dae5ebc
  0x0000000115ea018b: add    $0x8,%rsp
  0x0000000115ea018f: jmpq   0x0000000115ea0199
  0x0000000115ea0194: callq  0x000000010dae5ebc
  0x0000000115ea0199: movabs $0x0,%r10
  0x0000000115ea01a3: mov    %r10,0x1d8(%r15)
  0x0000000115ea01aa: movabs $0x0,%r10
  0x0000000115ea01b4: mov    %r10,0x1e8(%r15)
  0x0000000115ea01bb: cmpq   $0x0,0x8(%r15)
  0x0000000115ea01c3: je     0x0000000115ea01ce
  0x0000000115ea01c9: jmpq   0x0000000115e916e0
  0x0000000115ea01ce: mov    -0x38(%rbp),%r13
  0x0000000115ea01d2: mov    -0x30(%rbp),%r14
  0x0000000115ea01d6: retq   
  0x0000000115ea01d7: mov    %rsp,-0x28(%rsp)
  0x0000000115ea01dc: sub    $0x80,%rsp
  0x0000000115ea01e3: mov    %rax,0x78(%rsp)
  0x0000000115ea01e8: mov    %rcx,0x70(%rsp)
  0x0000000115ea01ed: mov    %rdx,0x68(%rsp)
  0x0000000115ea01f2: mov    %rbx,0x60(%rsp)
  0x0000000115ea01f7: mov    %rbp,0x50(%rsp)
  0x0000000115ea01fc: mov    %rsi,0x48(%rsp)
  0x0000000115ea0201: mov    %rdi,0x40(%rsp)
  0x0000000115ea0206: mov    %r8,0x38(%rsp)
  0x0000000115ea020b: mov    %r9,0x30(%rsp)
  0x0000000115ea0210: mov    %r10,0x28(%rsp)
  0x0000000115ea0215: mov    %r11,0x20(%rsp)
  0x0000000115ea021a: mov    %r12,0x18(%rsp)
  0x0000000115ea021f: mov    %r13,0x10(%rsp)
  0x0000000115ea0224: mov    %r14,0x8(%rsp)
  0x0000000115ea0229: mov    %r15,(%rsp)
  0x0000000115ea022d: movabs $0x10ddd8000,%rdi
  0x0000000115ea0237: movabs $0x115ea01d7,%rsi
  0x0000000115ea0241: mov    %rsp,%rdx
  0x0000000115ea0244: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0248: callq  0x000000010dc0341e
  0x0000000115ea024d: hlt    
  0x0000000115ea024e: movzbl 0x7(%r13),%ebx
  0x0000000115ea0253: add    $0x7,%r13
  0x0000000115ea0257: movabs $0x10e101840,%r10
  0x0000000115ea0261: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0265: movq   $0x0,-0x10(%rbp)
  0x0000000115ea026d: mov    -0x38(%rbp),%r13
  0x0000000115ea0271: mov    -0x30(%rbp),%r14
  0x0000000115ea0275: cmpq   $0x0,0x8(%r15)
  0x0000000115ea027d: je     0x0000000115ea037f
  0x0000000115ea0283: callq  0x0000000115ea028d
  0x0000000115ea0288: jmpq   0x0000000115ea0308
  0x0000000115ea028d: lea    0x8(%rsp),%rax
  0x0000000115ea0292: mov    %r13,-0x38(%rbp)
  0x0000000115ea0296: mov    %r15,%rdi
  0x0000000115ea0299: mov    %rbp,0x1e8(%r15)
  0x0000000115ea02a0: mov    %rax,0x1d8(%r15)
  0x0000000115ea02a7: test   $0xf,%esp
  0x0000000115ea02ad: je     0x0000000115ea02c5
  0x0000000115ea02b3: sub    $0x8,%rsp
  0x0000000115ea02b7: callq  0x000000010dae5ebc
  0x0000000115ea02bc: add    $0x8,%rsp
  0x0000000115ea02c0: jmpq   0x0000000115ea02ca
  0x0000000115ea02c5: callq  0x000000010dae5ebc
  0x0000000115ea02ca: movabs $0x0,%r10
  0x0000000115ea02d4: mov    %r10,0x1d8(%r15)
  0x0000000115ea02db: movabs $0x0,%r10
  0x0000000115ea02e5: mov    %r10,0x1e8(%r15)
  0x0000000115ea02ec: cmpq   $0x0,0x8(%r15)
  0x0000000115ea02f4: je     0x0000000115ea02ff
  0x0000000115ea02fa: jmpq   0x0000000115e916e0
  0x0000000115ea02ff: mov    -0x38(%rbp),%r13
  0x0000000115ea0303: mov    -0x30(%rbp),%r14
  0x0000000115ea0307: retq   
  0x0000000115ea0308: mov    %rsp,-0x28(%rsp)
  0x0000000115ea030d: sub    $0x80,%rsp
  0x0000000115ea0314: mov    %rax,0x78(%rsp)
  0x0000000115ea0319: mov    %rcx,0x70(%rsp)
  0x0000000115ea031e: mov    %rdx,0x68(%rsp)
  0x0000000115ea0323: mov    %rbx,0x60(%rsp)
  0x0000000115ea0328: mov    %rbp,0x50(%rsp)
  0x0000000115ea032d: mov    %rsi,0x48(%rsp)
  0x0000000115ea0332: mov    %rdi,0x40(%rsp)
  0x0000000115ea0337: mov    %r8,0x38(%rsp)
  0x0000000115ea033c: mov    %r9,0x30(%rsp)
  0x0000000115ea0341: mov    %r10,0x28(%rsp)
  0x0000000115ea0346: mov    %r11,0x20(%rsp)
  0x0000000115ea034b: mov    %r12,0x18(%rsp)
  0x0000000115ea0350: mov    %r13,0x10(%rsp)
  0x0000000115ea0355: mov    %r14,0x8(%rsp)
  0x0000000115ea035a: mov    %r15,(%rsp)
  0x0000000115ea035e: movabs $0x10ddd8000,%rdi
  0x0000000115ea0368: movabs $0x115ea0308,%rsi
  0x0000000115ea0372: mov    %rsp,%rdx
  0x0000000115ea0375: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0379: callq  0x000000010dc0341e
  0x0000000115ea037e: hlt    
  0x0000000115ea037f: movzbl 0x7(%r13),%ebx
  0x0000000115ea0384: add    $0x7,%r13
  0x0000000115ea0388: movabs $0x10e100840,%r10
  0x0000000115ea0392: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0396: movq   $0x0,-0x10(%rbp)
  0x0000000115ea039e: mov    -0x38(%rbp),%r13
  0x0000000115ea03a2: mov    -0x30(%rbp),%r14
  0x0000000115ea03a6: cmpq   $0x0,0x8(%r15)
  0x0000000115ea03ae: je     0x0000000115ea04b0
  0x0000000115ea03b4: callq  0x0000000115ea03be
  0x0000000115ea03b9: jmpq   0x0000000115ea0439
  0x0000000115ea03be: lea    0x8(%rsp),%rax
  0x0000000115ea03c3: mov    %r13,-0x38(%rbp)
  0x0000000115ea03c7: mov    %r15,%rdi
  0x0000000115ea03ca: mov    %rbp,0x1e8(%r15)
  0x0000000115ea03d1: mov    %rax,0x1d8(%r15)
  0x0000000115ea03d8: test   $0xf,%esp
  0x0000000115ea03de: je     0x0000000115ea03f6
  0x0000000115ea03e4: sub    $0x8,%rsp
  0x0000000115ea03e8: callq  0x000000010dae5ebc
  0x0000000115ea03ed: add    $0x8,%rsp
  0x0000000115ea03f1: jmpq   0x0000000115ea03fb
  0x0000000115ea03f6: callq  0x000000010dae5ebc
  0x0000000115ea03fb: movabs $0x0,%r10
  0x0000000115ea0405: mov    %r10,0x1d8(%r15)
  0x0000000115ea040c: movabs $0x0,%r10
  0x0000000115ea0416: mov    %r10,0x1e8(%r15)
  0x0000000115ea041d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0425: je     0x0000000115ea0430
  0x0000000115ea042b: jmpq   0x0000000115e916e0
  0x0000000115ea0430: mov    -0x38(%rbp),%r13
  0x0000000115ea0434: mov    -0x30(%rbp),%r14
  0x0000000115ea0438: retq   
  0x0000000115ea0439: mov    %rsp,-0x28(%rsp)
  0x0000000115ea043e: sub    $0x80,%rsp
  0x0000000115ea0445: mov    %rax,0x78(%rsp)
  0x0000000115ea044a: mov    %rcx,0x70(%rsp)
  0x0000000115ea044f: mov    %rdx,0x68(%rsp)
  0x0000000115ea0454: mov    %rbx,0x60(%rsp)
  0x0000000115ea0459: mov    %rbp,0x50(%rsp)
  0x0000000115ea045e: mov    %rsi,0x48(%rsp)
  0x0000000115ea0463: mov    %rdi,0x40(%rsp)
  0x0000000115ea0468: mov    %r8,0x38(%rsp)
  0x0000000115ea046d: mov    %r9,0x30(%rsp)
  0x0000000115ea0472: mov    %r10,0x28(%rsp)
  0x0000000115ea0477: mov    %r11,0x20(%rsp)
  0x0000000115ea047c: mov    %r12,0x18(%rsp)
  0x0000000115ea0481: mov    %r13,0x10(%rsp)
  0x0000000115ea0486: mov    %r14,0x8(%rsp)
  0x0000000115ea048b: mov    %r15,(%rsp)
  0x0000000115ea048f: movabs $0x10ddd8000,%rdi
  0x0000000115ea0499: movabs $0x115ea0439,%rsi
  0x0000000115ea04a3: mov    %rsp,%rdx
  0x0000000115ea04a6: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea04aa: callq  0x000000010dc0341e
  0x0000000115ea04af: hlt    
  0x0000000115ea04b0: movzbl 0x7(%r13),%ebx
  0x0000000115ea04b5: add    $0x7,%r13
  0x0000000115ea04b9: movabs $0x10e100040,%r10
  0x0000000115ea04c3: jmpq   *(%r10,%rbx,8)
  0x0000000115ea04c7: movq   $0x0,-0x10(%rbp)
  0x0000000115ea04cf: mov    -0x38(%rbp),%r13
  0x0000000115ea04d3: mov    -0x30(%rbp),%r14
  0x0000000115ea04d7: cmpq   $0x0,0x8(%r15)
  0x0000000115ea04df: je     0x0000000115ea05e1
  0x0000000115ea04e5: callq  0x0000000115ea04ef
  0x0000000115ea04ea: jmpq   0x0000000115ea056a
  0x0000000115ea04ef: lea    0x8(%rsp),%rax
  0x0000000115ea04f4: mov    %r13,-0x38(%rbp)
  0x0000000115ea04f8: mov    %r15,%rdi
  0x0000000115ea04fb: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0502: mov    %rax,0x1d8(%r15)
  0x0000000115ea0509: test   $0xf,%esp
  0x0000000115ea050f: je     0x0000000115ea0527
  0x0000000115ea0515: sub    $0x8,%rsp
  0x0000000115ea0519: callq  0x000000010dae5ebc
  0x0000000115ea051e: add    $0x8,%rsp
  0x0000000115ea0522: jmpq   0x0000000115ea052c
  0x0000000115ea0527: callq  0x000000010dae5ebc
  0x0000000115ea052c: movabs $0x0,%r10
  0x0000000115ea0536: mov    %r10,0x1d8(%r15)
  0x0000000115ea053d: movabs $0x0,%r10
  0x0000000115ea0547: mov    %r10,0x1e8(%r15)
  0x0000000115ea054e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0556: je     0x0000000115ea0561
  0x0000000115ea055c: jmpq   0x0000000115e916e0
  0x0000000115ea0561: mov    -0x38(%rbp),%r13
  0x0000000115ea0565: mov    -0x30(%rbp),%r14
  0x0000000115ea0569: retq   
  0x0000000115ea056a: mov    %rsp,-0x28(%rsp)
  0x0000000115ea056f: sub    $0x80,%rsp
  0x0000000115ea0576: mov    %rax,0x78(%rsp)
  0x0000000115ea057b: mov    %rcx,0x70(%rsp)
  0x0000000115ea0580: mov    %rdx,0x68(%rsp)
  0x0000000115ea0585: mov    %rbx,0x60(%rsp)
  0x0000000115ea058a: mov    %rbp,0x50(%rsp)
  0x0000000115ea058f: mov    %rsi,0x48(%rsp)
  0x0000000115ea0594: mov    %rdi,0x40(%rsp)
  0x0000000115ea0599: mov    %r8,0x38(%rsp)
  0x0000000115ea059e: mov    %r9,0x30(%rsp)
  0x0000000115ea05a3: mov    %r10,0x28(%rsp)
  0x0000000115ea05a8: mov    %r11,0x20(%rsp)
  0x0000000115ea05ad: mov    %r12,0x18(%rsp)
  0x0000000115ea05b2: mov    %r13,0x10(%rsp)
  0x0000000115ea05b7: mov    %r14,0x8(%rsp)
  0x0000000115ea05bc: mov    %r15,(%rsp)
  0x0000000115ea05c0: movabs $0x10ddd8000,%rdi
  0x0000000115ea05ca: movabs $0x115ea056a,%rsi
  0x0000000115ea05d4: mov    %rsp,%rdx
  0x0000000115ea05d7: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea05db: callq  0x000000010dc0341e
  0x0000000115ea05e0: hlt    
  0x0000000115ea05e1: movzbl 0x7(%r13),%ebx
  0x0000000115ea05e6: add    $0x7,%r13
  0x0000000115ea05ea: movabs $0x10e0ff840,%r10
  0x0000000115ea05f4: jmpq   *(%r10,%rbx,8)
  0x0000000115ea05f8: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0600: mov    -0x38(%rbp),%r13
  0x0000000115ea0604: mov    -0x30(%rbp),%r14
  0x0000000115ea0608: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0610: je     0x0000000115ea0712
  0x0000000115ea0616: callq  0x0000000115ea0620
  0x0000000115ea061b: jmpq   0x0000000115ea069b
  0x0000000115ea0620: lea    0x8(%rsp),%rax
  0x0000000115ea0625: mov    %r13,-0x38(%rbp)
  0x0000000115ea0629: mov    %r15,%rdi
  0x0000000115ea062c: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0633: mov    %rax,0x1d8(%r15)
  0x0000000115ea063a: test   $0xf,%esp
  0x0000000115ea0640: je     0x0000000115ea0658
  0x0000000115ea0646: sub    $0x8,%rsp
  0x0000000115ea064a: callq  0x000000010dae5ebc
  0x0000000115ea064f: add    $0x8,%rsp
  0x0000000115ea0653: jmpq   0x0000000115ea065d
  0x0000000115ea0658: callq  0x000000010dae5ebc
  0x0000000115ea065d: movabs $0x0,%r10
  0x0000000115ea0667: mov    %r10,0x1d8(%r15)
  0x0000000115ea066e: movabs $0x0,%r10
  0x0000000115ea0678: mov    %r10,0x1e8(%r15)
  0x0000000115ea067f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0687: je     0x0000000115ea0692
  0x0000000115ea068d: jmpq   0x0000000115e916e0
  0x0000000115ea0692: mov    -0x38(%rbp),%r13
  0x0000000115ea0696: mov    -0x30(%rbp),%r14
  0x0000000115ea069a: retq   
  0x0000000115ea069b: mov    %rsp,-0x28(%rsp)
  0x0000000115ea06a0: sub    $0x80,%rsp
  0x0000000115ea06a7: mov    %rax,0x78(%rsp)
  0x0000000115ea06ac: mov    %rcx,0x70(%rsp)
  0x0000000115ea06b1: mov    %rdx,0x68(%rsp)
  0x0000000115ea06b6: mov    %rbx,0x60(%rsp)
  0x0000000115ea06bb: mov    %rbp,0x50(%rsp)
  0x0000000115ea06c0: mov    %rsi,0x48(%rsp)
  0x0000000115ea06c5: mov    %rdi,0x40(%rsp)
  0x0000000115ea06ca: mov    %r8,0x38(%rsp)
  0x0000000115ea06cf: mov    %r9,0x30(%rsp)
  0x0000000115ea06d4: mov    %r10,0x28(%rsp)
  0x0000000115ea06d9: mov    %r11,0x20(%rsp)
  0x0000000115ea06de: mov    %r12,0x18(%rsp)
  0x0000000115ea06e3: mov    %r13,0x10(%rsp)
  0x0000000115ea06e8: mov    %r14,0x8(%rsp)
  0x0000000115ea06ed: mov    %r15,(%rsp)
  0x0000000115ea06f1: movabs $0x10ddd8000,%rdi
  0x0000000115ea06fb: movabs $0x115ea069b,%rsi
  0x0000000115ea0705: mov    %rsp,%rdx
  0x0000000115ea0708: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea070c: callq  0x000000010dc0341e
  0x0000000115ea0711: hlt    
  0x0000000115ea0712: movzbl 0x7(%r13),%ebx
  0x0000000115ea0717: add    $0x7,%r13
  0x0000000115ea071b: movabs $0x10e0ff040,%r10
  0x0000000115ea0725: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0729: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0731: mov    -0x38(%rbp),%r13
  0x0000000115ea0735: mov    -0x30(%rbp),%r14
  0x0000000115ea0739: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0741: je     0x0000000115ea0843
  0x0000000115ea0747: callq  0x0000000115ea0751
  0x0000000115ea074c: jmpq   0x0000000115ea07cc
  0x0000000115ea0751: lea    0x8(%rsp),%rax
  0x0000000115ea0756: mov    %r13,-0x38(%rbp)
  0x0000000115ea075a: mov    %r15,%rdi
  0x0000000115ea075d: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0764: mov    %rax,0x1d8(%r15)
  0x0000000115ea076b: test   $0xf,%esp
  0x0000000115ea0771: je     0x0000000115ea0789
  0x0000000115ea0777: sub    $0x8,%rsp
  0x0000000115ea077b: callq  0x000000010dae5ebc
  0x0000000115ea0780: add    $0x8,%rsp
  0x0000000115ea0784: jmpq   0x0000000115ea078e
  0x0000000115ea0789: callq  0x000000010dae5ebc
  0x0000000115ea078e: movabs $0x0,%r10
  0x0000000115ea0798: mov    %r10,0x1d8(%r15)
  0x0000000115ea079f: movabs $0x0,%r10
  0x0000000115ea07a9: mov    %r10,0x1e8(%r15)
  0x0000000115ea07b0: cmpq   $0x0,0x8(%r15)
  0x0000000115ea07b8: je     0x0000000115ea07c3
  0x0000000115ea07be: jmpq   0x0000000115e916e0
  0x0000000115ea07c3: mov    -0x38(%rbp),%r13
  0x0000000115ea07c7: mov    -0x30(%rbp),%r14
  0x0000000115ea07cb: retq   
  0x0000000115ea07cc: mov    %rsp,-0x28(%rsp)
  0x0000000115ea07d1: sub    $0x80,%rsp
  0x0000000115ea07d8: mov    %rax,0x78(%rsp)
  0x0000000115ea07dd: mov    %rcx,0x70(%rsp)
  0x0000000115ea07e2: mov    %rdx,0x68(%rsp)
  0x0000000115ea07e7: mov    %rbx,0x60(%rsp)
  0x0000000115ea07ec: mov    %rbp,0x50(%rsp)
  0x0000000115ea07f1: mov    %rsi,0x48(%rsp)
  0x0000000115ea07f6: mov    %rdi,0x40(%rsp)
  0x0000000115ea07fb: mov    %r8,0x38(%rsp)
  0x0000000115ea0800: mov    %r9,0x30(%rsp)
  0x0000000115ea0805: mov    %r10,0x28(%rsp)
  0x0000000115ea080a: mov    %r11,0x20(%rsp)
  0x0000000115ea080f: mov    %r12,0x18(%rsp)
  0x0000000115ea0814: mov    %r13,0x10(%rsp)
  0x0000000115ea0819: mov    %r14,0x8(%rsp)
  0x0000000115ea081e: mov    %r15,(%rsp)
  0x0000000115ea0822: movabs $0x10ddd8000,%rdi
  0x0000000115ea082c: movabs $0x115ea07cc,%rsi
  0x0000000115ea0836: mov    %rsp,%rdx
  0x0000000115ea0839: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea083d: callq  0x000000010dc0341e
  0x0000000115ea0842: hlt    
  0x0000000115ea0843: movzbl 0x7(%r13),%ebx
  0x0000000115ea0848: add    $0x7,%r13
  0x0000000115ea084c: movabs $0x10e101040,%r10
  0x0000000115ea0856: jmpq   *(%r10,%rbx,8)
  0x0000000115ea085a: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0862: mov    -0x38(%rbp),%r13
  0x0000000115ea0866: mov    -0x30(%rbp),%r14
  0x0000000115ea086a: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0872: je     0x0000000115ea0974
  0x0000000115ea0878: callq  0x0000000115ea0882
  0x0000000115ea087d: jmpq   0x0000000115ea08fd
  0x0000000115ea0882: lea    0x8(%rsp),%rax
  0x0000000115ea0887: mov    %r13,-0x38(%rbp)
  0x0000000115ea088b: mov    %r15,%rdi
  0x0000000115ea088e: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0895: mov    %rax,0x1d8(%r15)
  0x0000000115ea089c: test   $0xf,%esp
  0x0000000115ea08a2: je     0x0000000115ea08ba
  0x0000000115ea08a8: sub    $0x8,%rsp
  0x0000000115ea08ac: callq  0x000000010dae5ebc
  0x0000000115ea08b1: add    $0x8,%rsp
  0x0000000115ea08b5: jmpq   0x0000000115ea08bf
  0x0000000115ea08ba: callq  0x000000010dae5ebc
  0x0000000115ea08bf: movabs $0x0,%r10
  0x0000000115ea08c9: mov    %r10,0x1d8(%r15)
  0x0000000115ea08d0: movabs $0x0,%r10
  0x0000000115ea08da: mov    %r10,0x1e8(%r15)
  0x0000000115ea08e1: cmpq   $0x0,0x8(%r15)
  0x0000000115ea08e9: je     0x0000000115ea08f4
  0x0000000115ea08ef: jmpq   0x0000000115e916e0
  0x0000000115ea08f4: mov    -0x38(%rbp),%r13
  0x0000000115ea08f8: mov    -0x30(%rbp),%r14
  0x0000000115ea08fc: retq   
  0x0000000115ea08fd: mov    %rsp,-0x28(%rsp)
  0x0000000115ea0902: sub    $0x80,%rsp
  0x0000000115ea0909: mov    %rax,0x78(%rsp)
  0x0000000115ea090e: mov    %rcx,0x70(%rsp)
  0x0000000115ea0913: mov    %rdx,0x68(%rsp)
  0x0000000115ea0918: mov    %rbx,0x60(%rsp)
  0x0000000115ea091d: mov    %rbp,0x50(%rsp)
  0x0000000115ea0922: mov    %rsi,0x48(%rsp)
  0x0000000115ea0927: mov    %rdi,0x40(%rsp)
  0x0000000115ea092c: mov    %r8,0x38(%rsp)
  0x0000000115ea0931: mov    %r9,0x30(%rsp)
  0x0000000115ea0936: mov    %r10,0x28(%rsp)
  0x0000000115ea093b: mov    %r11,0x20(%rsp)
  0x0000000115ea0940: mov    %r12,0x18(%rsp)
  0x0000000115ea0945: mov    %r13,0x10(%rsp)
  0x0000000115ea094a: mov    %r14,0x8(%rsp)
  0x0000000115ea094f: mov    %r15,(%rsp)
  0x0000000115ea0953: movabs $0x10ddd8000,%rdi
  0x0000000115ea095d: movabs $0x115ea08fd,%rsi
  0x0000000115ea0967: mov    %rsp,%rdx
  0x0000000115ea096a: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea096e: callq  0x000000010dc0341e
  0x0000000115ea0973: hlt    
  0x0000000115ea0974: movzbl 0x7(%r13),%ebx
  0x0000000115ea0979: add    $0x7,%r13
  0x0000000115ea097d: movabs $0x10e0ff040,%r10
  0x0000000115ea0987: jmpq   *(%r10,%rbx,8)
  0x0000000115ea098b: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0993: mov    -0x38(%rbp),%r13
  0x0000000115ea0997: mov    -0x30(%rbp),%r14
  0x0000000115ea099b: cmpq   $0x0,0x8(%r15)
  0x0000000115ea09a3: je     0x0000000115ea0aa5
  0x0000000115ea09a9: callq  0x0000000115ea09b3
  0x0000000115ea09ae: jmpq   0x0000000115ea0a2e
  0x0000000115ea09b3: lea    0x8(%rsp),%rax
  0x0000000115ea09b8: mov    %r13,-0x38(%rbp)
  0x0000000115ea09bc: mov    %r15,%rdi
  0x0000000115ea09bf: mov    %rbp,0x1e8(%r15)
  0x0000000115ea09c6: mov    %rax,0x1d8(%r15)
  0x0000000115ea09cd: test   $0xf,%esp
  0x0000000115ea09d3: je     0x0000000115ea09eb
  0x0000000115ea09d9: sub    $0x8,%rsp
  0x0000000115ea09dd: callq  0x000000010dae5ebc
  0x0000000115ea09e2: add    $0x8,%rsp
  0x0000000115ea09e6: jmpq   0x0000000115ea09f0
  0x0000000115ea09eb: callq  0x000000010dae5ebc
  0x0000000115ea09f0: movabs $0x0,%r10
  0x0000000115ea09fa: mov    %r10,0x1d8(%r15)
  0x0000000115ea0a01: movabs $0x0,%r10
  0x0000000115ea0a0b: mov    %r10,0x1e8(%r15)
  0x0000000115ea0a12: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0a1a: je     0x0000000115ea0a25
  0x0000000115ea0a20: jmpq   0x0000000115e916e0
  0x0000000115ea0a25: mov    -0x38(%rbp),%r13
  0x0000000115ea0a29: mov    -0x30(%rbp),%r14
  0x0000000115ea0a2d: retq   
  0x0000000115ea0a2e: mov    %rsp,-0x28(%rsp)
  0x0000000115ea0a33: sub    $0x80,%rsp
  0x0000000115ea0a3a: mov    %rax,0x78(%rsp)
  0x0000000115ea0a3f: mov    %rcx,0x70(%rsp)
  0x0000000115ea0a44: mov    %rdx,0x68(%rsp)
  0x0000000115ea0a49: mov    %rbx,0x60(%rsp)
  0x0000000115ea0a4e: mov    %rbp,0x50(%rsp)
  0x0000000115ea0a53: mov    %rsi,0x48(%rsp)
  0x0000000115ea0a58: mov    %rdi,0x40(%rsp)
  0x0000000115ea0a5d: mov    %r8,0x38(%rsp)
  0x0000000115ea0a62: mov    %r9,0x30(%rsp)
  0x0000000115ea0a67: mov    %r10,0x28(%rsp)
  0x0000000115ea0a6c: mov    %r11,0x20(%rsp)
  0x0000000115ea0a71: mov    %r12,0x18(%rsp)
  0x0000000115ea0a76: mov    %r13,0x10(%rsp)
  0x0000000115ea0a7b: mov    %r14,0x8(%rsp)
  0x0000000115ea0a80: mov    %r15,(%rsp)
  0x0000000115ea0a84: movabs $0x10ddd8000,%rdi
  0x0000000115ea0a8e: movabs $0x115ea0a2e,%rsi
  0x0000000115ea0a98: mov    %rsp,%rdx
  0x0000000115ea0a9b: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0a9f: callq  0x000000010dc0341e
  0x0000000115ea0aa4: hlt    
  0x0000000115ea0aa5: movzbl 0x7(%r13),%ebx
  0x0000000115ea0aaa: add    $0x7,%r13
  0x0000000115ea0aae: movabs $0x10e0ff040,%r10
  0x0000000115ea0ab8: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0abc: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0ac4: mov    -0x38(%rbp),%r13
  0x0000000115ea0ac8: mov    -0x30(%rbp),%r14
  0x0000000115ea0acc: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0ad4: je     0x0000000115ea0bd6
  0x0000000115ea0ada: callq  0x0000000115ea0ae4
  0x0000000115ea0adf: jmpq   0x0000000115ea0b5f
  0x0000000115ea0ae4: lea    0x8(%rsp),%rax
  0x0000000115ea0ae9: mov    %r13,-0x38(%rbp)
  0x0000000115ea0aed: mov    %r15,%rdi
  0x0000000115ea0af0: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0af7: mov    %rax,0x1d8(%r15)
  0x0000000115ea0afe: test   $0xf,%esp
  0x0000000115ea0b04: je     0x0000000115ea0b1c
  0x0000000115ea0b0a: sub    $0x8,%rsp
  0x0000000115ea0b0e: callq  0x000000010dae5ebc
  0x0000000115ea0b13: add    $0x8,%rsp
  0x0000000115ea0b17: jmpq   0x0000000115ea0b21
  0x0000000115ea0b1c: callq  0x000000010dae5ebc
  0x0000000115ea0b21: movabs $0x0,%r10
  0x0000000115ea0b2b: mov    %r10,0x1d8(%r15)
  0x0000000115ea0b32: movabs $0x0,%r10
  0x0000000115ea0b3c: mov    %r10,0x1e8(%r15)
  0x0000000115ea0b43: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0b4b: je     0x0000000115ea0b56
  0x0000000115ea0b51: jmpq   0x0000000115e916e0
  0x0000000115ea0b56: mov    -0x38(%rbp),%r13
  0x0000000115ea0b5a: mov    -0x30(%rbp),%r14
  0x0000000115ea0b5e: retq   
  0x0000000115ea0b5f: mov    %rsp,-0x28(%rsp)
  0x0000000115ea0b64: sub    $0x80,%rsp
  0x0000000115ea0b6b: mov    %rax,0x78(%rsp)
  0x0000000115ea0b70: mov    %rcx,0x70(%rsp)
  0x0000000115ea0b75: mov    %rdx,0x68(%rsp)
  0x0000000115ea0b7a: mov    %rbx,0x60(%rsp)
  0x0000000115ea0b7f: mov    %rbp,0x50(%rsp)
  0x0000000115ea0b84: mov    %rsi,0x48(%rsp)
  0x0000000115ea0b89: mov    %rdi,0x40(%rsp)
  0x0000000115ea0b8e: mov    %r8,0x38(%rsp)
  0x0000000115ea0b93: mov    %r9,0x30(%rsp)
  0x0000000115ea0b98: mov    %r10,0x28(%rsp)
  0x0000000115ea0b9d: mov    %r11,0x20(%rsp)
  0x0000000115ea0ba2: mov    %r12,0x18(%rsp)
  0x0000000115ea0ba7: mov    %r13,0x10(%rsp)
  0x0000000115ea0bac: mov    %r14,0x8(%rsp)
  0x0000000115ea0bb1: mov    %r15,(%rsp)
  0x0000000115ea0bb5: movabs $0x10ddd8000,%rdi
  0x0000000115ea0bbf: movabs $0x115ea0b5f,%rsi
  0x0000000115ea0bc9: mov    %rsp,%rdx
  0x0000000115ea0bcc: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0bd0: callq  0x000000010dc0341e
  0x0000000115ea0bd5: hlt    
  0x0000000115ea0bd6: movzbl 0x7(%r13),%ebx
  0x0000000115ea0bdb: add    $0x7,%r13
  0x0000000115ea0bdf: movabs $0x10e0ff040,%r10
  0x0000000115ea0be9: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0bed: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0bf5: mov    -0x38(%rbp),%r13
  0x0000000115ea0bf9: mov    -0x30(%rbp),%r14
  0x0000000115ea0bfd: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0c05: je     0x0000000115ea0d07
  0x0000000115ea0c0b: callq  0x0000000115ea0c15
  0x0000000115ea0c10: jmpq   0x0000000115ea0c90
  0x0000000115ea0c15: lea    0x8(%rsp),%rax
  0x0000000115ea0c1a: mov    %r13,-0x38(%rbp)
  0x0000000115ea0c1e: mov    %r15,%rdi
  0x0000000115ea0c21: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0c28: mov    %rax,0x1d8(%r15)
  0x0000000115ea0c2f: test   $0xf,%esp
  0x0000000115ea0c35: je     0x0000000115ea0c4d
  0x0000000115ea0c3b: sub    $0x8,%rsp
  0x0000000115ea0c3f: callq  0x000000010dae5ebc
  0x0000000115ea0c44: add    $0x8,%rsp
  0x0000000115ea0c48: jmpq   0x0000000115ea0c52
  0x0000000115ea0c4d: callq  0x000000010dae5ebc
  0x0000000115ea0c52: movabs $0x0,%r10
  0x0000000115ea0c5c: mov    %r10,0x1d8(%r15)
  0x0000000115ea0c63: movabs $0x0,%r10
  0x0000000115ea0c6d: mov    %r10,0x1e8(%r15)
  0x0000000115ea0c74: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0c7c: je     0x0000000115ea0c87
  0x0000000115ea0c82: jmpq   0x0000000115e916e0
  0x0000000115ea0c87: mov    -0x38(%rbp),%r13
  0x0000000115ea0c8b: mov    -0x30(%rbp),%r14
  0x0000000115ea0c8f: retq   
  0x0000000115ea0c90: mov    %rsp,-0x28(%rsp)
  0x0000000115ea0c95: sub    $0x80,%rsp
  0x0000000115ea0c9c: mov    %rax,0x78(%rsp)
  0x0000000115ea0ca1: mov    %rcx,0x70(%rsp)
  0x0000000115ea0ca6: mov    %rdx,0x68(%rsp)
  0x0000000115ea0cab: mov    %rbx,0x60(%rsp)
  0x0000000115ea0cb0: mov    %rbp,0x50(%rsp)
  0x0000000115ea0cb5: mov    %rsi,0x48(%rsp)
  0x0000000115ea0cba: mov    %rdi,0x40(%rsp)
  0x0000000115ea0cbf: mov    %r8,0x38(%rsp)
  0x0000000115ea0cc4: mov    %r9,0x30(%rsp)
  0x0000000115ea0cc9: mov    %r10,0x28(%rsp)
  0x0000000115ea0cce: mov    %r11,0x20(%rsp)
  0x0000000115ea0cd3: mov    %r12,0x18(%rsp)
  0x0000000115ea0cd8: mov    %r13,0x10(%rsp)
  0x0000000115ea0cdd: mov    %r14,0x8(%rsp)
  0x0000000115ea0ce2: mov    %r15,(%rsp)
  0x0000000115ea0ce6: movabs $0x10ddd8000,%rdi
  0x0000000115ea0cf0: movabs $0x115ea0c90,%rsi
  0x0000000115ea0cfa: mov    %rsp,%rdx
  0x0000000115ea0cfd: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0d01: callq  0x000000010dc0341e
  0x0000000115ea0d06: hlt    
  0x0000000115ea0d07: movzbl 0x7(%r13),%ebx
  0x0000000115ea0d0c: add    $0x7,%r13
  0x0000000115ea0d10: movabs $0x10e0ff040,%r10
  0x0000000115ea0d1a: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0d1e: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0d26: mov    -0x38(%rbp),%r13
  0x0000000115ea0d2a: mov    -0x30(%rbp),%r14
  0x0000000115ea0d2e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0d36: je     0x0000000115ea0e38
  0x0000000115ea0d3c: callq  0x0000000115ea0d46
  0x0000000115ea0d41: jmpq   0x0000000115ea0dc1
  0x0000000115ea0d46: lea    0x8(%rsp),%rax
  0x0000000115ea0d4b: mov    %r13,-0x38(%rbp)
  0x0000000115ea0d4f: mov    %r15,%rdi
  0x0000000115ea0d52: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0d59: mov    %rax,0x1d8(%r15)
  0x0000000115ea0d60: test   $0xf,%esp
  0x0000000115ea0d66: je     0x0000000115ea0d7e
  0x0000000115ea0d6c: sub    $0x8,%rsp
  0x0000000115ea0d70: callq  0x000000010dae5ebc
  0x0000000115ea0d75: add    $0x8,%rsp
  0x0000000115ea0d79: jmpq   0x0000000115ea0d83
  0x0000000115ea0d7e: callq  0x000000010dae5ebc
  0x0000000115ea0d83: movabs $0x0,%r10
  0x0000000115ea0d8d: mov    %r10,0x1d8(%r15)
  0x0000000115ea0d94: movabs $0x0,%r10
  0x0000000115ea0d9e: mov    %r10,0x1e8(%r15)
  0x0000000115ea0da5: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0dad: je     0x0000000115ea0db8
  0x0000000115ea0db3: jmpq   0x0000000115e916e0
  0x0000000115ea0db8: mov    -0x38(%rbp),%r13
  0x0000000115ea0dbc: mov    -0x30(%rbp),%r14
  0x0000000115ea0dc0: retq   
  0x0000000115ea0dc1: mov    %rsp,-0x28(%rsp)
  0x0000000115ea0dc6: sub    $0x80,%rsp
  0x0000000115ea0dcd: mov    %rax,0x78(%rsp)
  0x0000000115ea0dd2: mov    %rcx,0x70(%rsp)
  0x0000000115ea0dd7: mov    %rdx,0x68(%rsp)
  0x0000000115ea0ddc: mov    %rbx,0x60(%rsp)
  0x0000000115ea0de1: mov    %rbp,0x50(%rsp)
  0x0000000115ea0de6: mov    %rsi,0x48(%rsp)
  0x0000000115ea0deb: mov    %rdi,0x40(%rsp)
  0x0000000115ea0df0: mov    %r8,0x38(%rsp)
  0x0000000115ea0df5: mov    %r9,0x30(%rsp)
  0x0000000115ea0dfa: mov    %r10,0x28(%rsp)
  0x0000000115ea0dff: mov    %r11,0x20(%rsp)
  0x0000000115ea0e04: mov    %r12,0x18(%rsp)
  0x0000000115ea0e09: mov    %r13,0x10(%rsp)
  0x0000000115ea0e0e: mov    %r14,0x8(%rsp)
  0x0000000115ea0e13: mov    %r15,(%rsp)
  0x0000000115ea0e17: movabs $0x10ddd8000,%rdi
  0x0000000115ea0e21: movabs $0x115ea0dc1,%rsi
  0x0000000115ea0e2b: mov    %rsp,%rdx
  0x0000000115ea0e2e: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0e32: callq  0x000000010dc0341e
  0x0000000115ea0e37: hlt    
  0x0000000115ea0e38: movzbl 0x8(%r13),%ebx
  0x0000000115ea0e3d: add    $0x8,%r13
  0x0000000115ea0e41: movabs $0x10e101840,%r10
  0x0000000115ea0e4b: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0e4f: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0e57: mov    -0x38(%rbp),%r13
  0x0000000115ea0e5b: mov    -0x30(%rbp),%r14
  0x0000000115ea0e5f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0e67: je     0x0000000115ea0f69
  0x0000000115ea0e6d: callq  0x0000000115ea0e77
  0x0000000115ea0e72: jmpq   0x0000000115ea0ef2
  0x0000000115ea0e77: lea    0x8(%rsp),%rax
  0x0000000115ea0e7c: mov    %r13,-0x38(%rbp)
  0x0000000115ea0e80: mov    %r15,%rdi
  0x0000000115ea0e83: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0e8a: mov    %rax,0x1d8(%r15)
  0x0000000115ea0e91: test   $0xf,%esp
  0x0000000115ea0e97: je     0x0000000115ea0eaf
  0x0000000115ea0e9d: sub    $0x8,%rsp
  0x0000000115ea0ea1: callq  0x000000010dae5ebc
  0x0000000115ea0ea6: add    $0x8,%rsp
  0x0000000115ea0eaa: jmpq   0x0000000115ea0eb4
  0x0000000115ea0eaf: callq  0x000000010dae5ebc
  0x0000000115ea0eb4: movabs $0x0,%r10
  0x0000000115ea0ebe: mov    %r10,0x1d8(%r15)
  0x0000000115ea0ec5: movabs $0x0,%r10
  0x0000000115ea0ecf: mov    %r10,0x1e8(%r15)
  0x0000000115ea0ed6: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0ede: je     0x0000000115ea0ee9
  0x0000000115ea0ee4: jmpq   0x0000000115e916e0
  0x0000000115ea0ee9: mov    -0x38(%rbp),%r13
  0x0000000115ea0eed: mov    -0x30(%rbp),%r14
  0x0000000115ea0ef1: retq   
  0x0000000115ea0ef2: mov    %rsp,-0x28(%rsp)
  0x0000000115ea0ef7: sub    $0x80,%rsp
  0x0000000115ea0efe: mov    %rax,0x78(%rsp)
  0x0000000115ea0f03: mov    %rcx,0x70(%rsp)
  0x0000000115ea0f08: mov    %rdx,0x68(%rsp)
  0x0000000115ea0f0d: mov    %rbx,0x60(%rsp)
  0x0000000115ea0f12: mov    %rbp,0x50(%rsp)
  0x0000000115ea0f17: mov    %rsi,0x48(%rsp)
  0x0000000115ea0f1c: mov    %rdi,0x40(%rsp)
  0x0000000115ea0f21: mov    %r8,0x38(%rsp)
  0x0000000115ea0f26: mov    %r9,0x30(%rsp)
  0x0000000115ea0f2b: mov    %r10,0x28(%rsp)
  0x0000000115ea0f30: mov    %r11,0x20(%rsp)
  0x0000000115ea0f35: mov    %r12,0x18(%rsp)
  0x0000000115ea0f3a: mov    %r13,0x10(%rsp)
  0x0000000115ea0f3f: mov    %r14,0x8(%rsp)
  0x0000000115ea0f44: mov    %r15,(%rsp)
  0x0000000115ea0f48: movabs $0x10ddd8000,%rdi
  0x0000000115ea0f52: movabs $0x115ea0ef2,%rsi
  0x0000000115ea0f5c: mov    %rsp,%rdx
  0x0000000115ea0f5f: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea0f63: callq  0x000000010dc0341e
  0x0000000115ea0f68: hlt    
  0x0000000115ea0f69: movzbl 0x8(%r13),%ebx
  0x0000000115ea0f6e: add    $0x8,%r13
  0x0000000115ea0f72: movabs $0x10e100840,%r10
  0x0000000115ea0f7c: jmpq   *(%r10,%rbx,8)
  0x0000000115ea0f80: movq   $0x0,-0x10(%rbp)
  0x0000000115ea0f88: mov    -0x38(%rbp),%r13
  0x0000000115ea0f8c: mov    -0x30(%rbp),%r14
  0x0000000115ea0f90: cmpq   $0x0,0x8(%r15)
  0x0000000115ea0f98: je     0x0000000115ea109a
  0x0000000115ea0f9e: callq  0x0000000115ea0fa8
  0x0000000115ea0fa3: jmpq   0x0000000115ea1023
  0x0000000115ea0fa8: lea    0x8(%rsp),%rax
  0x0000000115ea0fad: mov    %r13,-0x38(%rbp)
  0x0000000115ea0fb1: mov    %r15,%rdi
  0x0000000115ea0fb4: mov    %rbp,0x1e8(%r15)
  0x0000000115ea0fbb: mov    %rax,0x1d8(%r15)
  0x0000000115ea0fc2: test   $0xf,%esp
  0x0000000115ea0fc8: je     0x0000000115ea0fe0
  0x0000000115ea0fce: sub    $0x8,%rsp
  0x0000000115ea0fd2: callq  0x000000010dae5ebc
  0x0000000115ea0fd7: add    $0x8,%rsp
  0x0000000115ea0fdb: jmpq   0x0000000115ea0fe5
  0x0000000115ea0fe0: callq  0x000000010dae5ebc
  0x0000000115ea0fe5: movabs $0x0,%r10
  0x0000000115ea0fef: mov    %r10,0x1d8(%r15)
  0x0000000115ea0ff6: movabs $0x0,%r10
  0x0000000115ea1000: mov    %r10,0x1e8(%r15)
  0x0000000115ea1007: cmpq   $0x0,0x8(%r15)
  0x0000000115ea100f: je     0x0000000115ea101a
  0x0000000115ea1015: jmpq   0x0000000115e916e0
  0x0000000115ea101a: mov    -0x38(%rbp),%r13
  0x0000000115ea101e: mov    -0x30(%rbp),%r14
  0x0000000115ea1022: retq   
  0x0000000115ea1023: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1028: sub    $0x80,%rsp
  0x0000000115ea102f: mov    %rax,0x78(%rsp)
  0x0000000115ea1034: mov    %rcx,0x70(%rsp)
  0x0000000115ea1039: mov    %rdx,0x68(%rsp)
  0x0000000115ea103e: mov    %rbx,0x60(%rsp)
  0x0000000115ea1043: mov    %rbp,0x50(%rsp)
  0x0000000115ea1048: mov    %rsi,0x48(%rsp)
  0x0000000115ea104d: mov    %rdi,0x40(%rsp)
  0x0000000115ea1052: mov    %r8,0x38(%rsp)
  0x0000000115ea1057: mov    %r9,0x30(%rsp)
  0x0000000115ea105c: mov    %r10,0x28(%rsp)
  0x0000000115ea1061: mov    %r11,0x20(%rsp)
  0x0000000115ea1066: mov    %r12,0x18(%rsp)
  0x0000000115ea106b: mov    %r13,0x10(%rsp)
  0x0000000115ea1070: mov    %r14,0x8(%rsp)
  0x0000000115ea1075: mov    %r15,(%rsp)
  0x0000000115ea1079: movabs $0x10ddd8000,%rdi
  0x0000000115ea1083: movabs $0x115ea1023,%rsi
  0x0000000115ea108d: mov    %rsp,%rdx
  0x0000000115ea1090: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1094: callq  0x000000010dc0341e
  0x0000000115ea1099: hlt    
  0x0000000115ea109a: movzbl 0x8(%r13),%ebx
  0x0000000115ea109f: add    $0x8,%r13
  0x0000000115ea10a3: movabs $0x10e100040,%r10
  0x0000000115ea10ad: jmpq   *(%r10,%rbx,8)
  0x0000000115ea10b1: movq   $0x0,-0x10(%rbp)
  0x0000000115ea10b9: mov    -0x38(%rbp),%r13
  0x0000000115ea10bd: mov    -0x30(%rbp),%r14
  0x0000000115ea10c1: cmpq   $0x0,0x8(%r15)
  0x0000000115ea10c9: je     0x0000000115ea11cb
  0x0000000115ea10cf: callq  0x0000000115ea10d9
  0x0000000115ea10d4: jmpq   0x0000000115ea1154
  0x0000000115ea10d9: lea    0x8(%rsp),%rax
  0x0000000115ea10de: mov    %r13,-0x38(%rbp)
  0x0000000115ea10e2: mov    %r15,%rdi
  0x0000000115ea10e5: mov    %rbp,0x1e8(%r15)
  0x0000000115ea10ec: mov    %rax,0x1d8(%r15)
  0x0000000115ea10f3: test   $0xf,%esp
  0x0000000115ea10f9: je     0x0000000115ea1111
  0x0000000115ea10ff: sub    $0x8,%rsp
  0x0000000115ea1103: callq  0x000000010dae5ebc
  0x0000000115ea1108: add    $0x8,%rsp
  0x0000000115ea110c: jmpq   0x0000000115ea1116
  0x0000000115ea1111: callq  0x000000010dae5ebc
  0x0000000115ea1116: movabs $0x0,%r10
  0x0000000115ea1120: mov    %r10,0x1d8(%r15)
  0x0000000115ea1127: movabs $0x0,%r10
  0x0000000115ea1131: mov    %r10,0x1e8(%r15)
  0x0000000115ea1138: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1140: je     0x0000000115ea114b
  0x0000000115ea1146: jmpq   0x0000000115e916e0
  0x0000000115ea114b: mov    -0x38(%rbp),%r13
  0x0000000115ea114f: mov    -0x30(%rbp),%r14
  0x0000000115ea1153: retq   
  0x0000000115ea1154: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1159: sub    $0x80,%rsp
  0x0000000115ea1160: mov    %rax,0x78(%rsp)
  0x0000000115ea1165: mov    %rcx,0x70(%rsp)
  0x0000000115ea116a: mov    %rdx,0x68(%rsp)
  0x0000000115ea116f: mov    %rbx,0x60(%rsp)
  0x0000000115ea1174: mov    %rbp,0x50(%rsp)
  0x0000000115ea1179: mov    %rsi,0x48(%rsp)
  0x0000000115ea117e: mov    %rdi,0x40(%rsp)
  0x0000000115ea1183: mov    %r8,0x38(%rsp)
  0x0000000115ea1188: mov    %r9,0x30(%rsp)
  0x0000000115ea118d: mov    %r10,0x28(%rsp)
  0x0000000115ea1192: mov    %r11,0x20(%rsp)
  0x0000000115ea1197: mov    %r12,0x18(%rsp)
  0x0000000115ea119c: mov    %r13,0x10(%rsp)
  0x0000000115ea11a1: mov    %r14,0x8(%rsp)
  0x0000000115ea11a6: mov    %r15,(%rsp)
  0x0000000115ea11aa: movabs $0x10ddd8000,%rdi
  0x0000000115ea11b4: movabs $0x115ea1154,%rsi
  0x0000000115ea11be: mov    %rsp,%rdx
  0x0000000115ea11c1: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea11c5: callq  0x000000010dc0341e
  0x0000000115ea11ca: hlt    
  0x0000000115ea11cb: movzbl 0x8(%r13),%ebx
  0x0000000115ea11d0: add    $0x8,%r13
  0x0000000115ea11d4: movabs $0x10e0ff840,%r10
  0x0000000115ea11de: jmpq   *(%r10,%rbx,8)
  0x0000000115ea11e2: movq   $0x0,-0x10(%rbp)
  0x0000000115ea11ea: mov    -0x38(%rbp),%r13
  0x0000000115ea11ee: mov    -0x30(%rbp),%r14
  0x0000000115ea11f2: cmpq   $0x0,0x8(%r15)
  0x0000000115ea11fa: je     0x0000000115ea12fc
  0x0000000115ea1200: callq  0x0000000115ea120a
  0x0000000115ea1205: jmpq   0x0000000115ea1285
  0x0000000115ea120a: lea    0x8(%rsp),%rax
  0x0000000115ea120f: mov    %r13,-0x38(%rbp)
  0x0000000115ea1213: mov    %r15,%rdi
  0x0000000115ea1216: mov    %rbp,0x1e8(%r15)
  0x0000000115ea121d: mov    %rax,0x1d8(%r15)
  0x0000000115ea1224: test   $0xf,%esp
  0x0000000115ea122a: je     0x0000000115ea1242
  0x0000000115ea1230: sub    $0x8,%rsp
  0x0000000115ea1234: callq  0x000000010dae5ebc
  0x0000000115ea1239: add    $0x8,%rsp
  0x0000000115ea123d: jmpq   0x0000000115ea1247
  0x0000000115ea1242: callq  0x000000010dae5ebc
  0x0000000115ea1247: movabs $0x0,%r10
  0x0000000115ea1251: mov    %r10,0x1d8(%r15)
  0x0000000115ea1258: movabs $0x0,%r10
  0x0000000115ea1262: mov    %r10,0x1e8(%r15)
  0x0000000115ea1269: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1271: je     0x0000000115ea127c
  0x0000000115ea1277: jmpq   0x0000000115e916e0
  0x0000000115ea127c: mov    -0x38(%rbp),%r13
  0x0000000115ea1280: mov    -0x30(%rbp),%r14
  0x0000000115ea1284: retq   
  0x0000000115ea1285: mov    %rsp,-0x28(%rsp)
  0x0000000115ea128a: sub    $0x80,%rsp
  0x0000000115ea1291: mov    %rax,0x78(%rsp)
  0x0000000115ea1296: mov    %rcx,0x70(%rsp)
  0x0000000115ea129b: mov    %rdx,0x68(%rsp)
  0x0000000115ea12a0: mov    %rbx,0x60(%rsp)
  0x0000000115ea12a5: mov    %rbp,0x50(%rsp)
  0x0000000115ea12aa: mov    %rsi,0x48(%rsp)
  0x0000000115ea12af: mov    %rdi,0x40(%rsp)
  0x0000000115ea12b4: mov    %r8,0x38(%rsp)
  0x0000000115ea12b9: mov    %r9,0x30(%rsp)
  0x0000000115ea12be: mov    %r10,0x28(%rsp)
  0x0000000115ea12c3: mov    %r11,0x20(%rsp)
  0x0000000115ea12c8: mov    %r12,0x18(%rsp)
  0x0000000115ea12cd: mov    %r13,0x10(%rsp)
  0x0000000115ea12d2: mov    %r14,0x8(%rsp)
  0x0000000115ea12d7: mov    %r15,(%rsp)
  0x0000000115ea12db: movabs $0x10ddd8000,%rdi
  0x0000000115ea12e5: movabs $0x115ea1285,%rsi
  0x0000000115ea12ef: mov    %rsp,%rdx
  0x0000000115ea12f2: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea12f6: callq  0x000000010dc0341e
  0x0000000115ea12fb: hlt    
  0x0000000115ea12fc: movzbl 0x8(%r13),%ebx
  0x0000000115ea1301: add    $0x8,%r13
  0x0000000115ea1305: movabs $0x10e0ff040,%r10
  0x0000000115ea130f: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1313: movq   $0x0,-0x10(%rbp)
  0x0000000115ea131b: mov    -0x38(%rbp),%r13
  0x0000000115ea131f: mov    -0x30(%rbp),%r14
  0x0000000115ea1323: cmpq   $0x0,0x8(%r15)
  0x0000000115ea132b: je     0x0000000115ea142d
  0x0000000115ea1331: callq  0x0000000115ea133b
  0x0000000115ea1336: jmpq   0x0000000115ea13b6
  0x0000000115ea133b: lea    0x8(%rsp),%rax
  0x0000000115ea1340: mov    %r13,-0x38(%rbp)
  0x0000000115ea1344: mov    %r15,%rdi
  0x0000000115ea1347: mov    %rbp,0x1e8(%r15)
  0x0000000115ea134e: mov    %rax,0x1d8(%r15)
  0x0000000115ea1355: test   $0xf,%esp
  0x0000000115ea135b: je     0x0000000115ea1373
  0x0000000115ea1361: sub    $0x8,%rsp
  0x0000000115ea1365: callq  0x000000010dae5ebc
  0x0000000115ea136a: add    $0x8,%rsp
  0x0000000115ea136e: jmpq   0x0000000115ea1378
  0x0000000115ea1373: callq  0x000000010dae5ebc
  0x0000000115ea1378: movabs $0x0,%r10
  0x0000000115ea1382: mov    %r10,0x1d8(%r15)
  0x0000000115ea1389: movabs $0x0,%r10
  0x0000000115ea1393: mov    %r10,0x1e8(%r15)
  0x0000000115ea139a: cmpq   $0x0,0x8(%r15)
  0x0000000115ea13a2: je     0x0000000115ea13ad
  0x0000000115ea13a8: jmpq   0x0000000115e916e0
  0x0000000115ea13ad: mov    -0x38(%rbp),%r13
  0x0000000115ea13b1: mov    -0x30(%rbp),%r14
  0x0000000115ea13b5: retq   
  0x0000000115ea13b6: mov    %rsp,-0x28(%rsp)
  0x0000000115ea13bb: sub    $0x80,%rsp
  0x0000000115ea13c2: mov    %rax,0x78(%rsp)
  0x0000000115ea13c7: mov    %rcx,0x70(%rsp)
  0x0000000115ea13cc: mov    %rdx,0x68(%rsp)
  0x0000000115ea13d1: mov    %rbx,0x60(%rsp)
  0x0000000115ea13d6: mov    %rbp,0x50(%rsp)
  0x0000000115ea13db: mov    %rsi,0x48(%rsp)
  0x0000000115ea13e0: mov    %rdi,0x40(%rsp)
  0x0000000115ea13e5: mov    %r8,0x38(%rsp)
  0x0000000115ea13ea: mov    %r9,0x30(%rsp)
  0x0000000115ea13ef: mov    %r10,0x28(%rsp)
  0x0000000115ea13f4: mov    %r11,0x20(%rsp)
  0x0000000115ea13f9: mov    %r12,0x18(%rsp)
  0x0000000115ea13fe: mov    %r13,0x10(%rsp)
  0x0000000115ea1403: mov    %r14,0x8(%rsp)
  0x0000000115ea1408: mov    %r15,(%rsp)
  0x0000000115ea140c: movabs $0x10ddd8000,%rdi
  0x0000000115ea1416: movabs $0x115ea13b6,%rsi
  0x0000000115ea1420: mov    %rsp,%rdx
  0x0000000115ea1423: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1427: callq  0x000000010dc0341e
  0x0000000115ea142c: hlt    
  0x0000000115ea142d: movzbl 0x8(%r13),%ebx
  0x0000000115ea1432: add    $0x8,%r13
  0x0000000115ea1436: movabs $0x10e101040,%r10
  0x0000000115ea1440: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1444: movq   $0x0,-0x10(%rbp)
  0x0000000115ea144c: mov    -0x38(%rbp),%r13
  0x0000000115ea1450: mov    -0x30(%rbp),%r14
  0x0000000115ea1454: cmpq   $0x0,0x8(%r15)
  0x0000000115ea145c: je     0x0000000115ea155e
  0x0000000115ea1462: callq  0x0000000115ea146c
  0x0000000115ea1467: jmpq   0x0000000115ea14e7
  0x0000000115ea146c: lea    0x8(%rsp),%rax
  0x0000000115ea1471: mov    %r13,-0x38(%rbp)
  0x0000000115ea1475: mov    %r15,%rdi
  0x0000000115ea1478: mov    %rbp,0x1e8(%r15)
  0x0000000115ea147f: mov    %rax,0x1d8(%r15)
  0x0000000115ea1486: test   $0xf,%esp
  0x0000000115ea148c: je     0x0000000115ea14a4
  0x0000000115ea1492: sub    $0x8,%rsp
  0x0000000115ea1496: callq  0x000000010dae5ebc
  0x0000000115ea149b: add    $0x8,%rsp
  0x0000000115ea149f: jmpq   0x0000000115ea14a9
  0x0000000115ea14a4: callq  0x000000010dae5ebc
  0x0000000115ea14a9: movabs $0x0,%r10
  0x0000000115ea14b3: mov    %r10,0x1d8(%r15)
  0x0000000115ea14ba: movabs $0x0,%r10
  0x0000000115ea14c4: mov    %r10,0x1e8(%r15)
  0x0000000115ea14cb: cmpq   $0x0,0x8(%r15)
  0x0000000115ea14d3: je     0x0000000115ea14de
  0x0000000115ea14d9: jmpq   0x0000000115e916e0
  0x0000000115ea14de: mov    -0x38(%rbp),%r13
  0x0000000115ea14e2: mov    -0x30(%rbp),%r14
  0x0000000115ea14e6: retq   
  0x0000000115ea14e7: mov    %rsp,-0x28(%rsp)
  0x0000000115ea14ec: sub    $0x80,%rsp
  0x0000000115ea14f3: mov    %rax,0x78(%rsp)
  0x0000000115ea14f8: mov    %rcx,0x70(%rsp)
  0x0000000115ea14fd: mov    %rdx,0x68(%rsp)
  0x0000000115ea1502: mov    %rbx,0x60(%rsp)
  0x0000000115ea1507: mov    %rbp,0x50(%rsp)
  0x0000000115ea150c: mov    %rsi,0x48(%rsp)
  0x0000000115ea1511: mov    %rdi,0x40(%rsp)
  0x0000000115ea1516: mov    %r8,0x38(%rsp)
  0x0000000115ea151b: mov    %r9,0x30(%rsp)
  0x0000000115ea1520: mov    %r10,0x28(%rsp)
  0x0000000115ea1525: mov    %r11,0x20(%rsp)
  0x0000000115ea152a: mov    %r12,0x18(%rsp)
  0x0000000115ea152f: mov    %r13,0x10(%rsp)
  0x0000000115ea1534: mov    %r14,0x8(%rsp)
  0x0000000115ea1539: mov    %r15,(%rsp)
  0x0000000115ea153d: movabs $0x10ddd8000,%rdi
  0x0000000115ea1547: movabs $0x115ea14e7,%rsi
  0x0000000115ea1551: mov    %rsp,%rdx
  0x0000000115ea1554: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1558: callq  0x000000010dc0341e
  0x0000000115ea155d: hlt    
  0x0000000115ea155e: movzbl 0x8(%r13),%ebx
  0x0000000115ea1563: add    $0x8,%r13
  0x0000000115ea1567: movabs $0x10e0ff040,%r10
  0x0000000115ea1571: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1575: movq   $0x0,-0x10(%rbp)
  0x0000000115ea157d: mov    -0x38(%rbp),%r13
  0x0000000115ea1581: mov    -0x30(%rbp),%r14
  0x0000000115ea1585: cmpq   $0x0,0x8(%r15)
  0x0000000115ea158d: je     0x0000000115ea168f
  0x0000000115ea1593: callq  0x0000000115ea159d
  0x0000000115ea1598: jmpq   0x0000000115ea1618
  0x0000000115ea159d: lea    0x8(%rsp),%rax
  0x0000000115ea15a2: mov    %r13,-0x38(%rbp)
  0x0000000115ea15a6: mov    %r15,%rdi
  0x0000000115ea15a9: mov    %rbp,0x1e8(%r15)
  0x0000000115ea15b0: mov    %rax,0x1d8(%r15)
  0x0000000115ea15b7: test   $0xf,%esp
  0x0000000115ea15bd: je     0x0000000115ea15d5
  0x0000000115ea15c3: sub    $0x8,%rsp
  0x0000000115ea15c7: callq  0x000000010dae5ebc
  0x0000000115ea15cc: add    $0x8,%rsp
  0x0000000115ea15d0: jmpq   0x0000000115ea15da
  0x0000000115ea15d5: callq  0x000000010dae5ebc
  0x0000000115ea15da: movabs $0x0,%r10
  0x0000000115ea15e4: mov    %r10,0x1d8(%r15)
  0x0000000115ea15eb: movabs $0x0,%r10
  0x0000000115ea15f5: mov    %r10,0x1e8(%r15)
  0x0000000115ea15fc: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1604: je     0x0000000115ea160f
  0x0000000115ea160a: jmpq   0x0000000115e916e0
  0x0000000115ea160f: mov    -0x38(%rbp),%r13
  0x0000000115ea1613: mov    -0x30(%rbp),%r14
  0x0000000115ea1617: retq   
  0x0000000115ea1618: mov    %rsp,-0x28(%rsp)
  0x0000000115ea161d: sub    $0x80,%rsp
  0x0000000115ea1624: mov    %rax,0x78(%rsp)
  0x0000000115ea1629: mov    %rcx,0x70(%rsp)
  0x0000000115ea162e: mov    %rdx,0x68(%rsp)
  0x0000000115ea1633: mov    %rbx,0x60(%rsp)
  0x0000000115ea1638: mov    %rbp,0x50(%rsp)
  0x0000000115ea163d: mov    %rsi,0x48(%rsp)
  0x0000000115ea1642: mov    %rdi,0x40(%rsp)
  0x0000000115ea1647: mov    %r8,0x38(%rsp)
  0x0000000115ea164c: mov    %r9,0x30(%rsp)
  0x0000000115ea1651: mov    %r10,0x28(%rsp)
  0x0000000115ea1656: mov    %r11,0x20(%rsp)
  0x0000000115ea165b: mov    %r12,0x18(%rsp)
  0x0000000115ea1660: mov    %r13,0x10(%rsp)
  0x0000000115ea1665: mov    %r14,0x8(%rsp)
  0x0000000115ea166a: mov    %r15,(%rsp)
  0x0000000115ea166e: movabs $0x10ddd8000,%rdi
  0x0000000115ea1678: movabs $0x115ea1618,%rsi
  0x0000000115ea1682: mov    %rsp,%rdx
  0x0000000115ea1685: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1689: callq  0x000000010dc0341e
  0x0000000115ea168e: hlt    
  0x0000000115ea168f: movzbl 0x8(%r13),%ebx
  0x0000000115ea1694: add    $0x8,%r13
  0x0000000115ea1698: movabs $0x10e0ff040,%r10
  0x0000000115ea16a2: jmpq   *(%r10,%rbx,8)
  0x0000000115ea16a6: movq   $0x0,-0x10(%rbp)
  0x0000000115ea16ae: mov    -0x38(%rbp),%r13
  0x0000000115ea16b2: mov    -0x30(%rbp),%r14
  0x0000000115ea16b6: cmpq   $0x0,0x8(%r15)
  0x0000000115ea16be: je     0x0000000115ea17c0
  0x0000000115ea16c4: callq  0x0000000115ea16ce
  0x0000000115ea16c9: jmpq   0x0000000115ea1749
  0x0000000115ea16ce: lea    0x8(%rsp),%rax
  0x0000000115ea16d3: mov    %r13,-0x38(%rbp)
  0x0000000115ea16d7: mov    %r15,%rdi
  0x0000000115ea16da: mov    %rbp,0x1e8(%r15)
  0x0000000115ea16e1: mov    %rax,0x1d8(%r15)
  0x0000000115ea16e8: test   $0xf,%esp
  0x0000000115ea16ee: je     0x0000000115ea1706
  0x0000000115ea16f4: sub    $0x8,%rsp
  0x0000000115ea16f8: callq  0x000000010dae5ebc
  0x0000000115ea16fd: add    $0x8,%rsp
  0x0000000115ea1701: jmpq   0x0000000115ea170b
  0x0000000115ea1706: callq  0x000000010dae5ebc
  0x0000000115ea170b: movabs $0x0,%r10
  0x0000000115ea1715: mov    %r10,0x1d8(%r15)
  0x0000000115ea171c: movabs $0x0,%r10
  0x0000000115ea1726: mov    %r10,0x1e8(%r15)
  0x0000000115ea172d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1735: je     0x0000000115ea1740
  0x0000000115ea173b: jmpq   0x0000000115e916e0
  0x0000000115ea1740: mov    -0x38(%rbp),%r13
  0x0000000115ea1744: mov    -0x30(%rbp),%r14
  0x0000000115ea1748: retq   
  0x0000000115ea1749: mov    %rsp,-0x28(%rsp)
  0x0000000115ea174e: sub    $0x80,%rsp
  0x0000000115ea1755: mov    %rax,0x78(%rsp)
  0x0000000115ea175a: mov    %rcx,0x70(%rsp)
  0x0000000115ea175f: mov    %rdx,0x68(%rsp)
  0x0000000115ea1764: mov    %rbx,0x60(%rsp)
  0x0000000115ea1769: mov    %rbp,0x50(%rsp)
  0x0000000115ea176e: mov    %rsi,0x48(%rsp)
  0x0000000115ea1773: mov    %rdi,0x40(%rsp)
  0x0000000115ea1778: mov    %r8,0x38(%rsp)
  0x0000000115ea177d: mov    %r9,0x30(%rsp)
  0x0000000115ea1782: mov    %r10,0x28(%rsp)
  0x0000000115ea1787: mov    %r11,0x20(%rsp)
  0x0000000115ea178c: mov    %r12,0x18(%rsp)
  0x0000000115ea1791: mov    %r13,0x10(%rsp)
  0x0000000115ea1796: mov    %r14,0x8(%rsp)
  0x0000000115ea179b: mov    %r15,(%rsp)
  0x0000000115ea179f: movabs $0x10ddd8000,%rdi
  0x0000000115ea17a9: movabs $0x115ea1749,%rsi
  0x0000000115ea17b3: mov    %rsp,%rdx
  0x0000000115ea17b6: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea17ba: callq  0x000000010dc0341e
  0x0000000115ea17bf: hlt    
  0x0000000115ea17c0: movzbl 0x8(%r13),%ebx
  0x0000000115ea17c5: add    $0x8,%r13
  0x0000000115ea17c9: movabs $0x10e0ff040,%r10
  0x0000000115ea17d3: jmpq   *(%r10,%rbx,8)
  0x0000000115ea17d7: movq   $0x0,-0x10(%rbp)
  0x0000000115ea17df: mov    -0x38(%rbp),%r13
  0x0000000115ea17e3: mov    -0x30(%rbp),%r14
  0x0000000115ea17e7: cmpq   $0x0,0x8(%r15)
  0x0000000115ea17ef: je     0x0000000115ea18f1
  0x0000000115ea17f5: callq  0x0000000115ea17ff
  0x0000000115ea17fa: jmpq   0x0000000115ea187a
  0x0000000115ea17ff: lea    0x8(%rsp),%rax
  0x0000000115ea1804: mov    %r13,-0x38(%rbp)
  0x0000000115ea1808: mov    %r15,%rdi
  0x0000000115ea180b: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1812: mov    %rax,0x1d8(%r15)
  0x0000000115ea1819: test   $0xf,%esp
  0x0000000115ea181f: je     0x0000000115ea1837
  0x0000000115ea1825: sub    $0x8,%rsp
  0x0000000115ea1829: callq  0x000000010dae5ebc
  0x0000000115ea182e: add    $0x8,%rsp
  0x0000000115ea1832: jmpq   0x0000000115ea183c
  0x0000000115ea1837: callq  0x000000010dae5ebc
  0x0000000115ea183c: movabs $0x0,%r10
  0x0000000115ea1846: mov    %r10,0x1d8(%r15)
  0x0000000115ea184d: movabs $0x0,%r10
  0x0000000115ea1857: mov    %r10,0x1e8(%r15)
  0x0000000115ea185e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1866: je     0x0000000115ea1871
  0x0000000115ea186c: jmpq   0x0000000115e916e0
  0x0000000115ea1871: mov    -0x38(%rbp),%r13
  0x0000000115ea1875: mov    -0x30(%rbp),%r14
  0x0000000115ea1879: retq   
  0x0000000115ea187a: mov    %rsp,-0x28(%rsp)
  0x0000000115ea187f: sub    $0x80,%rsp
  0x0000000115ea1886: mov    %rax,0x78(%rsp)
  0x0000000115ea188b: mov    %rcx,0x70(%rsp)
  0x0000000115ea1890: mov    %rdx,0x68(%rsp)
  0x0000000115ea1895: mov    %rbx,0x60(%rsp)
  0x0000000115ea189a: mov    %rbp,0x50(%rsp)
  0x0000000115ea189f: mov    %rsi,0x48(%rsp)
  0x0000000115ea18a4: mov    %rdi,0x40(%rsp)
  0x0000000115ea18a9: mov    %r8,0x38(%rsp)
  0x0000000115ea18ae: mov    %r9,0x30(%rsp)
  0x0000000115ea18b3: mov    %r10,0x28(%rsp)
  0x0000000115ea18b8: mov    %r11,0x20(%rsp)
  0x0000000115ea18bd: mov    %r12,0x18(%rsp)
  0x0000000115ea18c2: mov    %r13,0x10(%rsp)
  0x0000000115ea18c7: mov    %r14,0x8(%rsp)
  0x0000000115ea18cc: mov    %r15,(%rsp)
  0x0000000115ea18d0: movabs $0x10ddd8000,%rdi
  0x0000000115ea18da: movabs $0x115ea187a,%rsi
  0x0000000115ea18e4: mov    %rsp,%rdx
  0x0000000115ea18e7: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea18eb: callq  0x000000010dc0341e
  0x0000000115ea18f0: hlt    
  0x0000000115ea18f1: movzbl 0x8(%r13),%ebx
  0x0000000115ea18f6: add    $0x8,%r13
  0x0000000115ea18fa: movabs $0x10e0ff040,%r10
  0x0000000115ea1904: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1908: movq   $0x0,-0x10(%rbp)
  0x0000000115ea1910: mov    -0x38(%rbp),%r13
  0x0000000115ea1914: mov    -0x30(%rbp),%r14
  0x0000000115ea1918: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1920: je     0x0000000115ea1a22
  0x0000000115ea1926: callq  0x0000000115ea1930
  0x0000000115ea192b: jmpq   0x0000000115ea19ab
  0x0000000115ea1930: lea    0x8(%rsp),%rax
  0x0000000115ea1935: mov    %r13,-0x38(%rbp)
  0x0000000115ea1939: mov    %r15,%rdi
  0x0000000115ea193c: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1943: mov    %rax,0x1d8(%r15)
  0x0000000115ea194a: test   $0xf,%esp
  0x0000000115ea1950: je     0x0000000115ea1968
  0x0000000115ea1956: sub    $0x8,%rsp
  0x0000000115ea195a: callq  0x000000010dae5ebc
  0x0000000115ea195f: add    $0x8,%rsp
  0x0000000115ea1963: jmpq   0x0000000115ea196d
  0x0000000115ea1968: callq  0x000000010dae5ebc
  0x0000000115ea196d: movabs $0x0,%r10
  0x0000000115ea1977: mov    %r10,0x1d8(%r15)
  0x0000000115ea197e: movabs $0x0,%r10
  0x0000000115ea1988: mov    %r10,0x1e8(%r15)
  0x0000000115ea198f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1997: je     0x0000000115ea19a2
  0x0000000115ea199d: jmpq   0x0000000115e916e0
  0x0000000115ea19a2: mov    -0x38(%rbp),%r13
  0x0000000115ea19a6: mov    -0x30(%rbp),%r14
  0x0000000115ea19aa: retq   
  0x0000000115ea19ab: mov    %rsp,-0x28(%rsp)
  0x0000000115ea19b0: sub    $0x80,%rsp
  0x0000000115ea19b7: mov    %rax,0x78(%rsp)
  0x0000000115ea19bc: mov    %rcx,0x70(%rsp)
  0x0000000115ea19c1: mov    %rdx,0x68(%rsp)
  0x0000000115ea19c6: mov    %rbx,0x60(%rsp)
  0x0000000115ea19cb: mov    %rbp,0x50(%rsp)
  0x0000000115ea19d0: mov    %rsi,0x48(%rsp)
  0x0000000115ea19d5: mov    %rdi,0x40(%rsp)
  0x0000000115ea19da: mov    %r8,0x38(%rsp)
  0x0000000115ea19df: mov    %r9,0x30(%rsp)
  0x0000000115ea19e4: mov    %r10,0x28(%rsp)
  0x0000000115ea19e9: mov    %r11,0x20(%rsp)
  0x0000000115ea19ee: mov    %r12,0x18(%rsp)
  0x0000000115ea19f3: mov    %r13,0x10(%rsp)
  0x0000000115ea19f8: mov    %r14,0x8(%rsp)
  0x0000000115ea19fd: mov    %r15,(%rsp)
  0x0000000115ea1a01: movabs $0x10ddd8000,%rdi
  0x0000000115ea1a0b: movabs $0x115ea19ab,%rsi
  0x0000000115ea1a15: mov    %rsp,%rdx
  0x0000000115ea1a18: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1a1c: callq  0x000000010dc0341e
  0x0000000115ea1a21: hlt    
  0x0000000115ea1a22: movzbl 0x9(%r13),%ebx
  0x0000000115ea1a27: add    $0x9,%r13
  0x0000000115ea1a2b: movabs $0x10e101840,%r10
  0x0000000115ea1a35: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1a39: movq   $0x0,-0x10(%rbp)
  0x0000000115ea1a41: mov    -0x38(%rbp),%r13
  0x0000000115ea1a45: mov    -0x30(%rbp),%r14
  0x0000000115ea1a49: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1a51: je     0x0000000115ea1b53
  0x0000000115ea1a57: callq  0x0000000115ea1a61
  0x0000000115ea1a5c: jmpq   0x0000000115ea1adc
  0x0000000115ea1a61: lea    0x8(%rsp),%rax
  0x0000000115ea1a66: mov    %r13,-0x38(%rbp)
  0x0000000115ea1a6a: mov    %r15,%rdi
  0x0000000115ea1a6d: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1a74: mov    %rax,0x1d8(%r15)
  0x0000000115ea1a7b: test   $0xf,%esp
  0x0000000115ea1a81: je     0x0000000115ea1a99
  0x0000000115ea1a87: sub    $0x8,%rsp
  0x0000000115ea1a8b: callq  0x000000010dae5ebc
  0x0000000115ea1a90: add    $0x8,%rsp
  0x0000000115ea1a94: jmpq   0x0000000115ea1a9e
  0x0000000115ea1a99: callq  0x000000010dae5ebc
  0x0000000115ea1a9e: movabs $0x0,%r10
  0x0000000115ea1aa8: mov    %r10,0x1d8(%r15)
  0x0000000115ea1aaf: movabs $0x0,%r10
  0x0000000115ea1ab9: mov    %r10,0x1e8(%r15)
  0x0000000115ea1ac0: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1ac8: je     0x0000000115ea1ad3
  0x0000000115ea1ace: jmpq   0x0000000115e916e0
  0x0000000115ea1ad3: mov    -0x38(%rbp),%r13
  0x0000000115ea1ad7: mov    -0x30(%rbp),%r14
  0x0000000115ea1adb: retq   
  0x0000000115ea1adc: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1ae1: sub    $0x80,%rsp
  0x0000000115ea1ae8: mov    %rax,0x78(%rsp)
  0x0000000115ea1aed: mov    %rcx,0x70(%rsp)
  0x0000000115ea1af2: mov    %rdx,0x68(%rsp)
  0x0000000115ea1af7: mov    %rbx,0x60(%rsp)
  0x0000000115ea1afc: mov    %rbp,0x50(%rsp)
  0x0000000115ea1b01: mov    %rsi,0x48(%rsp)
  0x0000000115ea1b06: mov    %rdi,0x40(%rsp)
  0x0000000115ea1b0b: mov    %r8,0x38(%rsp)
  0x0000000115ea1b10: mov    %r9,0x30(%rsp)
  0x0000000115ea1b15: mov    %r10,0x28(%rsp)
  0x0000000115ea1b1a: mov    %r11,0x20(%rsp)
  0x0000000115ea1b1f: mov    %r12,0x18(%rsp)
  0x0000000115ea1b24: mov    %r13,0x10(%rsp)
  0x0000000115ea1b29: mov    %r14,0x8(%rsp)
  0x0000000115ea1b2e: mov    %r15,(%rsp)
  0x0000000115ea1b32: movabs $0x10ddd8000,%rdi
  0x0000000115ea1b3c: movabs $0x115ea1adc,%rsi
  0x0000000115ea1b46: mov    %rsp,%rdx
  0x0000000115ea1b49: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1b4d: callq  0x000000010dc0341e
  0x0000000115ea1b52: hlt    
  0x0000000115ea1b53: movzbl 0x9(%r13),%ebx
  0x0000000115ea1b58: add    $0x9,%r13
  0x0000000115ea1b5c: movabs $0x10e100840,%r10
  0x0000000115ea1b66: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1b6a: movq   $0x0,-0x10(%rbp)
  0x0000000115ea1b72: mov    -0x38(%rbp),%r13
  0x0000000115ea1b76: mov    -0x30(%rbp),%r14
  0x0000000115ea1b7a: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1b82: je     0x0000000115ea1c84
  0x0000000115ea1b88: callq  0x0000000115ea1b92
  0x0000000115ea1b8d: jmpq   0x0000000115ea1c0d
  0x0000000115ea1b92: lea    0x8(%rsp),%rax
  0x0000000115ea1b97: mov    %r13,-0x38(%rbp)
  0x0000000115ea1b9b: mov    %r15,%rdi
  0x0000000115ea1b9e: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1ba5: mov    %rax,0x1d8(%r15)
  0x0000000115ea1bac: test   $0xf,%esp
  0x0000000115ea1bb2: je     0x0000000115ea1bca
  0x0000000115ea1bb8: sub    $0x8,%rsp
  0x0000000115ea1bbc: callq  0x000000010dae5ebc
  0x0000000115ea1bc1: add    $0x8,%rsp
  0x0000000115ea1bc5: jmpq   0x0000000115ea1bcf
  0x0000000115ea1bca: callq  0x000000010dae5ebc
  0x0000000115ea1bcf: movabs $0x0,%r10
  0x0000000115ea1bd9: mov    %r10,0x1d8(%r15)
  0x0000000115ea1be0: movabs $0x0,%r10
  0x0000000115ea1bea: mov    %r10,0x1e8(%r15)
  0x0000000115ea1bf1: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1bf9: je     0x0000000115ea1c04
  0x0000000115ea1bff: jmpq   0x0000000115e916e0
  0x0000000115ea1c04: mov    -0x38(%rbp),%r13
  0x0000000115ea1c08: mov    -0x30(%rbp),%r14
  0x0000000115ea1c0c: retq   
  0x0000000115ea1c0d: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1c12: sub    $0x80,%rsp
  0x0000000115ea1c19: mov    %rax,0x78(%rsp)
  0x0000000115ea1c1e: mov    %rcx,0x70(%rsp)
  0x0000000115ea1c23: mov    %rdx,0x68(%rsp)
  0x0000000115ea1c28: mov    %rbx,0x60(%rsp)
  0x0000000115ea1c2d: mov    %rbp,0x50(%rsp)
  0x0000000115ea1c32: mov    %rsi,0x48(%rsp)
  0x0000000115ea1c37: mov    %rdi,0x40(%rsp)
  0x0000000115ea1c3c: mov    %r8,0x38(%rsp)
  0x0000000115ea1c41: mov    %r9,0x30(%rsp)
  0x0000000115ea1c46: mov    %r10,0x28(%rsp)
  0x0000000115ea1c4b: mov    %r11,0x20(%rsp)
  0x0000000115ea1c50: mov    %r12,0x18(%rsp)
  0x0000000115ea1c55: mov    %r13,0x10(%rsp)
  0x0000000115ea1c5a: mov    %r14,0x8(%rsp)
  0x0000000115ea1c5f: mov    %r15,(%rsp)
  0x0000000115ea1c63: movabs $0x10ddd8000,%rdi
  0x0000000115ea1c6d: movabs $0x115ea1c0d,%rsi
  0x0000000115ea1c77: mov    %rsp,%rdx
  0x0000000115ea1c7a: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1c7e: callq  0x000000010dc0341e
  0x0000000115ea1c83: hlt    
  0x0000000115ea1c84: movzbl 0x9(%r13),%ebx
  0x0000000115ea1c89: add    $0x9,%r13
  0x0000000115ea1c8d: movabs $0x10e100040,%r10
  0x0000000115ea1c97: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1c9b: movq   $0x0,-0x10(%rbp)
  0x0000000115ea1ca3: mov    -0x38(%rbp),%r13
  0x0000000115ea1ca7: mov    -0x30(%rbp),%r14
  0x0000000115ea1cab: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1cb3: je     0x0000000115ea1db5
  0x0000000115ea1cb9: callq  0x0000000115ea1cc3
  0x0000000115ea1cbe: jmpq   0x0000000115ea1d3e
  0x0000000115ea1cc3: lea    0x8(%rsp),%rax
  0x0000000115ea1cc8: mov    %r13,-0x38(%rbp)
  0x0000000115ea1ccc: mov    %r15,%rdi
  0x0000000115ea1ccf: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1cd6: mov    %rax,0x1d8(%r15)
  0x0000000115ea1cdd: test   $0xf,%esp
  0x0000000115ea1ce3: je     0x0000000115ea1cfb
  0x0000000115ea1ce9: sub    $0x8,%rsp
  0x0000000115ea1ced: callq  0x000000010dae5ebc
  0x0000000115ea1cf2: add    $0x8,%rsp
  0x0000000115ea1cf6: jmpq   0x0000000115ea1d00
  0x0000000115ea1cfb: callq  0x000000010dae5ebc
  0x0000000115ea1d00: movabs $0x0,%r10
  0x0000000115ea1d0a: mov    %r10,0x1d8(%r15)
  0x0000000115ea1d11: movabs $0x0,%r10
  0x0000000115ea1d1b: mov    %r10,0x1e8(%r15)
  0x0000000115ea1d22: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1d2a: je     0x0000000115ea1d35
  0x0000000115ea1d30: jmpq   0x0000000115e916e0
  0x0000000115ea1d35: mov    -0x38(%rbp),%r13
  0x0000000115ea1d39: mov    -0x30(%rbp),%r14
  0x0000000115ea1d3d: retq   
  0x0000000115ea1d3e: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1d43: sub    $0x80,%rsp
  0x0000000115ea1d4a: mov    %rax,0x78(%rsp)
  0x0000000115ea1d4f: mov    %rcx,0x70(%rsp)
  0x0000000115ea1d54: mov    %rdx,0x68(%rsp)
  0x0000000115ea1d59: mov    %rbx,0x60(%rsp)
  0x0000000115ea1d5e: mov    %rbp,0x50(%rsp)
  0x0000000115ea1d63: mov    %rsi,0x48(%rsp)
  0x0000000115ea1d68: mov    %rdi,0x40(%rsp)
  0x0000000115ea1d6d: mov    %r8,0x38(%rsp)
  0x0000000115ea1d72: mov    %r9,0x30(%rsp)
  0x0000000115ea1d77: mov    %r10,0x28(%rsp)
  0x0000000115ea1d7c: mov    %r11,0x20(%rsp)
  0x0000000115ea1d81: mov    %r12,0x18(%rsp)
  0x0000000115ea1d86: mov    %r13,0x10(%rsp)
  0x0000000115ea1d8b: mov    %r14,0x8(%rsp)
  0x0000000115ea1d90: mov    %r15,(%rsp)
  0x0000000115ea1d94: movabs $0x10ddd8000,%rdi
  0x0000000115ea1d9e: movabs $0x115ea1d3e,%rsi
  0x0000000115ea1da8: mov    %rsp,%rdx
  0x0000000115ea1dab: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1daf: callq  0x000000010dc0341e
  0x0000000115ea1db4: hlt    
  0x0000000115ea1db5: movzbl 0x9(%r13),%ebx
  0x0000000115ea1dba: add    $0x9,%r13
  0x0000000115ea1dbe: movabs $0x10e0ff840,%r10
  0x0000000115ea1dc8: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1dcc: movq   $0x0,-0x10(%rbp)
  0x0000000115ea1dd4: mov    -0x38(%rbp),%r13
  0x0000000115ea1dd8: mov    -0x30(%rbp),%r14
  0x0000000115ea1ddc: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1de4: je     0x0000000115ea1ee6
  0x0000000115ea1dea: callq  0x0000000115ea1df4
  0x0000000115ea1def: jmpq   0x0000000115ea1e6f
  0x0000000115ea1df4: lea    0x8(%rsp),%rax
  0x0000000115ea1df9: mov    %r13,-0x38(%rbp)
  0x0000000115ea1dfd: mov    %r15,%rdi
  0x0000000115ea1e00: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1e07: mov    %rax,0x1d8(%r15)
  0x0000000115ea1e0e: test   $0xf,%esp
  0x0000000115ea1e14: je     0x0000000115ea1e2c
  0x0000000115ea1e1a: sub    $0x8,%rsp
  0x0000000115ea1e1e: callq  0x000000010dae5ebc
  0x0000000115ea1e23: add    $0x8,%rsp
  0x0000000115ea1e27: jmpq   0x0000000115ea1e31
  0x0000000115ea1e2c: callq  0x000000010dae5ebc
  0x0000000115ea1e31: movabs $0x0,%r10
  0x0000000115ea1e3b: mov    %r10,0x1d8(%r15)
  0x0000000115ea1e42: movabs $0x0,%r10
  0x0000000115ea1e4c: mov    %r10,0x1e8(%r15)
  0x0000000115ea1e53: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1e5b: je     0x0000000115ea1e66
  0x0000000115ea1e61: jmpq   0x0000000115e916e0
  0x0000000115ea1e66: mov    -0x38(%rbp),%r13
  0x0000000115ea1e6a: mov    -0x30(%rbp),%r14
  0x0000000115ea1e6e: retq   
  0x0000000115ea1e6f: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1e74: sub    $0x80,%rsp
  0x0000000115ea1e7b: mov    %rax,0x78(%rsp)
  0x0000000115ea1e80: mov    %rcx,0x70(%rsp)
  0x0000000115ea1e85: mov    %rdx,0x68(%rsp)
  0x0000000115ea1e8a: mov    %rbx,0x60(%rsp)
  0x0000000115ea1e8f: mov    %rbp,0x50(%rsp)
  0x0000000115ea1e94: mov    %rsi,0x48(%rsp)
  0x0000000115ea1e99: mov    %rdi,0x40(%rsp)
  0x0000000115ea1e9e: mov    %r8,0x38(%rsp)
  0x0000000115ea1ea3: mov    %r9,0x30(%rsp)
  0x0000000115ea1ea8: mov    %r10,0x28(%rsp)
  0x0000000115ea1ead: mov    %r11,0x20(%rsp)
  0x0000000115ea1eb2: mov    %r12,0x18(%rsp)
  0x0000000115ea1eb7: mov    %r13,0x10(%rsp)
  0x0000000115ea1ebc: mov    %r14,0x8(%rsp)
  0x0000000115ea1ec1: mov    %r15,(%rsp)
  0x0000000115ea1ec5: movabs $0x10ddd8000,%rdi
  0x0000000115ea1ecf: movabs $0x115ea1e6f,%rsi
  0x0000000115ea1ed9: mov    %rsp,%rdx
  0x0000000115ea1edc: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea1ee0: callq  0x000000010dc0341e
  0x0000000115ea1ee5: hlt    
  0x0000000115ea1ee6: movzbl 0x9(%r13),%ebx
  0x0000000115ea1eeb: add    $0x9,%r13
  0x0000000115ea1eef: movabs $0x10e0ff040,%r10
  0x0000000115ea1ef9: jmpq   *(%r10,%rbx,8)
  0x0000000115ea1efd: movq   $0x0,-0x10(%rbp)
  0x0000000115ea1f05: mov    -0x38(%rbp),%r13
  0x0000000115ea1f09: mov    -0x30(%rbp),%r14
  0x0000000115ea1f0d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1f15: je     0x0000000115ea2017
  0x0000000115ea1f1b: callq  0x0000000115ea1f25
  0x0000000115ea1f20: jmpq   0x0000000115ea1fa0
  0x0000000115ea1f25: lea    0x8(%rsp),%rax
  0x0000000115ea1f2a: mov    %r13,-0x38(%rbp)
  0x0000000115ea1f2e: mov    %r15,%rdi
  0x0000000115ea1f31: mov    %rbp,0x1e8(%r15)
  0x0000000115ea1f38: mov    %rax,0x1d8(%r15)
  0x0000000115ea1f3f: test   $0xf,%esp
  0x0000000115ea1f45: je     0x0000000115ea1f5d
  0x0000000115ea1f4b: sub    $0x8,%rsp
  0x0000000115ea1f4f: callq  0x000000010dae5ebc
  0x0000000115ea1f54: add    $0x8,%rsp
  0x0000000115ea1f58: jmpq   0x0000000115ea1f62
  0x0000000115ea1f5d: callq  0x000000010dae5ebc
  0x0000000115ea1f62: movabs $0x0,%r10
  0x0000000115ea1f6c: mov    %r10,0x1d8(%r15)
  0x0000000115ea1f73: movabs $0x0,%r10
  0x0000000115ea1f7d: mov    %r10,0x1e8(%r15)
  0x0000000115ea1f84: cmpq   $0x0,0x8(%r15)
  0x0000000115ea1f8c: je     0x0000000115ea1f97
  0x0000000115ea1f92: jmpq   0x0000000115e916e0
  0x0000000115ea1f97: mov    -0x38(%rbp),%r13
  0x0000000115ea1f9b: mov    -0x30(%rbp),%r14
  0x0000000115ea1f9f: retq   
  0x0000000115ea1fa0: mov    %rsp,-0x28(%rsp)
  0x0000000115ea1fa5: sub    $0x80,%rsp
  0x0000000115ea1fac: mov    %rax,0x78(%rsp)
  0x0000000115ea1fb1: mov    %rcx,0x70(%rsp)
  0x0000000115ea1fb6: mov    %rdx,0x68(%rsp)
  0x0000000115ea1fbb: mov    %rbx,0x60(%rsp)
  0x0000000115ea1fc0: mov    %rbp,0x50(%rsp)
  0x0000000115ea1fc5: mov    %rsi,0x48(%rsp)
  0x0000000115ea1fca: mov    %rdi,0x40(%rsp)
  0x0000000115ea1fcf: mov    %r8,0x38(%rsp)
  0x0000000115ea1fd4: mov    %r9,0x30(%rsp)
  0x0000000115ea1fd9: mov    %r10,0x28(%rsp)
  0x0000000115ea1fde: mov    %r11,0x20(%rsp)
  0x0000000115ea1fe3: mov    %r12,0x18(%rsp)
  0x0000000115ea1fe8: mov    %r13,0x10(%rsp)
  0x0000000115ea1fed: mov    %r14,0x8(%rsp)
  0x0000000115ea1ff2: mov    %r15,(%rsp)
  0x0000000115ea1ff6: movabs $0x10ddd8000,%rdi
  0x0000000115ea2000: movabs $0x115ea1fa0,%rsi
  0x0000000115ea200a: mov    %rsp,%rdx
  0x0000000115ea200d: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea2011: callq  0x000000010dc0341e
  0x0000000115ea2016: hlt    
  0x0000000115ea2017: movzbl 0x9(%r13),%ebx
  0x0000000115ea201c: add    $0x9,%r13
  0x0000000115ea2020: movabs $0x10e101040,%r10
  0x0000000115ea202a: jmpq   *(%r10,%rbx,8)
  0x0000000115ea202e: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2036: mov    -0x38(%rbp),%r13
  0x0000000115ea203a: mov    -0x30(%rbp),%r14
  0x0000000115ea203e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2046: je     0x0000000115ea2148
  0x0000000115ea204c: callq  0x0000000115ea2056
  0x0000000115ea2051: jmpq   0x0000000115ea20d1
  0x0000000115ea2056: lea    0x8(%rsp),%rax
  0x0000000115ea205b: mov    %r13,-0x38(%rbp)
  0x0000000115ea205f: mov    %r15,%rdi
  0x0000000115ea2062: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2069: mov    %rax,0x1d8(%r15)
  0x0000000115ea2070: test   $0xf,%esp
  0x0000000115ea2076: je     0x0000000115ea208e
  0x0000000115ea207c: sub    $0x8,%rsp
  0x0000000115ea2080: callq  0x000000010dae5ebc
  0x0000000115ea2085: add    $0x8,%rsp
  0x0000000115ea2089: jmpq   0x0000000115ea2093
  0x0000000115ea208e: callq  0x000000010dae5ebc
  0x0000000115ea2093: movabs $0x0,%r10
  0x0000000115ea209d: mov    %r10,0x1d8(%r15)
  0x0000000115ea20a4: movabs $0x0,%r10
  0x0000000115ea20ae: mov    %r10,0x1e8(%r15)
  0x0000000115ea20b5: cmpq   $0x0,0x8(%r15)
  0x0000000115ea20bd: je     0x0000000115ea20c8
  0x0000000115ea20c3: jmpq   0x0000000115e916e0
  0x0000000115ea20c8: mov    -0x38(%rbp),%r13
  0x0000000115ea20cc: mov    -0x30(%rbp),%r14
  0x0000000115ea20d0: retq   
  0x0000000115ea20d1: mov    %rsp,-0x28(%rsp)
  0x0000000115ea20d6: sub    $0x80,%rsp
  0x0000000115ea20dd: mov    %rax,0x78(%rsp)
  0x0000000115ea20e2: mov    %rcx,0x70(%rsp)
  0x0000000115ea20e7: mov    %rdx,0x68(%rsp)
  0x0000000115ea20ec: mov    %rbx,0x60(%rsp)
  0x0000000115ea20f1: mov    %rbp,0x50(%rsp)
  0x0000000115ea20f6: mov    %rsi,0x48(%rsp)
  0x0000000115ea20fb: mov    %rdi,0x40(%rsp)
  0x0000000115ea2100: mov    %r8,0x38(%rsp)
  0x0000000115ea2105: mov    %r9,0x30(%rsp)
  0x0000000115ea210a: mov    %r10,0x28(%rsp)
  0x0000000115ea210f: mov    %r11,0x20(%rsp)
  0x0000000115ea2114: mov    %r12,0x18(%rsp)
  0x0000000115ea2119: mov    %r13,0x10(%rsp)
  0x0000000115ea211e: mov    %r14,0x8(%rsp)
  0x0000000115ea2123: mov    %r15,(%rsp)
  0x0000000115ea2127: movabs $0x10ddd8000,%rdi
  0x0000000115ea2131: movabs $0x115ea20d1,%rsi
  0x0000000115ea213b: mov    %rsp,%rdx
  0x0000000115ea213e: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea2142: callq  0x000000010dc0341e
  0x0000000115ea2147: hlt    
  0x0000000115ea2148: movzbl 0x9(%r13),%ebx
  0x0000000115ea214d: add    $0x9,%r13
  0x0000000115ea2151: movabs $0x10e0ff040,%r10
  0x0000000115ea215b: jmpq   *(%r10,%rbx,8)
  0x0000000115ea215f: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2167: mov    -0x38(%rbp),%r13
  0x0000000115ea216b: mov    -0x30(%rbp),%r14
  0x0000000115ea216f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2177: je     0x0000000115ea2279
  0x0000000115ea217d: callq  0x0000000115ea2187
  0x0000000115ea2182: jmpq   0x0000000115ea2202
  0x0000000115ea2187: lea    0x8(%rsp),%rax
  0x0000000115ea218c: mov    %r13,-0x38(%rbp)
  0x0000000115ea2190: mov    %r15,%rdi
  0x0000000115ea2193: mov    %rbp,0x1e8(%r15)
  0x0000000115ea219a: mov    %rax,0x1d8(%r15)
  0x0000000115ea21a1: test   $0xf,%esp
  0x0000000115ea21a7: je     0x0000000115ea21bf
  0x0000000115ea21ad: sub    $0x8,%rsp
  0x0000000115ea21b1: callq  0x000000010dae5ebc
  0x0000000115ea21b6: add    $0x8,%rsp
  0x0000000115ea21ba: jmpq   0x0000000115ea21c4
  0x0000000115ea21bf: callq  0x000000010dae5ebc
  0x0000000115ea21c4: movabs $0x0,%r10
  0x0000000115ea21ce: mov    %r10,0x1d8(%r15)
  0x0000000115ea21d5: movabs $0x0,%r10
  0x0000000115ea21df: mov    %r10,0x1e8(%r15)
  0x0000000115ea21e6: cmpq   $0x0,0x8(%r15)
  0x0000000115ea21ee: je     0x0000000115ea21f9
  0x0000000115ea21f4: jmpq   0x0000000115e916e0
  0x0000000115ea21f9: mov    -0x38(%rbp),%r13
  0x0000000115ea21fd: mov    -0x30(%rbp),%r14
  0x0000000115ea2201: retq   
  0x0000000115ea2202: mov    %rsp,-0x28(%rsp)
  0x0000000115ea2207: sub    $0x80,%rsp
  0x0000000115ea220e: mov    %rax,0x78(%rsp)
  0x0000000115ea2213: mov    %rcx,0x70(%rsp)
  0x0000000115ea2218: mov    %rdx,0x68(%rsp)
  0x0000000115ea221d: mov    %rbx,0x60(%rsp)
  0x0000000115ea2222: mov    %rbp,0x50(%rsp)
  0x0000000115ea2227: mov    %rsi,0x48(%rsp)
  0x0000000115ea222c: mov    %rdi,0x40(%rsp)
  0x0000000115ea2231: mov    %r8,0x38(%rsp)
  0x0000000115ea2236: mov    %r9,0x30(%rsp)
  0x0000000115ea223b: mov    %r10,0x28(%rsp)
  0x0000000115ea2240: mov    %r11,0x20(%rsp)
  0x0000000115ea2245: mov    %r12,0x18(%rsp)
  0x0000000115ea224a: mov    %r13,0x10(%rsp)
  0x0000000115ea224f: mov    %r14,0x8(%rsp)
  0x0000000115ea2254: mov    %r15,(%rsp)
  0x0000000115ea2258: movabs $0x10ddd8000,%rdi
  0x0000000115ea2262: movabs $0x115ea2202,%rsi
  0x0000000115ea226c: mov    %rsp,%rdx
  0x0000000115ea226f: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea2273: callq  0x000000010dc0341e
  0x0000000115ea2278: hlt    
  0x0000000115ea2279: movzbl 0x9(%r13),%ebx
  0x0000000115ea227e: add    $0x9,%r13
  0x0000000115ea2282: movabs $0x10e0ff040,%r10
  0x0000000115ea228c: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2290: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2298: mov    -0x38(%rbp),%r13
  0x0000000115ea229c: mov    -0x30(%rbp),%r14
  0x0000000115ea22a0: cmpq   $0x0,0x8(%r15)
  0x0000000115ea22a8: je     0x0000000115ea23aa
  0x0000000115ea22ae: callq  0x0000000115ea22b8
  0x0000000115ea22b3: jmpq   0x0000000115ea2333
  0x0000000115ea22b8: lea    0x8(%rsp),%rax
  0x0000000115ea22bd: mov    %r13,-0x38(%rbp)
  0x0000000115ea22c1: mov    %r15,%rdi
  0x0000000115ea22c4: mov    %rbp,0x1e8(%r15)
  0x0000000115ea22cb: mov    %rax,0x1d8(%r15)
  0x0000000115ea22d2: test   $0xf,%esp
  0x0000000115ea22d8: je     0x0000000115ea22f0
  0x0000000115ea22de: sub    $0x8,%rsp
  0x0000000115ea22e2: callq  0x000000010dae5ebc
  0x0000000115ea22e7: add    $0x8,%rsp
  0x0000000115ea22eb: jmpq   0x0000000115ea22f5
  0x0000000115ea22f0: callq  0x000000010dae5ebc
  0x0000000115ea22f5: movabs $0x0,%r10
  0x0000000115ea22ff: mov    %r10,0x1d8(%r15)
  0x0000000115ea2306: movabs $0x0,%r10
  0x0000000115ea2310: mov    %r10,0x1e8(%r15)
  0x0000000115ea2317: cmpq   $0x0,0x8(%r15)
  0x0000000115ea231f: je     0x0000000115ea232a
  0x0000000115ea2325: jmpq   0x0000000115e916e0
  0x0000000115ea232a: mov    -0x38(%rbp),%r13
  0x0000000115ea232e: mov    -0x30(%rbp),%r14
  0x0000000115ea2332: retq   
  0x0000000115ea2333: mov    %rsp,-0x28(%rsp)
  0x0000000115ea2338: sub    $0x80,%rsp
  0x0000000115ea233f: mov    %rax,0x78(%rsp)
  0x0000000115ea2344: mov    %rcx,0x70(%rsp)
  0x0000000115ea2349: mov    %rdx,0x68(%rsp)
  0x0000000115ea234e: mov    %rbx,0x60(%rsp)
  0x0000000115ea2353: mov    %rbp,0x50(%rsp)
  0x0000000115ea2358: mov    %rsi,0x48(%rsp)
  0x0000000115ea235d: mov    %rdi,0x40(%rsp)
  0x0000000115ea2362: mov    %r8,0x38(%rsp)
  0x0000000115ea2367: mov    %r9,0x30(%rsp)
  0x0000000115ea236c: mov    %r10,0x28(%rsp)
  0x0000000115ea2371: mov    %r11,0x20(%rsp)
  0x0000000115ea2376: mov    %r12,0x18(%rsp)
  0x0000000115ea237b: mov    %r13,0x10(%rsp)
  0x0000000115ea2380: mov    %r14,0x8(%rsp)
  0x0000000115ea2385: mov    %r15,(%rsp)
  0x0000000115ea2389: movabs $0x10ddd8000,%rdi
  0x0000000115ea2393: movabs $0x115ea2333,%rsi
  0x0000000115ea239d: mov    %rsp,%rdx
  0x0000000115ea23a0: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea23a4: callq  0x000000010dc0341e
  0x0000000115ea23a9: hlt    
  0x0000000115ea23aa: movzbl 0x9(%r13),%ebx
  0x0000000115ea23af: add    $0x9,%r13
  0x0000000115ea23b3: movabs $0x10e0ff040,%r10
  0x0000000115ea23bd: jmpq   *(%r10,%rbx,8)
  0x0000000115ea23c1: movq   $0x0,-0x10(%rbp)
  0x0000000115ea23c9: mov    -0x38(%rbp),%r13
  0x0000000115ea23cd: mov    -0x30(%rbp),%r14
  0x0000000115ea23d1: cmpq   $0x0,0x8(%r15)
  0x0000000115ea23d9: je     0x0000000115ea24db
  0x0000000115ea23df: callq  0x0000000115ea23e9
  0x0000000115ea23e4: jmpq   0x0000000115ea2464
  0x0000000115ea23e9: lea    0x8(%rsp),%rax
  0x0000000115ea23ee: mov    %r13,-0x38(%rbp)
  0x0000000115ea23f2: mov    %r15,%rdi
  0x0000000115ea23f5: mov    %rbp,0x1e8(%r15)
  0x0000000115ea23fc: mov    %rax,0x1d8(%r15)
  0x0000000115ea2403: test   $0xf,%esp
  0x0000000115ea2409: je     0x0000000115ea2421
  0x0000000115ea240f: sub    $0x8,%rsp
  0x0000000115ea2413: callq  0x000000010dae5ebc
  0x0000000115ea2418: add    $0x8,%rsp
  0x0000000115ea241c: jmpq   0x0000000115ea2426
  0x0000000115ea2421: callq  0x000000010dae5ebc
  0x0000000115ea2426: movabs $0x0,%r10
  0x0000000115ea2430: mov    %r10,0x1d8(%r15)
  0x0000000115ea2437: movabs $0x0,%r10
  0x0000000115ea2441: mov    %r10,0x1e8(%r15)
  0x0000000115ea2448: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2450: je     0x0000000115ea245b
  0x0000000115ea2456: jmpq   0x0000000115e916e0
  0x0000000115ea245b: mov    -0x38(%rbp),%r13
  0x0000000115ea245f: mov    -0x30(%rbp),%r14
  0x0000000115ea2463: retq   
  0x0000000115ea2464: mov    %rsp,-0x28(%rsp)
  0x0000000115ea2469: sub    $0x80,%rsp
  0x0000000115ea2470: mov    %rax,0x78(%rsp)
  0x0000000115ea2475: mov    %rcx,0x70(%rsp)
  0x0000000115ea247a: mov    %rdx,0x68(%rsp)
  0x0000000115ea247f: mov    %rbx,0x60(%rsp)
  0x0000000115ea2484: mov    %rbp,0x50(%rsp)
  0x0000000115ea2489: mov    %rsi,0x48(%rsp)
  0x0000000115ea248e: mov    %rdi,0x40(%rsp)
  0x0000000115ea2493: mov    %r8,0x38(%rsp)
  0x0000000115ea2498: mov    %r9,0x30(%rsp)
  0x0000000115ea249d: mov    %r10,0x28(%rsp)
  0x0000000115ea24a2: mov    %r11,0x20(%rsp)
  0x0000000115ea24a7: mov    %r12,0x18(%rsp)
  0x0000000115ea24ac: mov    %r13,0x10(%rsp)
  0x0000000115ea24b1: mov    %r14,0x8(%rsp)
  0x0000000115ea24b6: mov    %r15,(%rsp)
  0x0000000115ea24ba: movabs $0x10ddd8000,%rdi
  0x0000000115ea24c4: movabs $0x115ea2464,%rsi
  0x0000000115ea24ce: mov    %rsp,%rdx
  0x0000000115ea24d1: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea24d5: callq  0x000000010dc0341e
  0x0000000115ea24da: hlt    
  0x0000000115ea24db: movzbl 0x9(%r13),%ebx
  0x0000000115ea24e0: add    $0x9,%r13
  0x0000000115ea24e4: movabs $0x10e0ff040,%r10
  0x0000000115ea24ee: jmpq   *(%r10,%rbx,8)
  0x0000000115ea24f2: nopw   0x0(%rax,%rax,1)
  0x0000000115ea24f8: add    %al,(%rax)
  0x0000000115ea24fa: add    %al,(%rax)
  0x0000000115ea24fc: add    %al,(%rax)
  0x0000000115ea24fe: add    %al,(%rax)

----------------------------------------------------------------------
result handlers for native calls  [0x0000000115ea2520, 0x0000000115ea2540]  32 bytes

  0x0000000115ea2520: and    $0xff,%eax
  0x0000000115ea2526: setne  %al
  0x0000000115ea2529: retq   
  0x0000000115ea252a: movzwl %ax,%eax
  0x0000000115ea252d: retq   
  0x0000000115ea252e: movsbl %al,%eax
  0x0000000115ea2531: retq   
  0x0000000115ea2532: movswl %ax,%eax
  0x0000000115ea2535: retq   
  0x0000000115ea2536: retq   
  0x0000000115ea2537: retq   
  0x0000000115ea2538: retq   
  0x0000000115ea2539: retq   
  0x0000000115ea253a: retq   
  0x0000000115ea253b: mov    0x10(%rbp),%rax
  0x0000000115ea253f: retq   

----------------------------------------------------------------------
continuation entry points  [0x0000000115ea2560, 0x0000000115ea2680]  288 bytes

  0x0000000115ea2560: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2568: movzbl 0x0(%r13),%ebx
  0x0000000115ea256d: movabs $0x10e101840,%r10
  0x0000000115ea2577: jmpq   *(%r10,%rbx,8)
  0x0000000115ea257b: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2583: movzbl 0x0(%r13),%ebx
  0x0000000115ea2588: movabs $0x10e100840,%r10
  0x0000000115ea2592: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2596: movq   $0x0,-0x10(%rbp)
  0x0000000115ea259e: movzbl 0x0(%r13),%ebx
  0x0000000115ea25a3: movabs $0x10e100040,%r10
  0x0000000115ea25ad: jmpq   *(%r10,%rbx,8)
  0x0000000115ea25b1: movq   $0x0,-0x10(%rbp)
  0x0000000115ea25b9: movzbl 0x0(%r13),%ebx
  0x0000000115ea25be: movabs $0x10e0ff840,%r10
  0x0000000115ea25c8: jmpq   *(%r10,%rbx,8)
  0x0000000115ea25cc: movq   $0x0,-0x10(%rbp)
  0x0000000115ea25d4: movzbl 0x0(%r13),%ebx
  0x0000000115ea25d9: movabs $0x10e0ff040,%r10
  0x0000000115ea25e3: jmpq   *(%r10,%rbx,8)
  0x0000000115ea25e7: movq   $0x0,-0x10(%rbp)
  0x0000000115ea25ef: movzbl 0x0(%r13),%ebx
  0x0000000115ea25f4: movabs $0x10e101040,%r10
  0x0000000115ea25fe: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2602: movq   $0x0,-0x10(%rbp)
  0x0000000115ea260a: movzbl 0x0(%r13),%ebx
  0x0000000115ea260f: movabs $0x10e0fe840,%r10
  0x0000000115ea2619: jmpq   *(%r10,%rbx,8)
  0x0000000115ea261d: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2625: movzbl 0x0(%r13),%ebx
  0x0000000115ea262a: movabs $0x10e0fe040,%r10
  0x0000000115ea2634: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2638: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2640: movzbl 0x0(%r13),%ebx
  0x0000000115ea2645: movabs $0x10e0fd840,%r10
  0x0000000115ea264f: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2653: movq   $0x0,-0x10(%rbp)
  0x0000000115ea265b: movzbl 0x0(%r13),%ebx
  0x0000000115ea2660: movabs $0x10e0fd040,%r10
  0x0000000115ea266a: jmpq   *(%r10,%rbx,8)
  0x0000000115ea266e: xchg   %ax,%ax
  0x0000000115ea2670: add    %al,(%rax)
  0x0000000115ea2672: add    %al,(%rax)
  0x0000000115ea2674: add    %al,(%rax)
  0x0000000115ea2676: add    %al,(%rax)
  0x0000000115ea2678: add    %al,(%rax)
  0x0000000115ea267a: add    %al,(%rax)
  0x0000000115ea267c: add    %al,(%rax)
  0x0000000115ea267e: add    %al,(%rax)

----------------------------------------------------------------------
safepoint entry points  [0x0000000115ea26a0, 0x0000000115ea2cc0]  1568 bytes

  0x0000000115ea26a0: callq  0x0000000115ea26aa
  0x0000000115ea26a5: jmpq   0x0000000115ea2725
  0x0000000115ea26aa: lea    0x8(%rsp),%rax
  0x0000000115ea26af: mov    %r13,-0x38(%rbp)
  0x0000000115ea26b3: mov    %r15,%rdi
  0x0000000115ea26b6: mov    %rbp,0x1e8(%r15)
  0x0000000115ea26bd: mov    %rax,0x1d8(%r15)
  0x0000000115ea26c4: test   $0xf,%esp
  0x0000000115ea26ca: je     0x0000000115ea26e2
  0x0000000115ea26d0: sub    $0x8,%rsp
  0x0000000115ea26d4: callq  0x000000010dae6d08
  0x0000000115ea26d9: add    $0x8,%rsp
  0x0000000115ea26dd: jmpq   0x0000000115ea26e7
  0x0000000115ea26e2: callq  0x000000010dae6d08
  0x0000000115ea26e7: movabs $0x0,%r10
  0x0000000115ea26f1: mov    %r10,0x1d8(%r15)
  0x0000000115ea26f8: movabs $0x0,%r10
  0x0000000115ea2702: mov    %r10,0x1e8(%r15)
  0x0000000115ea2709: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2711: je     0x0000000115ea271c
  0x0000000115ea2717: jmpq   0x0000000115e916e0
  0x0000000115ea271c: mov    -0x38(%rbp),%r13
  0x0000000115ea2720: mov    -0x30(%rbp),%r14
  0x0000000115ea2724: retq   
  0x0000000115ea2725: movzbl 0x0(%r13),%ebx
  0x0000000115ea272a: movabs $0x10e0fc040,%r10
  0x0000000115ea2734: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2738: sub    $0x10,%rsp
  0x0000000115ea273c: vmovsd %xmm0,(%rsp)
  0x0000000115ea2741: callq  0x0000000115ea274b
  0x0000000115ea2746: jmpq   0x0000000115ea27c6
  0x0000000115ea274b: lea    0x8(%rsp),%rax
  0x0000000115ea2750: mov    %r13,-0x38(%rbp)
  0x0000000115ea2754: mov    %r15,%rdi
  0x0000000115ea2757: mov    %rbp,0x1e8(%r15)
  0x0000000115ea275e: mov    %rax,0x1d8(%r15)
  0x0000000115ea2765: test   $0xf,%esp
  0x0000000115ea276b: je     0x0000000115ea2783
  0x0000000115ea2771: sub    $0x8,%rsp
  0x0000000115ea2775: callq  0x000000010dae6d08
  0x0000000115ea277a: add    $0x8,%rsp
  0x0000000115ea277e: jmpq   0x0000000115ea2788
  0x0000000115ea2783: callq  0x000000010dae6d08
  0x0000000115ea2788: movabs $0x0,%r10
  0x0000000115ea2792: mov    %r10,0x1d8(%r15)
  0x0000000115ea2799: movabs $0x0,%r10
  0x0000000115ea27a3: mov    %r10,0x1e8(%r15)
  0x0000000115ea27aa: cmpq   $0x0,0x8(%r15)
  0x0000000115ea27b2: je     0x0000000115ea27bd
  0x0000000115ea27b8: jmpq   0x0000000115e916e0
  0x0000000115ea27bd: mov    -0x38(%rbp),%r13
  0x0000000115ea27c1: mov    -0x30(%rbp),%r14
  0x0000000115ea27c5: retq   
  0x0000000115ea27c6: movzbl 0x0(%r13),%ebx
  0x0000000115ea27cb: movabs $0x10e0fc040,%r10
  0x0000000115ea27d5: jmpq   *(%r10,%rbx,8)
  0x0000000115ea27d9: sub    $0x8,%rsp
  0x0000000115ea27dd: vmovss %xmm0,(%rsp)
  0x0000000115ea27e2: callq  0x0000000115ea27ec
  0x0000000115ea27e7: jmpq   0x0000000115ea2867
  0x0000000115ea27ec: lea    0x8(%rsp),%rax
  0x0000000115ea27f1: mov    %r13,-0x38(%rbp)
  0x0000000115ea27f5: mov    %r15,%rdi
  0x0000000115ea27f8: mov    %rbp,0x1e8(%r15)
  0x0000000115ea27ff: mov    %rax,0x1d8(%r15)
  0x0000000115ea2806: test   $0xf,%esp
  0x0000000115ea280c: je     0x0000000115ea2824
  0x0000000115ea2812: sub    $0x8,%rsp
  0x0000000115ea2816: callq  0x000000010dae6d08
  0x0000000115ea281b: add    $0x8,%rsp
  0x0000000115ea281f: jmpq   0x0000000115ea2829
  0x0000000115ea2824: callq  0x000000010dae6d08
  0x0000000115ea2829: movabs $0x0,%r10
  0x0000000115ea2833: mov    %r10,0x1d8(%r15)
  0x0000000115ea283a: movabs $0x0,%r10
  0x0000000115ea2844: mov    %r10,0x1e8(%r15)
  0x0000000115ea284b: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2853: je     0x0000000115ea285e
  0x0000000115ea2859: jmpq   0x0000000115e916e0
  0x0000000115ea285e: mov    -0x38(%rbp),%r13
  0x0000000115ea2862: mov    -0x30(%rbp),%r14
  0x0000000115ea2866: retq   
  0x0000000115ea2867: movzbl 0x0(%r13),%ebx
  0x0000000115ea286c: movabs $0x10e0fc040,%r10
  0x0000000115ea2876: jmpq   *(%r10,%rbx,8)
  0x0000000115ea287a: sub    $0x10,%rsp
  0x0000000115ea287e: mov    %rax,(%rsp)
  0x0000000115ea2882: callq  0x0000000115ea288c
  0x0000000115ea2887: jmpq   0x0000000115ea2907
  0x0000000115ea288c: lea    0x8(%rsp),%rax
  0x0000000115ea2891: mov    %r13,-0x38(%rbp)
  0x0000000115ea2895: mov    %r15,%rdi
  0x0000000115ea2898: mov    %rbp,0x1e8(%r15)
  0x0000000115ea289f: mov    %rax,0x1d8(%r15)
  0x0000000115ea28a6: test   $0xf,%esp
  0x0000000115ea28ac: je     0x0000000115ea28c4
  0x0000000115ea28b2: sub    $0x8,%rsp
  0x0000000115ea28b6: callq  0x000000010dae6d08
  0x0000000115ea28bb: add    $0x8,%rsp
  0x0000000115ea28bf: jmpq   0x0000000115ea28c9
  0x0000000115ea28c4: callq  0x000000010dae6d08
  0x0000000115ea28c9: movabs $0x0,%r10
  0x0000000115ea28d3: mov    %r10,0x1d8(%r15)
  0x0000000115ea28da: movabs $0x0,%r10
  0x0000000115ea28e4: mov    %r10,0x1e8(%r15)
  0x0000000115ea28eb: cmpq   $0x0,0x8(%r15)
  0x0000000115ea28f3: je     0x0000000115ea28fe
  0x0000000115ea28f9: jmpq   0x0000000115e916e0
  0x0000000115ea28fe: mov    -0x38(%rbp),%r13
  0x0000000115ea2902: mov    -0x30(%rbp),%r14
  0x0000000115ea2906: retq   
  0x0000000115ea2907: movzbl 0x0(%r13),%ebx
  0x0000000115ea290c: movabs $0x10e0fc040,%r10
  0x0000000115ea2916: jmpq   *(%r10,%rbx,8)
  0x0000000115ea291a: push   %rax
  0x0000000115ea291b: callq  0x0000000115ea2925
  0x0000000115ea2920: jmpq   0x0000000115ea29a0
  0x0000000115ea2925: lea    0x8(%rsp),%rax
  0x0000000115ea292a: mov    %r13,-0x38(%rbp)
  0x0000000115ea292e: mov    %r15,%rdi
  0x0000000115ea2931: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2938: mov    %rax,0x1d8(%r15)
  0x0000000115ea293f: test   $0xf,%esp
  0x0000000115ea2945: je     0x0000000115ea295d
  0x0000000115ea294b: sub    $0x8,%rsp
  0x0000000115ea294f: callq  0x000000010dae6d08
  0x0000000115ea2954: add    $0x8,%rsp
  0x0000000115ea2958: jmpq   0x0000000115ea2962
  0x0000000115ea295d: callq  0x000000010dae6d08
  0x0000000115ea2962: movabs $0x0,%r10
  0x0000000115ea296c: mov    %r10,0x1d8(%r15)
  0x0000000115ea2973: movabs $0x0,%r10
  0x0000000115ea297d: mov    %r10,0x1e8(%r15)
  0x0000000115ea2984: cmpq   $0x0,0x8(%r15)
  0x0000000115ea298c: je     0x0000000115ea2997
  0x0000000115ea2992: jmpq   0x0000000115e916e0
  0x0000000115ea2997: mov    -0x38(%rbp),%r13
  0x0000000115ea299b: mov    -0x30(%rbp),%r14
  0x0000000115ea299f: retq   
  0x0000000115ea29a0: movzbl 0x0(%r13),%ebx
  0x0000000115ea29a5: movabs $0x10e0fc040,%r10
  0x0000000115ea29af: jmpq   *(%r10,%rbx,8)
  0x0000000115ea29b3: push   %rax
  0x0000000115ea29b4: callq  0x0000000115ea29be
  0x0000000115ea29b9: jmpq   0x0000000115ea2a39
  0x0000000115ea29be: lea    0x8(%rsp),%rax
  0x0000000115ea29c3: mov    %r13,-0x38(%rbp)
  0x0000000115ea29c7: mov    %r15,%rdi
  0x0000000115ea29ca: mov    %rbp,0x1e8(%r15)
  0x0000000115ea29d1: mov    %rax,0x1d8(%r15)
  0x0000000115ea29d8: test   $0xf,%esp
  0x0000000115ea29de: je     0x0000000115ea29f6
  0x0000000115ea29e4: sub    $0x8,%rsp
  0x0000000115ea29e8: callq  0x000000010dae6d08
  0x0000000115ea29ed: add    $0x8,%rsp
  0x0000000115ea29f1: jmpq   0x0000000115ea29fb
  0x0000000115ea29f6: callq  0x000000010dae6d08
  0x0000000115ea29fb: movabs $0x0,%r10
  0x0000000115ea2a05: mov    %r10,0x1d8(%r15)
  0x0000000115ea2a0c: movabs $0x0,%r10
  0x0000000115ea2a16: mov    %r10,0x1e8(%r15)
  0x0000000115ea2a1d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2a25: je     0x0000000115ea2a30
  0x0000000115ea2a2b: jmpq   0x0000000115e916e0
  0x0000000115ea2a30: mov    -0x38(%rbp),%r13
  0x0000000115ea2a34: mov    -0x30(%rbp),%r14
  0x0000000115ea2a38: retq   
  0x0000000115ea2a39: movzbl 0x0(%r13),%ebx
  0x0000000115ea2a3e: movabs $0x10e0fc040,%r10
  0x0000000115ea2a48: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2a4c: push   %rax
  0x0000000115ea2a4d: callq  0x0000000115ea2a57
  0x0000000115ea2a52: jmpq   0x0000000115ea2ad2
  0x0000000115ea2a57: lea    0x8(%rsp),%rax
  0x0000000115ea2a5c: mov    %r13,-0x38(%rbp)
  0x0000000115ea2a60: mov    %r15,%rdi
  0x0000000115ea2a63: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2a6a: mov    %rax,0x1d8(%r15)
  0x0000000115ea2a71: test   $0xf,%esp
  0x0000000115ea2a77: je     0x0000000115ea2a8f
  0x0000000115ea2a7d: sub    $0x8,%rsp
  0x0000000115ea2a81: callq  0x000000010dae6d08
  0x0000000115ea2a86: add    $0x8,%rsp
  0x0000000115ea2a8a: jmpq   0x0000000115ea2a94
  0x0000000115ea2a8f: callq  0x000000010dae6d08
  0x0000000115ea2a94: movabs $0x0,%r10
  0x0000000115ea2a9e: mov    %r10,0x1d8(%r15)
  0x0000000115ea2aa5: movabs $0x0,%r10
  0x0000000115ea2aaf: mov    %r10,0x1e8(%r15)
  0x0000000115ea2ab6: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2abe: je     0x0000000115ea2ac9
  0x0000000115ea2ac4: jmpq   0x0000000115e916e0
  0x0000000115ea2ac9: mov    -0x38(%rbp),%r13
  0x0000000115ea2acd: mov    -0x30(%rbp),%r14
  0x0000000115ea2ad1: retq   
  0x0000000115ea2ad2: movzbl 0x0(%r13),%ebx
  0x0000000115ea2ad7: movabs $0x10e0fc040,%r10
  0x0000000115ea2ae1: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2ae5: push   %rax
  0x0000000115ea2ae6: callq  0x0000000115ea2af0
  0x0000000115ea2aeb: jmpq   0x0000000115ea2b6b
  0x0000000115ea2af0: lea    0x8(%rsp),%rax
  0x0000000115ea2af5: mov    %r13,-0x38(%rbp)
  0x0000000115ea2af9: mov    %r15,%rdi
  0x0000000115ea2afc: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2b03: mov    %rax,0x1d8(%r15)
  0x0000000115ea2b0a: test   $0xf,%esp
  0x0000000115ea2b10: je     0x0000000115ea2b28
  0x0000000115ea2b16: sub    $0x8,%rsp
  0x0000000115ea2b1a: callq  0x000000010dae6d08
  0x0000000115ea2b1f: add    $0x8,%rsp
  0x0000000115ea2b23: jmpq   0x0000000115ea2b2d
  0x0000000115ea2b28: callq  0x000000010dae6d08
  0x0000000115ea2b2d: movabs $0x0,%r10
  0x0000000115ea2b37: mov    %r10,0x1d8(%r15)
  0x0000000115ea2b3e: movabs $0x0,%r10
  0x0000000115ea2b48: mov    %r10,0x1e8(%r15)
  0x0000000115ea2b4f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2b57: je     0x0000000115ea2b62
  0x0000000115ea2b5d: jmpq   0x0000000115e916e0
  0x0000000115ea2b62: mov    -0x38(%rbp),%r13
  0x0000000115ea2b66: mov    -0x30(%rbp),%r14
  0x0000000115ea2b6a: retq   
  0x0000000115ea2b6b: movzbl 0x0(%r13),%ebx
  0x0000000115ea2b70: movabs $0x10e0fc040,%r10
  0x0000000115ea2b7a: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2b7e: push   %rax
  0x0000000115ea2b7f: callq  0x0000000115ea2b89
  0x0000000115ea2b84: jmpq   0x0000000115ea2c04
  0x0000000115ea2b89: lea    0x8(%rsp),%rax
  0x0000000115ea2b8e: mov    %r13,-0x38(%rbp)
  0x0000000115ea2b92: mov    %r15,%rdi
  0x0000000115ea2b95: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2b9c: mov    %rax,0x1d8(%r15)
  0x0000000115ea2ba3: test   $0xf,%esp
  0x0000000115ea2ba9: je     0x0000000115ea2bc1
  0x0000000115ea2baf: sub    $0x8,%rsp
  0x0000000115ea2bb3: callq  0x000000010dae6d08
  0x0000000115ea2bb8: add    $0x8,%rsp
  0x0000000115ea2bbc: jmpq   0x0000000115ea2bc6
  0x0000000115ea2bc1: callq  0x000000010dae6d08
  0x0000000115ea2bc6: movabs $0x0,%r10
  0x0000000115ea2bd0: mov    %r10,0x1d8(%r15)
  0x0000000115ea2bd7: movabs $0x0,%r10
  0x0000000115ea2be1: mov    %r10,0x1e8(%r15)
  0x0000000115ea2be8: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2bf0: je     0x0000000115ea2bfb
  0x0000000115ea2bf6: jmpq   0x0000000115e916e0
  0x0000000115ea2bfb: mov    -0x38(%rbp),%r13
  0x0000000115ea2bff: mov    -0x30(%rbp),%r14
  0x0000000115ea2c03: retq   
  0x0000000115ea2c04: movzbl 0x0(%r13),%ebx
  0x0000000115ea2c09: movabs $0x10e0fc040,%r10
  0x0000000115ea2c13: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2c17: push   %rax
  0x0000000115ea2c18: callq  0x0000000115ea2c22
  0x0000000115ea2c1d: jmpq   0x0000000115ea2c9d
  0x0000000115ea2c22: lea    0x8(%rsp),%rax
  0x0000000115ea2c27: mov    %r13,-0x38(%rbp)
  0x0000000115ea2c2b: mov    %r15,%rdi
  0x0000000115ea2c2e: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2c35: mov    %rax,0x1d8(%r15)
  0x0000000115ea2c3c: test   $0xf,%esp
  0x0000000115ea2c42: je     0x0000000115ea2c5a
  0x0000000115ea2c48: sub    $0x8,%rsp
  0x0000000115ea2c4c: callq  0x000000010dae6d08
  0x0000000115ea2c51: add    $0x8,%rsp
  0x0000000115ea2c55: jmpq   0x0000000115ea2c5f
  0x0000000115ea2c5a: callq  0x000000010dae6d08
  0x0000000115ea2c5f: movabs $0x0,%r10
  0x0000000115ea2c69: mov    %r10,0x1d8(%r15)
  0x0000000115ea2c70: movabs $0x0,%r10
  0x0000000115ea2c7a: mov    %r10,0x1e8(%r15)
  0x0000000115ea2c81: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2c89: je     0x0000000115ea2c94
  0x0000000115ea2c8f: jmpq   0x0000000115e916e0
  0x0000000115ea2c94: mov    -0x38(%rbp),%r13
  0x0000000115ea2c98: mov    -0x30(%rbp),%r14
  0x0000000115ea2c9c: retq   
  0x0000000115ea2c9d: movzbl 0x0(%r13),%ebx
  0x0000000115ea2ca2: movabs $0x10e0fc040,%r10
  0x0000000115ea2cac: jmpq   *(%r10,%rbx,8)
  0x0000000115ea2cb0: add    %al,(%rax)
  0x0000000115ea2cb2: add    %al,(%rax)
  0x0000000115ea2cb4: add    %al,(%rax)
  0x0000000115ea2cb6: add    %al,(%rax)
  0x0000000115ea2cb8: add    %al,(%rax)
  0x0000000115ea2cba: add    %al,(%rax)
  0x0000000115ea2cbc: add    %al,(%rax)
  0x0000000115ea2cbe: add    %al,(%rax)

----------------------------------------------------------------------
exception handling  [0x0000000115ea2ce0, 0x0000000115ea3820]  2880 bytes

  0x0000000115ea2ce0: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2ce8: mov    -0x38(%rbp),%r13
  0x0000000115ea2cec: mov    -0x30(%rbp),%r14
  0x0000000115ea2cf0: xor    %r12,%r12
  0x0000000115ea2cf3: mov    %rax,%rsi
  0x0000000115ea2cf6: mov    -0x40(%rbp),%rsp
  0x0000000115ea2cfa: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2d02: callq  0x0000000115ea2d0c
  0x0000000115ea2d07: jmpq   0x0000000115ea2d9f
  0x0000000115ea2d0c: lea    0x8(%rsp),%rax
  0x0000000115ea2d11: mov    %r13,-0x38(%rbp)
  0x0000000115ea2d15: mov    %r15,%rdi
  0x0000000115ea2d18: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2d1f: mov    %rax,0x1d8(%r15)
  0x0000000115ea2d26: test   $0xf,%esp
  0x0000000115ea2d2c: je     0x0000000115ea2d44
  0x0000000115ea2d32: sub    $0x8,%rsp
  0x0000000115ea2d36: callq  0x000000010dae981c
  0x0000000115ea2d3b: add    $0x8,%rsp
  0x0000000115ea2d3f: jmpq   0x0000000115ea2d49
  0x0000000115ea2d44: callq  0x000000010dae981c
  0x0000000115ea2d49: movabs $0x0,%r10
  0x0000000115ea2d53: mov    %r10,0x1d8(%r15)
  0x0000000115ea2d5a: movabs $0x0,%r10
  0x0000000115ea2d64: mov    %r10,0x1e8(%r15)
  0x0000000115ea2d6b: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2d73: je     0x0000000115ea2d7e
  0x0000000115ea2d79: jmpq   0x0000000115e916e0
  0x0000000115ea2d7e: mov    0x238(%r15),%rdx
  0x0000000115ea2d85: movabs $0x0,%r10
  0x0000000115ea2d8f: mov    %r10,0x238(%r15)
  0x0000000115ea2d96: mov    -0x38(%rbp),%r13
  0x0000000115ea2d9a: mov    -0x30(%rbp),%r14
  0x0000000115ea2d9e: retq   
  0x0000000115ea2d9f: push   %rdx
  0x0000000115ea2da0: jmpq   *%rax
  0x0000000115ea2da2: mov    -0x40(%rbp),%rsp
  0x0000000115ea2da6: movq   $0x0,-0x10(%rbp)
  0x0000000115ea2dae: mov    0x2d4(%r15),%edx
  0x0000000115ea2db5: or     $0x2,%edx
  0x0000000115ea2db8: mov    %edx,0x2d4(%r15)
  0x0000000115ea2dbf: mov    0x8(%rbp),%rsi
  0x0000000115ea2dc3: mov    %rsi,%rdi
  0x0000000115ea2dc6: test   $0xf,%esp
  0x0000000115ea2dcc: je     0x0000000115ea2de4
  0x0000000115ea2dd2: sub    $0x8,%rsp
  0x0000000115ea2dd6: callq  0x000000010dae5daa
  0x0000000115ea2ddb: add    $0x8,%rsp
  0x0000000115ea2ddf: jmpq   0x0000000115ea2de9
  0x0000000115ea2de4: callq  0x000000010dae5daa
  0x0000000115ea2de9: test   %eax,%eax
  0x0000000115ea2deb: jne    0x0000000115ea307e
  0x0000000115ea2df1: mov    -0x18(%rbp),%rax
  0x0000000115ea2df5: mov    0x8(%rax),%rax
  0x0000000115ea2df9: movzwl 0x2c(%rax),%eax
  0x0000000115ea2dfd: shl    $0x3,%eax
  0x0000000115ea2e00: mov    -0x30(%rbp),%r14
  0x0000000115ea2e04: sub    %rax,%r14
  0x0000000115ea2e07: add    $0x8,%r14
  0x0000000115ea2e0b: mov    %r14,%rdx
  0x0000000115ea2e0e: mov    %rax,%rsi
  0x0000000115ea2e11: mov    %r15,%rdi
  0x0000000115ea2e14: test   $0xf,%esp
  0x0000000115ea2e1a: je     0x0000000115ea2e32
  0x0000000115ea2e20: sub    $0x8,%rsp
  0x0000000115ea2e24: callq  0x000000010d9ef81c
  0x0000000115ea2e29: add    $0x8,%rsp
  0x0000000115ea2e2d: jmpq   0x0000000115ea2e37
  0x0000000115ea2e32: callq  0x000000010d9ef81c
  0x0000000115ea2e37: mov    0x295(%r15),%dl
  0x0000000115ea2e3e: movb   $0x0,0x295(%r15)
  0x0000000115ea2e46: mov    -0x18(%rbp),%rbx
  0x0000000115ea2e4a: mov    0x20(%rbx),%ecx
  0x0000000115ea2e4d: test   $0x20,%ecx
  0x0000000115ea2e53: je     0x0000000115ea2f40
  0x0000000115ea2e59: test   $0xff,%dl
  0x0000000115ea2e5c: jne    0x0000000115ea3031
  0x0000000115ea2e62: lea    -0x50(%rbp),%rsi
  0x0000000115ea2e66: mov    0x8(%rsi),%rax
  0x0000000115ea2e6a: test   %rax,%rax
  0x0000000115ea2e6d: jne    0x0000000115ea2e78
  0x0000000115ea2e73: jmpq   0x0000000115ea2f40
  0x0000000115ea2e78: mov    %r13,-0x38(%rbp)
  0x0000000115ea2e7c: lea    (%rsi),%rax
  0x0000000115ea2e7f: mov    0x8(%rsi),%rcx
  0x0000000115ea2e83: movq   $0x0,0x8(%rsi)
  0x0000000115ea2e8b: mov    (%rcx),%rdx
  0x0000000115ea2e8e: and    $0x7,%rdx
  0x0000000115ea2e92: cmp    $0x5,%rdx
  0x0000000115ea2e96: je     0x0000000115ea2f3c
  0x0000000115ea2e9c: mov    (%rax),%rdx
  0x0000000115ea2e9f: test   %rdx,%rdx
  0x0000000115ea2ea2: je     0x0000000115ea2f3c
  0x0000000115ea2ea8: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea2ead: je     0x0000000115ea2f3c
  0x0000000115ea2eb3: mov    %rcx,0x8(%rsi)
  0x0000000115ea2eb7: callq  0x0000000115ea2ec1
  0x0000000115ea2ebc: jmpq   0x0000000115ea2f3c
  0x0000000115ea2ec1: lea    0x8(%rsp),%rax
  0x0000000115ea2ec6: mov    %r13,-0x38(%rbp)
  0x0000000115ea2eca: mov    %r15,%rdi
  0x0000000115ea2ecd: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2ed4: mov    %rax,0x1d8(%r15)
  0x0000000115ea2edb: test   $0xf,%esp
  0x0000000115ea2ee1: je     0x0000000115ea2ef9
  0x0000000115ea2ee7: sub    $0x8,%rsp
  0x0000000115ea2eeb: callq  0x000000010dae8608
  0x0000000115ea2ef0: add    $0x8,%rsp
  0x0000000115ea2ef4: jmpq   0x0000000115ea2efe
  0x0000000115ea2ef9: callq  0x000000010dae8608
  0x0000000115ea2efe: movabs $0x0,%r10
  0x0000000115ea2f08: mov    %r10,0x1d8(%r15)
  0x0000000115ea2f0f: movabs $0x0,%r10
  0x0000000115ea2f19: mov    %r10,0x1e8(%r15)
  0x0000000115ea2f20: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2f28: je     0x0000000115ea2f33
  0x0000000115ea2f2e: jmpq   0x0000000115e916e0
  0x0000000115ea2f33: mov    -0x38(%rbp),%r13
  0x0000000115ea2f37: mov    -0x30(%rbp),%r14
  0x0000000115ea2f3b: retq   
  0x0000000115ea2f3c: mov    -0x38(%rbp),%r13
  0x0000000115ea2f40: mov    -0x40(%rbp),%rsi
  0x0000000115ea2f44: lea    -0x40(%rbp),%rbx
  0x0000000115ea2f48: jmpq   0x0000000115ea302c
  0x0000000115ea2f4d: mov    %r13,-0x38(%rbp)
  0x0000000115ea2f51: lea    (%rsi),%rax
  0x0000000115ea2f54: mov    0x8(%rsi),%rcx
  0x0000000115ea2f58: movq   $0x0,0x8(%rsi)
  0x0000000115ea2f60: mov    (%rcx),%rdx
  0x0000000115ea2f63: and    $0x7,%rdx
  0x0000000115ea2f67: cmp    $0x5,%rdx
  0x0000000115ea2f6b: je     0x0000000115ea3011
  0x0000000115ea2f71: mov    (%rax),%rdx
  0x0000000115ea2f74: test   %rdx,%rdx
  0x0000000115ea2f77: je     0x0000000115ea3011
  0x0000000115ea2f7d: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea2f82: je     0x0000000115ea3011
  0x0000000115ea2f88: mov    %rcx,0x8(%rsi)
  0x0000000115ea2f8c: callq  0x0000000115ea2f96
  0x0000000115ea2f91: jmpq   0x0000000115ea3011
  0x0000000115ea2f96: lea    0x8(%rsp),%rax
  0x0000000115ea2f9b: mov    %r13,-0x38(%rbp)
  0x0000000115ea2f9f: mov    %r15,%rdi
  0x0000000115ea2fa2: mov    %rbp,0x1e8(%r15)
  0x0000000115ea2fa9: mov    %rax,0x1d8(%r15)
  0x0000000115ea2fb0: test   $0xf,%esp
  0x0000000115ea2fb6: je     0x0000000115ea2fce
  0x0000000115ea2fbc: sub    $0x8,%rsp
  0x0000000115ea2fc0: callq  0x000000010dae8608
  0x0000000115ea2fc5: add    $0x8,%rsp
  0x0000000115ea2fc9: jmpq   0x0000000115ea2fd3
  0x0000000115ea2fce: callq  0x000000010dae8608
  0x0000000115ea2fd3: movabs $0x0,%r10
  0x0000000115ea2fdd: mov    %r10,0x1d8(%r15)
  0x0000000115ea2fe4: movabs $0x0,%r10
  0x0000000115ea2fee: mov    %r10,0x1e8(%r15)
  0x0000000115ea2ff5: cmpq   $0x0,0x8(%r15)
  0x0000000115ea2ffd: je     0x0000000115ea3008
  0x0000000115ea3003: jmpq   0x0000000115e916e0
  0x0000000115ea3008: mov    -0x38(%rbp),%r13
  0x0000000115ea300c: mov    -0x30(%rbp),%r14
  0x0000000115ea3010: retq   
  0x0000000115ea3011: mov    -0x38(%rbp),%r13
  0x0000000115ea3015: jmpq   0x0000000115ea2f40
  0x0000000115ea301a: cmpq   $0x0,0x8(%rsi)
  0x0000000115ea3022: jne    0x0000000115ea2f4d
  0x0000000115ea3028: add    $0x10,%rsi
  0x0000000115ea302c: cmp    %rbx,%rsi
  0x0000000115ea302f: jne    0x0000000115ea301a
  0x0000000115ea3031: cmpb   $0x0,-0x7dbbd6e(%rip)        # 0x000000010e0e72ca
  0x0000000115ea3038: je     0x0000000115ea3068
  0x0000000115ea303e: mov    -0x18(%rbp),%rsi
  0x0000000115ea3042: mov    %r15,%rdi
  0x0000000115ea3045: test   $0xf,%esp
  0x0000000115ea304b: je     0x0000000115ea3063
  0x0000000115ea3051: sub    $0x8,%rsp
  0x0000000115ea3055: callq  0x000000010dce7696
  0x0000000115ea305a: add    $0x8,%rsp
  0x0000000115ea305e: jmpq   0x0000000115ea3068
  0x0000000115ea3063: callq  0x000000010dce7696
  0x0000000115ea3068: mov    -0x8(%rbp),%rbx
  0x0000000115ea306c: leaveq 
  0x0000000115ea306d: pop    %rdx
  0x0000000115ea306e: mov    %rbx,%rsp
  0x0000000115ea3071: movl   $0x4,0x2d4(%r15)
  0x0000000115ea307c: jmpq   *%rdx
  0x0000000115ea307e: mov    0x295(%r15),%dl
  0x0000000115ea3085: movb   $0x0,0x295(%r15)
  0x0000000115ea308d: mov    -0x18(%rbp),%rbx
  0x0000000115ea3091: mov    0x20(%rbx),%ecx
  0x0000000115ea3094: test   $0x20,%ecx
  0x0000000115ea309a: je     0x0000000115ea3187
  0x0000000115ea30a0: test   $0xff,%dl
  0x0000000115ea30a3: jne    0x0000000115ea3278
  0x0000000115ea30a9: lea    -0x50(%rbp),%rsi
  0x0000000115ea30ad: mov    0x8(%rsi),%rax
  0x0000000115ea30b1: test   %rax,%rax
  0x0000000115ea30b4: jne    0x0000000115ea30bf
  0x0000000115ea30ba: jmpq   0x0000000115ea3187
  0x0000000115ea30bf: mov    %r13,-0x38(%rbp)
  0x0000000115ea30c3: lea    (%rsi),%rax
  0x0000000115ea30c6: mov    0x8(%rsi),%rcx
  0x0000000115ea30ca: movq   $0x0,0x8(%rsi)
  0x0000000115ea30d2: mov    (%rcx),%rdx
  0x0000000115ea30d5: and    $0x7,%rdx
  0x0000000115ea30d9: cmp    $0x5,%rdx
  0x0000000115ea30dd: je     0x0000000115ea3183
  0x0000000115ea30e3: mov    (%rax),%rdx
  0x0000000115ea30e6: test   %rdx,%rdx
  0x0000000115ea30e9: je     0x0000000115ea3183
  0x0000000115ea30ef: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea30f4: je     0x0000000115ea3183
  0x0000000115ea30fa: mov    %rcx,0x8(%rsi)
  0x0000000115ea30fe: callq  0x0000000115ea3108
  0x0000000115ea3103: jmpq   0x0000000115ea3183
  0x0000000115ea3108: lea    0x8(%rsp),%rax
  0x0000000115ea310d: mov    %r13,-0x38(%rbp)
  0x0000000115ea3111: mov    %r15,%rdi
  0x0000000115ea3114: mov    %rbp,0x1e8(%r15)
  0x0000000115ea311b: mov    %rax,0x1d8(%r15)
  0x0000000115ea3122: test   $0xf,%esp
  0x0000000115ea3128: je     0x0000000115ea3140
  0x0000000115ea312e: sub    $0x8,%rsp
  0x0000000115ea3132: callq  0x000000010dae8608
  0x0000000115ea3137: add    $0x8,%rsp
  0x0000000115ea313b: jmpq   0x0000000115ea3145
  0x0000000115ea3140: callq  0x000000010dae8608
  0x0000000115ea3145: movabs $0x0,%r10
  0x0000000115ea314f: mov    %r10,0x1d8(%r15)
  0x0000000115ea3156: movabs $0x0,%r10
  0x0000000115ea3160: mov    %r10,0x1e8(%r15)
  0x0000000115ea3167: cmpq   $0x0,0x8(%r15)
  0x0000000115ea316f: je     0x0000000115ea317a
  0x0000000115ea3175: jmpq   0x0000000115e916e0
  0x0000000115ea317a: mov    -0x38(%rbp),%r13
  0x0000000115ea317e: mov    -0x30(%rbp),%r14
  0x0000000115ea3182: retq   
  0x0000000115ea3183: mov    -0x38(%rbp),%r13
  0x0000000115ea3187: mov    -0x40(%rbp),%rsi
  0x0000000115ea318b: lea    -0x40(%rbp),%rbx
  0x0000000115ea318f: jmpq   0x0000000115ea3273
  0x0000000115ea3194: mov    %r13,-0x38(%rbp)
  0x0000000115ea3198: lea    (%rsi),%rax
  0x0000000115ea319b: mov    0x8(%rsi),%rcx
  0x0000000115ea319f: movq   $0x0,0x8(%rsi)
  0x0000000115ea31a7: mov    (%rcx),%rdx
  0x0000000115ea31aa: and    $0x7,%rdx
  0x0000000115ea31ae: cmp    $0x5,%rdx
  0x0000000115ea31b2: je     0x0000000115ea3258
  0x0000000115ea31b8: mov    (%rax),%rdx
  0x0000000115ea31bb: test   %rdx,%rdx
  0x0000000115ea31be: je     0x0000000115ea3258
  0x0000000115ea31c4: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea31c9: je     0x0000000115ea3258
  0x0000000115ea31cf: mov    %rcx,0x8(%rsi)
  0x0000000115ea31d3: callq  0x0000000115ea31dd
  0x0000000115ea31d8: jmpq   0x0000000115ea3258
  0x0000000115ea31dd: lea    0x8(%rsp),%rax
  0x0000000115ea31e2: mov    %r13,-0x38(%rbp)
  0x0000000115ea31e6: mov    %r15,%rdi
  0x0000000115ea31e9: mov    %rbp,0x1e8(%r15)
  0x0000000115ea31f0: mov    %rax,0x1d8(%r15)
  0x0000000115ea31f7: test   $0xf,%esp
  0x0000000115ea31fd: je     0x0000000115ea3215
  0x0000000115ea3203: sub    $0x8,%rsp
  0x0000000115ea3207: callq  0x000000010dae8608
  0x0000000115ea320c: add    $0x8,%rsp
  0x0000000115ea3210: jmpq   0x0000000115ea321a
  0x0000000115ea3215: callq  0x000000010dae8608
  0x0000000115ea321a: movabs $0x0,%r10
  0x0000000115ea3224: mov    %r10,0x1d8(%r15)
  0x0000000115ea322b: movabs $0x0,%r10
  0x0000000115ea3235: mov    %r10,0x1e8(%r15)
  0x0000000115ea323c: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3244: je     0x0000000115ea324f
  0x0000000115ea324a: jmpq   0x0000000115e916e0
  0x0000000115ea324f: mov    -0x38(%rbp),%r13
  0x0000000115ea3253: mov    -0x30(%rbp),%r14
  0x0000000115ea3257: retq   
  0x0000000115ea3258: mov    -0x38(%rbp),%r13
  0x0000000115ea325c: jmpq   0x0000000115ea3187
  0x0000000115ea3261: cmpq   $0x0,0x8(%rsi)
  0x0000000115ea3269: jne    0x0000000115ea3194
  0x0000000115ea326f: add    $0x10,%rsi
  0x0000000115ea3273: cmp    %rbx,%rsi
  0x0000000115ea3276: jne    0x0000000115ea3261
  0x0000000115ea3278: cmpb   $0x0,-0x7dbbfb5(%rip)        # 0x000000010e0e72ca
  0x0000000115ea327f: je     0x0000000115ea32af
  0x0000000115ea3285: mov    -0x18(%rbp),%rsi
  0x0000000115ea3289: mov    %r15,%rdi
  0x0000000115ea328c: test   $0xf,%esp
  0x0000000115ea3292: je     0x0000000115ea32aa
  0x0000000115ea3298: sub    $0x8,%rsp
  0x0000000115ea329c: callq  0x000000010dce7696
  0x0000000115ea32a1: add    $0x8,%rsp
  0x0000000115ea32a5: jmpq   0x0000000115ea32af
  0x0000000115ea32aa: callq  0x000000010dce7696
  0x0000000115ea32af: mov    -0x8(%rbp),%rbx
  0x0000000115ea32b3: leaveq 
  0x0000000115ea32b4: pop    %rdx
  0x0000000115ea32b5: mov    %rbx,%rsp
  0x0000000115ea32b8: mov    %rsp,%rsi
  0x0000000115ea32bb: mov    -0x10(%rbp),%rdx
  0x0000000115ea32bf: mov    %rbp,0x1e8(%r15)
  0x0000000115ea32c6: movabs $0x115ea32bf,%r10
  0x0000000115ea32d0: mov    %r10,0x1e0(%r15)
  0x0000000115ea32d7: mov    %rsp,0x1d8(%r15)
  0x0000000115ea32de: mov    %r15,%rdi
  0x0000000115ea32e1: test   $0xf,%esp
  0x0000000115ea32e7: je     0x0000000115ea32ff
  0x0000000115ea32ed: sub    $0x8,%rsp
  0x0000000115ea32f1: callq  0x000000010dae5eee
  0x0000000115ea32f6: add    $0x8,%rsp
  0x0000000115ea32fa: jmpq   0x0000000115ea3304
  0x0000000115ea32ff: callq  0x000000010dae5eee
  0x0000000115ea3304: movabs $0x0,%r10
  0x0000000115ea330e: mov    %r10,0x1d8(%r15)
  0x0000000115ea3315: movabs $0x0,%r10
  0x0000000115ea331f: mov    %r10,0x1e8(%r15)
  0x0000000115ea3326: movabs $0x0,%r10
  0x0000000115ea3330: mov    %r10,0x1e0(%r15)
  0x0000000115ea3337: mov    -0x10(%rbp),%rsp
  0x0000000115ea333b: movq   $0x0,-0x10(%rbp)
  0x0000000115ea3343: mov    -0x38(%rbp),%r13
  0x0000000115ea3347: mov    -0x30(%rbp),%r14
  0x0000000115ea334b: push   %rax
  0x0000000115ea334c: push   %rbx
  0x0000000115ea334d: mov    -0x18(%rbp),%rbx
  0x0000000115ea3351: mov    0x10(%rbx),%rax
  0x0000000115ea3355: test   %rax,%rax
  0x0000000115ea3358: je     0x0000000115ea3395
  0x0000000115ea335e: mov    %r13,%rsi
  0x0000000115ea3361: mov    %rbx,%rdi
  0x0000000115ea3364: test   $0xf,%esp
  0x0000000115ea336a: je     0x0000000115ea3382
  0x0000000115ea3370: sub    $0x8,%rsp
  0x0000000115ea3374: callq  0x000000010dae706c
  0x0000000115ea3379: add    $0x8,%rsp
  0x0000000115ea337d: jmpq   0x0000000115ea3387
  0x0000000115ea3382: callq  0x000000010dae706c
  0x0000000115ea3387: mov    0x10(%rbx),%rbx
  0x0000000115ea338b: add    $0x100,%rbx
  0x0000000115ea3392: add    %rbx,%rax
  0x0000000115ea3395: mov    %rax,-0x20(%rbp)
  0x0000000115ea3399: pop    %rbx
  0x0000000115ea339a: pop    %rax
  0x0000000115ea339b: movl   $0x0,0x2d4(%r15)
  0x0000000115ea33a6: cmpb   $0xb8,0x0(%r13)
  0x0000000115ea33ab: jne    0x0000000115ea3467
  0x0000000115ea33b1: mov    -0x18(%rbp),%rdx
  0x0000000115ea33b5: mov    (%r14),%rax
  0x0000000115ea33b8: callq  0x0000000115ea33c2
  0x0000000115ea33bd: jmpq   0x0000000115ea345b
  0x0000000115ea33c2: mov    %r13,%rcx
  0x0000000115ea33c5: mov    %rax,%rsi
  0x0000000115ea33c8: lea    0x8(%rsp),%rax
  0x0000000115ea33cd: mov    %r13,-0x38(%rbp)
  0x0000000115ea33d1: mov    %r15,%rdi
  0x0000000115ea33d4: mov    %rbp,0x1e8(%r15)
  0x0000000115ea33db: mov    %rax,0x1d8(%r15)
  0x0000000115ea33e2: test   $0xf,%esp
  0x0000000115ea33e8: je     0x0000000115ea3400
  0x0000000115ea33ee: sub    $0x8,%rsp
  0x0000000115ea33f2: callq  0x000000010dae5de2
  0x0000000115ea33f7: add    $0x8,%rsp
  0x0000000115ea33fb: jmpq   0x0000000115ea3405
  0x0000000115ea3400: callq  0x000000010dae5de2
  0x0000000115ea3405: movabs $0x0,%r10
  0x0000000115ea340f: mov    %r10,0x1d8(%r15)
  0x0000000115ea3416: movabs $0x0,%r10
  0x0000000115ea3420: mov    %r10,0x1e8(%r15)
  0x0000000115ea3427: cmpq   $0x0,0x8(%r15)
  0x0000000115ea342f: je     0x0000000115ea343a
  0x0000000115ea3435: jmpq   0x0000000115e916e0
  0x0000000115ea343a: mov    0x238(%r15),%rax
  0x0000000115ea3441: movabs $0x0,%r10
  0x0000000115ea344b: mov    %r10,0x238(%r15)
  0x0000000115ea3452: mov    -0x38(%rbp),%r13
  0x0000000115ea3456: mov    -0x30(%rbp),%r14
  0x0000000115ea345a: retq   
  0x0000000115ea345b: test   %rax,%rax
  0x0000000115ea345e: je     0x0000000115ea3467
  0x0000000115ea3464: mov    %rax,(%rbx)
  0x0000000115ea3467: movzbl 0x0(%r13),%ebx
  0x0000000115ea346c: movabs $0x10e101840,%r10
  0x0000000115ea3476: jmpq   *(%r10,%rbx,8)
  0x0000000115ea347a: pop    %rax
  0x0000000115ea347b: mov    %rax,0x238(%r15)
  0x0000000115ea3482: mov    0x295(%r15),%dl
  0x0000000115ea3489: movb   $0x0,0x295(%r15)
  0x0000000115ea3491: mov    -0x18(%rbp),%rbx
  0x0000000115ea3495: mov    0x20(%rbx),%ecx
  0x0000000115ea3498: test   $0x20,%ecx
  0x0000000115ea349e: je     0x0000000115ea3610
  0x0000000115ea34a4: test   $0xff,%dl
  0x0000000115ea34a7: jne    0x0000000115ea3786
  0x0000000115ea34ad: lea    -0x50(%rbp),%rsi
  0x0000000115ea34b1: mov    0x8(%rsi),%rax
  0x0000000115ea34b5: test   %rax,%rax
  0x0000000115ea34b8: jne    0x0000000115ea3548
  0x0000000115ea34be: callq  0x0000000115ea34c8
  0x0000000115ea34c3: jmpq   0x0000000115ea3543
  0x0000000115ea34c8: lea    0x8(%rsp),%rax
  0x0000000115ea34cd: mov    %r13,-0x38(%rbp)
  0x0000000115ea34d1: mov    %r15,%rdi
  0x0000000115ea34d4: mov    %rbp,0x1e8(%r15)
  0x0000000115ea34db: mov    %rax,0x1d8(%r15)
  0x0000000115ea34e2: test   $0xf,%esp
  0x0000000115ea34e8: je     0x0000000115ea3500
  0x0000000115ea34ee: sub    $0x8,%rsp
  0x0000000115ea34f2: callq  0x000000010dae8402
  0x0000000115ea34f7: add    $0x8,%rsp
  0x0000000115ea34fb: jmpq   0x0000000115ea3505
  0x0000000115ea3500: callq  0x000000010dae8402
  0x0000000115ea3505: movabs $0x0,%r10
  0x0000000115ea350f: mov    %r10,0x1d8(%r15)
  0x0000000115ea3516: movabs $0x0,%r10
  0x0000000115ea3520: mov    %r10,0x1e8(%r15)
  0x0000000115ea3527: cmpq   $0x0,0x8(%r15)
  0x0000000115ea352f: je     0x0000000115ea353a
  0x0000000115ea3535: jmpq   0x0000000115e916e0
  0x0000000115ea353a: mov    -0x38(%rbp),%r13
  0x0000000115ea353e: mov    -0x30(%rbp),%r14
  0x0000000115ea3542: retq   
  0x0000000115ea3543: jmpq   0x0000000115ea3610
  0x0000000115ea3548: mov    %r13,-0x38(%rbp)
  0x0000000115ea354c: lea    (%rsi),%rax
  0x0000000115ea354f: mov    0x8(%rsi),%rcx
  0x0000000115ea3553: movq   $0x0,0x8(%rsi)
  0x0000000115ea355b: mov    (%rcx),%rdx
  0x0000000115ea355e: and    $0x7,%rdx
  0x0000000115ea3562: cmp    $0x5,%rdx
  0x0000000115ea3566: je     0x0000000115ea360c
  0x0000000115ea356c: mov    (%rax),%rdx
  0x0000000115ea356f: test   %rdx,%rdx
  0x0000000115ea3572: je     0x0000000115ea360c
  0x0000000115ea3578: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea357d: je     0x0000000115ea360c
  0x0000000115ea3583: mov    %rcx,0x8(%rsi)
  0x0000000115ea3587: callq  0x0000000115ea3591
  0x0000000115ea358c: jmpq   0x0000000115ea360c
  0x0000000115ea3591: lea    0x8(%rsp),%rax
  0x0000000115ea3596: mov    %r13,-0x38(%rbp)
  0x0000000115ea359a: mov    %r15,%rdi
  0x0000000115ea359d: mov    %rbp,0x1e8(%r15)
  0x0000000115ea35a4: mov    %rax,0x1d8(%r15)
  0x0000000115ea35ab: test   $0xf,%esp
  0x0000000115ea35b1: je     0x0000000115ea35c9
  0x0000000115ea35b7: sub    $0x8,%rsp
  0x0000000115ea35bb: callq  0x000000010dae8608
  0x0000000115ea35c0: add    $0x8,%rsp
  0x0000000115ea35c4: jmpq   0x0000000115ea35ce
  0x0000000115ea35c9: callq  0x000000010dae8608
  0x0000000115ea35ce: movabs $0x0,%r10
  0x0000000115ea35d8: mov    %r10,0x1d8(%r15)
  0x0000000115ea35df: movabs $0x0,%r10
  0x0000000115ea35e9: mov    %r10,0x1e8(%r15)
  0x0000000115ea35f0: cmpq   $0x0,0x8(%r15)
  0x0000000115ea35f8: je     0x0000000115ea3603
  0x0000000115ea35fe: jmpq   0x0000000115e916e0
  0x0000000115ea3603: mov    -0x38(%rbp),%r13
  0x0000000115ea3607: mov    -0x30(%rbp),%r14
  0x0000000115ea360b: retq   
  0x0000000115ea360c: mov    -0x38(%rbp),%r13
  0x0000000115ea3610: mov    -0x40(%rbp),%rsi
  0x0000000115ea3614: lea    -0x40(%rbp),%rbx
  0x0000000115ea3618: jmpq   0x0000000115ea3781
  0x0000000115ea361d: mov    %r13,-0x38(%rbp)
  0x0000000115ea3621: lea    (%rsi),%rax
  0x0000000115ea3624: mov    0x8(%rsi),%rcx
  0x0000000115ea3628: movq   $0x0,0x8(%rsi)
  0x0000000115ea3630: mov    (%rcx),%rdx
  0x0000000115ea3633: and    $0x7,%rdx
  0x0000000115ea3637: cmp    $0x5,%rdx
  0x0000000115ea363b: je     0x0000000115ea36e1
  0x0000000115ea3641: mov    (%rax),%rdx
  0x0000000115ea3644: test   %rdx,%rdx
  0x0000000115ea3647: je     0x0000000115ea36e1
  0x0000000115ea364d: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea3652: je     0x0000000115ea36e1
  0x0000000115ea3658: mov    %rcx,0x8(%rsi)
  0x0000000115ea365c: callq  0x0000000115ea3666
  0x0000000115ea3661: jmpq   0x0000000115ea36e1
  0x0000000115ea3666: lea    0x8(%rsp),%rax
  0x0000000115ea366b: mov    %r13,-0x38(%rbp)
  0x0000000115ea366f: mov    %r15,%rdi
  0x0000000115ea3672: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3679: mov    %rax,0x1d8(%r15)
  0x0000000115ea3680: test   $0xf,%esp
  0x0000000115ea3686: je     0x0000000115ea369e
  0x0000000115ea368c: sub    $0x8,%rsp
  0x0000000115ea3690: callq  0x000000010dae8608
  0x0000000115ea3695: add    $0x8,%rsp
  0x0000000115ea3699: jmpq   0x0000000115ea36a3
  0x0000000115ea369e: callq  0x000000010dae8608
  0x0000000115ea36a3: movabs $0x0,%r10
  0x0000000115ea36ad: mov    %r10,0x1d8(%r15)
  0x0000000115ea36b4: movabs $0x0,%r10
  0x0000000115ea36be: mov    %r10,0x1e8(%r15)
  0x0000000115ea36c5: cmpq   $0x0,0x8(%r15)
  0x0000000115ea36cd: je     0x0000000115ea36d8
  0x0000000115ea36d3: jmpq   0x0000000115e916e0
  0x0000000115ea36d8: mov    -0x38(%rbp),%r13
  0x0000000115ea36dc: mov    -0x30(%rbp),%r14
  0x0000000115ea36e0: retq   
  0x0000000115ea36e1: mov    -0x38(%rbp),%r13
  0x0000000115ea36e5: callq  0x0000000115ea36ef
  0x0000000115ea36ea: jmpq   0x0000000115ea376a
  0x0000000115ea36ef: lea    0x8(%rsp),%rax
  0x0000000115ea36f4: mov    %r13,-0x38(%rbp)
  0x0000000115ea36f8: mov    %r15,%rdi
  0x0000000115ea36fb: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3702: mov    %rax,0x1d8(%r15)
  0x0000000115ea3709: test   $0xf,%esp
  0x0000000115ea370f: je     0x0000000115ea3727
  0x0000000115ea3715: sub    $0x8,%rsp
  0x0000000115ea3719: callq  0x000000010dae8402
  0x0000000115ea371e: add    $0x8,%rsp
  0x0000000115ea3722: jmpq   0x0000000115ea372c
  0x0000000115ea3727: callq  0x000000010dae8402
  0x0000000115ea372c: movabs $0x0,%r10
  0x0000000115ea3736: mov    %r10,0x1d8(%r15)
  0x0000000115ea373d: movabs $0x0,%r10
  0x0000000115ea3747: mov    %r10,0x1e8(%r15)
  0x0000000115ea374e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3756: je     0x0000000115ea3761
  0x0000000115ea375c: jmpq   0x0000000115e916e0
  0x0000000115ea3761: mov    -0x38(%rbp),%r13
  0x0000000115ea3765: mov    -0x30(%rbp),%r14
  0x0000000115ea3769: retq   
  0x0000000115ea376a: jmpq   0x0000000115ea3610
  0x0000000115ea376f: cmpq   $0x0,0x8(%rsi)
  0x0000000115ea3777: jne    0x0000000115ea361d
  0x0000000115ea377d: add    $0x10,%rsi
  0x0000000115ea3781: cmp    %rbx,%rsi
  0x0000000115ea3784: jne    0x0000000115ea376f
  0x0000000115ea3786: cmpb   $0x0,-0x7dbc4c3(%rip)        # 0x000000010e0e72ca
  0x0000000115ea378d: je     0x0000000115ea37bd
  0x0000000115ea3793: mov    -0x18(%rbp),%rsi
  0x0000000115ea3797: mov    %r15,%rdi
  0x0000000115ea379a: test   $0xf,%esp
  0x0000000115ea37a0: je     0x0000000115ea37b8
  0x0000000115ea37a6: sub    $0x8,%rsp
  0x0000000115ea37aa: callq  0x000000010dce7696
  0x0000000115ea37af: add    $0x8,%rsp
  0x0000000115ea37b3: jmpq   0x0000000115ea37bd
  0x0000000115ea37b8: callq  0x000000010dce7696
  0x0000000115ea37bd: mov    -0x8(%rbp),%rbx
  0x0000000115ea37c1: leaveq 
  0x0000000115ea37c2: pop    %rdx
  0x0000000115ea37c3: mov    %rbx,%rsp
  0x0000000115ea37c6: mov    0x238(%r15),%rax
  0x0000000115ea37cd: movabs $0x0,%r10
  0x0000000115ea37d7: mov    %r10,0x238(%r15)
  0x0000000115ea37de: push   %rax
  0x0000000115ea37df: push   %rdx
  0x0000000115ea37e0: mov    %rdx,%rsi
  0x0000000115ea37e3: mov    %r15,%rdi
  0x0000000115ea37e6: test   $0xf,%esp
  0x0000000115ea37ec: je     0x0000000115ea3804
  0x0000000115ea37f2: sub    $0x8,%rsp
  0x0000000115ea37f6: callq  0x000000010dce8686
  0x0000000115ea37fb: add    $0x8,%rsp
  0x0000000115ea37ff: jmpq   0x0000000115ea3809
  0x0000000115ea3804: callq  0x000000010dce8686
  0x0000000115ea3809: mov    %rax,%rbx
  0x0000000115ea380c: pop    %rdx
  0x0000000115ea380d: pop    %rax
  0x0000000115ea380e: jmpq   *%rbx
  0x0000000115ea3810: add    %al,(%rax)
  0x0000000115ea3812: add    %al,(%rax)
  0x0000000115ea3814: add    %al,(%rax)
  0x0000000115ea3816: add    %al,(%rax)
  0x0000000115ea3818: add    %al,(%rax)
  0x0000000115ea381a: add    %al,(%rax)
  0x0000000115ea381c: add    %al,(%rax)
  0x0000000115ea381e: add    %al,(%rax)

----------------------------------------------------------------------
throw exception entrypoints  [0x0000000115ea3840, 0x0000000115ea3c60]  1056 bytes

  0x0000000115ea3840: mov    -0x40(%rbp),%rsp
  0x0000000115ea3844: movq   $0x0,-0x10(%rbp)
  0x0000000115ea384c: movabs $0x10de19315,%rsi
  0x0000000115ea3856: callq  0x0000000115ea3860
  0x0000000115ea385b: jmpq   0x0000000115ea38de
  0x0000000115ea3860: mov    %rbx,%rdx
  0x0000000115ea3863: lea    0x8(%rsp),%rax
  0x0000000115ea3868: mov    %r13,-0x38(%rbp)
  0x0000000115ea386c: mov    %r15,%rdi
  0x0000000115ea386f: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3876: mov    %rax,0x1d8(%r15)
  0x0000000115ea387d: test   $0xf,%esp
  0x0000000115ea3883: je     0x0000000115ea389b
  0x0000000115ea3889: sub    $0x8,%rsp
  0x0000000115ea388d: callq  0x000000010dae8f04
  0x0000000115ea3892: add    $0x8,%rsp
  0x0000000115ea3896: jmpq   0x0000000115ea38a0
  0x0000000115ea389b: callq  0x000000010dae8f04
  0x0000000115ea38a0: movabs $0x0,%r10
  0x0000000115ea38aa: mov    %r10,0x1d8(%r15)
  0x0000000115ea38b1: movabs $0x0,%r10
  0x0000000115ea38bb: mov    %r10,0x1e8(%r15)
  0x0000000115ea38c2: cmpq   $0x0,0x8(%r15)
  0x0000000115ea38ca: je     0x0000000115ea38d5
  0x0000000115ea38d0: jmpq   0x0000000115e916e0
  0x0000000115ea38d5: mov    -0x38(%rbp),%r13
  0x0000000115ea38d9: mov    -0x30(%rbp),%r14
  0x0000000115ea38dd: retq   
  0x0000000115ea38de: pop    %rdx
  0x0000000115ea38df: mov    -0x40(%rbp),%rsp
  0x0000000115ea38e3: movq   $0x0,-0x10(%rbp)
  0x0000000115ea38eb: movabs $0x10de1933e,%rsi
  0x0000000115ea38f5: callq  0x0000000115ea38ff
  0x0000000115ea38fa: jmpq   0x0000000115ea3992
  0x0000000115ea38ff: lea    0x8(%rsp),%rax
  0x0000000115ea3904: mov    %r13,-0x38(%rbp)
  0x0000000115ea3908: mov    %r15,%rdi
  0x0000000115ea390b: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3912: mov    %rax,0x1d8(%r15)
  0x0000000115ea3919: test   $0xf,%esp
  0x0000000115ea391f: je     0x0000000115ea3937
  0x0000000115ea3925: sub    $0x8,%rsp
  0x0000000115ea3929: callq  0x000000010dae8fe0
  0x0000000115ea392e: add    $0x8,%rsp
  0x0000000115ea3932: jmpq   0x0000000115ea393c
  0x0000000115ea3937: callq  0x000000010dae8fe0
  0x0000000115ea393c: movabs $0x0,%r10
  0x0000000115ea3946: mov    %r10,0x1d8(%r15)
  0x0000000115ea394d: movabs $0x0,%r10
  0x0000000115ea3957: mov    %r10,0x1e8(%r15)
  0x0000000115ea395e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3966: je     0x0000000115ea3971
  0x0000000115ea396c: jmpq   0x0000000115e916e0
  0x0000000115ea3971: mov    0x238(%r15),%rax
  0x0000000115ea3978: movabs $0x0,%r10
  0x0000000115ea3982: mov    %r10,0x238(%r15)
  0x0000000115ea3989: mov    -0x38(%rbp),%r13
  0x0000000115ea398d: mov    -0x30(%rbp),%r14
  0x0000000115ea3991: retq   
  0x0000000115ea3992: jmpq   0x0000000115ea2cf3
  0x0000000115ea3997: mov    -0x40(%rbp),%rsp
  0x0000000115ea399b: movq   $0x0,-0x10(%rbp)
  0x0000000115ea39a3: movabs $0x10de1935c,%rsi
  0x0000000115ea39ad: movabs $0x10ddd8c05,%rdx
  0x0000000115ea39b7: callq  0x0000000115ea39c1
  0x0000000115ea39bc: jmpq   0x0000000115ea3a54
  0x0000000115ea39c1: lea    0x8(%rsp),%rax
  0x0000000115ea39c6: mov    %r13,-0x38(%rbp)
  0x0000000115ea39ca: mov    %r15,%rdi
  0x0000000115ea39cd: mov    %rbp,0x1e8(%r15)
  0x0000000115ea39d4: mov    %rax,0x1d8(%r15)
  0x0000000115ea39db: test   $0xf,%esp
  0x0000000115ea39e1: je     0x0000000115ea39f9
  0x0000000115ea39e7: sub    $0x8,%rsp
  0x0000000115ea39eb: callq  0x000000010dae90ea
  0x0000000115ea39f0: add    $0x8,%rsp
  0x0000000115ea39f4: jmpq   0x0000000115ea39fe
  0x0000000115ea39f9: callq  0x000000010dae90ea
  0x0000000115ea39fe: movabs $0x0,%r10
  0x0000000115ea3a08: mov    %r10,0x1d8(%r15)
  0x0000000115ea3a0f: movabs $0x0,%r10
  0x0000000115ea3a19: mov    %r10,0x1e8(%r15)
  0x0000000115ea3a20: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3a28: je     0x0000000115ea3a33
  0x0000000115ea3a2e: jmpq   0x0000000115e916e0
  0x0000000115ea3a33: mov    0x238(%r15),%rax
  0x0000000115ea3a3a: movabs $0x0,%r10
  0x0000000115ea3a44: mov    %r10,0x238(%r15)
  0x0000000115ea3a4b: mov    -0x38(%rbp),%r13
  0x0000000115ea3a4f: mov    -0x30(%rbp),%r14
  0x0000000115ea3a53: retq   
  0x0000000115ea3a54: jmpq   0x0000000115ea2cf3
  0x0000000115ea3a59: pop    %rsi
  0x0000000115ea3a5a: mov    -0x40(%rbp),%rsp
  0x0000000115ea3a5e: movq   $0x0,-0x10(%rbp)
  0x0000000115ea3a66: callq  0x0000000115ea3a70
  0x0000000115ea3a6b: jmpq   0x0000000115ea3aeb
  0x0000000115ea3a70: lea    0x8(%rsp),%rax
  0x0000000115ea3a75: mov    %r13,-0x38(%rbp)
  0x0000000115ea3a79: mov    %r15,%rdi
  0x0000000115ea3a7c: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3a83: mov    %rax,0x1d8(%r15)
  0x0000000115ea3a8a: test   $0xf,%esp
  0x0000000115ea3a90: je     0x0000000115ea3aa8
  0x0000000115ea3a96: sub    $0x8,%rsp
  0x0000000115ea3a9a: callq  0x000000010dae8e20
  0x0000000115ea3a9f: add    $0x8,%rsp
  0x0000000115ea3aa3: jmpq   0x0000000115ea3aad
  0x0000000115ea3aa8: callq  0x000000010dae8e20
  0x0000000115ea3aad: movabs $0x0,%r10
  0x0000000115ea3ab7: mov    %r10,0x1d8(%r15)
  0x0000000115ea3abe: movabs $0x0,%r10
  0x0000000115ea3ac8: mov    %r10,0x1e8(%r15)
  0x0000000115ea3acf: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3ad7: je     0x0000000115ea3ae2
  0x0000000115ea3add: jmpq   0x0000000115e916e0
  0x0000000115ea3ae2: mov    -0x38(%rbp),%r13
  0x0000000115ea3ae6: mov    -0x30(%rbp),%r14
  0x0000000115ea3aea: retq   
  0x0000000115ea3aeb: mov    -0x40(%rbp),%rsp
  0x0000000115ea3aef: movq   $0x0,-0x10(%rbp)
  0x0000000115ea3af7: movabs $0x10de1937a,%rsi
  0x0000000115ea3b01: movabs $0x0,%rdx
  0x0000000115ea3b0b: callq  0x0000000115ea3b15
  0x0000000115ea3b10: jmpq   0x0000000115ea3ba8
  0x0000000115ea3b15: lea    0x8(%rsp),%rax
  0x0000000115ea3b1a: mov    %r13,-0x38(%rbp)
  0x0000000115ea3b1e: mov    %r15,%rdi
  0x0000000115ea3b21: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3b28: mov    %rax,0x1d8(%r15)
  0x0000000115ea3b2f: test   $0xf,%esp
  0x0000000115ea3b35: je     0x0000000115ea3b4d
  0x0000000115ea3b3b: sub    $0x8,%rsp
  0x0000000115ea3b3f: callq  0x000000010dae90ea
  0x0000000115ea3b44: add    $0x8,%rsp
  0x0000000115ea3b48: jmpq   0x0000000115ea3b52
  0x0000000115ea3b4d: callq  0x000000010dae90ea
  0x0000000115ea3b52: movabs $0x0,%r10
  0x0000000115ea3b5c: mov    %r10,0x1d8(%r15)
  0x0000000115ea3b63: movabs $0x0,%r10
  0x0000000115ea3b6d: mov    %r10,0x1e8(%r15)
  0x0000000115ea3b74: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3b7c: je     0x0000000115ea3b87
  0x0000000115ea3b82: jmpq   0x0000000115e916e0
  0x0000000115ea3b87: mov    0x238(%r15),%rax
  0x0000000115ea3b8e: movabs $0x0,%r10
  0x0000000115ea3b98: mov    %r10,0x238(%r15)
  0x0000000115ea3b9f: mov    -0x38(%rbp),%r13
  0x0000000115ea3ba3: mov    -0x30(%rbp),%r14
  0x0000000115ea3ba7: retq   
  0x0000000115ea3ba8: jmpq   0x0000000115ea2cf3
  0x0000000115ea3bad: mov    -0x38(%rbp),%r13
  0x0000000115ea3bb1: mov    -0x40(%rbp),%rsp
  0x0000000115ea3bb5: movq   $0x0,-0x10(%rbp)
  0x0000000115ea3bbd: callq  0x0000000115ea3bc7
  0x0000000115ea3bc2: jmpq   0x0000000115ea3c42
  0x0000000115ea3bc7: lea    0x8(%rsp),%rax
  0x0000000115ea3bcc: mov    %r13,-0x38(%rbp)
  0x0000000115ea3bd0: mov    %r15,%rdi
  0x0000000115ea3bd3: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3bda: mov    %rax,0x1d8(%r15)
  0x0000000115ea3be1: test   $0xf,%esp
  0x0000000115ea3be7: je     0x0000000115ea3bff
  0x0000000115ea3bed: sub    $0x8,%rsp
  0x0000000115ea3bf1: callq  0x000000010dae8b74
  0x0000000115ea3bf6: add    $0x8,%rsp
  0x0000000115ea3bfa: jmpq   0x0000000115ea3c04
  0x0000000115ea3bff: callq  0x000000010dae8b74
  0x0000000115ea3c04: movabs $0x0,%r10
  0x0000000115ea3c0e: mov    %r10,0x1d8(%r15)
  0x0000000115ea3c15: movabs $0x0,%r10
  0x0000000115ea3c1f: mov    %r10,0x1e8(%r15)
  0x0000000115ea3c26: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3c2e: je     0x0000000115ea3c39
  0x0000000115ea3c34: jmpq   0x0000000115e916e0
  0x0000000115ea3c39: mov    -0x38(%rbp),%r13
  0x0000000115ea3c3d: mov    -0x30(%rbp),%r14
  0x0000000115ea3c41: retq   
  0x0000000115ea3c42: nopw   0x0(%rax,%rax,1)
  0x0000000115ea3c48: add    %al,(%rax)
  0x0000000115ea3c4a: add    %al,(%rax)
  0x0000000115ea3c4c: add    %al,(%rax)
  0x0000000115ea3c4e: add    %al,(%rax)
  0x0000000115ea3c50: add    %al,(%rax)
  0x0000000115ea3c52: add    %al,(%rax)
  0x0000000115ea3c54: add    %al,(%rax)
  0x0000000115ea3c56: add    %al,(%rax)
  0x0000000115ea3c58: add    %al,(%rax)
  0x0000000115ea3c5a: add    %al,(%rax)
  0x0000000115ea3c5c: add    %al,(%rax)
  0x0000000115ea3c5e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = zerolocals)  [0x0000000115ea3c80, 0x0000000115ea4100]  1152 bytes

  0x0000000115ea3c80: mov    0x8(%rbx),%rdx
  0x0000000115ea3c84: movzwl 0x2c(%rdx),%ecx
  0x0000000115ea3c88: movzwl 0x2a(%rdx),%edx
  0x0000000115ea3c8c: sub    %ecx,%edx
  0x0000000115ea3c8e: cmp    $0x1f6,%edx
  0x0000000115ea3c94: jbe    0x0000000115ea3ccd
  0x0000000115ea3c9a: mov    %rdx,%rax
  0x0000000115ea3c9d: shl    $0x3,%rax
  0x0000000115ea3ca1: add    $0x50,%rax
  0x0000000115ea3ca5: add    0x148(%r15),%rax
  0x0000000115ea3cac: sub    0x150(%r15),%rax
  0x0000000115ea3cb3: add    $0x14000,%rax
  0x0000000115ea3cba: cmp    %rax,%rsp
  0x0000000115ea3cbd: ja     0x0000000115ea3ccd
  0x0000000115ea3cc3: pop    %rax
  0x0000000115ea3cc4: mov    %r13,%rsp
  0x0000000115ea3cc7: push   %rax
  0x0000000115ea3cc8: jmpq   0x0000000115e96520
  0x0000000115ea3ccd: pop    %rax
  0x0000000115ea3cce: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea3cd3: test   %edx,%edx
  0x0000000115ea3cd5: jle    0x0000000115ea3ce4
  0x0000000115ea3cdb: pushq  $0x0
  0x0000000115ea3ce0: dec    %edx
  0x0000000115ea3ce2: jg     0x0000000115ea3cdb
  0x0000000115ea3ce4: push   %rax
  0x0000000115ea3ce5: push   %rbp
  0x0000000115ea3ce6: mov    %rsp,%rbp
  0x0000000115ea3ce9: push   %r13
  0x0000000115ea3ceb: pushq  $0x0
  0x0000000115ea3cf0: mov    0x8(%rbx),%r13
  0x0000000115ea3cf4: lea    0x30(%r13),%r13
  0x0000000115ea3cf8: push   %rbx
  0x0000000115ea3cf9: mov    0x10(%rbx),%rdx
  0x0000000115ea3cfd: test   %rdx,%rdx
  0x0000000115ea3d00: je     0x0000000115ea3d0d
  0x0000000115ea3d06: add    $0x100,%rdx
  0x0000000115ea3d0d: push   %rdx
  0x0000000115ea3d0e: mov    0x8(%rbx),%rdx
  0x0000000115ea3d12: mov    0x8(%rdx),%rdx
  0x0000000115ea3d16: mov    0x10(%rdx),%rdx
  0x0000000115ea3d1a: push   %rdx
  0x0000000115ea3d1b: push   %r14
  0x0000000115ea3d1d: push   %r13
  0x0000000115ea3d1f: pushq  $0x0
  0x0000000115ea3d24: mov    %rsp,(%rsp)
  0x0000000115ea3d28: movb   $0x1,0x295(%r15)
  0x0000000115ea3d30: mov    -0x20(%rbp),%rax
  0x0000000115ea3d34: test   %rax,%rax
  0x0000000115ea3d37: je     0x0000000115ea3dc7
  0x0000000115ea3d3d: mov    -0x4(%rax),%ecx
  0x0000000115ea3d40: test   %ecx,%ecx
  0x0000000115ea3d42: js     0x0000000115ea3dc7
  0x0000000115ea3d48: add    %rcx,%rax
  0x0000000115ea3d4b: mov    0x8(%rax),%rcx
  0x0000000115ea3d4f: sub    $0x2,%rcx
  0x0000000115ea3d53: mov    0x10(%rax,%rcx,8),%rdx
  0x0000000115ea3d58: neg    %rdx
  0x0000000115ea3d5b: mov    (%r14,%rdx,8),%rdx
  0x0000000115ea3d5f: test   %rdx,%rdx
  0x0000000115ea3d62: jne    0x0000000115ea3d6f
  0x0000000115ea3d64: orq    $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea3d6d: jmp    0x0000000115ea3dc1
  0x0000000115ea3d6f: mov    0x8(%rdx),%edx
  0x0000000115ea3d72: shl    $0x3,%rdx
  0x0000000115ea3d76: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea3d7b: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea3d82: je     0x0000000115ea3dc1
  0x0000000115ea3d84: test   $0x2,%rdx
  0x0000000115ea3d8b: jne    0x0000000115ea3dc1
  0x0000000115ea3d8d: cmpq   $0x0,0x18(%rax,%rcx,8)
  0x0000000115ea3d96: je     0x0000000115ea3dbc
  0x0000000115ea3d98: cmpq   $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea3da1: je     0x0000000115ea3dbc
  0x0000000115ea3da3: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea3da8: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea3daf: je     0x0000000115ea3dc1
  0x0000000115ea3db1: orq    $0x2,0x18(%rax,%rcx,8)
  0x0000000115ea3dba: jmp    0x0000000115ea3dc1
  0x0000000115ea3dbc: mov    %rdx,0x18(%rax,%rcx,8)
  0x0000000115ea3dc1: sub    $0x2,%rcx
  0x0000000115ea3dc5: jns    0x0000000115ea3d53
  0x0000000115ea3dc7: mov    0x10(%rbx),%rax
  0x0000000115ea3dcb: test   %rax,%rax
  0x0000000115ea3dce: je     0x0000000115ea3df0
  0x0000000115ea3dd0: mov    0xdc(%rax),%ecx
  0x0000000115ea3dd6: add    $0x8,%ecx
  0x0000000115ea3dd9: mov    %ecx,0xdc(%rax)
  0x0000000115ea3ddf: and    $0x3f8,%ecx
  0x0000000115ea3de5: je     0x0000000115ea4063
  0x0000000115ea3deb: jmpq   0x0000000115ea3ea7
  0x0000000115ea3df0: mov    0x18(%rbx),%rax
  0x0000000115ea3df4: test   %rax,%rax
  0x0000000115ea3df7: jne    0x0000000115ea3e92
  0x0000000115ea3dfd: callq  0x0000000115ea3e07
  0x0000000115ea3e02: jmpq   0x0000000115ea3e85
  0x0000000115ea3e07: mov    %rbx,%rsi
  0x0000000115ea3e0a: lea    0x8(%rsp),%rax
  0x0000000115ea3e0f: mov    %r13,-0x38(%rbp)
  0x0000000115ea3e13: mov    %r15,%rdi
  0x0000000115ea3e16: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3e1d: mov    %rax,0x1d8(%r15)
  0x0000000115ea3e24: test   $0xf,%esp
  0x0000000115ea3e2a: je     0x0000000115ea3e42
  0x0000000115ea3e30: sub    $0x8,%rsp
  0x0000000115ea3e34: callq  0x000000010dae6d98
  0x0000000115ea3e39: add    $0x8,%rsp
  0x0000000115ea3e3d: jmpq   0x0000000115ea3e47
  0x0000000115ea3e42: callq  0x000000010dae6d98
  0x0000000115ea3e47: movabs $0x0,%r10
  0x0000000115ea3e51: mov    %r10,0x1d8(%r15)
  0x0000000115ea3e58: movabs $0x0,%r10
  0x0000000115ea3e62: mov    %r10,0x1e8(%r15)
  0x0000000115ea3e69: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3e71: je     0x0000000115ea3e7c
  0x0000000115ea3e77: jmpq   0x0000000115e916e0
  0x0000000115ea3e7c: mov    -0x38(%rbp),%r13
  0x0000000115ea3e80: mov    -0x30(%rbp),%r14
  0x0000000115ea3e84: retq   
  0x0000000115ea3e85: mov    0x18(%rbx),%rax
  0x0000000115ea3e89: test   %rax,%rax
  0x0000000115ea3e8c: je     0x0000000115ea3ea7
  0x0000000115ea3e92: mov    0x8(%rax),%ecx
  0x0000000115ea3e95: add    $0x8,%ecx
  0x0000000115ea3e98: mov    %ecx,0x8(%rax)
  0x0000000115ea3e9b: and    $0x3f8,%ecx
  0x0000000115ea3ea1: je     0x0000000115ea4063
  0x0000000115ea3ea7: mov    %eax,-0x1000(%rsp)
  0x0000000115ea3eae: mov    %eax,-0x2000(%rsp)
  0x0000000115ea3eb5: mov    %eax,-0x3000(%rsp)
  0x0000000115ea3ebc: mov    %eax,-0x4000(%rsp)
  0x0000000115ea3ec3: mov    %eax,-0x5000(%rsp)
  0x0000000115ea3eca: mov    %eax,-0x6000(%rsp)
  0x0000000115ea3ed1: mov    %eax,-0x7000(%rsp)
  0x0000000115ea3ed8: mov    %eax,-0x8000(%rsp)
  0x0000000115ea3edf: mov    %eax,-0x9000(%rsp)
  0x0000000115ea3ee6: mov    %eax,-0xa000(%rsp)
  0x0000000115ea3eed: mov    %eax,-0xb000(%rsp)
  0x0000000115ea3ef4: mov    %eax,-0xc000(%rsp)
  0x0000000115ea3efb: mov    %eax,-0xd000(%rsp)
  0x0000000115ea3f02: mov    %eax,-0xe000(%rsp)
  0x0000000115ea3f09: mov    %eax,-0xf000(%rsp)
  0x0000000115ea3f10: mov    %eax,-0x10000(%rsp)
  0x0000000115ea3f17: mov    %eax,-0x11000(%rsp)
  0x0000000115ea3f1e: mov    %eax,-0x12000(%rsp)
  0x0000000115ea3f25: mov    %eax,-0x13000(%rsp)
  0x0000000115ea3f2c: mov    %eax,-0x14000(%rsp)
  0x0000000115ea3f33: movb   $0x0,0x295(%r15)
  0x0000000115ea3f3b: cmpb   $0x0,-0x7dbcc78(%rip)        # 0x000000010e0e72ca
  0x0000000115ea3f42: je     0x0000000115ea3f72
  0x0000000115ea3f48: mov    -0x18(%rbp),%rsi
  0x0000000115ea3f4c: mov    %r15,%rdi
  0x0000000115ea3f4f: test   $0xf,%esp
  0x0000000115ea3f55: je     0x0000000115ea3f6d
  0x0000000115ea3f5b: sub    $0x8,%rsp
  0x0000000115ea3f5f: callq  0x000000010dce7724
  0x0000000115ea3f64: add    $0x8,%rsp
  0x0000000115ea3f68: jmpq   0x0000000115ea3f72
  0x0000000115ea3f6d: callq  0x000000010dce7724
  0x0000000115ea3f72: movzbl 0x0(%r13),%ebx
  0x0000000115ea3f77: movabs $0x10e101840,%r10
  0x0000000115ea3f81: jmpq   *(%r10,%rbx,8)
  0x0000000115ea3f85: callq  0x0000000115ea3f8f
  0x0000000115ea3f8a: jmpq   0x0000000115ea400a
  0x0000000115ea3f8f: lea    0x8(%rsp),%rax
  0x0000000115ea3f94: mov    %r13,-0x38(%rbp)
  0x0000000115ea3f98: mov    %r15,%rdi
  0x0000000115ea3f9b: mov    %rbp,0x1e8(%r15)
  0x0000000115ea3fa2: mov    %rax,0x1d8(%r15)
  0x0000000115ea3fa9: test   $0xf,%esp
  0x0000000115ea3faf: je     0x0000000115ea3fc7
  0x0000000115ea3fb5: sub    $0x8,%rsp
  0x0000000115ea3fb9: callq  0x000000010dae6f16
  0x0000000115ea3fbe: add    $0x8,%rsp
  0x0000000115ea3fc2: jmpq   0x0000000115ea3fcc
  0x0000000115ea3fc7: callq  0x000000010dae6f16
  0x0000000115ea3fcc: movabs $0x0,%r10
  0x0000000115ea3fd6: mov    %r10,0x1d8(%r15)
  0x0000000115ea3fdd: movabs $0x0,%r10
  0x0000000115ea3fe7: mov    %r10,0x1e8(%r15)
  0x0000000115ea3fee: cmpq   $0x0,0x8(%r15)
  0x0000000115ea3ff6: je     0x0000000115ea4001
  0x0000000115ea3ffc: jmpq   0x0000000115e916e0
  0x0000000115ea4001: mov    -0x38(%rbp),%r13
  0x0000000115ea4005: mov    -0x30(%rbp),%r14
  0x0000000115ea4009: retq   
  0x0000000115ea400a: push   %rax
  0x0000000115ea400b: push   %rbx
  0x0000000115ea400c: mov    -0x18(%rbp),%rbx
  0x0000000115ea4010: mov    0x10(%rbx),%rax
  0x0000000115ea4014: test   %rax,%rax
  0x0000000115ea4017: je     0x0000000115ea4054
  0x0000000115ea401d: mov    %r13,%rsi
  0x0000000115ea4020: mov    %rbx,%rdi
  0x0000000115ea4023: test   $0xf,%esp
  0x0000000115ea4029: je     0x0000000115ea4041
  0x0000000115ea402f: sub    $0x8,%rsp
  0x0000000115ea4033: callq  0x000000010dae706c
  0x0000000115ea4038: add    $0x8,%rsp
  0x0000000115ea403c: jmpq   0x0000000115ea4046
  0x0000000115ea4041: callq  0x000000010dae706c
  0x0000000115ea4046: mov    0x10(%rbx),%rbx
  0x0000000115ea404a: add    $0x100,%rbx
  0x0000000115ea4051: add    %rbx,%rax
  0x0000000115ea4054: mov    %rax,-0x20(%rbp)
  0x0000000115ea4058: pop    %rbx
  0x0000000115ea4059: pop    %rax
  0x0000000115ea405a: mov    -0x18(%rbp),%rbx
  0x0000000115ea405e: jmpq   0x0000000115ea3ea7
  0x0000000115ea4063: mov    $0x0,%esi
  0x0000000115ea4068: callq  0x0000000115ea4072
  0x0000000115ea406d: jmpq   0x0000000115ea40ed
  0x0000000115ea4072: lea    0x8(%rsp),%rax
  0x0000000115ea4077: mov    %r13,-0x38(%rbp)
  0x0000000115ea407b: mov    %r15,%rdi
  0x0000000115ea407e: mov    %rbp,0x1e8(%r15)
  0x0000000115ea4085: mov    %rax,0x1d8(%r15)
  0x0000000115ea408c: test   $0xf,%esp
  0x0000000115ea4092: je     0x0000000115ea40aa
  0x0000000115ea4098: sub    $0x8,%rsp
  0x0000000115ea409c: callq  0x000000010dae7476
  0x0000000115ea40a1: add    $0x8,%rsp
  0x0000000115ea40a5: jmpq   0x0000000115ea40af
  0x0000000115ea40aa: callq  0x000000010dae7476
  0x0000000115ea40af: movabs $0x0,%r10
  0x0000000115ea40b9: mov    %r10,0x1d8(%r15)
  0x0000000115ea40c0: movabs $0x0,%r10
  0x0000000115ea40ca: mov    %r10,0x1e8(%r15)
  0x0000000115ea40d1: cmpq   $0x0,0x8(%r15)
  0x0000000115ea40d9: je     0x0000000115ea40e4
  0x0000000115ea40df: jmpq   0x0000000115e916e0
  0x0000000115ea40e4: mov    -0x38(%rbp),%r13
  0x0000000115ea40e8: mov    -0x30(%rbp),%r14
  0x0000000115ea40ec: retq   
  0x0000000115ea40ed: mov    -0x18(%rbp),%rbx
  0x0000000115ea40f1: jmpq   0x0000000115ea3ea7
  0x0000000115ea40f6: xchg   %ax,%ax
  0x0000000115ea40f8: add    %al,(%rax)
  0x0000000115ea40fa: add    %al,(%rax)
  0x0000000115ea40fc: add    %al,(%rax)
  0x0000000115ea40fe: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = zerolocals_synchronized)  [0x0000000115ea4120, 0x0000000115ea4720]  1536 bytes

  0x0000000115ea4120: mov    0x8(%rbx),%rdx
  0x0000000115ea4124: movzwl 0x2c(%rdx),%ecx
  0x0000000115ea4128: movzwl 0x2a(%rdx),%edx
  0x0000000115ea412c: sub    %ecx,%edx
  0x0000000115ea412e: cmp    $0x1f6,%edx
  0x0000000115ea4134: jbe    0x0000000115ea416d
  0x0000000115ea413a: mov    %rdx,%rax
  0x0000000115ea413d: shl    $0x3,%rax
  0x0000000115ea4141: add    $0x50,%rax
  0x0000000115ea4145: add    0x148(%r15),%rax
  0x0000000115ea414c: sub    0x150(%r15),%rax
  0x0000000115ea4153: add    $0x14000,%rax
  0x0000000115ea415a: cmp    %rax,%rsp
  0x0000000115ea415d: ja     0x0000000115ea416d
  0x0000000115ea4163: pop    %rax
  0x0000000115ea4164: mov    %r13,%rsp
  0x0000000115ea4167: push   %rax
  0x0000000115ea4168: jmpq   0x0000000115e96520
  0x0000000115ea416d: pop    %rax
  0x0000000115ea416e: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea4173: test   %edx,%edx
  0x0000000115ea4175: jle    0x0000000115ea4184
  0x0000000115ea417b: pushq  $0x0
  0x0000000115ea4180: dec    %edx
  0x0000000115ea4182: jg     0x0000000115ea417b
  0x0000000115ea4184: push   %rax
  0x0000000115ea4185: push   %rbp
  0x0000000115ea4186: mov    %rsp,%rbp
  0x0000000115ea4189: push   %r13
  0x0000000115ea418b: pushq  $0x0
  0x0000000115ea4190: mov    0x8(%rbx),%r13
  0x0000000115ea4194: lea    0x30(%r13),%r13
  0x0000000115ea4198: push   %rbx
  0x0000000115ea4199: mov    0x10(%rbx),%rdx
  0x0000000115ea419d: test   %rdx,%rdx
  0x0000000115ea41a0: je     0x0000000115ea41ad
  0x0000000115ea41a6: add    $0x100,%rdx
  0x0000000115ea41ad: push   %rdx
  0x0000000115ea41ae: mov    0x8(%rbx),%rdx
  0x0000000115ea41b2: mov    0x8(%rdx),%rdx
  0x0000000115ea41b6: mov    0x10(%rdx),%rdx
  0x0000000115ea41ba: push   %rdx
  0x0000000115ea41bb: push   %r14
  0x0000000115ea41bd: push   %r13
  0x0000000115ea41bf: pushq  $0x0
  0x0000000115ea41c4: mov    %rsp,(%rsp)
  0x0000000115ea41c8: movb   $0x1,0x295(%r15)
  0x0000000115ea41d0: mov    -0x20(%rbp),%rax
  0x0000000115ea41d4: test   %rax,%rax
  0x0000000115ea41d7: je     0x0000000115ea4267
  0x0000000115ea41dd: mov    -0x4(%rax),%ecx
  0x0000000115ea41e0: test   %ecx,%ecx
  0x0000000115ea41e2: js     0x0000000115ea4267
  0x0000000115ea41e8: add    %rcx,%rax
  0x0000000115ea41eb: mov    0x8(%rax),%rcx
  0x0000000115ea41ef: sub    $0x2,%rcx
  0x0000000115ea41f3: mov    0x10(%rax,%rcx,8),%rdx
  0x0000000115ea41f8: neg    %rdx
  0x0000000115ea41fb: mov    (%r14,%rdx,8),%rdx
  0x0000000115ea41ff: test   %rdx,%rdx
  0x0000000115ea4202: jne    0x0000000115ea420f
  0x0000000115ea4204: orq    $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea420d: jmp    0x0000000115ea4261
  0x0000000115ea420f: mov    0x8(%rdx),%edx
  0x0000000115ea4212: shl    $0x3,%rdx
  0x0000000115ea4216: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea421b: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea4222: je     0x0000000115ea4261
  0x0000000115ea4224: test   $0x2,%rdx
  0x0000000115ea422b: jne    0x0000000115ea4261
  0x0000000115ea422d: cmpq   $0x0,0x18(%rax,%rcx,8)
  0x0000000115ea4236: je     0x0000000115ea425c
  0x0000000115ea4238: cmpq   $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea4241: je     0x0000000115ea425c
  0x0000000115ea4243: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea4248: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea424f: je     0x0000000115ea4261
  0x0000000115ea4251: orq    $0x2,0x18(%rax,%rcx,8)
  0x0000000115ea425a: jmp    0x0000000115ea4261
  0x0000000115ea425c: mov    %rdx,0x18(%rax,%rcx,8)
  0x0000000115ea4261: sub    $0x2,%rcx
  0x0000000115ea4265: jns    0x0000000115ea41f3
  0x0000000115ea4267: mov    0x10(%rbx),%rax
  0x0000000115ea426b: test   %rax,%rax
  0x0000000115ea426e: je     0x0000000115ea4290
  0x0000000115ea4270: mov    0xdc(%rax),%ecx
  0x0000000115ea4276: add    $0x8,%ecx
  0x0000000115ea4279: mov    %ecx,0xdc(%rax)
  0x0000000115ea427f: and    $0x3f8,%ecx
  0x0000000115ea4285: je     0x0000000115ea467e
  0x0000000115ea428b: jmpq   0x0000000115ea4347
  0x0000000115ea4290: mov    0x18(%rbx),%rax
  0x0000000115ea4294: test   %rax,%rax
  0x0000000115ea4297: jne    0x0000000115ea4332
  0x0000000115ea429d: callq  0x0000000115ea42a7
  0x0000000115ea42a2: jmpq   0x0000000115ea4325
  0x0000000115ea42a7: mov    %rbx,%rsi
  0x0000000115ea42aa: lea    0x8(%rsp),%rax
  0x0000000115ea42af: mov    %r13,-0x38(%rbp)
  0x0000000115ea42b3: mov    %r15,%rdi
  0x0000000115ea42b6: mov    %rbp,0x1e8(%r15)
  0x0000000115ea42bd: mov    %rax,0x1d8(%r15)
  0x0000000115ea42c4: test   $0xf,%esp
  0x0000000115ea42ca: je     0x0000000115ea42e2
  0x0000000115ea42d0: sub    $0x8,%rsp
  0x0000000115ea42d4: callq  0x000000010dae6d98
  0x0000000115ea42d9: add    $0x8,%rsp
  0x0000000115ea42dd: jmpq   0x0000000115ea42e7
  0x0000000115ea42e2: callq  0x000000010dae6d98
  0x0000000115ea42e7: movabs $0x0,%r10
  0x0000000115ea42f1: mov    %r10,0x1d8(%r15)
  0x0000000115ea42f8: movabs $0x0,%r10
  0x0000000115ea4302: mov    %r10,0x1e8(%r15)
  0x0000000115ea4309: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4311: je     0x0000000115ea431c
  0x0000000115ea4317: jmpq   0x0000000115e916e0
  0x0000000115ea431c: mov    -0x38(%rbp),%r13
  0x0000000115ea4320: mov    -0x30(%rbp),%r14
  0x0000000115ea4324: retq   
  0x0000000115ea4325: mov    0x18(%rbx),%rax
  0x0000000115ea4329: test   %rax,%rax
  0x0000000115ea432c: je     0x0000000115ea4347
  0x0000000115ea4332: mov    0x8(%rax),%ecx
  0x0000000115ea4335: add    $0x8,%ecx
  0x0000000115ea4338: mov    %ecx,0x8(%rax)
  0x0000000115ea433b: and    $0x3f8,%ecx
  0x0000000115ea4341: je     0x0000000115ea467e
  0x0000000115ea4347: mov    %eax,-0x1000(%rsp)
  0x0000000115ea434e: mov    %eax,-0x2000(%rsp)
  0x0000000115ea4355: mov    %eax,-0x3000(%rsp)
  0x0000000115ea435c: mov    %eax,-0x4000(%rsp)
  0x0000000115ea4363: mov    %eax,-0x5000(%rsp)
  0x0000000115ea436a: mov    %eax,-0x6000(%rsp)
  0x0000000115ea4371: mov    %eax,-0x7000(%rsp)
  0x0000000115ea4378: mov    %eax,-0x8000(%rsp)
  0x0000000115ea437f: mov    %eax,-0x9000(%rsp)
  0x0000000115ea4386: mov    %eax,-0xa000(%rsp)
  0x0000000115ea438d: mov    %eax,-0xb000(%rsp)
  0x0000000115ea4394: mov    %eax,-0xc000(%rsp)
  0x0000000115ea439b: mov    %eax,-0xd000(%rsp)
  0x0000000115ea43a2: mov    %eax,-0xe000(%rsp)
  0x0000000115ea43a9: mov    %eax,-0xf000(%rsp)
  0x0000000115ea43b0: mov    %eax,-0x10000(%rsp)
  0x0000000115ea43b7: mov    %eax,-0x11000(%rsp)
  0x0000000115ea43be: mov    %eax,-0x12000(%rsp)
  0x0000000115ea43c5: mov    %eax,-0x13000(%rsp)
  0x0000000115ea43cc: mov    %eax,-0x14000(%rsp)
  0x0000000115ea43d3: movb   $0x0,0x295(%r15)
  0x0000000115ea43db: mov    0x20(%rbx),%eax
  0x0000000115ea43de: test   $0x8,%eax
  0x0000000115ea43e3: mov    (%r14),%rax
  0x0000000115ea43e6: je     0x0000000115ea43fc
  0x0000000115ea43ec: mov    0x8(%rbx),%rax
  0x0000000115ea43f0: mov    0x8(%rax),%rax
  0x0000000115ea43f4: mov    0x18(%rax),%rax
  0x0000000115ea43f8: mov    0x68(%rax),%rax
  0x0000000115ea43fc: sub    $0x10,%rsp
  0x0000000115ea4400: mov    %rsp,-0x40(%rbp)
  0x0000000115ea4404: mov    %rax,0x8(%rsp)
  0x0000000115ea4409: mov    %rsp,%rsi
  0x0000000115ea440c: mov    0x8(%rsi),%rcx
  0x0000000115ea4410: mov    (%rcx),%rax
  0x0000000115ea4413: mov    %rax,%r10
  0x0000000115ea4416: and    $0x7,%r10
  0x0000000115ea441a: cmp    $0x5,%r10
  0x0000000115ea441e: jne    0x0000000115ea44a8
  0x0000000115ea4424: mov    0x8(%rcx),%r10d
  0x0000000115ea4428: shl    $0x3,%r10
  0x0000000115ea442c: mov    0xa8(%r10),%r10
  0x0000000115ea4433: or     %r15,%r10
  0x0000000115ea4436: xor    %rax,%r10
  0x0000000115ea4439: and    $0xffffffffffffff87,%r10
  0x0000000115ea443d: je     0x0000000115ea4556
  0x0000000115ea4443: test   $0x7,%r10
  0x0000000115ea444a: jne    0x0000000115ea4494
  0x0000000115ea444c: test   $0x300,%r10
  0x0000000115ea4453: jne    0x0000000115ea4472
  0x0000000115ea4455: and    $0x37f,%rax
  0x0000000115ea445c: mov    %rax,%r10
  0x0000000115ea445f: or     %r15,%r10
  0x0000000115ea4462: lock cmpxchg %r10,(%rcx)
  0x0000000115ea4467: jne    0x0000000115ea44d1
  0x0000000115ea446d: jmpq   0x0000000115ea4556
  0x0000000115ea4472: mov    0x8(%rcx),%r10d
  0x0000000115ea4476: shl    $0x3,%r10
  0x0000000115ea447a: mov    0xa8(%r10),%r10
  0x0000000115ea4481: or     %r15,%r10
  0x0000000115ea4484: lock cmpxchg %r10,(%rcx)
  0x0000000115ea4489: jne    0x0000000115ea44d1
  0x0000000115ea448f: jmpq   0x0000000115ea4556
  0x0000000115ea4494: mov    0x8(%rcx),%r10d
  0x0000000115ea4498: shl    $0x3,%r10
  0x0000000115ea449c: mov    0xa8(%r10),%r10
  0x0000000115ea44a3: lock cmpxchg %r10,(%rcx)
  0x0000000115ea44a8: mov    $0x1,%eax
  0x0000000115ea44ad: or     (%rcx),%rax
  0x0000000115ea44b0: mov    %rax,(%rsi)
  0x0000000115ea44b3: lock cmpxchg %rsi,(%rcx)
  0x0000000115ea44b8: je     0x0000000115ea4556
  0x0000000115ea44be: sub    %rsp,%rax
  0x0000000115ea44c1: and    $0xfffffffffffff007,%rax
  0x0000000115ea44c8: mov    %rax,(%rsi)
  0x0000000115ea44cb: je     0x0000000115ea4556
  0x0000000115ea44d1: callq  0x0000000115ea44db
  0x0000000115ea44d6: jmpq   0x0000000115ea4556
  0x0000000115ea44db: lea    0x8(%rsp),%rax
  0x0000000115ea44e0: mov    %r13,-0x38(%rbp)
  0x0000000115ea44e4: mov    %r15,%rdi
  0x0000000115ea44e7: mov    %rbp,0x1e8(%r15)
  0x0000000115ea44ee: mov    %rax,0x1d8(%r15)
  0x0000000115ea44f5: test   $0xf,%esp
  0x0000000115ea44fb: je     0x0000000115ea4513
  0x0000000115ea4501: sub    $0x8,%rsp
  0x0000000115ea4505: callq  0x000000010dae86d2
  0x0000000115ea450a: add    $0x8,%rsp
  0x0000000115ea450e: jmpq   0x0000000115ea4518
  0x0000000115ea4513: callq  0x000000010dae86d2
  0x0000000115ea4518: movabs $0x0,%r10
  0x0000000115ea4522: mov    %r10,0x1d8(%r15)
  0x0000000115ea4529: movabs $0x0,%r10
  0x0000000115ea4533: mov    %r10,0x1e8(%r15)
  0x0000000115ea453a: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4542: je     0x0000000115ea454d
  0x0000000115ea4548: jmpq   0x0000000115e916e0
  0x0000000115ea454d: mov    -0x38(%rbp),%r13
  0x0000000115ea4551: mov    -0x30(%rbp),%r14
  0x0000000115ea4555: retq   
  0x0000000115ea4556: cmpb   $0x0,-0x7dbd293(%rip)        # 0x000000010e0e72ca
  0x0000000115ea455d: je     0x0000000115ea458d
  0x0000000115ea4563: mov    -0x18(%rbp),%rsi
  0x0000000115ea4567: mov    %r15,%rdi
  0x0000000115ea456a: test   $0xf,%esp
  0x0000000115ea4570: je     0x0000000115ea4588
  0x0000000115ea4576: sub    $0x8,%rsp
  0x0000000115ea457a: callq  0x000000010dce7724
  0x0000000115ea457f: add    $0x8,%rsp
  0x0000000115ea4583: jmpq   0x0000000115ea458d
  0x0000000115ea4588: callq  0x000000010dce7724
  0x0000000115ea458d: movzbl 0x0(%r13),%ebx
  0x0000000115ea4592: movabs $0x10e101840,%r10
  0x0000000115ea459c: jmpq   *(%r10,%rbx,8)
  0x0000000115ea45a0: callq  0x0000000115ea45aa
  0x0000000115ea45a5: jmpq   0x0000000115ea4625
  0x0000000115ea45aa: lea    0x8(%rsp),%rax
  0x0000000115ea45af: mov    %r13,-0x38(%rbp)
  0x0000000115ea45b3: mov    %r15,%rdi
  0x0000000115ea45b6: mov    %rbp,0x1e8(%r15)
  0x0000000115ea45bd: mov    %rax,0x1d8(%r15)
  0x0000000115ea45c4: test   $0xf,%esp
  0x0000000115ea45ca: je     0x0000000115ea45e2
  0x0000000115ea45d0: sub    $0x8,%rsp
  0x0000000115ea45d4: callq  0x000000010dae6f16
  0x0000000115ea45d9: add    $0x8,%rsp
  0x0000000115ea45dd: jmpq   0x0000000115ea45e7
  0x0000000115ea45e2: callq  0x000000010dae6f16
  0x0000000115ea45e7: movabs $0x0,%r10
  0x0000000115ea45f1: mov    %r10,0x1d8(%r15)
  0x0000000115ea45f8: movabs $0x0,%r10
  0x0000000115ea4602: mov    %r10,0x1e8(%r15)
  0x0000000115ea4609: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4611: je     0x0000000115ea461c
  0x0000000115ea4617: jmpq   0x0000000115e916e0
  0x0000000115ea461c: mov    -0x38(%rbp),%r13
  0x0000000115ea4620: mov    -0x30(%rbp),%r14
  0x0000000115ea4624: retq   
  0x0000000115ea4625: push   %rax
  0x0000000115ea4626: push   %rbx
  0x0000000115ea4627: mov    -0x18(%rbp),%rbx
  0x0000000115ea462b: mov    0x10(%rbx),%rax
  0x0000000115ea462f: test   %rax,%rax
  0x0000000115ea4632: je     0x0000000115ea466f
  0x0000000115ea4638: mov    %r13,%rsi
  0x0000000115ea463b: mov    %rbx,%rdi
  0x0000000115ea463e: test   $0xf,%esp
  0x0000000115ea4644: je     0x0000000115ea465c
  0x0000000115ea464a: sub    $0x8,%rsp
  0x0000000115ea464e: callq  0x000000010dae706c
  0x0000000115ea4653: add    $0x8,%rsp
  0x0000000115ea4657: jmpq   0x0000000115ea4661
  0x0000000115ea465c: callq  0x000000010dae706c
  0x0000000115ea4661: mov    0x10(%rbx),%rbx
  0x0000000115ea4665: add    $0x100,%rbx
  0x0000000115ea466c: add    %rbx,%rax
  0x0000000115ea466f: mov    %rax,-0x20(%rbp)
  0x0000000115ea4673: pop    %rbx
  0x0000000115ea4674: pop    %rax
  0x0000000115ea4675: mov    -0x18(%rbp),%rbx
  0x0000000115ea4679: jmpq   0x0000000115ea4347
  0x0000000115ea467e: mov    $0x0,%esi
  0x0000000115ea4683: callq  0x0000000115ea468d
  0x0000000115ea4688: jmpq   0x0000000115ea4708
  0x0000000115ea468d: lea    0x8(%rsp),%rax
  0x0000000115ea4692: mov    %r13,-0x38(%rbp)
  0x0000000115ea4696: mov    %r15,%rdi
  0x0000000115ea4699: mov    %rbp,0x1e8(%r15)
  0x0000000115ea46a0: mov    %rax,0x1d8(%r15)
  0x0000000115ea46a7: test   $0xf,%esp
  0x0000000115ea46ad: je     0x0000000115ea46c5
  0x0000000115ea46b3: sub    $0x8,%rsp
  0x0000000115ea46b7: callq  0x000000010dae7476
  0x0000000115ea46bc: add    $0x8,%rsp
  0x0000000115ea46c0: jmpq   0x0000000115ea46ca
  0x0000000115ea46c5: callq  0x000000010dae7476
  0x0000000115ea46ca: movabs $0x0,%r10
  0x0000000115ea46d4: mov    %r10,0x1d8(%r15)
  0x0000000115ea46db: movabs $0x0,%r10
  0x0000000115ea46e5: mov    %r10,0x1e8(%r15)
  0x0000000115ea46ec: cmpq   $0x0,0x8(%r15)
  0x0000000115ea46f4: je     0x0000000115ea46ff
  0x0000000115ea46fa: jmpq   0x0000000115e916e0
  0x0000000115ea46ff: mov    -0x38(%rbp),%r13
  0x0000000115ea4703: mov    -0x30(%rbp),%r14
  0x0000000115ea4707: retq   
  0x0000000115ea4708: mov    -0x18(%rbp),%rbx
  0x0000000115ea470c: jmpq   0x0000000115ea4347
  0x0000000115ea4711: nopl   0x0(%rax)
  0x0000000115ea4718: add    %al,(%rax)
  0x0000000115ea471a: add    %al,(%rax)
  0x0000000115ea471c: add    %al,(%rax)
  0x0000000115ea471e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = empty)  [0x0000000115ea4740, 0x0000000115ea4bc0]  1152 bytes

  0x0000000115ea4740: mov    0x8(%rbx),%rdx
  0x0000000115ea4744: movzwl 0x2c(%rdx),%ecx
  0x0000000115ea4748: movzwl 0x2a(%rdx),%edx
  0x0000000115ea474c: sub    %ecx,%edx
  0x0000000115ea474e: cmp    $0x1f6,%edx
  0x0000000115ea4754: jbe    0x0000000115ea478d
  0x0000000115ea475a: mov    %rdx,%rax
  0x0000000115ea475d: shl    $0x3,%rax
  0x0000000115ea4761: add    $0x50,%rax
  0x0000000115ea4765: add    0x148(%r15),%rax
  0x0000000115ea476c: sub    0x150(%r15),%rax
  0x0000000115ea4773: add    $0x14000,%rax
  0x0000000115ea477a: cmp    %rax,%rsp
  0x0000000115ea477d: ja     0x0000000115ea478d
  0x0000000115ea4783: pop    %rax
  0x0000000115ea4784: mov    %r13,%rsp
  0x0000000115ea4787: push   %rax
  0x0000000115ea4788: jmpq   0x0000000115e96520
  0x0000000115ea478d: pop    %rax
  0x0000000115ea478e: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea4793: test   %edx,%edx
  0x0000000115ea4795: jle    0x0000000115ea47a4
  0x0000000115ea479b: pushq  $0x0
  0x0000000115ea47a0: dec    %edx
  0x0000000115ea47a2: jg     0x0000000115ea479b
  0x0000000115ea47a4: push   %rax
  0x0000000115ea47a5: push   %rbp
  0x0000000115ea47a6: mov    %rsp,%rbp
  0x0000000115ea47a9: push   %r13
  0x0000000115ea47ab: pushq  $0x0
  0x0000000115ea47b0: mov    0x8(%rbx),%r13
  0x0000000115ea47b4: lea    0x30(%r13),%r13
  0x0000000115ea47b8: push   %rbx
  0x0000000115ea47b9: mov    0x10(%rbx),%rdx
  0x0000000115ea47bd: test   %rdx,%rdx
  0x0000000115ea47c0: je     0x0000000115ea47cd
  0x0000000115ea47c6: add    $0x100,%rdx
  0x0000000115ea47cd: push   %rdx
  0x0000000115ea47ce: mov    0x8(%rbx),%rdx
  0x0000000115ea47d2: mov    0x8(%rdx),%rdx
  0x0000000115ea47d6: mov    0x10(%rdx),%rdx
  0x0000000115ea47da: push   %rdx
  0x0000000115ea47db: push   %r14
  0x0000000115ea47dd: push   %r13
  0x0000000115ea47df: pushq  $0x0
  0x0000000115ea47e4: mov    %rsp,(%rsp)
  0x0000000115ea47e8: movb   $0x1,0x295(%r15)
  0x0000000115ea47f0: mov    -0x20(%rbp),%rax
  0x0000000115ea47f4: test   %rax,%rax
  0x0000000115ea47f7: je     0x0000000115ea4887
  0x0000000115ea47fd: mov    -0x4(%rax),%ecx
  0x0000000115ea4800: test   %ecx,%ecx
  0x0000000115ea4802: js     0x0000000115ea4887
  0x0000000115ea4808: add    %rcx,%rax
  0x0000000115ea480b: mov    0x8(%rax),%rcx
  0x0000000115ea480f: sub    $0x2,%rcx
  0x0000000115ea4813: mov    0x10(%rax,%rcx,8),%rdx
  0x0000000115ea4818: neg    %rdx
  0x0000000115ea481b: mov    (%r14,%rdx,8),%rdx
  0x0000000115ea481f: test   %rdx,%rdx
  0x0000000115ea4822: jne    0x0000000115ea482f
  0x0000000115ea4824: orq    $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea482d: jmp    0x0000000115ea4881
  0x0000000115ea482f: mov    0x8(%rdx),%edx
  0x0000000115ea4832: shl    $0x3,%rdx
  0x0000000115ea4836: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea483b: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea4842: je     0x0000000115ea4881
  0x0000000115ea4844: test   $0x2,%rdx
  0x0000000115ea484b: jne    0x0000000115ea4881
  0x0000000115ea484d: cmpq   $0x0,0x18(%rax,%rcx,8)
  0x0000000115ea4856: je     0x0000000115ea487c
  0x0000000115ea4858: cmpq   $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea4861: je     0x0000000115ea487c
  0x0000000115ea4863: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea4868: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea486f: je     0x0000000115ea4881
  0x0000000115ea4871: orq    $0x2,0x18(%rax,%rcx,8)
  0x0000000115ea487a: jmp    0x0000000115ea4881
  0x0000000115ea487c: mov    %rdx,0x18(%rax,%rcx,8)
  0x0000000115ea4881: sub    $0x2,%rcx
  0x0000000115ea4885: jns    0x0000000115ea4813
  0x0000000115ea4887: mov    0x10(%rbx),%rax
  0x0000000115ea488b: test   %rax,%rax
  0x0000000115ea488e: je     0x0000000115ea48b0
  0x0000000115ea4890: mov    0xdc(%rax),%ecx
  0x0000000115ea4896: add    $0x8,%ecx
  0x0000000115ea4899: mov    %ecx,0xdc(%rax)
  0x0000000115ea489f: and    $0x3f8,%ecx
  0x0000000115ea48a5: je     0x0000000115ea4b23
  0x0000000115ea48ab: jmpq   0x0000000115ea4967
  0x0000000115ea48b0: mov    0x18(%rbx),%rax
  0x0000000115ea48b4: test   %rax,%rax
  0x0000000115ea48b7: jne    0x0000000115ea4952
  0x0000000115ea48bd: callq  0x0000000115ea48c7
  0x0000000115ea48c2: jmpq   0x0000000115ea4945
  0x0000000115ea48c7: mov    %rbx,%rsi
  0x0000000115ea48ca: lea    0x8(%rsp),%rax
  0x0000000115ea48cf: mov    %r13,-0x38(%rbp)
  0x0000000115ea48d3: mov    %r15,%rdi
  0x0000000115ea48d6: mov    %rbp,0x1e8(%r15)
  0x0000000115ea48dd: mov    %rax,0x1d8(%r15)
  0x0000000115ea48e4: test   $0xf,%esp
  0x0000000115ea48ea: je     0x0000000115ea4902
  0x0000000115ea48f0: sub    $0x8,%rsp
  0x0000000115ea48f4: callq  0x000000010dae6d98
  0x0000000115ea48f9: add    $0x8,%rsp
  0x0000000115ea48fd: jmpq   0x0000000115ea4907
  0x0000000115ea4902: callq  0x000000010dae6d98
  0x0000000115ea4907: movabs $0x0,%r10
  0x0000000115ea4911: mov    %r10,0x1d8(%r15)
  0x0000000115ea4918: movabs $0x0,%r10
  0x0000000115ea4922: mov    %r10,0x1e8(%r15)
  0x0000000115ea4929: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4931: je     0x0000000115ea493c
  0x0000000115ea4937: jmpq   0x0000000115e916e0
  0x0000000115ea493c: mov    -0x38(%rbp),%r13
  0x0000000115ea4940: mov    -0x30(%rbp),%r14
  0x0000000115ea4944: retq   
  0x0000000115ea4945: mov    0x18(%rbx),%rax
  0x0000000115ea4949: test   %rax,%rax
  0x0000000115ea494c: je     0x0000000115ea4967
  0x0000000115ea4952: mov    0x8(%rax),%ecx
  0x0000000115ea4955: add    $0x8,%ecx
  0x0000000115ea4958: mov    %ecx,0x8(%rax)
  0x0000000115ea495b: and    $0x3f8,%ecx
  0x0000000115ea4961: je     0x0000000115ea4b23
  0x0000000115ea4967: mov    %eax,-0x1000(%rsp)
  0x0000000115ea496e: mov    %eax,-0x2000(%rsp)
  0x0000000115ea4975: mov    %eax,-0x3000(%rsp)
  0x0000000115ea497c: mov    %eax,-0x4000(%rsp)
  0x0000000115ea4983: mov    %eax,-0x5000(%rsp)
  0x0000000115ea498a: mov    %eax,-0x6000(%rsp)
  0x0000000115ea4991: mov    %eax,-0x7000(%rsp)
  0x0000000115ea4998: mov    %eax,-0x8000(%rsp)
  0x0000000115ea499f: mov    %eax,-0x9000(%rsp)
  0x0000000115ea49a6: mov    %eax,-0xa000(%rsp)
  0x0000000115ea49ad: mov    %eax,-0xb000(%rsp)
  0x0000000115ea49b4: mov    %eax,-0xc000(%rsp)
  0x0000000115ea49bb: mov    %eax,-0xd000(%rsp)
  0x0000000115ea49c2: mov    %eax,-0xe000(%rsp)
  0x0000000115ea49c9: mov    %eax,-0xf000(%rsp)
  0x0000000115ea49d0: mov    %eax,-0x10000(%rsp)
  0x0000000115ea49d7: mov    %eax,-0x11000(%rsp)
  0x0000000115ea49de: mov    %eax,-0x12000(%rsp)
  0x0000000115ea49e5: mov    %eax,-0x13000(%rsp)
  0x0000000115ea49ec: mov    %eax,-0x14000(%rsp)
  0x0000000115ea49f3: movb   $0x0,0x295(%r15)
  0x0000000115ea49fb: cmpb   $0x0,-0x7dbd738(%rip)        # 0x000000010e0e72ca
  0x0000000115ea4a02: je     0x0000000115ea4a32
  0x0000000115ea4a08: mov    -0x18(%rbp),%rsi
  0x0000000115ea4a0c: mov    %r15,%rdi
  0x0000000115ea4a0f: test   $0xf,%esp
  0x0000000115ea4a15: je     0x0000000115ea4a2d
  0x0000000115ea4a1b: sub    $0x8,%rsp
  0x0000000115ea4a1f: callq  0x000000010dce7724
  0x0000000115ea4a24: add    $0x8,%rsp
  0x0000000115ea4a28: jmpq   0x0000000115ea4a32
  0x0000000115ea4a2d: callq  0x000000010dce7724
  0x0000000115ea4a32: movzbl 0x0(%r13),%ebx
  0x0000000115ea4a37: movabs $0x10e101840,%r10
  0x0000000115ea4a41: jmpq   *(%r10,%rbx,8)
  0x0000000115ea4a45: callq  0x0000000115ea4a4f
  0x0000000115ea4a4a: jmpq   0x0000000115ea4aca
  0x0000000115ea4a4f: lea    0x8(%rsp),%rax
  0x0000000115ea4a54: mov    %r13,-0x38(%rbp)
  0x0000000115ea4a58: mov    %r15,%rdi
  0x0000000115ea4a5b: mov    %rbp,0x1e8(%r15)
  0x0000000115ea4a62: mov    %rax,0x1d8(%r15)
  0x0000000115ea4a69: test   $0xf,%esp
  0x0000000115ea4a6f: je     0x0000000115ea4a87
  0x0000000115ea4a75: sub    $0x8,%rsp
  0x0000000115ea4a79: callq  0x000000010dae6f16
  0x0000000115ea4a7e: add    $0x8,%rsp
  0x0000000115ea4a82: jmpq   0x0000000115ea4a8c
  0x0000000115ea4a87: callq  0x000000010dae6f16
  0x0000000115ea4a8c: movabs $0x0,%r10
  0x0000000115ea4a96: mov    %r10,0x1d8(%r15)
  0x0000000115ea4a9d: movabs $0x0,%r10
  0x0000000115ea4aa7: mov    %r10,0x1e8(%r15)
  0x0000000115ea4aae: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4ab6: je     0x0000000115ea4ac1
  0x0000000115ea4abc: jmpq   0x0000000115e916e0
  0x0000000115ea4ac1: mov    -0x38(%rbp),%r13
  0x0000000115ea4ac5: mov    -0x30(%rbp),%r14
  0x0000000115ea4ac9: retq   
  0x0000000115ea4aca: push   %rax
  0x0000000115ea4acb: push   %rbx
  0x0000000115ea4acc: mov    -0x18(%rbp),%rbx
  0x0000000115ea4ad0: mov    0x10(%rbx),%rax
  0x0000000115ea4ad4: test   %rax,%rax
  0x0000000115ea4ad7: je     0x0000000115ea4b14
  0x0000000115ea4add: mov    %r13,%rsi
  0x0000000115ea4ae0: mov    %rbx,%rdi
  0x0000000115ea4ae3: test   $0xf,%esp
  0x0000000115ea4ae9: je     0x0000000115ea4b01
  0x0000000115ea4aef: sub    $0x8,%rsp
  0x0000000115ea4af3: callq  0x000000010dae706c
  0x0000000115ea4af8: add    $0x8,%rsp
  0x0000000115ea4afc: jmpq   0x0000000115ea4b06
  0x0000000115ea4b01: callq  0x000000010dae706c
  0x0000000115ea4b06: mov    0x10(%rbx),%rbx
  0x0000000115ea4b0a: add    $0x100,%rbx
  0x0000000115ea4b11: add    %rbx,%rax
  0x0000000115ea4b14: mov    %rax,-0x20(%rbp)
  0x0000000115ea4b18: pop    %rbx
  0x0000000115ea4b19: pop    %rax
  0x0000000115ea4b1a: mov    -0x18(%rbp),%rbx
  0x0000000115ea4b1e: jmpq   0x0000000115ea4967
  0x0000000115ea4b23: mov    $0x0,%esi
  0x0000000115ea4b28: callq  0x0000000115ea4b32
  0x0000000115ea4b2d: jmpq   0x0000000115ea4bad
  0x0000000115ea4b32: lea    0x8(%rsp),%rax
  0x0000000115ea4b37: mov    %r13,-0x38(%rbp)
  0x0000000115ea4b3b: mov    %r15,%rdi
  0x0000000115ea4b3e: mov    %rbp,0x1e8(%r15)
  0x0000000115ea4b45: mov    %rax,0x1d8(%r15)
  0x0000000115ea4b4c: test   $0xf,%esp
  0x0000000115ea4b52: je     0x0000000115ea4b6a
  0x0000000115ea4b58: sub    $0x8,%rsp
  0x0000000115ea4b5c: callq  0x000000010dae7476
  0x0000000115ea4b61: add    $0x8,%rsp
  0x0000000115ea4b65: jmpq   0x0000000115ea4b6f
  0x0000000115ea4b6a: callq  0x000000010dae7476
  0x0000000115ea4b6f: movabs $0x0,%r10
  0x0000000115ea4b79: mov    %r10,0x1d8(%r15)
  0x0000000115ea4b80: movabs $0x0,%r10
  0x0000000115ea4b8a: mov    %r10,0x1e8(%r15)
  0x0000000115ea4b91: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4b99: je     0x0000000115ea4ba4
  0x0000000115ea4b9f: jmpq   0x0000000115e916e0
  0x0000000115ea4ba4: mov    -0x38(%rbp),%r13
  0x0000000115ea4ba8: mov    -0x30(%rbp),%r14
  0x0000000115ea4bac: retq   
  0x0000000115ea4bad: mov    -0x18(%rbp),%rbx
  0x0000000115ea4bb1: jmpq   0x0000000115ea4967
  0x0000000115ea4bb6: xchg   %ax,%ax
  0x0000000115ea4bb8: add    %al,(%rax)
  0x0000000115ea4bba: add    %al,(%rax)
  0x0000000115ea4bbc: add    %al,(%rax)
  0x0000000115ea4bbe: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = accessor)  [0x0000000115ea4be0, 0x0000000115ea5060]  1152 bytes

  0x0000000115ea4be0: mov    0x8(%rbx),%rdx
  0x0000000115ea4be4: movzwl 0x2c(%rdx),%ecx
  0x0000000115ea4be8: movzwl 0x2a(%rdx),%edx
  0x0000000115ea4bec: sub    %ecx,%edx
  0x0000000115ea4bee: cmp    $0x1f6,%edx
  0x0000000115ea4bf4: jbe    0x0000000115ea4c2d
  0x0000000115ea4bfa: mov    %rdx,%rax
  0x0000000115ea4bfd: shl    $0x3,%rax
  0x0000000115ea4c01: add    $0x50,%rax
  0x0000000115ea4c05: add    0x148(%r15),%rax
  0x0000000115ea4c0c: sub    0x150(%r15),%rax
  0x0000000115ea4c13: add    $0x14000,%rax
  0x0000000115ea4c1a: cmp    %rax,%rsp
  0x0000000115ea4c1d: ja     0x0000000115ea4c2d
  0x0000000115ea4c23: pop    %rax
  0x0000000115ea4c24: mov    %r13,%rsp
  0x0000000115ea4c27: push   %rax
  0x0000000115ea4c28: jmpq   0x0000000115e96520
  0x0000000115ea4c2d: pop    %rax
  0x0000000115ea4c2e: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea4c33: test   %edx,%edx
  0x0000000115ea4c35: jle    0x0000000115ea4c44
  0x0000000115ea4c3b: pushq  $0x0
  0x0000000115ea4c40: dec    %edx
  0x0000000115ea4c42: jg     0x0000000115ea4c3b
  0x0000000115ea4c44: push   %rax
  0x0000000115ea4c45: push   %rbp
  0x0000000115ea4c46: mov    %rsp,%rbp
  0x0000000115ea4c49: push   %r13
  0x0000000115ea4c4b: pushq  $0x0
  0x0000000115ea4c50: mov    0x8(%rbx),%r13
  0x0000000115ea4c54: lea    0x30(%r13),%r13
  0x0000000115ea4c58: push   %rbx
  0x0000000115ea4c59: mov    0x10(%rbx),%rdx
  0x0000000115ea4c5d: test   %rdx,%rdx
  0x0000000115ea4c60: je     0x0000000115ea4c6d
  0x0000000115ea4c66: add    $0x100,%rdx
  0x0000000115ea4c6d: push   %rdx
  0x0000000115ea4c6e: mov    0x8(%rbx),%rdx
  0x0000000115ea4c72: mov    0x8(%rdx),%rdx
  0x0000000115ea4c76: mov    0x10(%rdx),%rdx
  0x0000000115ea4c7a: push   %rdx
  0x0000000115ea4c7b: push   %r14
  0x0000000115ea4c7d: push   %r13
  0x0000000115ea4c7f: pushq  $0x0
  0x0000000115ea4c84: mov    %rsp,(%rsp)
  0x0000000115ea4c88: movb   $0x1,0x295(%r15)
  0x0000000115ea4c90: mov    -0x20(%rbp),%rax
  0x0000000115ea4c94: test   %rax,%rax
  0x0000000115ea4c97: je     0x0000000115ea4d27
  0x0000000115ea4c9d: mov    -0x4(%rax),%ecx
  0x0000000115ea4ca0: test   %ecx,%ecx
  0x0000000115ea4ca2: js     0x0000000115ea4d27
  0x0000000115ea4ca8: add    %rcx,%rax
  0x0000000115ea4cab: mov    0x8(%rax),%rcx
  0x0000000115ea4caf: sub    $0x2,%rcx
  0x0000000115ea4cb3: mov    0x10(%rax,%rcx,8),%rdx
  0x0000000115ea4cb8: neg    %rdx
  0x0000000115ea4cbb: mov    (%r14,%rdx,8),%rdx
  0x0000000115ea4cbf: test   %rdx,%rdx
  0x0000000115ea4cc2: jne    0x0000000115ea4ccf
  0x0000000115ea4cc4: orq    $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea4ccd: jmp    0x0000000115ea4d21
  0x0000000115ea4ccf: mov    0x8(%rdx),%edx
  0x0000000115ea4cd2: shl    $0x3,%rdx
  0x0000000115ea4cd6: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea4cdb: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea4ce2: je     0x0000000115ea4d21
  0x0000000115ea4ce4: test   $0x2,%rdx
  0x0000000115ea4ceb: jne    0x0000000115ea4d21
  0x0000000115ea4ced: cmpq   $0x0,0x18(%rax,%rcx,8)
  0x0000000115ea4cf6: je     0x0000000115ea4d1c
  0x0000000115ea4cf8: cmpq   $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea4d01: je     0x0000000115ea4d1c
  0x0000000115ea4d03: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea4d08: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea4d0f: je     0x0000000115ea4d21
  0x0000000115ea4d11: orq    $0x2,0x18(%rax,%rcx,8)
  0x0000000115ea4d1a: jmp    0x0000000115ea4d21
  0x0000000115ea4d1c: mov    %rdx,0x18(%rax,%rcx,8)
  0x0000000115ea4d21: sub    $0x2,%rcx
  0x0000000115ea4d25: jns    0x0000000115ea4cb3
  0x0000000115ea4d27: mov    0x10(%rbx),%rax
  0x0000000115ea4d2b: test   %rax,%rax
  0x0000000115ea4d2e: je     0x0000000115ea4d50
  0x0000000115ea4d30: mov    0xdc(%rax),%ecx
  0x0000000115ea4d36: add    $0x8,%ecx
  0x0000000115ea4d39: mov    %ecx,0xdc(%rax)
  0x0000000115ea4d3f: and    $0x3f8,%ecx
  0x0000000115ea4d45: je     0x0000000115ea4fc3
  0x0000000115ea4d4b: jmpq   0x0000000115ea4e07
  0x0000000115ea4d50: mov    0x18(%rbx),%rax
  0x0000000115ea4d54: test   %rax,%rax
  0x0000000115ea4d57: jne    0x0000000115ea4df2
  0x0000000115ea4d5d: callq  0x0000000115ea4d67
  0x0000000115ea4d62: jmpq   0x0000000115ea4de5
  0x0000000115ea4d67: mov    %rbx,%rsi
  0x0000000115ea4d6a: lea    0x8(%rsp),%rax
  0x0000000115ea4d6f: mov    %r13,-0x38(%rbp)
  0x0000000115ea4d73: mov    %r15,%rdi
  0x0000000115ea4d76: mov    %rbp,0x1e8(%r15)
  0x0000000115ea4d7d: mov    %rax,0x1d8(%r15)
  0x0000000115ea4d84: test   $0xf,%esp
  0x0000000115ea4d8a: je     0x0000000115ea4da2
  0x0000000115ea4d90: sub    $0x8,%rsp
  0x0000000115ea4d94: callq  0x000000010dae6d98
  0x0000000115ea4d99: add    $0x8,%rsp
  0x0000000115ea4d9d: jmpq   0x0000000115ea4da7
  0x0000000115ea4da2: callq  0x000000010dae6d98
  0x0000000115ea4da7: movabs $0x0,%r10
  0x0000000115ea4db1: mov    %r10,0x1d8(%r15)
  0x0000000115ea4db8: movabs $0x0,%r10
  0x0000000115ea4dc2: mov    %r10,0x1e8(%r15)
  0x0000000115ea4dc9: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4dd1: je     0x0000000115ea4ddc
  0x0000000115ea4dd7: jmpq   0x0000000115e916e0
  0x0000000115ea4ddc: mov    -0x38(%rbp),%r13
  0x0000000115ea4de0: mov    -0x30(%rbp),%r14
  0x0000000115ea4de4: retq   
  0x0000000115ea4de5: mov    0x18(%rbx),%rax
  0x0000000115ea4de9: test   %rax,%rax
  0x0000000115ea4dec: je     0x0000000115ea4e07
  0x0000000115ea4df2: mov    0x8(%rax),%ecx
  0x0000000115ea4df5: add    $0x8,%ecx
  0x0000000115ea4df8: mov    %ecx,0x8(%rax)
  0x0000000115ea4dfb: and    $0x3f8,%ecx
  0x0000000115ea4e01: je     0x0000000115ea4fc3
  0x0000000115ea4e07: mov    %eax,-0x1000(%rsp)
  0x0000000115ea4e0e: mov    %eax,-0x2000(%rsp)
  0x0000000115ea4e15: mov    %eax,-0x3000(%rsp)
  0x0000000115ea4e1c: mov    %eax,-0x4000(%rsp)
  0x0000000115ea4e23: mov    %eax,-0x5000(%rsp)
  0x0000000115ea4e2a: mov    %eax,-0x6000(%rsp)
  0x0000000115ea4e31: mov    %eax,-0x7000(%rsp)
  0x0000000115ea4e38: mov    %eax,-0x8000(%rsp)
  0x0000000115ea4e3f: mov    %eax,-0x9000(%rsp)
  0x0000000115ea4e46: mov    %eax,-0xa000(%rsp)
  0x0000000115ea4e4d: mov    %eax,-0xb000(%rsp)
  0x0000000115ea4e54: mov    %eax,-0xc000(%rsp)
  0x0000000115ea4e5b: mov    %eax,-0xd000(%rsp)
  0x0000000115ea4e62: mov    %eax,-0xe000(%rsp)
  0x0000000115ea4e69: mov    %eax,-0xf000(%rsp)
  0x0000000115ea4e70: mov    %eax,-0x10000(%rsp)
  0x0000000115ea4e77: mov    %eax,-0x11000(%rsp)
  0x0000000115ea4e7e: mov    %eax,-0x12000(%rsp)
  0x0000000115ea4e85: mov    %eax,-0x13000(%rsp)
  0x0000000115ea4e8c: mov    %eax,-0x14000(%rsp)
  0x0000000115ea4e93: movb   $0x0,0x295(%r15)
  0x0000000115ea4e9b: cmpb   $0x0,-0x7dbdbd8(%rip)        # 0x000000010e0e72ca
  0x0000000115ea4ea2: je     0x0000000115ea4ed2
  0x0000000115ea4ea8: mov    -0x18(%rbp),%rsi
  0x0000000115ea4eac: mov    %r15,%rdi
  0x0000000115ea4eaf: test   $0xf,%esp
  0x0000000115ea4eb5: je     0x0000000115ea4ecd
  0x0000000115ea4ebb: sub    $0x8,%rsp
  0x0000000115ea4ebf: callq  0x000000010dce7724
  0x0000000115ea4ec4: add    $0x8,%rsp
  0x0000000115ea4ec8: jmpq   0x0000000115ea4ed2
  0x0000000115ea4ecd: callq  0x000000010dce7724
  0x0000000115ea4ed2: movzbl 0x0(%r13),%ebx
  0x0000000115ea4ed7: movabs $0x10e101840,%r10
  0x0000000115ea4ee1: jmpq   *(%r10,%rbx,8)
  0x0000000115ea4ee5: callq  0x0000000115ea4eef
  0x0000000115ea4eea: jmpq   0x0000000115ea4f6a
  0x0000000115ea4eef: lea    0x8(%rsp),%rax
  0x0000000115ea4ef4: mov    %r13,-0x38(%rbp)
  0x0000000115ea4ef8: mov    %r15,%rdi
  0x0000000115ea4efb: mov    %rbp,0x1e8(%r15)
  0x0000000115ea4f02: mov    %rax,0x1d8(%r15)
  0x0000000115ea4f09: test   $0xf,%esp
  0x0000000115ea4f0f: je     0x0000000115ea4f27
  0x0000000115ea4f15: sub    $0x8,%rsp
  0x0000000115ea4f19: callq  0x000000010dae6f16
  0x0000000115ea4f1e: add    $0x8,%rsp
  0x0000000115ea4f22: jmpq   0x0000000115ea4f2c
  0x0000000115ea4f27: callq  0x000000010dae6f16
  0x0000000115ea4f2c: movabs $0x0,%r10
  0x0000000115ea4f36: mov    %r10,0x1d8(%r15)
  0x0000000115ea4f3d: movabs $0x0,%r10
  0x0000000115ea4f47: mov    %r10,0x1e8(%r15)
  0x0000000115ea4f4e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea4f56: je     0x0000000115ea4f61
  0x0000000115ea4f5c: jmpq   0x0000000115e916e0
  0x0000000115ea4f61: mov    -0x38(%rbp),%r13
  0x0000000115ea4f65: mov    -0x30(%rbp),%r14
  0x0000000115ea4f69: retq   
  0x0000000115ea4f6a: push   %rax
  0x0000000115ea4f6b: push   %rbx
  0x0000000115ea4f6c: mov    -0x18(%rbp),%rbx
  0x0000000115ea4f70: mov    0x10(%rbx),%rax
  0x0000000115ea4f74: test   %rax,%rax
  0x0000000115ea4f77: je     0x0000000115ea4fb4
  0x0000000115ea4f7d: mov    %r13,%rsi
  0x0000000115ea4f80: mov    %rbx,%rdi
  0x0000000115ea4f83: test   $0xf,%esp
  0x0000000115ea4f89: je     0x0000000115ea4fa1
  0x0000000115ea4f8f: sub    $0x8,%rsp
  0x0000000115ea4f93: callq  0x000000010dae706c
  0x0000000115ea4f98: add    $0x8,%rsp
  0x0000000115ea4f9c: jmpq   0x0000000115ea4fa6
  0x0000000115ea4fa1: callq  0x000000010dae706c
  0x0000000115ea4fa6: mov    0x10(%rbx),%rbx
  0x0000000115ea4faa: add    $0x100,%rbx
  0x0000000115ea4fb1: add    %rbx,%rax
  0x0000000115ea4fb4: mov    %rax,-0x20(%rbp)
  0x0000000115ea4fb8: pop    %rbx
  0x0000000115ea4fb9: pop    %rax
  0x0000000115ea4fba: mov    -0x18(%rbp),%rbx
  0x0000000115ea4fbe: jmpq   0x0000000115ea4e07
  0x0000000115ea4fc3: mov    $0x0,%esi
  0x0000000115ea4fc8: callq  0x0000000115ea4fd2
  0x0000000115ea4fcd: jmpq   0x0000000115ea504d
  0x0000000115ea4fd2: lea    0x8(%rsp),%rax
  0x0000000115ea4fd7: mov    %r13,-0x38(%rbp)
  0x0000000115ea4fdb: mov    %r15,%rdi
  0x0000000115ea4fde: mov    %rbp,0x1e8(%r15)
  0x0000000115ea4fe5: mov    %rax,0x1d8(%r15)
  0x0000000115ea4fec: test   $0xf,%esp
  0x0000000115ea4ff2: je     0x0000000115ea500a
  0x0000000115ea4ff8: sub    $0x8,%rsp
  0x0000000115ea4ffc: callq  0x000000010dae7476
  0x0000000115ea5001: add    $0x8,%rsp
  0x0000000115ea5005: jmpq   0x0000000115ea500f
  0x0000000115ea500a: callq  0x000000010dae7476
  0x0000000115ea500f: movabs $0x0,%r10
  0x0000000115ea5019: mov    %r10,0x1d8(%r15)
  0x0000000115ea5020: movabs $0x0,%r10
  0x0000000115ea502a: mov    %r10,0x1e8(%r15)
  0x0000000115ea5031: cmpq   $0x0,0x8(%r15)
  0x0000000115ea5039: je     0x0000000115ea5044
  0x0000000115ea503f: jmpq   0x0000000115e916e0
  0x0000000115ea5044: mov    -0x38(%rbp),%r13
  0x0000000115ea5048: mov    -0x30(%rbp),%r14
  0x0000000115ea504c: retq   
  0x0000000115ea504d: mov    -0x18(%rbp),%rbx
  0x0000000115ea5051: jmpq   0x0000000115ea4e07
  0x0000000115ea5056: xchg   %ax,%ax
  0x0000000115ea5058: add    %al,(%rax)
  0x0000000115ea505a: add    %al,(%rax)
  0x0000000115ea505c: add    %al,(%rax)
  0x0000000115ea505e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = abstract)  [0x0000000115ea5080, 0x0000000115ea51a0]  288 bytes

  0x0000000115ea5080: mov    -0x40(%rbp),%rsp
  0x0000000115ea5084: movq   $0x0,-0x10(%rbp)
  0x0000000115ea508c: mov    -0x38(%rbp),%r13
  0x0000000115ea5090: mov    -0x30(%rbp),%r14
  0x0000000115ea5094: callq  0x0000000115ea509e
  0x0000000115ea5099: jmpq   0x0000000115ea5119
  0x0000000115ea509e: lea    0x8(%rsp),%rax
  0x0000000115ea50a3: mov    %r13,-0x38(%rbp)
  0x0000000115ea50a7: mov    %r15,%rdi
  0x0000000115ea50aa: mov    %rbp,0x1e8(%r15)
  0x0000000115ea50b1: mov    %rax,0x1d8(%r15)
  0x0000000115ea50b8: test   $0xf,%esp
  0x0000000115ea50be: je     0x0000000115ea50d6
  0x0000000115ea50c4: sub    $0x8,%rsp
  0x0000000115ea50c8: callq  0x000000010dae85b4
  0x0000000115ea50cd: add    $0x8,%rsp
  0x0000000115ea50d1: jmpq   0x0000000115ea50db
  0x0000000115ea50d6: callq  0x000000010dae85b4
  0x0000000115ea50db: movabs $0x0,%r10
  0x0000000115ea50e5: mov    %r10,0x1d8(%r15)
  0x0000000115ea50ec: movabs $0x0,%r10
  0x0000000115ea50f6: mov    %r10,0x1e8(%r15)
  0x0000000115ea50fd: cmpq   $0x0,0x8(%r15)
  0x0000000115ea5105: je     0x0000000115ea5110
  0x0000000115ea510b: jmpq   0x0000000115e916e0
  0x0000000115ea5110: mov    -0x38(%rbp),%r13
  0x0000000115ea5114: mov    -0x30(%rbp),%r14
  0x0000000115ea5118: retq   
  0x0000000115ea5119: mov    %rsp,-0x28(%rsp)
  0x0000000115ea511e: sub    $0x80,%rsp
  0x0000000115ea5125: mov    %rax,0x78(%rsp)
  0x0000000115ea512a: mov    %rcx,0x70(%rsp)
  0x0000000115ea512f: mov    %rdx,0x68(%rsp)
  0x0000000115ea5134: mov    %rbx,0x60(%rsp)
  0x0000000115ea5139: mov    %rbp,0x50(%rsp)
  0x0000000115ea513e: mov    %rsi,0x48(%rsp)
  0x0000000115ea5143: mov    %rdi,0x40(%rsp)
  0x0000000115ea5148: mov    %r8,0x38(%rsp)
  0x0000000115ea514d: mov    %r9,0x30(%rsp)
  0x0000000115ea5152: mov    %r10,0x28(%rsp)
  0x0000000115ea5157: mov    %r11,0x20(%rsp)
  0x0000000115ea515c: mov    %r12,0x18(%rsp)
  0x0000000115ea5161: mov    %r13,0x10(%rsp)
  0x0000000115ea5166: mov    %r14,0x8(%rsp)
  0x0000000115ea516b: mov    %r15,(%rsp)
  0x0000000115ea516f: movabs $0x10ddd8000,%rdi
  0x0000000115ea5179: movabs $0x115ea5119,%rsi
  0x0000000115ea5183: mov    %rsp,%rdx
  0x0000000115ea5186: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea518a: callq  0x000000010dc0341e
  0x0000000115ea518f: hlt    
  0x0000000115ea5190: add    %al,(%rax)
  0x0000000115ea5192: add    %al,(%rax)
  0x0000000115ea5194: add    %al,(%rax)
  0x0000000115ea5196: add    %al,(%rax)
  0x0000000115ea5198: add    %al,(%rax)
  0x0000000115ea519a: add    %al,(%rax)
  0x0000000115ea519c: add    %al,(%rax)
  0x0000000115ea519e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_sin)  [0x0000000115ea51c0, 0x0000000115ea5520]  864 bytes

  0x0000000115ea51c0: fldl   0x8(%rsp)
  0x0000000115ea51c4: fldl   -0x80746aa(%rip)        # 0x000000010de30b20
  0x0000000115ea51ca: fld    %st(1)
  0x0000000115ea51cc: fabs   
  0x0000000115ea51ce: fucomip %st(1),%st
  0x0000000115ea51d0: ffree  %st(0)
  0x0000000115ea51d2: fincstp 
  0x0000000115ea51d4: ja     0x0000000115ea51e1
  0x0000000115ea51da: fsin   
  0x0000000115ea51dc: jmpq   0x0000000115ea54fb
  0x0000000115ea51e1: mov    %rsp,-0x28(%rsp)
  0x0000000115ea51e6: sub    $0x80,%rsp
  0x0000000115ea51ed: mov    %rax,0x78(%rsp)
  0x0000000115ea51f2: mov    %rcx,0x70(%rsp)
  0x0000000115ea51f7: mov    %rdx,0x68(%rsp)
  0x0000000115ea51fc: mov    %rbx,0x60(%rsp)
  0x0000000115ea5201: mov    %rbp,0x50(%rsp)
  0x0000000115ea5206: mov    %rsi,0x48(%rsp)
  0x0000000115ea520b: mov    %rdi,0x40(%rsp)
  0x0000000115ea5210: mov    %r8,0x38(%rsp)
  0x0000000115ea5215: mov    %r9,0x30(%rsp)
  0x0000000115ea521a: mov    %r10,0x28(%rsp)
  0x0000000115ea521f: mov    %r11,0x20(%rsp)
  0x0000000115ea5224: mov    %r12,0x18(%rsp)
  0x0000000115ea5229: mov    %r13,0x10(%rsp)
  0x0000000115ea522e: mov    %r14,0x8(%rsp)
  0x0000000115ea5233: mov    %r15,(%rsp)
  0x0000000115ea5237: sub    $0x100,%rsp
  0x0000000115ea523e: vextractf128 $0x1,%ymm0,(%rsp)
  0x0000000115ea5245: vextractf128 $0x1,%ymm1,0x10(%rsp)
  0x0000000115ea524d: vextractf128 $0x1,%ymm2,0x20(%rsp)
  0x0000000115ea5255: vextractf128 $0x1,%ymm3,0x30(%rsp)
  0x0000000115ea525d: vextractf128 $0x1,%ymm4,0x40(%rsp)
  0x0000000115ea5265: vextractf128 $0x1,%ymm5,0x50(%rsp)
  0x0000000115ea526d: vextractf128 $0x1,%ymm6,0x60(%rsp)
  0x0000000115ea5275: vextractf128 $0x1,%ymm7,0x70(%rsp)
  0x0000000115ea527d: vextractf128 $0x1,%ymm8,0x80(%rsp)
  0x0000000115ea5288: vextractf128 $0x1,%ymm9,0x90(%rsp)
  0x0000000115ea5293: vextractf128 $0x1,%ymm10,0xa0(%rsp)
  0x0000000115ea529e: vextractf128 $0x1,%ymm11,0xb0(%rsp)
  0x0000000115ea52a9: vextractf128 $0x1,%ymm12,0xc0(%rsp)
  0x0000000115ea52b4: vextractf128 $0x1,%ymm13,0xd0(%rsp)
  0x0000000115ea52bf: vextractf128 $0x1,%ymm14,0xe0(%rsp)
  0x0000000115ea52ca: vextractf128 $0x1,%ymm15,0xf0(%rsp)
  0x0000000115ea52d5: sub    $0x100,%rsp
  0x0000000115ea52dc: vmovdqu %xmm0,(%rsp)
  0x0000000115ea52e1: vmovdqu %xmm1,0x10(%rsp)
  0x0000000115ea52e7: vmovdqu %xmm2,0x20(%rsp)
  0x0000000115ea52ed: vmovdqu %xmm3,0x30(%rsp)
  0x0000000115ea52f3: vmovdqu %xmm4,0x40(%rsp)
  0x0000000115ea52f9: vmovdqu %xmm5,0x50(%rsp)
  0x0000000115ea52ff: vmovdqu %xmm6,0x60(%rsp)
  0x0000000115ea5305: vmovdqu %xmm7,0x70(%rsp)
  0x0000000115ea530b: vmovdqu %xmm8,0x80(%rsp)
  0x0000000115ea5314: vmovdqu %xmm9,0x90(%rsp)
  0x0000000115ea531d: vmovdqu %xmm10,0xa0(%rsp)
  0x0000000115ea5326: vmovdqu %xmm11,0xb0(%rsp)
  0x0000000115ea532f: vmovdqu %xmm12,0xc0(%rsp)
  0x0000000115ea5338: vmovdqu %xmm13,0xd0(%rsp)
  0x0000000115ea5341: vmovdqu %xmm14,0xe0(%rsp)
  0x0000000115ea534a: vmovdqu %xmm15,0xf0(%rsp)
  0x0000000115ea5353: sub    $0x8,%rsp
  0x0000000115ea5357: fstpl  (%rsp)
  0x0000000115ea535a: vmovsd (%rsp),%xmm0
  0x0000000115ea535f: test   $0xf,%esp
  0x0000000115ea5365: je     0x0000000115ea537d
  0x0000000115ea536b: sub    $0x8,%rsp
  0x0000000115ea536f: callq  0x000000010dceb200
  0x0000000115ea5374: add    $0x8,%rsp
  0x0000000115ea5378: jmpq   0x0000000115ea5382
  0x0000000115ea537d: callq  0x000000010dceb200
  0x0000000115ea5382: vmovsd %xmm0,(%rsp)
  0x0000000115ea5387: fldl   (%rsp)
  0x0000000115ea538a: add    $0x8,%rsp
  0x0000000115ea538e: vmovdqu (%rsp),%xmm0
  0x0000000115ea5393: vmovdqu 0x10(%rsp),%xmm1
  0x0000000115ea5399: vmovdqu 0x20(%rsp),%xmm2
  0x0000000115ea539f: vmovdqu 0x30(%rsp),%xmm3
  0x0000000115ea53a5: vmovdqu 0x40(%rsp),%xmm4
  0x0000000115ea53ab: vmovdqu 0x50(%rsp),%xmm5
  0x0000000115ea53b1: vmovdqu 0x60(%rsp),%xmm6
  0x0000000115ea53b7: vmovdqu 0x70(%rsp),%xmm7
  0x0000000115ea53bd: vmovdqu 0x80(%rsp),%xmm8
  0x0000000115ea53c6: vmovdqu 0x90(%rsp),%xmm9
  0x0000000115ea53cf: vmovdqu 0xa0(%rsp),%xmm10
  0x0000000115ea53d8: vmovdqu 0xb0(%rsp),%xmm11
  0x0000000115ea53e1: vmovdqu 0xc0(%rsp),%xmm12
  0x0000000115ea53ea: vmovdqu 0xd0(%rsp),%xmm13
  0x0000000115ea53f3: vmovdqu 0xe0(%rsp),%xmm14
  0x0000000115ea53fc: vmovdqu 0xf0(%rsp),%xmm15
  0x0000000115ea5405: add    $0x100,%rsp
  0x0000000115ea540c: vinsertf128 $0x1,(%rsp),%ymm0,%ymm0
  0x0000000115ea5413: vinsertf128 $0x1,0x10(%rsp),%ymm1,%ymm1
  0x0000000115ea541b: vinsertf128 $0x1,0x20(%rsp),%ymm2,%ymm2
  0x0000000115ea5423: vinsertf128 $0x1,0x30(%rsp),%ymm3,%ymm3
  0x0000000115ea542b: vinsertf128 $0x1,0x40(%rsp),%ymm4,%ymm4
  0x0000000115ea5433: vinsertf128 $0x1,0x50(%rsp),%ymm5,%ymm5
  0x0000000115ea543b: vinsertf128 $0x1,0x60(%rsp),%ymm6,%ymm6
  0x0000000115ea5443: vinsertf128 $0x1,0x70(%rsp),%ymm7,%ymm7
  0x0000000115ea544b: vinsertf128 $0x1,0x80(%rsp),%ymm8,%ymm8
  0x0000000115ea5456: vinsertf128 $0x1,0x90(%rsp),%ymm9,%ymm9
  0x0000000115ea5461: vinsertf128 $0x1,0xa0(%rsp),%ymm10,%ymm10
  0x0000000115ea546c: vinsertf128 $0x1,0xb0(%rsp),%ymm11,%ymm11
  0x0000000115ea5477: vinsertf128 $0x1,0xc0(%rsp),%ymm12,%ymm12
  0x0000000115ea5482: vinsertf128 $0x1,0xd0(%rsp),%ymm13,%ymm13
  0x0000000115ea548d: vinsertf128 $0x1,0xe0(%rsp),%ymm14,%ymm14
  0x0000000115ea5498: vinsertf128 $0x1,0xf0(%rsp),%ymm15,%ymm15
  0x0000000115ea54a3: add    $0x100,%rsp
  0x0000000115ea54aa: mov    (%rsp),%r15
  0x0000000115ea54ae: mov    0x8(%rsp),%r14
  0x0000000115ea54b3: mov    0x10(%rsp),%r13
  0x0000000115ea54b8: mov    0x18(%rsp),%r12
  0x0000000115ea54bd: mov    0x20(%rsp),%r11
  0x0000000115ea54c2: mov    0x28(%rsp),%r10
  0x0000000115ea54c7: mov    0x30(%rsp),%r9
  0x0000000115ea54cc: mov    0x38(%rsp),%r8
  0x0000000115ea54d1: mov    0x40(%rsp),%rdi
  0x0000000115ea54d6: mov    0x48(%rsp),%rsi
  0x0000000115ea54db: mov    0x50(%rsp),%rbp
  0x0000000115ea54e0: mov    0x60(%rsp),%rbx
  0x0000000115ea54e5: mov    0x68(%rsp),%rdx
  0x0000000115ea54ea: mov    0x70(%rsp),%rcx
  0x0000000115ea54ef: mov    0x78(%rsp),%rax
  0x0000000115ea54f4: add    $0x80,%rsp
  0x0000000115ea54fb: sub    $0x10,%rsp
  0x0000000115ea54ff: fstpl  (%rsp)
  0x0000000115ea5502: vmovsd (%rsp),%xmm0
  0x0000000115ea5507: add    $0x10,%rsp
  0x0000000115ea550b: pop    %rax
  0x0000000115ea550c: mov    %r13,%rsp
  0x0000000115ea550f: jmpq   *%rax
  0x0000000115ea5511: nopl   0x0(%rax)
  0x0000000115ea5518: add    %al,(%rax)
  0x0000000115ea551a: add    %al,(%rax)
  0x0000000115ea551c: add    %al,(%rax)
  0x0000000115ea551e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_cos)  [0x0000000115ea5540, 0x0000000115ea58a0]  864 bytes

  0x0000000115ea5540: fldl   0x8(%rsp)
  0x0000000115ea5544: fldl   -0x8074a2a(%rip)        # 0x000000010de30b20
  0x0000000115ea554a: fld    %st(1)
  0x0000000115ea554c: fabs   
  0x0000000115ea554e: fucomip %st(1),%st
  0x0000000115ea5550: ffree  %st(0)
  0x0000000115ea5552: fincstp 
  0x0000000115ea5554: ja     0x0000000115ea5561
  0x0000000115ea555a: fcos   
  0x0000000115ea555c: jmpq   0x0000000115ea587b
  0x0000000115ea5561: mov    %rsp,-0x28(%rsp)
  0x0000000115ea5566: sub    $0x80,%rsp
  0x0000000115ea556d: mov    %rax,0x78(%rsp)
  0x0000000115ea5572: mov    %rcx,0x70(%rsp)
  0x0000000115ea5577: mov    %rdx,0x68(%rsp)
  0x0000000115ea557c: mov    %rbx,0x60(%rsp)
  0x0000000115ea5581: mov    %rbp,0x50(%rsp)
  0x0000000115ea5586: mov    %rsi,0x48(%rsp)
  0x0000000115ea558b: mov    %rdi,0x40(%rsp)
  0x0000000115ea5590: mov    %r8,0x38(%rsp)
  0x0000000115ea5595: mov    %r9,0x30(%rsp)
  0x0000000115ea559a: mov    %r10,0x28(%rsp)
  0x0000000115ea559f: mov    %r11,0x20(%rsp)
  0x0000000115ea55a4: mov    %r12,0x18(%rsp)
  0x0000000115ea55a9: mov    %r13,0x10(%rsp)
  0x0000000115ea55ae: mov    %r14,0x8(%rsp)
  0x0000000115ea55b3: mov    %r15,(%rsp)
  0x0000000115ea55b7: sub    $0x100,%rsp
  0x0000000115ea55be: vextractf128 $0x1,%ymm0,(%rsp)
  0x0000000115ea55c5: vextractf128 $0x1,%ymm1,0x10(%rsp)
  0x0000000115ea55cd: vextractf128 $0x1,%ymm2,0x20(%rsp)
  0x0000000115ea55d5: vextractf128 $0x1,%ymm3,0x30(%rsp)
  0x0000000115ea55dd: vextractf128 $0x1,%ymm4,0x40(%rsp)
  0x0000000115ea55e5: vextractf128 $0x1,%ymm5,0x50(%rsp)
  0x0000000115ea55ed: vextractf128 $0x1,%ymm6,0x60(%rsp)
  0x0000000115ea55f5: vextractf128 $0x1,%ymm7,0x70(%rsp)
  0x0000000115ea55fd: vextractf128 $0x1,%ymm8,0x80(%rsp)
  0x0000000115ea5608: vextractf128 $0x1,%ymm9,0x90(%rsp)
  0x0000000115ea5613: vextractf128 $0x1,%ymm10,0xa0(%rsp)
  0x0000000115ea561e: vextractf128 $0x1,%ymm11,0xb0(%rsp)
  0x0000000115ea5629: vextractf128 $0x1,%ymm12,0xc0(%rsp)
  0x0000000115ea5634: vextractf128 $0x1,%ymm13,0xd0(%rsp)
  0x0000000115ea563f: vextractf128 $0x1,%ymm14,0xe0(%rsp)
  0x0000000115ea564a: vextractf128 $0x1,%ymm15,0xf0(%rsp)
  0x0000000115ea5655: sub    $0x100,%rsp
  0x0000000115ea565c: vmovdqu %xmm0,(%rsp)
  0x0000000115ea5661: vmovdqu %xmm1,0x10(%rsp)
  0x0000000115ea5667: vmovdqu %xmm2,0x20(%rsp)
  0x0000000115ea566d: vmovdqu %xmm3,0x30(%rsp)
  0x0000000115ea5673: vmovdqu %xmm4,0x40(%rsp)
  0x0000000115ea5679: vmovdqu %xmm5,0x50(%rsp)
  0x0000000115ea567f: vmovdqu %xmm6,0x60(%rsp)
  0x0000000115ea5685: vmovdqu %xmm7,0x70(%rsp)
  0x0000000115ea568b: vmovdqu %xmm8,0x80(%rsp)
  0x0000000115ea5694: vmovdqu %xmm9,0x90(%rsp)
  0x0000000115ea569d: vmovdqu %xmm10,0xa0(%rsp)
  0x0000000115ea56a6: vmovdqu %xmm11,0xb0(%rsp)
  0x0000000115ea56af: vmovdqu %xmm12,0xc0(%rsp)
  0x0000000115ea56b8: vmovdqu %xmm13,0xd0(%rsp)
  0x0000000115ea56c1: vmovdqu %xmm14,0xe0(%rsp)
  0x0000000115ea56ca: vmovdqu %xmm15,0xf0(%rsp)
  0x0000000115ea56d3: sub    $0x8,%rsp
  0x0000000115ea56d7: fstpl  (%rsp)
  0x0000000115ea56da: vmovsd (%rsp),%xmm0
  0x0000000115ea56df: test   $0xf,%esp
  0x0000000115ea56e5: je     0x0000000115ea56fd
  0x0000000115ea56eb: sub    $0x8,%rsp
  0x0000000115ea56ef: callq  0x000000010dced7f6
  0x0000000115ea56f4: add    $0x8,%rsp
  0x0000000115ea56f8: jmpq   0x0000000115ea5702
  0x0000000115ea56fd: callq  0x000000010dced7f6
  0x0000000115ea5702: vmovsd %xmm0,(%rsp)
  0x0000000115ea5707: fldl   (%rsp)
  0x0000000115ea570a: add    $0x8,%rsp
  0x0000000115ea570e: vmovdqu (%rsp),%xmm0
  0x0000000115ea5713: vmovdqu 0x10(%rsp),%xmm1
  0x0000000115ea5719: vmovdqu 0x20(%rsp),%xmm2
  0x0000000115ea571f: vmovdqu 0x30(%rsp),%xmm3
  0x0000000115ea5725: vmovdqu 0x40(%rsp),%xmm4
  0x0000000115ea572b: vmovdqu 0x50(%rsp),%xmm5
  0x0000000115ea5731: vmovdqu 0x60(%rsp),%xmm6
  0x0000000115ea5737: vmovdqu 0x70(%rsp),%xmm7
  0x0000000115ea573d: vmovdqu 0x80(%rsp),%xmm8
  0x0000000115ea5746: vmovdqu 0x90(%rsp),%xmm9
  0x0000000115ea574f: vmovdqu 0xa0(%rsp),%xmm10
  0x0000000115ea5758: vmovdqu 0xb0(%rsp),%xmm11
  0x0000000115ea5761: vmovdqu 0xc0(%rsp),%xmm12
  0x0000000115ea576a: vmovdqu 0xd0(%rsp),%xmm13
  0x0000000115ea5773: vmovdqu 0xe0(%rsp),%xmm14
  0x0000000115ea577c: vmovdqu 0xf0(%rsp),%xmm15
  0x0000000115ea5785: add    $0x100,%rsp
  0x0000000115ea578c: vinsertf128 $0x1,(%rsp),%ymm0,%ymm0
  0x0000000115ea5793: vinsertf128 $0x1,0x10(%rsp),%ymm1,%ymm1
  0x0000000115ea579b: vinsertf128 $0x1,0x20(%rsp),%ymm2,%ymm2
  0x0000000115ea57a3: vinsertf128 $0x1,0x30(%rsp),%ymm3,%ymm3
  0x0000000115ea57ab: vinsertf128 $0x1,0x40(%rsp),%ymm4,%ymm4
  0x0000000115ea57b3: vinsertf128 $0x1,0x50(%rsp),%ymm5,%ymm5
  0x0000000115ea57bb: vinsertf128 $0x1,0x60(%rsp),%ymm6,%ymm6
  0x0000000115ea57c3: vinsertf128 $0x1,0x70(%rsp),%ymm7,%ymm7
  0x0000000115ea57cb: vinsertf128 $0x1,0x80(%rsp),%ymm8,%ymm8
  0x0000000115ea57d6: vinsertf128 $0x1,0x90(%rsp),%ymm9,%ymm9
  0x0000000115ea57e1: vinsertf128 $0x1,0xa0(%rsp),%ymm10,%ymm10
  0x0000000115ea57ec: vinsertf128 $0x1,0xb0(%rsp),%ymm11,%ymm11
  0x0000000115ea57f7: vinsertf128 $0x1,0xc0(%rsp),%ymm12,%ymm12
  0x0000000115ea5802: vinsertf128 $0x1,0xd0(%rsp),%ymm13,%ymm13
  0x0000000115ea580d: vinsertf128 $0x1,0xe0(%rsp),%ymm14,%ymm14
  0x0000000115ea5818: vinsertf128 $0x1,0xf0(%rsp),%ymm15,%ymm15
  0x0000000115ea5823: add    $0x100,%rsp
  0x0000000115ea582a: mov    (%rsp),%r15
  0x0000000115ea582e: mov    0x8(%rsp),%r14
  0x0000000115ea5833: mov    0x10(%rsp),%r13
  0x0000000115ea5838: mov    0x18(%rsp),%r12
  0x0000000115ea583d: mov    0x20(%rsp),%r11
  0x0000000115ea5842: mov    0x28(%rsp),%r10
  0x0000000115ea5847: mov    0x30(%rsp),%r9
  0x0000000115ea584c: mov    0x38(%rsp),%r8
  0x0000000115ea5851: mov    0x40(%rsp),%rdi
  0x0000000115ea5856: mov    0x48(%rsp),%rsi
  0x0000000115ea585b: mov    0x50(%rsp),%rbp
  0x0000000115ea5860: mov    0x60(%rsp),%rbx
  0x0000000115ea5865: mov    0x68(%rsp),%rdx
  0x0000000115ea586a: mov    0x70(%rsp),%rcx
  0x0000000115ea586f: mov    0x78(%rsp),%rax
  0x0000000115ea5874: add    $0x80,%rsp
  0x0000000115ea587b: sub    $0x10,%rsp
  0x0000000115ea587f: fstpl  (%rsp)
  0x0000000115ea5882: vmovsd (%rsp),%xmm0
  0x0000000115ea5887: add    $0x10,%rsp
  0x0000000115ea588b: pop    %rax
  0x0000000115ea588c: mov    %r13,%rsp
  0x0000000115ea588f: jmpq   *%rax
  0x0000000115ea5891: nopl   0x0(%rax)
  0x0000000115ea5898: add    %al,(%rax)
  0x0000000115ea589a: add    %al,(%rax)
  0x0000000115ea589c: add    %al,(%rax)
  0x0000000115ea589e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_tan)  [0x0000000115ea58c0, 0x0000000115ea5c20]  864 bytes

  0x0000000115ea58c0: fldl   0x8(%rsp)
  0x0000000115ea58c4: fldl   -0x8074daa(%rip)        # 0x000000010de30b20
  0x0000000115ea58ca: fld    %st(1)
  0x0000000115ea58cc: fabs   
  0x0000000115ea58ce: fucomip %st(1),%st
  0x0000000115ea58d0: ffree  %st(0)
  0x0000000115ea58d2: fincstp 
  0x0000000115ea58d4: ja     0x0000000115ea58e3
  0x0000000115ea58da: fptan  
  0x0000000115ea58dc: fstp   %st(0)
  0x0000000115ea58de: jmpq   0x0000000115ea5bfd
  0x0000000115ea58e3: mov    %rsp,-0x28(%rsp)
  0x0000000115ea58e8: sub    $0x80,%rsp
  0x0000000115ea58ef: mov    %rax,0x78(%rsp)
  0x0000000115ea58f4: mov    %rcx,0x70(%rsp)
  0x0000000115ea58f9: mov    %rdx,0x68(%rsp)
  0x0000000115ea58fe: mov    %rbx,0x60(%rsp)
  0x0000000115ea5903: mov    %rbp,0x50(%rsp)
  0x0000000115ea5908: mov    %rsi,0x48(%rsp)
  0x0000000115ea590d: mov    %rdi,0x40(%rsp)
  0x0000000115ea5912: mov    %r8,0x38(%rsp)
  0x0000000115ea5917: mov    %r9,0x30(%rsp)
  0x0000000115ea591c: mov    %r10,0x28(%rsp)
  0x0000000115ea5921: mov    %r11,0x20(%rsp)
  0x0000000115ea5926: mov    %r12,0x18(%rsp)
  0x0000000115ea592b: mov    %r13,0x10(%rsp)
  0x0000000115ea5930: mov    %r14,0x8(%rsp)
  0x0000000115ea5935: mov    %r15,(%rsp)
  0x0000000115ea5939: sub    $0x100,%rsp
  0x0000000115ea5940: vextractf128 $0x1,%ymm0,(%rsp)
  0x0000000115ea5947: vextractf128 $0x1,%ymm1,0x10(%rsp)
  0x0000000115ea594f: vextractf128 $0x1,%ymm2,0x20(%rsp)
  0x0000000115ea5957: vextractf128 $0x1,%ymm3,0x30(%rsp)
  0x0000000115ea595f: vextractf128 $0x1,%ymm4,0x40(%rsp)
  0x0000000115ea5967: vextractf128 $0x1,%ymm5,0x50(%rsp)
  0x0000000115ea596f: vextractf128 $0x1,%ymm6,0x60(%rsp)
  0x0000000115ea5977: vextractf128 $0x1,%ymm7,0x70(%rsp)
  0x0000000115ea597f: vextractf128 $0x1,%ymm8,0x80(%rsp)
  0x0000000115ea598a: vextractf128 $0x1,%ymm9,0x90(%rsp)
  0x0000000115ea5995: vextractf128 $0x1,%ymm10,0xa0(%rsp)
  0x0000000115ea59a0: vextractf128 $0x1,%ymm11,0xb0(%rsp)
  0x0000000115ea59ab: vextractf128 $0x1,%ymm12,0xc0(%rsp)
  0x0000000115ea59b6: vextractf128 $0x1,%ymm13,0xd0(%rsp)
  0x0000000115ea59c1: vextractf128 $0x1,%ymm14,0xe0(%rsp)
  0x0000000115ea59cc: vextractf128 $0x1,%ymm15,0xf0(%rsp)
  0x0000000115ea59d7: sub    $0x100,%rsp
  0x0000000115ea59de: vmovdqu %xmm0,(%rsp)
  0x0000000115ea59e3: vmovdqu %xmm1,0x10(%rsp)
  0x0000000115ea59e9: vmovdqu %xmm2,0x20(%rsp)
  0x0000000115ea59ef: vmovdqu %xmm3,0x30(%rsp)
  0x0000000115ea59f5: vmovdqu %xmm4,0x40(%rsp)
  0x0000000115ea59fb: vmovdqu %xmm5,0x50(%rsp)
  0x0000000115ea5a01: vmovdqu %xmm6,0x60(%rsp)
  0x0000000115ea5a07: vmovdqu %xmm7,0x70(%rsp)
  0x0000000115ea5a0d: vmovdqu %xmm8,0x80(%rsp)
  0x0000000115ea5a16: vmovdqu %xmm9,0x90(%rsp)
  0x0000000115ea5a1f: vmovdqu %xmm10,0xa0(%rsp)
  0x0000000115ea5a28: vmovdqu %xmm11,0xb0(%rsp)
  0x0000000115ea5a31: vmovdqu %xmm12,0xc0(%rsp)
  0x0000000115ea5a3a: vmovdqu %xmm13,0xd0(%rsp)
  0x0000000115ea5a43: vmovdqu %xmm14,0xe0(%rsp)
  0x0000000115ea5a4c: vmovdqu %xmm15,0xf0(%rsp)
  0x0000000115ea5a55: sub    $0x8,%rsp
  0x0000000115ea5a59: fstpl  (%rsp)
  0x0000000115ea5a5c: vmovsd (%rsp),%xmm0
  0x0000000115ea5a61: test   $0xf,%esp
  0x0000000115ea5a67: je     0x0000000115ea5a7f
  0x0000000115ea5a6d: sub    $0x8,%rsp
  0x0000000115ea5a71: callq  0x000000010dced70a
  0x0000000115ea5a76: add    $0x8,%rsp
  0x0000000115ea5a7a: jmpq   0x0000000115ea5a84
  0x0000000115ea5a7f: callq  0x000000010dced70a
  0x0000000115ea5a84: vmovsd %xmm0,(%rsp)
  0x0000000115ea5a89: fldl   (%rsp)
  0x0000000115ea5a8c: add    $0x8,%rsp
  0x0000000115ea5a90: vmovdqu (%rsp),%xmm0
  0x0000000115ea5a95: vmovdqu 0x10(%rsp),%xmm1
  0x0000000115ea5a9b: vmovdqu 0x20(%rsp),%xmm2
  0x0000000115ea5aa1: vmovdqu 0x30(%rsp),%xmm3
  0x0000000115ea5aa7: vmovdqu 0x40(%rsp),%xmm4
  0x0000000115ea5aad: vmovdqu 0x50(%rsp),%xmm5
  0x0000000115ea5ab3: vmovdqu 0x60(%rsp),%xmm6
  0x0000000115ea5ab9: vmovdqu 0x70(%rsp),%xmm7
  0x0000000115ea5abf: vmovdqu 0x80(%rsp),%xmm8
  0x0000000115ea5ac8: vmovdqu 0x90(%rsp),%xmm9
  0x0000000115ea5ad1: vmovdqu 0xa0(%rsp),%xmm10
  0x0000000115ea5ada: vmovdqu 0xb0(%rsp),%xmm11
  0x0000000115ea5ae3: vmovdqu 0xc0(%rsp),%xmm12
  0x0000000115ea5aec: vmovdqu 0xd0(%rsp),%xmm13
  0x0000000115ea5af5: vmovdqu 0xe0(%rsp),%xmm14
  0x0000000115ea5afe: vmovdqu 0xf0(%rsp),%xmm15
  0x0000000115ea5b07: add    $0x100,%rsp
  0x0000000115ea5b0e: vinsertf128 $0x1,(%rsp),%ymm0,%ymm0
  0x0000000115ea5b15: vinsertf128 $0x1,0x10(%rsp),%ymm1,%ymm1
  0x0000000115ea5b1d: vinsertf128 $0x1,0x20(%rsp),%ymm2,%ymm2
  0x0000000115ea5b25: vinsertf128 $0x1,0x30(%rsp),%ymm3,%ymm3
  0x0000000115ea5b2d: vinsertf128 $0x1,0x40(%rsp),%ymm4,%ymm4
  0x0000000115ea5b35: vinsertf128 $0x1,0x50(%rsp),%ymm5,%ymm5
  0x0000000115ea5b3d: vinsertf128 $0x1,0x60(%rsp),%ymm6,%ymm6
  0x0000000115ea5b45: vinsertf128 $0x1,0x70(%rsp),%ymm7,%ymm7
  0x0000000115ea5b4d: vinsertf128 $0x1,0x80(%rsp),%ymm8,%ymm8
  0x0000000115ea5b58: vinsertf128 $0x1,0x90(%rsp),%ymm9,%ymm9
  0x0000000115ea5b63: vinsertf128 $0x1,0xa0(%rsp),%ymm10,%ymm10
  0x0000000115ea5b6e: vinsertf128 $0x1,0xb0(%rsp),%ymm11,%ymm11
  0x0000000115ea5b79: vinsertf128 $0x1,0xc0(%rsp),%ymm12,%ymm12
  0x0000000115ea5b84: vinsertf128 $0x1,0xd0(%rsp),%ymm13,%ymm13
  0x0000000115ea5b8f: vinsertf128 $0x1,0xe0(%rsp),%ymm14,%ymm14
  0x0000000115ea5b9a: vinsertf128 $0x1,0xf0(%rsp),%ymm15,%ymm15
  0x0000000115ea5ba5: add    $0x100,%rsp
  0x0000000115ea5bac: mov    (%rsp),%r15
  0x0000000115ea5bb0: mov    0x8(%rsp),%r14
  0x0000000115ea5bb5: mov    0x10(%rsp),%r13
  0x0000000115ea5bba: mov    0x18(%rsp),%r12
  0x0000000115ea5bbf: mov    0x20(%rsp),%r11
  0x0000000115ea5bc4: mov    0x28(%rsp),%r10
  0x0000000115ea5bc9: mov    0x30(%rsp),%r9
  0x0000000115ea5bce: mov    0x38(%rsp),%r8
  0x0000000115ea5bd3: mov    0x40(%rsp),%rdi
  0x0000000115ea5bd8: mov    0x48(%rsp),%rsi
  0x0000000115ea5bdd: mov    0x50(%rsp),%rbp
  0x0000000115ea5be2: mov    0x60(%rsp),%rbx
  0x0000000115ea5be7: mov    0x68(%rsp),%rdx
  0x0000000115ea5bec: mov    0x70(%rsp),%rcx
  0x0000000115ea5bf1: mov    0x78(%rsp),%rax
  0x0000000115ea5bf6: add    $0x80,%rsp
  0x0000000115ea5bfd: sub    $0x10,%rsp
  0x0000000115ea5c01: fstpl  (%rsp)
  0x0000000115ea5c04: vmovsd (%rsp),%xmm0
  0x0000000115ea5c09: add    $0x10,%rsp
  0x0000000115ea5c0d: pop    %rax
  0x0000000115ea5c0e: mov    %r13,%rsp
  0x0000000115ea5c11: jmpq   *%rax
  0x0000000115ea5c13: nopl   0x0(%rax,%rax,1)
  0x0000000115ea5c18: add    %al,(%rax)
  0x0000000115ea5c1a: add    %al,(%rax)
  0x0000000115ea5c1c: add    %al,(%rax)
  0x0000000115ea5c1e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_abs)  [0x0000000115ea5c40, 0x0000000115ea5c60]  32 bytes

  0x0000000115ea5c40: fldl   0x8(%rsp)
  0x0000000115ea5c44: fabs   
  0x0000000115ea5c46: sub    $0x10,%rsp
  0x0000000115ea5c4a: fstpl  (%rsp)
  0x0000000115ea5c4d: vmovsd (%rsp),%xmm0
  0x0000000115ea5c52: add    $0x10,%rsp
  0x0000000115ea5c56: pop    %rax
  0x0000000115ea5c57: mov    %r13,%rsp
  0x0000000115ea5c5a: jmpq   *%rax
  0x0000000115ea5c5c: nopl   0x0(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_sqrt)  [0x0000000115ea5c80, 0x0000000115ea5ca0]  32 bytes

  0x0000000115ea5c80: vsqrtsd 0x8(%rsp),%xmm0,%xmm0
  0x0000000115ea5c86: pop    %rax
  0x0000000115ea5c87: mov    %r13,%rsp
  0x0000000115ea5c8a: jmpq   *%rax
  0x0000000115ea5c8c: nopl   0x0(%rax)
  0x0000000115ea5c90: add    %al,(%rax)
  0x0000000115ea5c92: add    %al,(%rax)
  0x0000000115ea5c94: add    %al,(%rax)
  0x0000000115ea5c96: add    %al,(%rax)
  0x0000000115ea5c98: add    %al,(%rax)
  0x0000000115ea5c9a: add    %al,(%rax)
  0x0000000115ea5c9c: add    %al,(%rax)
  0x0000000115ea5c9e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_log)  [0x0000000115ea5cc0, 0x0000000115ea5ce0]  32 bytes

  0x0000000115ea5cc0: fldl   0x8(%rsp)
  0x0000000115ea5cc4: fldln2 
  0x0000000115ea5cc6: fxch   %st(1)
  0x0000000115ea5cc8: fyl2x  
  0x0000000115ea5cca: sub    $0x10,%rsp
  0x0000000115ea5cce: fstpl  (%rsp)
  0x0000000115ea5cd1: vmovsd (%rsp),%xmm0
  0x0000000115ea5cd6: add    $0x10,%rsp
  0x0000000115ea5cda: pop    %rax
  0x0000000115ea5cdb: mov    %r13,%rsp
  0x0000000115ea5cde: jmpq   *%rax

----------------------------------------------------------------------
method entry point (kind = java_lang_math_log10)  [0x0000000115ea5d00, 0x0000000115ea5d20]  32 bytes

  0x0000000115ea5d00: fldl   0x8(%rsp)
  0x0000000115ea5d04: fldlg2 
  0x0000000115ea5d06: fxch   %st(1)
  0x0000000115ea5d08: fyl2x  
  0x0000000115ea5d0a: sub    $0x10,%rsp
  0x0000000115ea5d0e: fstpl  (%rsp)
  0x0000000115ea5d11: vmovsd (%rsp),%xmm0
  0x0000000115ea5d16: add    $0x10,%rsp
  0x0000000115ea5d1a: pop    %rax
  0x0000000115ea5d1b: mov    %r13,%rsp
  0x0000000115ea5d1e: jmpq   *%rax

----------------------------------------------------------------------
method entry point (kind = java_lang_math_exp)  [0x0000000115ea5d40, 0x0000000115ea6100]  960 bytes

  0x0000000115ea5d40: fldl   0x8(%rsp)
  0x0000000115ea5d44: fld    %st(0)
  0x0000000115ea5d46: sub    $0x8,%rsp
  0x0000000115ea5d4a: fstcw  (%rsp)
  0x0000000115ea5d4e: mov    (%rsp),%eax
  0x0000000115ea5d51: or     $0x300,%eax
  0x0000000115ea5d57: push   %rax
  0x0000000115ea5d58: fldcw  (%rsp)
  0x0000000115ea5d5b: pop    %rax
  0x0000000115ea5d5c: fldl2e 
  0x0000000115ea5d5e: fmulp  %st,%st(1)
  0x0000000115ea5d60: sub    $0x8,%rsp
  0x0000000115ea5d64: fld    %st(0)
  0x0000000115ea5d66: frndint 
  0x0000000115ea5d68: fsubr  %st,%st(1)
  0x0000000115ea5d6a: fistpl (%rsp)
  0x0000000115ea5d6d: f2xm1  
  0x0000000115ea5d6f: fld1   
  0x0000000115ea5d71: faddp  %st,%st(1)
  0x0000000115ea5d73: mov    (%rsp),%eax
  0x0000000115ea5d76: mov    $0xfffff800,%ecx
  0x0000000115ea5d7b: add    $0x3ff,%eax
  0x0000000115ea5d81: mov    %eax,%edx
  0x0000000115ea5d83: shl    $0x14,%eax
  0x0000000115ea5d86: add    $0x1,%edx
  0x0000000115ea5d89: cmove  %ecx,%eax
  0x0000000115ea5d8c: cmp    $0x1,%edx
  0x0000000115ea5d8f: cmove  %ecx,%eax
  0x0000000115ea5d92: test   %edx,%ecx
  0x0000000115ea5d94: cmovne %ecx,%eax
  0x0000000115ea5d97: mov    %eax,0x4(%rsp)
  0x0000000115ea5d9b: movl   $0x0,(%rsp)
  0x0000000115ea5da2: fmull  (%rsp)
  0x0000000115ea5da5: add    $0x8,%rsp
  0x0000000115ea5da9: fldcw  (%rsp)
  0x0000000115ea5dac: add    $0x8,%rsp
  0x0000000115ea5db0: fucomi %st(0),%st
  0x0000000115ea5db2: jp     0x0000000115ea5dbf
  0x0000000115ea5db8: ffree  %st(1)
  0x0000000115ea5dba: jmpq   0x0000000115ea60dd
  0x0000000115ea5dbf: ffree  %st(0)
  0x0000000115ea5dc1: fincstp 
  0x0000000115ea5dc3: mov    %rsp,-0x28(%rsp)
  0x0000000115ea5dc8: sub    $0x80,%rsp
  0x0000000115ea5dcf: mov    %rax,0x78(%rsp)
  0x0000000115ea5dd4: mov    %rcx,0x70(%rsp)
  0x0000000115ea5dd9: mov    %rdx,0x68(%rsp)
  0x0000000115ea5dde: mov    %rbx,0x60(%rsp)
  0x0000000115ea5de3: mov    %rbp,0x50(%rsp)
  0x0000000115ea5de8: mov    %rsi,0x48(%rsp)
  0x0000000115ea5ded: mov    %rdi,0x40(%rsp)
  0x0000000115ea5df2: mov    %r8,0x38(%rsp)
  0x0000000115ea5df7: mov    %r9,0x30(%rsp)
  0x0000000115ea5dfc: mov    %r10,0x28(%rsp)
  0x0000000115ea5e01: mov    %r11,0x20(%rsp)
  0x0000000115ea5e06: mov    %r12,0x18(%rsp)
  0x0000000115ea5e0b: mov    %r13,0x10(%rsp)
  0x0000000115ea5e10: mov    %r14,0x8(%rsp)
  0x0000000115ea5e15: mov    %r15,(%rsp)
  0x0000000115ea5e19: sub    $0x100,%rsp
  0x0000000115ea5e20: vextractf128 $0x1,%ymm0,(%rsp)
  0x0000000115ea5e27: vextractf128 $0x1,%ymm1,0x10(%rsp)
  0x0000000115ea5e2f: vextractf128 $0x1,%ymm2,0x20(%rsp)
  0x0000000115ea5e37: vextractf128 $0x1,%ymm3,0x30(%rsp)
  0x0000000115ea5e3f: vextractf128 $0x1,%ymm4,0x40(%rsp)
  0x0000000115ea5e47: vextractf128 $0x1,%ymm5,0x50(%rsp)
  0x0000000115ea5e4f: vextractf128 $0x1,%ymm6,0x60(%rsp)
  0x0000000115ea5e57: vextractf128 $0x1,%ymm7,0x70(%rsp)
  0x0000000115ea5e5f: vextractf128 $0x1,%ymm8,0x80(%rsp)
  0x0000000115ea5e6a: vextractf128 $0x1,%ymm9,0x90(%rsp)
  0x0000000115ea5e75: vextractf128 $0x1,%ymm10,0xa0(%rsp)
  0x0000000115ea5e80: vextractf128 $0x1,%ymm11,0xb0(%rsp)
  0x0000000115ea5e8b: vextractf128 $0x1,%ymm12,0xc0(%rsp)
  0x0000000115ea5e96: vextractf128 $0x1,%ymm13,0xd0(%rsp)
  0x0000000115ea5ea1: vextractf128 $0x1,%ymm14,0xe0(%rsp)
  0x0000000115ea5eac: vextractf128 $0x1,%ymm15,0xf0(%rsp)
  0x0000000115ea5eb7: sub    $0x100,%rsp
  0x0000000115ea5ebe: vmovdqu %xmm0,(%rsp)
  0x0000000115ea5ec3: vmovdqu %xmm1,0x10(%rsp)
  0x0000000115ea5ec9: vmovdqu %xmm2,0x20(%rsp)
  0x0000000115ea5ecf: vmovdqu %xmm3,0x30(%rsp)
  0x0000000115ea5ed5: vmovdqu %xmm4,0x40(%rsp)
  0x0000000115ea5edb: vmovdqu %xmm5,0x50(%rsp)
  0x0000000115ea5ee1: vmovdqu %xmm6,0x60(%rsp)
  0x0000000115ea5ee7: vmovdqu %xmm7,0x70(%rsp)
  0x0000000115ea5eed: vmovdqu %xmm8,0x80(%rsp)
  0x0000000115ea5ef6: vmovdqu %xmm9,0x90(%rsp)
  0x0000000115ea5eff: vmovdqu %xmm10,0xa0(%rsp)
  0x0000000115ea5f08: vmovdqu %xmm11,0xb0(%rsp)
  0x0000000115ea5f11: vmovdqu %xmm12,0xc0(%rsp)
  0x0000000115ea5f1a: vmovdqu %xmm13,0xd0(%rsp)
  0x0000000115ea5f23: vmovdqu %xmm14,0xe0(%rsp)
  0x0000000115ea5f2c: vmovdqu %xmm15,0xf0(%rsp)
  0x0000000115ea5f35: sub    $0x8,%rsp
  0x0000000115ea5f39: fstpl  (%rsp)
  0x0000000115ea5f3c: vmovsd (%rsp),%xmm0
  0x0000000115ea5f41: test   $0xf,%esp
  0x0000000115ea5f47: je     0x0000000115ea5f5f
  0x0000000115ea5f4d: sub    $0x8,%rsp
  0x0000000115ea5f51: callq  0x000000010dce9d9e
  0x0000000115ea5f56: add    $0x8,%rsp
  0x0000000115ea5f5a: jmpq   0x0000000115ea5f64
  0x0000000115ea5f5f: callq  0x000000010dce9d9e
  0x0000000115ea5f64: vmovsd %xmm0,(%rsp)
  0x0000000115ea5f69: fldl   (%rsp)
  0x0000000115ea5f6c: add    $0x8,%rsp
  0x0000000115ea5f70: vmovdqu (%rsp),%xmm0
  0x0000000115ea5f75: vmovdqu 0x10(%rsp),%xmm1
  0x0000000115ea5f7b: vmovdqu 0x20(%rsp),%xmm2
  0x0000000115ea5f81: vmovdqu 0x30(%rsp),%xmm3
  0x0000000115ea5f87: vmovdqu 0x40(%rsp),%xmm4
  0x0000000115ea5f8d: vmovdqu 0x50(%rsp),%xmm5
  0x0000000115ea5f93: vmovdqu 0x60(%rsp),%xmm6
  0x0000000115ea5f99: vmovdqu 0x70(%rsp),%xmm7
  0x0000000115ea5f9f: vmovdqu 0x80(%rsp),%xmm8
  0x0000000115ea5fa8: vmovdqu 0x90(%rsp),%xmm9
  0x0000000115ea5fb1: vmovdqu 0xa0(%rsp),%xmm10
  0x0000000115ea5fba: vmovdqu 0xb0(%rsp),%xmm11
  0x0000000115ea5fc3: vmovdqu 0xc0(%rsp),%xmm12
  0x0000000115ea5fcc: vmovdqu 0xd0(%rsp),%xmm13
  0x0000000115ea5fd5: vmovdqu 0xe0(%rsp),%xmm14
  0x0000000115ea5fde: vmovdqu 0xf0(%rsp),%xmm15
  0x0000000115ea5fe7: add    $0x100,%rsp
  0x0000000115ea5fee: vinsertf128 $0x1,(%rsp),%ymm0,%ymm0
  0x0000000115ea5ff5: vinsertf128 $0x1,0x10(%rsp),%ymm1,%ymm1
  0x0000000115ea5ffd: vinsertf128 $0x1,0x20(%rsp),%ymm2,%ymm2
  0x0000000115ea6005: vinsertf128 $0x1,0x30(%rsp),%ymm3,%ymm3
  0x0000000115ea600d: vinsertf128 $0x1,0x40(%rsp),%ymm4,%ymm4
  0x0000000115ea6015: vinsertf128 $0x1,0x50(%rsp),%ymm5,%ymm5
  0x0000000115ea601d: vinsertf128 $0x1,0x60(%rsp),%ymm6,%ymm6
  0x0000000115ea6025: vinsertf128 $0x1,0x70(%rsp),%ymm7,%ymm7
  0x0000000115ea602d: vinsertf128 $0x1,0x80(%rsp),%ymm8,%ymm8
  0x0000000115ea6038: vinsertf128 $0x1,0x90(%rsp),%ymm9,%ymm9
  0x0000000115ea6043: vinsertf128 $0x1,0xa0(%rsp),%ymm10,%ymm10
  0x0000000115ea604e: vinsertf128 $0x1,0xb0(%rsp),%ymm11,%ymm11
  0x0000000115ea6059: vinsertf128 $0x1,0xc0(%rsp),%ymm12,%ymm12
  0x0000000115ea6064: vinsertf128 $0x1,0xd0(%rsp),%ymm13,%ymm13
  0x0000000115ea606f: vinsertf128 $0x1,0xe0(%rsp),%ymm14,%ymm14
  0x0000000115ea607a: vinsertf128 $0x1,0xf0(%rsp),%ymm15,%ymm15
  0x0000000115ea6085: add    $0x100,%rsp
  0x0000000115ea608c: mov    (%rsp),%r15
  0x0000000115ea6090: mov    0x8(%rsp),%r14
  0x0000000115ea6095: mov    0x10(%rsp),%r13
  0x0000000115ea609a: mov    0x18(%rsp),%r12
  0x0000000115ea609f: mov    0x20(%rsp),%r11
  0x0000000115ea60a4: mov    0x28(%rsp),%r10
  0x0000000115ea60a9: mov    0x30(%rsp),%r9
  0x0000000115ea60ae: mov    0x38(%rsp),%r8
  0x0000000115ea60b3: mov    0x40(%rsp),%rdi
  0x0000000115ea60b8: mov    0x48(%rsp),%rsi
  0x0000000115ea60bd: mov    0x50(%rsp),%rbp
  0x0000000115ea60c2: mov    0x60(%rsp),%rbx
  0x0000000115ea60c7: mov    0x68(%rsp),%rdx
  0x0000000115ea60cc: mov    0x70(%rsp),%rcx
  0x0000000115ea60d1: mov    0x78(%rsp),%rax
  0x0000000115ea60d6: add    $0x80,%rsp
  0x0000000115ea60dd: sub    $0x10,%rsp
  0x0000000115ea60e1: fstpl  (%rsp)
  0x0000000115ea60e4: vmovsd (%rsp),%xmm0
  0x0000000115ea60e9: add    $0x10,%rsp
  0x0000000115ea60ed: pop    %rax
  0x0000000115ea60ee: mov    %r13,%rsp
  0x0000000115ea60f1: jmpq   *%rax
  0x0000000115ea60f3: nopl   0x0(%rax,%rax,1)
  0x0000000115ea60f8: add    %al,(%rax)
  0x0000000115ea60fa: add    %al,(%rax)
  0x0000000115ea60fc: add    %al,(%rax)
  0x0000000115ea60fe: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_pow)  [0x0000000115ea6120, 0x0000000115ea65c0]  1184 bytes

  0x0000000115ea6120: fldl   0x8(%rsp)
  0x0000000115ea6124: fldl   0x18(%rsp)
  0x0000000115ea6128: movabs $0x10e032ee8,%rax
  0x0000000115ea6132: fldl   (%rax)
  0x0000000115ea6134: fucomip %st(2),%st
  0x0000000115ea6136: jp     0x0000000115ea614f
  0x0000000115ea613c: jne    0x0000000115ea614f
  0x0000000115ea6142: fxch   %st(1)
  0x0000000115ea6144: ffree  %st(0)
  0x0000000115ea6146: fincstp 
  0x0000000115ea6148: fmul   %st(0),%st
  0x0000000115ea614a: jmpq   0x0000000115ea659e
  0x0000000115ea614f: fldz   
  0x0000000115ea6151: fucomip %st(1),%st
  0x0000000115ea6153: ja     0x0000000115ea61d6
  0x0000000115ea6159: fld    %st(1)
  0x0000000115ea615b: fld    %st(1)
  0x0000000115ea615d: sub    $0x8,%rsp
  0x0000000115ea6161: fstcw  (%rsp)
  0x0000000115ea6165: mov    (%rsp),%eax
  0x0000000115ea6168: or     $0x300,%eax
  0x0000000115ea616e: push   %rax
  0x0000000115ea616f: fldcw  (%rsp)
  0x0000000115ea6172: pop    %rax
  0x0000000115ea6173: fyl2x  
  0x0000000115ea6175: sub    $0x8,%rsp
  0x0000000115ea6179: fld    %st(0)
  0x0000000115ea617b: frndint 
  0x0000000115ea617d: fsubr  %st,%st(1)
  0x0000000115ea617f: fistpl (%rsp)
  0x0000000115ea6182: f2xm1  
  0x0000000115ea6184: fld1   
  0x0000000115ea6186: faddp  %st,%st(1)
  0x0000000115ea6188: mov    (%rsp),%eax
  0x0000000115ea618b: mov    $0xfffff800,%ecx
  0x0000000115ea6190: add    $0x3ff,%eax
  0x0000000115ea6196: mov    %eax,%edx
  0x0000000115ea6198: shl    $0x14,%eax
  0x0000000115ea619b: add    $0x1,%edx
  0x0000000115ea619e: cmove  %ecx,%eax
  0x0000000115ea61a1: cmp    $0x1,%edx
  0x0000000115ea61a4: cmove  %ecx,%eax
  0x0000000115ea61a7: test   %edx,%ecx
  0x0000000115ea61a9: cmovne %ecx,%eax
  0x0000000115ea61ac: mov    %eax,0x4(%rsp)
  0x0000000115ea61b0: movl   $0x0,(%rsp)
  0x0000000115ea61b7: fmull  (%rsp)
  0x0000000115ea61ba: add    $0x8,%rsp
  0x0000000115ea61be: fldcw  (%rsp)
  0x0000000115ea61c1: add    $0x8,%rsp
  0x0000000115ea61c5: fucomi %st(0),%st
  0x0000000115ea61c7: jp     0x0000000115ea6276
  0x0000000115ea61cd: ffree  %st(2)
  0x0000000115ea61cf: ffree  %st(1)
  0x0000000115ea61d1: jmpq   0x0000000115ea659e
  0x0000000115ea61d6: fld    %st(1)
  0x0000000115ea61d8: frndint 
  0x0000000115ea61da: fucomi %st(2),%st
  0x0000000115ea61dc: jne    0x0000000115ea6276
  0x0000000115ea61e2: sub    $0x8,%rsp
  0x0000000115ea61e6: fistpll (%rsp)
  0x0000000115ea61e9: fld    %st(1)
  0x0000000115ea61eb: fld    %st(1)
  0x0000000115ea61ed: fabs   
  0x0000000115ea61ef: sub    $0x8,%rsp
  0x0000000115ea61f3: fstcw  (%rsp)
  0x0000000115ea61f7: mov    (%rsp),%eax
  0x0000000115ea61fa: or     $0x300,%eax
  0x0000000115ea6200: push   %rax
  0x0000000115ea6201: fldcw  (%rsp)
  0x0000000115ea6204: pop    %rax
  0x0000000115ea6205: fyl2x  
  0x0000000115ea6207: sub    $0x8,%rsp
  0x0000000115ea620b: fld    %st(0)
  0x0000000115ea620d: frndint 
  0x0000000115ea620f: fsubr  %st,%st(1)
  0x0000000115ea6211: fistpl (%rsp)
  0x0000000115ea6214: f2xm1  
  0x0000000115ea6216: fld1   
  0x0000000115ea6218: faddp  %st,%st(1)
  0x0000000115ea621a: mov    (%rsp),%eax
  0x0000000115ea621d: mov    $0xfffff800,%ecx
  0x0000000115ea6222: add    $0x3ff,%eax
  0x0000000115ea6228: mov    %eax,%edx
  0x0000000115ea622a: shl    $0x14,%eax
  0x0000000115ea622d: add    $0x1,%edx
  0x0000000115ea6230: cmove  %ecx,%eax
  0x0000000115ea6233: cmp    $0x1,%edx
  0x0000000115ea6236: cmove  %ecx,%eax
  0x0000000115ea6239: test   %edx,%ecx
  0x0000000115ea623b: cmovne %ecx,%eax
  0x0000000115ea623e: mov    %eax,0x4(%rsp)
  0x0000000115ea6242: movl   $0x0,(%rsp)
  0x0000000115ea6249: fmull  (%rsp)
  0x0000000115ea624c: add    $0x8,%rsp
  0x0000000115ea6250: fldcw  (%rsp)
  0x0000000115ea6253: add    $0x8,%rsp
  0x0000000115ea6257: fucomi %st(0),%st
  0x0000000115ea6259: pop    %rax
  0x0000000115ea625a: jp     0x0000000115ea6276
  0x0000000115ea6260: ffree  %st(2)
  0x0000000115ea6262: ffree  %st(1)
  0x0000000115ea6264: test   $0x1,%eax
  0x0000000115ea6269: je     0x0000000115ea659e
  0x0000000115ea626f: fchs   
  0x0000000115ea6271: jmpq   0x0000000115ea659e
  0x0000000115ea6276: ffree  %st(0)
  0x0000000115ea6278: fincstp 
  0x0000000115ea627a: mov    %rsp,-0x28(%rsp)
  0x0000000115ea627f: sub    $0x80,%rsp
  0x0000000115ea6286: mov    %rax,0x78(%rsp)
  0x0000000115ea628b: mov    %rcx,0x70(%rsp)
  0x0000000115ea6290: mov    %rdx,0x68(%rsp)
  0x0000000115ea6295: mov    %rbx,0x60(%rsp)
  0x0000000115ea629a: mov    %rbp,0x50(%rsp)
  0x0000000115ea629f: mov    %rsi,0x48(%rsp)
  0x0000000115ea62a4: mov    %rdi,0x40(%rsp)
  0x0000000115ea62a9: mov    %r8,0x38(%rsp)
  0x0000000115ea62ae: mov    %r9,0x30(%rsp)
  0x0000000115ea62b3: mov    %r10,0x28(%rsp)
  0x0000000115ea62b8: mov    %r11,0x20(%rsp)
  0x0000000115ea62bd: mov    %r12,0x18(%rsp)
  0x0000000115ea62c2: mov    %r13,0x10(%rsp)
  0x0000000115ea62c7: mov    %r14,0x8(%rsp)
  0x0000000115ea62cc: mov    %r15,(%rsp)
  0x0000000115ea62d0: sub    $0x100,%rsp
  0x0000000115ea62d7: vextractf128 $0x1,%ymm0,(%rsp)
  0x0000000115ea62de: vextractf128 $0x1,%ymm1,0x10(%rsp)
  0x0000000115ea62e6: vextractf128 $0x1,%ymm2,0x20(%rsp)
  0x0000000115ea62ee: vextractf128 $0x1,%ymm3,0x30(%rsp)
  0x0000000115ea62f6: vextractf128 $0x1,%ymm4,0x40(%rsp)
  0x0000000115ea62fe: vextractf128 $0x1,%ymm5,0x50(%rsp)
  0x0000000115ea6306: vextractf128 $0x1,%ymm6,0x60(%rsp)
  0x0000000115ea630e: vextractf128 $0x1,%ymm7,0x70(%rsp)
  0x0000000115ea6316: vextractf128 $0x1,%ymm8,0x80(%rsp)
  0x0000000115ea6321: vextractf128 $0x1,%ymm9,0x90(%rsp)
  0x0000000115ea632c: vextractf128 $0x1,%ymm10,0xa0(%rsp)
  0x0000000115ea6337: vextractf128 $0x1,%ymm11,0xb0(%rsp)
  0x0000000115ea6342: vextractf128 $0x1,%ymm12,0xc0(%rsp)
  0x0000000115ea634d: vextractf128 $0x1,%ymm13,0xd0(%rsp)
  0x0000000115ea6358: vextractf128 $0x1,%ymm14,0xe0(%rsp)
  0x0000000115ea6363: vextractf128 $0x1,%ymm15,0xf0(%rsp)
  0x0000000115ea636e: sub    $0x100,%rsp
  0x0000000115ea6375: vmovdqu %xmm0,(%rsp)
  0x0000000115ea637a: vmovdqu %xmm1,0x10(%rsp)
  0x0000000115ea6380: vmovdqu %xmm2,0x20(%rsp)
  0x0000000115ea6386: vmovdqu %xmm3,0x30(%rsp)
  0x0000000115ea638c: vmovdqu %xmm4,0x40(%rsp)
  0x0000000115ea6392: vmovdqu %xmm5,0x50(%rsp)
  0x0000000115ea6398: vmovdqu %xmm6,0x60(%rsp)
  0x0000000115ea639e: vmovdqu %xmm7,0x70(%rsp)
  0x0000000115ea63a4: vmovdqu %xmm8,0x80(%rsp)
  0x0000000115ea63ad: vmovdqu %xmm9,0x90(%rsp)
  0x0000000115ea63b6: vmovdqu %xmm10,0xa0(%rsp)
  0x0000000115ea63bf: vmovdqu %xmm11,0xb0(%rsp)
  0x0000000115ea63c8: vmovdqu %xmm12,0xc0(%rsp)
  0x0000000115ea63d1: vmovdqu %xmm13,0xd0(%rsp)
  0x0000000115ea63da: vmovdqu %xmm14,0xe0(%rsp)
  0x0000000115ea63e3: vmovdqu %xmm15,0xf0(%rsp)
  0x0000000115ea63ec: sub    $0x10,%rsp
  0x0000000115ea63f0: fstpl  (%rsp)
  0x0000000115ea63f3: fstpl  0x8(%rsp)
  0x0000000115ea63f7: vmovsd (%rsp),%xmm0
  0x0000000115ea63fc: vmovsd 0x8(%rsp),%xmm1
  0x0000000115ea6402: test   $0xf,%esp
  0x0000000115ea6408: je     0x0000000115ea6420
  0x0000000115ea640e: sub    $0x8,%rsp
  0x0000000115ea6412: callq  0x000000010dceb16e
  0x0000000115ea6417: add    $0x8,%rsp
  0x0000000115ea641b: jmpq   0x0000000115ea6425
  0x0000000115ea6420: callq  0x000000010dceb16e
  0x0000000115ea6425: vmovsd %xmm0,(%rsp)
  0x0000000115ea642a: fldl   (%rsp)
  0x0000000115ea642d: add    $0x10,%rsp
  0x0000000115ea6431: vmovdqu (%rsp),%xmm0
  0x0000000115ea6436: vmovdqu 0x10(%rsp),%xmm1
  0x0000000115ea643c: vmovdqu 0x20(%rsp),%xmm2
  0x0000000115ea6442: vmovdqu 0x30(%rsp),%xmm3
  0x0000000115ea6448: vmovdqu 0x40(%rsp),%xmm4
  0x0000000115ea644e: vmovdqu 0x50(%rsp),%xmm5
  0x0000000115ea6454: vmovdqu 0x60(%rsp),%xmm6
  0x0000000115ea645a: vmovdqu 0x70(%rsp),%xmm7
  0x0000000115ea6460: vmovdqu 0x80(%rsp),%xmm8
  0x0000000115ea6469: vmovdqu 0x90(%rsp),%xmm9
  0x0000000115ea6472: vmovdqu 0xa0(%rsp),%xmm10
  0x0000000115ea647b: vmovdqu 0xb0(%rsp),%xmm11
  0x0000000115ea6484: vmovdqu 0xc0(%rsp),%xmm12
  0x0000000115ea648d: vmovdqu 0xd0(%rsp),%xmm13
  0x0000000115ea6496: vmovdqu 0xe0(%rsp),%xmm14
  0x0000000115ea649f: vmovdqu 0xf0(%rsp),%xmm15
  0x0000000115ea64a8: add    $0x100,%rsp
  0x0000000115ea64af: vinsertf128 $0x1,(%rsp),%ymm0,%ymm0
  0x0000000115ea64b6: vinsertf128 $0x1,0x10(%rsp),%ymm1,%ymm1
  0x0000000115ea64be: vinsertf128 $0x1,0x20(%rsp),%ymm2,%ymm2
  0x0000000115ea64c6: vinsertf128 $0x1,0x30(%rsp),%ymm3,%ymm3
  0x0000000115ea64ce: vinsertf128 $0x1,0x40(%rsp),%ymm4,%ymm4
  0x0000000115ea64d6: vinsertf128 $0x1,0x50(%rsp),%ymm5,%ymm5
  0x0000000115ea64de: vinsertf128 $0x1,0x60(%rsp),%ymm6,%ymm6
  0x0000000115ea64e6: vinsertf128 $0x1,0x70(%rsp),%ymm7,%ymm7
  0x0000000115ea64ee: vinsertf128 $0x1,0x80(%rsp),%ymm8,%ymm8
  0x0000000115ea64f9: vinsertf128 $0x1,0x90(%rsp),%ymm9,%ymm9
  0x0000000115ea6504: vinsertf128 $0x1,0xa0(%rsp),%ymm10,%ymm10
  0x0000000115ea650f: vinsertf128 $0x1,0xb0(%rsp),%ymm11,%ymm11
  0x0000000115ea651a: vinsertf128 $0x1,0xc0(%rsp),%ymm12,%ymm12
  0x0000000115ea6525: vinsertf128 $0x1,0xd0(%rsp),%ymm13,%ymm13
  0x0000000115ea6530: vinsertf128 $0x1,0xe0(%rsp),%ymm14,%ymm14
  0x0000000115ea653b: vinsertf128 $0x1,0xf0(%rsp),%ymm15,%ymm15
  0x0000000115ea6546: add    $0x100,%rsp
  0x0000000115ea654d: mov    (%rsp),%r15
  0x0000000115ea6551: mov    0x8(%rsp),%r14
  0x0000000115ea6556: mov    0x10(%rsp),%r13
  0x0000000115ea655b: mov    0x18(%rsp),%r12
  0x0000000115ea6560: mov    0x20(%rsp),%r11
  0x0000000115ea6565: mov    0x28(%rsp),%r10
  0x0000000115ea656a: mov    0x30(%rsp),%r9
  0x0000000115ea656f: mov    0x38(%rsp),%r8
  0x0000000115ea6574: mov    0x40(%rsp),%rdi
  0x0000000115ea6579: mov    0x48(%rsp),%rsi
  0x0000000115ea657e: mov    0x50(%rsp),%rbp
  0x0000000115ea6583: mov    0x60(%rsp),%rbx
  0x0000000115ea6588: mov    0x68(%rsp),%rdx
  0x0000000115ea658d: mov    0x70(%rsp),%rcx
  0x0000000115ea6592: mov    0x78(%rsp),%rax
  0x0000000115ea6597: add    $0x80,%rsp
  0x0000000115ea659e: sub    $0x10,%rsp
  0x0000000115ea65a2: fstpl  (%rsp)
  0x0000000115ea65a5: vmovsd (%rsp),%xmm0
  0x0000000115ea65aa: add    $0x10,%rsp
  0x0000000115ea65ae: pop    %rax
  0x0000000115ea65af: mov    %r13,%rsp
  0x0000000115ea65b2: jmpq   *%rax
  0x0000000115ea65b4: nopl   0x0(%rax)
  0x0000000115ea65b8: add    %al,(%rax)
  0x0000000115ea65ba: add    %al,(%rax)
  0x0000000115ea65bc: add    %al,(%rax)
  0x0000000115ea65be: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_ref_reference_get)  [0x0000000115ea65e0, 0x0000000115ea6a60]  1152 bytes

  0x0000000115ea65e0: mov    0x8(%rbx),%rdx
  0x0000000115ea65e4: movzwl 0x2c(%rdx),%ecx
  0x0000000115ea65e8: movzwl 0x2a(%rdx),%edx
  0x0000000115ea65ec: sub    %ecx,%edx
  0x0000000115ea65ee: cmp    $0x1f6,%edx
  0x0000000115ea65f4: jbe    0x0000000115ea662d
  0x0000000115ea65fa: mov    %rdx,%rax
  0x0000000115ea65fd: shl    $0x3,%rax
  0x0000000115ea6601: add    $0x50,%rax
  0x0000000115ea6605: add    0x148(%r15),%rax
  0x0000000115ea660c: sub    0x150(%r15),%rax
  0x0000000115ea6613: add    $0x14000,%rax
  0x0000000115ea661a: cmp    %rax,%rsp
  0x0000000115ea661d: ja     0x0000000115ea662d
  0x0000000115ea6623: pop    %rax
  0x0000000115ea6624: mov    %r13,%rsp
  0x0000000115ea6627: push   %rax
  0x0000000115ea6628: jmpq   0x0000000115e96520
  0x0000000115ea662d: pop    %rax
  0x0000000115ea662e: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea6633: test   %edx,%edx
  0x0000000115ea6635: jle    0x0000000115ea6644
  0x0000000115ea663b: pushq  $0x0
  0x0000000115ea6640: dec    %edx
  0x0000000115ea6642: jg     0x0000000115ea663b
  0x0000000115ea6644: push   %rax
  0x0000000115ea6645: push   %rbp
  0x0000000115ea6646: mov    %rsp,%rbp
  0x0000000115ea6649: push   %r13
  0x0000000115ea664b: pushq  $0x0
  0x0000000115ea6650: mov    0x8(%rbx),%r13
  0x0000000115ea6654: lea    0x30(%r13),%r13
  0x0000000115ea6658: push   %rbx
  0x0000000115ea6659: mov    0x10(%rbx),%rdx
  0x0000000115ea665d: test   %rdx,%rdx
  0x0000000115ea6660: je     0x0000000115ea666d
  0x0000000115ea6666: add    $0x100,%rdx
  0x0000000115ea666d: push   %rdx
  0x0000000115ea666e: mov    0x8(%rbx),%rdx
  0x0000000115ea6672: mov    0x8(%rdx),%rdx
  0x0000000115ea6676: mov    0x10(%rdx),%rdx
  0x0000000115ea667a: push   %rdx
  0x0000000115ea667b: push   %r14
  0x0000000115ea667d: push   %r13
  0x0000000115ea667f: pushq  $0x0
  0x0000000115ea6684: mov    %rsp,(%rsp)
  0x0000000115ea6688: movb   $0x1,0x295(%r15)
  0x0000000115ea6690: mov    -0x20(%rbp),%rax
  0x0000000115ea6694: test   %rax,%rax
  0x0000000115ea6697: je     0x0000000115ea6727
  0x0000000115ea669d: mov    -0x4(%rax),%ecx
  0x0000000115ea66a0: test   %ecx,%ecx
  0x0000000115ea66a2: js     0x0000000115ea6727
  0x0000000115ea66a8: add    %rcx,%rax
  0x0000000115ea66ab: mov    0x8(%rax),%rcx
  0x0000000115ea66af: sub    $0x2,%rcx
  0x0000000115ea66b3: mov    0x10(%rax,%rcx,8),%rdx
  0x0000000115ea66b8: neg    %rdx
  0x0000000115ea66bb: mov    (%r14,%rdx,8),%rdx
  0x0000000115ea66bf: test   %rdx,%rdx
  0x0000000115ea66c2: jne    0x0000000115ea66cf
  0x0000000115ea66c4: orq    $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea66cd: jmp    0x0000000115ea6721
  0x0000000115ea66cf: mov    0x8(%rdx),%edx
  0x0000000115ea66d2: shl    $0x3,%rdx
  0x0000000115ea66d6: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea66db: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea66e2: je     0x0000000115ea6721
  0x0000000115ea66e4: test   $0x2,%rdx
  0x0000000115ea66eb: jne    0x0000000115ea6721
  0x0000000115ea66ed: cmpq   $0x0,0x18(%rax,%rcx,8)
  0x0000000115ea66f6: je     0x0000000115ea671c
  0x0000000115ea66f8: cmpq   $0x1,0x18(%rax,%rcx,8)
  0x0000000115ea6701: je     0x0000000115ea671c
  0x0000000115ea6703: xor    0x18(%rax,%rcx,8),%rdx
  0x0000000115ea6708: test   $0xfffffffffffffffc,%rdx
  0x0000000115ea670f: je     0x0000000115ea6721
  0x0000000115ea6711: orq    $0x2,0x18(%rax,%rcx,8)
  0x0000000115ea671a: jmp    0x0000000115ea6721
  0x0000000115ea671c: mov    %rdx,0x18(%rax,%rcx,8)
  0x0000000115ea6721: sub    $0x2,%rcx
  0x0000000115ea6725: jns    0x0000000115ea66b3
  0x0000000115ea6727: mov    0x10(%rbx),%rax
  0x0000000115ea672b: test   %rax,%rax
  0x0000000115ea672e: je     0x0000000115ea6750
  0x0000000115ea6730: mov    0xdc(%rax),%ecx
  0x0000000115ea6736: add    $0x8,%ecx
  0x0000000115ea6739: mov    %ecx,0xdc(%rax)
  0x0000000115ea673f: and    $0x3f8,%ecx
  0x0000000115ea6745: je     0x0000000115ea69c3
  0x0000000115ea674b: jmpq   0x0000000115ea6807
  0x0000000115ea6750: mov    0x18(%rbx),%rax
  0x0000000115ea6754: test   %rax,%rax
  0x0000000115ea6757: jne    0x0000000115ea67f2
  0x0000000115ea675d: callq  0x0000000115ea6767
  0x0000000115ea6762: jmpq   0x0000000115ea67e5
  0x0000000115ea6767: mov    %rbx,%rsi
  0x0000000115ea676a: lea    0x8(%rsp),%rax
  0x0000000115ea676f: mov    %r13,-0x38(%rbp)
  0x0000000115ea6773: mov    %r15,%rdi
  0x0000000115ea6776: mov    %rbp,0x1e8(%r15)
  0x0000000115ea677d: mov    %rax,0x1d8(%r15)
  0x0000000115ea6784: test   $0xf,%esp
  0x0000000115ea678a: je     0x0000000115ea67a2
  0x0000000115ea6790: sub    $0x8,%rsp
  0x0000000115ea6794: callq  0x000000010dae6d98
  0x0000000115ea6799: add    $0x8,%rsp
  0x0000000115ea679d: jmpq   0x0000000115ea67a7
  0x0000000115ea67a2: callq  0x000000010dae6d98
  0x0000000115ea67a7: movabs $0x0,%r10
  0x0000000115ea67b1: mov    %r10,0x1d8(%r15)
  0x0000000115ea67b8: movabs $0x0,%r10
  0x0000000115ea67c2: mov    %r10,0x1e8(%r15)
  0x0000000115ea67c9: cmpq   $0x0,0x8(%r15)
  0x0000000115ea67d1: je     0x0000000115ea67dc
  0x0000000115ea67d7: jmpq   0x0000000115e916e0
  0x0000000115ea67dc: mov    -0x38(%rbp),%r13
  0x0000000115ea67e0: mov    -0x30(%rbp),%r14
  0x0000000115ea67e4: retq   
  0x0000000115ea67e5: mov    0x18(%rbx),%rax
  0x0000000115ea67e9: test   %rax,%rax
  0x0000000115ea67ec: je     0x0000000115ea6807
  0x0000000115ea67f2: mov    0x8(%rax),%ecx
  0x0000000115ea67f5: add    $0x8,%ecx
  0x0000000115ea67f8: mov    %ecx,0x8(%rax)
  0x0000000115ea67fb: and    $0x3f8,%ecx
  0x0000000115ea6801: je     0x0000000115ea69c3
  0x0000000115ea6807: mov    %eax,-0x1000(%rsp)
  0x0000000115ea680e: mov    %eax,-0x2000(%rsp)
  0x0000000115ea6815: mov    %eax,-0x3000(%rsp)
  0x0000000115ea681c: mov    %eax,-0x4000(%rsp)
  0x0000000115ea6823: mov    %eax,-0x5000(%rsp)
  0x0000000115ea682a: mov    %eax,-0x6000(%rsp)
  0x0000000115ea6831: mov    %eax,-0x7000(%rsp)
  0x0000000115ea6838: mov    %eax,-0x8000(%rsp)
  0x0000000115ea683f: mov    %eax,-0x9000(%rsp)
  0x0000000115ea6846: mov    %eax,-0xa000(%rsp)
  0x0000000115ea684d: mov    %eax,-0xb000(%rsp)
  0x0000000115ea6854: mov    %eax,-0xc000(%rsp)
  0x0000000115ea685b: mov    %eax,-0xd000(%rsp)
  0x0000000115ea6862: mov    %eax,-0xe000(%rsp)
  0x0000000115ea6869: mov    %eax,-0xf000(%rsp)
  0x0000000115ea6870: mov    %eax,-0x10000(%rsp)
  0x0000000115ea6877: mov    %eax,-0x11000(%rsp)
  0x0000000115ea687e: mov    %eax,-0x12000(%rsp)
  0x0000000115ea6885: mov    %eax,-0x13000(%rsp)
  0x0000000115ea688c: mov    %eax,-0x14000(%rsp)
  0x0000000115ea6893: movb   $0x0,0x295(%r15)
  0x0000000115ea689b: cmpb   $0x0,-0x7dbf5d8(%rip)        # 0x000000010e0e72ca
  0x0000000115ea68a2: je     0x0000000115ea68d2
  0x0000000115ea68a8: mov    -0x18(%rbp),%rsi
  0x0000000115ea68ac: mov    %r15,%rdi
  0x0000000115ea68af: test   $0xf,%esp
  0x0000000115ea68b5: je     0x0000000115ea68cd
  0x0000000115ea68bb: sub    $0x8,%rsp
  0x0000000115ea68bf: callq  0x000000010dce7724
  0x0000000115ea68c4: add    $0x8,%rsp
  0x0000000115ea68c8: jmpq   0x0000000115ea68d2
  0x0000000115ea68cd: callq  0x000000010dce7724
  0x0000000115ea68d2: movzbl 0x0(%r13),%ebx
  0x0000000115ea68d7: movabs $0x10e101840,%r10
  0x0000000115ea68e1: jmpq   *(%r10,%rbx,8)
  0x0000000115ea68e5: callq  0x0000000115ea68ef
  0x0000000115ea68ea: jmpq   0x0000000115ea696a
  0x0000000115ea68ef: lea    0x8(%rsp),%rax
  0x0000000115ea68f4: mov    %r13,-0x38(%rbp)
  0x0000000115ea68f8: mov    %r15,%rdi
  0x0000000115ea68fb: mov    %rbp,0x1e8(%r15)
  0x0000000115ea6902: mov    %rax,0x1d8(%r15)
  0x0000000115ea6909: test   $0xf,%esp
  0x0000000115ea690f: je     0x0000000115ea6927
  0x0000000115ea6915: sub    $0x8,%rsp
  0x0000000115ea6919: callq  0x000000010dae6f16
  0x0000000115ea691e: add    $0x8,%rsp
  0x0000000115ea6922: jmpq   0x0000000115ea692c
  0x0000000115ea6927: callq  0x000000010dae6f16
  0x0000000115ea692c: movabs $0x0,%r10
  0x0000000115ea6936: mov    %r10,0x1d8(%r15)
  0x0000000115ea693d: movabs $0x0,%r10
  0x0000000115ea6947: mov    %r10,0x1e8(%r15)
  0x0000000115ea694e: cmpq   $0x0,0x8(%r15)
  0x0000000115ea6956: je     0x0000000115ea6961
  0x0000000115ea695c: jmpq   0x0000000115e916e0
  0x0000000115ea6961: mov    -0x38(%rbp),%r13
  0x0000000115ea6965: mov    -0x30(%rbp),%r14
  0x0000000115ea6969: retq   
  0x0000000115ea696a: push   %rax
  0x0000000115ea696b: push   %rbx
  0x0000000115ea696c: mov    -0x18(%rbp),%rbx
  0x0000000115ea6970: mov    0x10(%rbx),%rax
  0x0000000115ea6974: test   %rax,%rax
  0x0000000115ea6977: je     0x0000000115ea69b4
  0x0000000115ea697d: mov    %r13,%rsi
  0x0000000115ea6980: mov    %rbx,%rdi
  0x0000000115ea6983: test   $0xf,%esp
  0x0000000115ea6989: je     0x0000000115ea69a1
  0x0000000115ea698f: sub    $0x8,%rsp
  0x0000000115ea6993: callq  0x000000010dae706c
  0x0000000115ea6998: add    $0x8,%rsp
  0x0000000115ea699c: jmpq   0x0000000115ea69a6
  0x0000000115ea69a1: callq  0x000000010dae706c
  0x0000000115ea69a6: mov    0x10(%rbx),%rbx
  0x0000000115ea69aa: add    $0x100,%rbx
  0x0000000115ea69b1: add    %rbx,%rax
  0x0000000115ea69b4: mov    %rax,-0x20(%rbp)
  0x0000000115ea69b8: pop    %rbx
  0x0000000115ea69b9: pop    %rax
  0x0000000115ea69ba: mov    -0x18(%rbp),%rbx
  0x0000000115ea69be: jmpq   0x0000000115ea6807
  0x0000000115ea69c3: mov    $0x0,%esi
  0x0000000115ea69c8: callq  0x0000000115ea69d2
  0x0000000115ea69cd: jmpq   0x0000000115ea6a4d
  0x0000000115ea69d2: lea    0x8(%rsp),%rax
  0x0000000115ea69d7: mov    %r13,-0x38(%rbp)
  0x0000000115ea69db: mov    %r15,%rdi
  0x0000000115ea69de: mov    %rbp,0x1e8(%r15)
  0x0000000115ea69e5: mov    %rax,0x1d8(%r15)
  0x0000000115ea69ec: test   $0xf,%esp
  0x0000000115ea69f2: je     0x0000000115ea6a0a
  0x0000000115ea69f8: sub    $0x8,%rsp
  0x0000000115ea69fc: callq  0x000000010dae7476
  0x0000000115ea6a01: add    $0x8,%rsp
  0x0000000115ea6a05: jmpq   0x0000000115ea6a0f
  0x0000000115ea6a0a: callq  0x000000010dae7476
  0x0000000115ea6a0f: movabs $0x0,%r10
  0x0000000115ea6a19: mov    %r10,0x1d8(%r15)
  0x0000000115ea6a20: movabs $0x0,%r10
  0x0000000115ea6a2a: mov    %r10,0x1e8(%r15)
  0x0000000115ea6a31: cmpq   $0x0,0x8(%r15)
  0x0000000115ea6a39: je     0x0000000115ea6a44
  0x0000000115ea6a3f: jmpq   0x0000000115e916e0
  0x0000000115ea6a44: mov    -0x38(%rbp),%r13
  0x0000000115ea6a48: mov    -0x30(%rbp),%r14
  0x0000000115ea6a4c: retq   
  0x0000000115ea6a4d: mov    -0x18(%rbp),%rbx
  0x0000000115ea6a51: jmpq   0x0000000115ea6807
  0x0000000115ea6a56: xchg   %ax,%ax
  0x0000000115ea6a58: add    %al,(%rax)
  0x0000000115ea6a5a: add    %al,(%rax)
  0x0000000115ea6a5c: add    %al,(%rax)
  0x0000000115ea6a5e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32_update)  [0x0000000115ea6a80, 0x0000000115ea73c0]  2368 bytes

  0x0000000115ea6a80: cmpl   $0x0,-0x7db4e2a(%rip)        # 0x000000010e0f1c60
  0x0000000115ea6a8a: jne    0x0000000115ea6aba
  0x0000000115ea6a90: mov    0x8(%rsp),%edi
  0x0000000115ea6a94: mov    0x10(%rsp),%eax
  0x0000000115ea6a98: movabs $0x10e035bb0,%rsi
  0x0000000115ea6aa2: not    %eax
  0x0000000115ea6aa4: xor    %eax,%edi
  0x0000000115ea6aa6: and    $0xff,%edi
  0x0000000115ea6aac: shr    $0x8,%eax
  0x0000000115ea6aaf: xor    (%rsi,%rdi,4),%eax
  0x0000000115ea6ab2: not    %eax
  0x0000000115ea6ab4: pop    %rdi
  0x0000000115ea6ab5: mov    %r13,%rsp
  0x0000000115ea6ab8: jmpq   *%rdi
  0x0000000115ea6aba: mov    0x8(%rbx),%rcx
  0x0000000115ea6abe: movzwl 0x2c(%rcx),%ecx
  0x0000000115ea6ac2: pop    %rax
  0x0000000115ea6ac3: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea6ac8: pushq  $0x0
  0x0000000115ea6acd: pushq  $0x0
  0x0000000115ea6ad2: push   %rax
  0x0000000115ea6ad3: push   %rbp
  0x0000000115ea6ad4: mov    %rsp,%rbp
  0x0000000115ea6ad7: push   %r13
  0x0000000115ea6ad9: pushq  $0x0
  0x0000000115ea6ade: mov    0x8(%rbx),%r13
  0x0000000115ea6ae2: lea    0x30(%r13),%r13
  0x0000000115ea6ae6: push   %rbx
  0x0000000115ea6ae7: mov    0x10(%rbx),%rdx
  0x0000000115ea6aeb: test   %rdx,%rdx
  0x0000000115ea6aee: je     0x0000000115ea6afb
  0x0000000115ea6af4: add    $0x100,%rdx
  0x0000000115ea6afb: push   %rdx
  0x0000000115ea6afc: mov    0x8(%rbx),%rdx
  0x0000000115ea6b00: mov    0x8(%rdx),%rdx
  0x0000000115ea6b04: mov    0x10(%rdx),%rdx
  0x0000000115ea6b08: push   %rdx
  0x0000000115ea6b09: push   %r14
  0x0000000115ea6b0b: pushq  $0x0
  0x0000000115ea6b10: pushq  $0x0
  0x0000000115ea6b15: mov    %rsp,(%rsp)
  0x0000000115ea6b19: movb   $0x1,0x295(%r15)
  0x0000000115ea6b21: mov    0x10(%rbx),%rax
  0x0000000115ea6b25: test   %rax,%rax
  0x0000000115ea6b28: je     0x0000000115ea6b4a
  0x0000000115ea6b2a: mov    0xdc(%rax),%ecx
  0x0000000115ea6b30: add    $0x8,%ecx
  0x0000000115ea6b33: mov    %ecx,0xdc(%rax)
  0x0000000115ea6b39: and    $0x3f8,%ecx
  0x0000000115ea6b3f: je     0x0000000115ea730e
  0x0000000115ea6b45: jmpq   0x0000000115ea6c01
  0x0000000115ea6b4a: mov    0x18(%rbx),%rax
  0x0000000115ea6b4e: test   %rax,%rax
  0x0000000115ea6b51: jne    0x0000000115ea6bec
  0x0000000115ea6b57: callq  0x0000000115ea6b61
  0x0000000115ea6b5c: jmpq   0x0000000115ea6bdf
  0x0000000115ea6b61: mov    %rbx,%rsi
  0x0000000115ea6b64: lea    0x8(%rsp),%rax
  0x0000000115ea6b69: mov    %r13,-0x38(%rbp)
  0x0000000115ea6b6d: mov    %r15,%rdi
  0x0000000115ea6b70: mov    %rbp,0x1e8(%r15)
  0x0000000115ea6b77: mov    %rax,0x1d8(%r15)
  0x0000000115ea6b7e: test   $0xf,%esp
  0x0000000115ea6b84: je     0x0000000115ea6b9c
  0x0000000115ea6b8a: sub    $0x8,%rsp
  0x0000000115ea6b8e: callq  0x000000010dae6d98
  0x0000000115ea6b93: add    $0x8,%rsp
  0x0000000115ea6b97: jmpq   0x0000000115ea6ba1
  0x0000000115ea6b9c: callq  0x000000010dae6d98
  0x0000000115ea6ba1: movabs $0x0,%r10
  0x0000000115ea6bab: mov    %r10,0x1d8(%r15)
  0x0000000115ea6bb2: movabs $0x0,%r10
  0x0000000115ea6bbc: mov    %r10,0x1e8(%r15)
  0x0000000115ea6bc3: cmpq   $0x0,0x8(%r15)
  0x0000000115ea6bcb: je     0x0000000115ea6bd6
  0x0000000115ea6bd1: jmpq   0x0000000115e916e0
  0x0000000115ea6bd6: mov    -0x38(%rbp),%r13
  0x0000000115ea6bda: mov    -0x30(%rbp),%r14
  0x0000000115ea6bde: retq   
  0x0000000115ea6bdf: mov    0x18(%rbx),%rax
  0x0000000115ea6be3: test   %rax,%rax
  0x0000000115ea6be6: je     0x0000000115ea6c01
  0x0000000115ea6bec: mov    0x8(%rax),%ecx
  0x0000000115ea6bef: add    $0x8,%ecx
  0x0000000115ea6bf2: mov    %ecx,0x8(%rax)
  0x0000000115ea6bf5: and    $0x3f8,%ecx
  0x0000000115ea6bfb: je     0x0000000115ea730e
  0x0000000115ea6c01: mov    %eax,-0x14000(%rsp)
  0x0000000115ea6c08: movb   $0x0,0x295(%r15)
  0x0000000115ea6c10: cmpb   $0x0,-0x7dbf94d(%rip)        # 0x000000010e0e72ca
  0x0000000115ea6c17: je     0x0000000115ea6c47
  0x0000000115ea6c1d: mov    -0x18(%rbp),%rsi
  0x0000000115ea6c21: mov    %r15,%rdi
  0x0000000115ea6c24: test   $0xf,%esp
  0x0000000115ea6c2a: je     0x0000000115ea6c42
  0x0000000115ea6c30: sub    $0x8,%rsp
  0x0000000115ea6c34: callq  0x000000010dce7724
  0x0000000115ea6c39: add    $0x8,%rsp
  0x0000000115ea6c3d: jmpq   0x0000000115ea6c47
  0x0000000115ea6c42: callq  0x000000010dce7724
  0x0000000115ea6c47: mov    -0x18(%rbp),%rbx
  0x0000000115ea6c4b: mov    0x8(%rbx),%r11
  0x0000000115ea6c4f: movzwl 0x2c(%r11),%r11d
  0x0000000115ea6c54: shl    $0x3,%r11d
  0x0000000115ea6c58: sub    %r11,%rsp
  0x0000000115ea6c5b: sub    $0x0,%rsp
  0x0000000115ea6c5f: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea6c63: mov    0x60(%rbx),%r11
  0x0000000115ea6c67: test   %r11,%r11
  0x0000000115ea6c6a: jne    0x0000000115ea6d00
  0x0000000115ea6c70: callq  0x0000000115ea6c7a
  0x0000000115ea6c75: jmpq   0x0000000115ea6cf8
  0x0000000115ea6c7a: mov    %rbx,%rsi
  0x0000000115ea6c7d: lea    0x8(%rsp),%rax
  0x0000000115ea6c82: mov    %r13,-0x38(%rbp)
  0x0000000115ea6c86: mov    %r15,%rdi
  0x0000000115ea6c89: mov    %rbp,0x1e8(%r15)
  0x0000000115ea6c90: mov    %rax,0x1d8(%r15)
  0x0000000115ea6c97: test   $0xf,%esp
  0x0000000115ea6c9d: je     0x0000000115ea6cb5
  0x0000000115ea6ca3: sub    $0x8,%rsp
  0x0000000115ea6ca7: callq  0x000000010dae6686
  0x0000000115ea6cac: add    $0x8,%rsp
  0x0000000115ea6cb0: jmpq   0x0000000115ea6cba
  0x0000000115ea6cb5: callq  0x000000010dae6686
  0x0000000115ea6cba: movabs $0x0,%r10
  0x0000000115ea6cc4: mov    %r10,0x1d8(%r15)
  0x0000000115ea6ccb: movabs $0x0,%r10
  0x0000000115ea6cd5: mov    %r10,0x1e8(%r15)
  0x0000000115ea6cdc: cmpq   $0x0,0x8(%r15)
  0x0000000115ea6ce4: je     0x0000000115ea6cef
  0x0000000115ea6cea: jmpq   0x0000000115e916e0
  0x0000000115ea6cef: mov    -0x38(%rbp),%r13
  0x0000000115ea6cf3: mov    -0x30(%rbp),%r14
  0x0000000115ea6cf7: retq   
  0x0000000115ea6cf8: mov    -0x18(%rbp),%rbx
  0x0000000115ea6cfc: mov    0x60(%rbx),%r11
  0x0000000115ea6d00: callq  *%r11
  0x0000000115ea6d03: mov    -0x18(%rbp),%rbx
  0x0000000115ea6d07: mov    %rax,0x18(%rbp)
  0x0000000115ea6d0b: mov    0x20(%rbx),%r11d
  0x0000000115ea6d0f: test   $0x8,%r11d
  0x0000000115ea6d16: je     0x0000000115ea6d34
  0x0000000115ea6d1c: mov    0x8(%rbx),%r11
  0x0000000115ea6d20: mov    0x8(%r11),%r11
  0x0000000115ea6d24: mov    0x18(%r11),%r11
  0x0000000115ea6d28: mov    0x68(%r11),%r11
  0x0000000115ea6d2c: mov    %r11,0x10(%rbp)
  0x0000000115ea6d30: lea    0x10(%rbp),%rsi
  0x0000000115ea6d34: mov    0x58(%rbx),%rax
  0x0000000115ea6d38: movabs $0x10dce4067,%r11
  0x0000000115ea6d42: cmp    %r11,%rax
  0x0000000115ea6d45: jne    0x0000000115ea6ddb
  0x0000000115ea6d4b: callq  0x0000000115ea6d55
  0x0000000115ea6d50: jmpq   0x0000000115ea6dd3
  0x0000000115ea6d55: mov    %rbx,%rsi
  0x0000000115ea6d58: lea    0x8(%rsp),%rax
  0x0000000115ea6d5d: mov    %r13,-0x38(%rbp)
  0x0000000115ea6d61: mov    %r15,%rdi
  0x0000000115ea6d64: mov    %rbp,0x1e8(%r15)
  0x0000000115ea6d6b: mov    %rax,0x1d8(%r15)
  0x0000000115ea6d72: test   $0xf,%esp
  0x0000000115ea6d78: je     0x0000000115ea6d90
  0x0000000115ea6d7e: sub    $0x8,%rsp
  0x0000000115ea6d82: callq  0x000000010dae6686
  0x0000000115ea6d87: add    $0x8,%rsp
  0x0000000115ea6d8b: jmpq   0x0000000115ea6d95
  0x0000000115ea6d90: callq  0x000000010dae6686
  0x0000000115ea6d95: movabs $0x0,%r10
  0x0000000115ea6d9f: mov    %r10,0x1d8(%r15)
  0x0000000115ea6da6: movabs $0x0,%r10
  0x0000000115ea6db0: mov    %r10,0x1e8(%r15)
  0x0000000115ea6db7: cmpq   $0x0,0x8(%r15)
  0x0000000115ea6dbf: je     0x0000000115ea6dca
  0x0000000115ea6dc5: jmpq   0x0000000115e916e0
  0x0000000115ea6dca: mov    -0x38(%rbp),%r13
  0x0000000115ea6dce: mov    -0x30(%rbp),%r14
  0x0000000115ea6dd2: retq   
  0x0000000115ea6dd3: mov    -0x18(%rbp),%rbx
  0x0000000115ea6dd7: mov    0x58(%rbx),%rax
  0x0000000115ea6ddb: lea    0x1f8(%r15),%rdi
  0x0000000115ea6de2: mov    %rbp,0x1e8(%r15)
  0x0000000115ea6de9: movabs $0x115ea6de2,%r10
  0x0000000115ea6df3: mov    %r10,0x1e0(%r15)
  0x0000000115ea6dfa: mov    %rsp,0x1d8(%r15)
  0x0000000115ea6e01: movl   $0x4,0x270(%r15)
  0x0000000115ea6e0c: callq  *%rax
  0x0000000115ea6e0e: vzeroupper 
  0x0000000115ea6e11: sub    $0x10,%rsp
  0x0000000115ea6e15: vmovsd %xmm0,(%rsp)
  0x0000000115ea6e1a: sub    $0x10,%rsp
  0x0000000115ea6e1e: mov    %rax,(%rsp)
  0x0000000115ea6e22: movl   $0x5,0x270(%r15)
  0x0000000115ea6e2d: lock addl $0x0,(%rsp)
  0x0000000115ea6e32: cmpl   $0x0,-0x7db51dc(%rip)        # 0x000000010e0f1c60
  0x0000000115ea6e3c: jne    0x0000000115ea6e50
  0x0000000115ea6e42: cmpl   $0x0,0x30(%r15)
  0x0000000115ea6e4a: je     0x0000000115ea6e69
  0x0000000115ea6e50: mov    %r15,%rdi
  0x0000000115ea6e53: mov    %rsp,%r12
  0x0000000115ea6e56: sub    $0x0,%rsp
  0x0000000115ea6e5a: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea6e5e: callq  0x000000010dd69dc0
  0x0000000115ea6e63: mov    %r12,%rsp
  0x0000000115ea6e66: xor    %r12,%r12
  0x0000000115ea6e69: movl   $0x8,0x270(%r15)
  0x0000000115ea6e74: movabs $0x0,%r10
  0x0000000115ea6e7e: mov    %r10,0x1d8(%r15)
  0x0000000115ea6e85: movabs $0x0,%r10
  0x0000000115ea6e8f: mov    %r10,0x1e8(%r15)
  0x0000000115ea6e96: movabs $0x0,%r10
  0x0000000115ea6ea0: mov    %r10,0x1e0(%r15)
  0x0000000115ea6ea7: mov    0x38(%r15),%r11
  0x0000000115ea6eab: movl   $0x0,0x100(%r11)
  0x0000000115ea6eb6: movabs $0x115ea253b,%r11
  0x0000000115ea6ec0: cmp    0x18(%rbp),%r11
  0x0000000115ea6ec4: jne    0x0000000115ea6eea
  0x0000000115ea6eca: mov    (%rsp),%rax
  0x0000000115ea6ece: add    $0x10,%rsp
  0x0000000115ea6ed2: test   %rax,%rax
  0x0000000115ea6ed5: je     0x0000000115ea6ede
  0x0000000115ea6edb: mov    (%rax),%rax
  0x0000000115ea6ede: mov    %rax,0x10(%rbp)
  0x0000000115ea6ee2: sub    $0x10,%rsp
  0x0000000115ea6ee6: mov    %rax,(%rsp)
  0x0000000115ea6eea: cmpl   $0x1,0x29c(%r15)
  0x0000000115ea6ef5: jne    0x0000000115ea6fb8
  0x0000000115ea6efb: mov    %rsp,-0x28(%rsp)
  0x0000000115ea6f00: sub    $0x80,%rsp
  0x0000000115ea6f07: mov    %rax,0x78(%rsp)
  0x0000000115ea6f0c: mov    %rcx,0x70(%rsp)
  0x0000000115ea6f11: mov    %rdx,0x68(%rsp)
  0x0000000115ea6f16: mov    %rbx,0x60(%rsp)
  0x0000000115ea6f1b: mov    %rbp,0x50(%rsp)
  0x0000000115ea6f20: mov    %rsi,0x48(%rsp)
  0x0000000115ea6f25: mov    %rdi,0x40(%rsp)
  0x0000000115ea6f2a: mov    %r8,0x38(%rsp)
  0x0000000115ea6f2f: mov    %r9,0x30(%rsp)
  0x0000000115ea6f34: mov    %r10,0x28(%rsp)
  0x0000000115ea6f39: mov    %r11,0x20(%rsp)
  0x0000000115ea6f3e: mov    %r12,0x18(%rsp)
  0x0000000115ea6f43: mov    %r13,0x10(%rsp)
  0x0000000115ea6f48: mov    %r14,0x8(%rsp)
  0x0000000115ea6f4d: mov    %r15,(%rsp)
  0x0000000115ea6f51: mov    %rsp,%r12
  0x0000000115ea6f54: sub    $0x0,%rsp
  0x0000000115ea6f58: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea6f5c: callq  0x000000010dce54fc
  0x0000000115ea6f61: mov    %r12,%rsp
  0x0000000115ea6f64: mov    (%rsp),%r15
  0x0000000115ea6f68: mov    0x8(%rsp),%r14
  0x0000000115ea6f6d: mov    0x10(%rsp),%r13
  0x0000000115ea6f72: mov    0x18(%rsp),%r12
  0x0000000115ea6f77: mov    0x20(%rsp),%r11
  0x0000000115ea6f7c: mov    0x28(%rsp),%r10
  0x0000000115ea6f81: mov    0x30(%rsp),%r9
  0x0000000115ea6f86: mov    0x38(%rsp),%r8
  0x0000000115ea6f8b: mov    0x40(%rsp),%rdi
  0x0000000115ea6f90: mov    0x48(%rsp),%rsi
  0x0000000115ea6f95: mov    0x50(%rsp),%rbp
  0x0000000115ea6f9a: mov    0x60(%rsp),%rbx
  0x0000000115ea6f9f: mov    0x68(%rsp),%rdx
  0x0000000115ea6fa4: mov    0x70(%rsp),%rcx
  0x0000000115ea6fa9: mov    0x78(%rsp),%rax
  0x0000000115ea6fae: add    $0x80,%rsp
  0x0000000115ea6fb5: xor    %r12,%r12
  0x0000000115ea6fb8: mov    -0x18(%rbp),%rbx
  0x0000000115ea6fbc: mov    0x8(%rbx),%r13
  0x0000000115ea6fc0: lea    0x30(%r13),%r13
  0x0000000115ea6fc4: cmpq   $0x0,0x8(%r15)
  0x0000000115ea6fcc: je     0x0000000115ea70ce
  0x0000000115ea6fd2: callq  0x0000000115ea6fdc
  0x0000000115ea6fd7: jmpq   0x0000000115ea7057
  0x0000000115ea6fdc: lea    0x8(%rsp),%rax
  0x0000000115ea6fe1: mov    %r13,-0x38(%rbp)
  0x0000000115ea6fe5: mov    %r15,%rdi
  0x0000000115ea6fe8: mov    %rbp,0x1e8(%r15)
  0x0000000115ea6fef: mov    %rax,0x1d8(%r15)
  0x0000000115ea6ff6: test   $0xf,%esp
  0x0000000115ea6ffc: je     0x0000000115ea7014
  0x0000000115ea7002: sub    $0x8,%rsp
  0x0000000115ea7006: callq  0x000000010dae5ebc
  0x0000000115ea700b: add    $0x8,%rsp
  0x0000000115ea700f: jmpq   0x0000000115ea7019
  0x0000000115ea7014: callq  0x000000010dae5ebc
  0x0000000115ea7019: movabs $0x0,%r10
  0x0000000115ea7023: mov    %r10,0x1d8(%r15)
  0x0000000115ea702a: movabs $0x0,%r10
  0x0000000115ea7034: mov    %r10,0x1e8(%r15)
  0x0000000115ea703b: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7043: je     0x0000000115ea704e
  0x0000000115ea7049: jmpq   0x0000000115e916e0
  0x0000000115ea704e: mov    -0x38(%rbp),%r13
  0x0000000115ea7052: mov    -0x30(%rbp),%r14
  0x0000000115ea7056: retq   
  0x0000000115ea7057: mov    %rsp,-0x28(%rsp)
  0x0000000115ea705c: sub    $0x80,%rsp
  0x0000000115ea7063: mov    %rax,0x78(%rsp)
  0x0000000115ea7068: mov    %rcx,0x70(%rsp)
  0x0000000115ea706d: mov    %rdx,0x68(%rsp)
  0x0000000115ea7072: mov    %rbx,0x60(%rsp)
  0x0000000115ea7077: mov    %rbp,0x50(%rsp)
  0x0000000115ea707c: mov    %rsi,0x48(%rsp)
  0x0000000115ea7081: mov    %rdi,0x40(%rsp)
  0x0000000115ea7086: mov    %r8,0x38(%rsp)
  0x0000000115ea708b: mov    %r9,0x30(%rsp)
  0x0000000115ea7090: mov    %r10,0x28(%rsp)
  0x0000000115ea7095: mov    %r11,0x20(%rsp)
  0x0000000115ea709a: mov    %r12,0x18(%rsp)
  0x0000000115ea709f: mov    %r13,0x10(%rsp)
  0x0000000115ea70a4: mov    %r14,0x8(%rsp)
  0x0000000115ea70a9: mov    %r15,(%rsp)
  0x0000000115ea70ad: movabs $0x10ddd8000,%rdi
  0x0000000115ea70b7: movabs $0x115ea7057,%rsi
  0x0000000115ea70c1: mov    %rsp,%rdx
  0x0000000115ea70c4: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea70c8: callq  0x000000010dc0341e
  0x0000000115ea70cd: hlt    
  0x0000000115ea70ce: mov    0x20(%rbx),%r11d
  0x0000000115ea70d2: test   $0x20,%r11d
  0x0000000115ea70d9: je     0x0000000115ea72b4
  0x0000000115ea70df: lea    -0x50(%rbp),%rsi
  0x0000000115ea70e3: mov    0x8(%rsi),%r11
  0x0000000115ea70e7: test   %r11,%r11
  0x0000000115ea70ea: jne    0x0000000115ea71ec
  0x0000000115ea70f0: callq  0x0000000115ea70fa
  0x0000000115ea70f5: jmpq   0x0000000115ea7175
  0x0000000115ea70fa: lea    0x8(%rsp),%rax
  0x0000000115ea70ff: mov    %r13,-0x38(%rbp)
  0x0000000115ea7103: mov    %r15,%rdi
  0x0000000115ea7106: mov    %rbp,0x1e8(%r15)
  0x0000000115ea710d: mov    %rax,0x1d8(%r15)
  0x0000000115ea7114: test   $0xf,%esp
  0x0000000115ea711a: je     0x0000000115ea7132
  0x0000000115ea7120: sub    $0x8,%rsp
  0x0000000115ea7124: callq  0x000000010dae850c
  0x0000000115ea7129: add    $0x8,%rsp
  0x0000000115ea712d: jmpq   0x0000000115ea7137
  0x0000000115ea7132: callq  0x000000010dae850c
  0x0000000115ea7137: movabs $0x0,%r10
  0x0000000115ea7141: mov    %r10,0x1d8(%r15)
  0x0000000115ea7148: movabs $0x0,%r10
  0x0000000115ea7152: mov    %r10,0x1e8(%r15)
  0x0000000115ea7159: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7161: je     0x0000000115ea716c
  0x0000000115ea7167: jmpq   0x0000000115e916e0
  0x0000000115ea716c: mov    -0x38(%rbp),%r13
  0x0000000115ea7170: mov    -0x30(%rbp),%r14
  0x0000000115ea7174: retq   
  0x0000000115ea7175: mov    %rsp,-0x28(%rsp)
  0x0000000115ea717a: sub    $0x80,%rsp
  0x0000000115ea7181: mov    %rax,0x78(%rsp)
  0x0000000115ea7186: mov    %rcx,0x70(%rsp)
  0x0000000115ea718b: mov    %rdx,0x68(%rsp)
  0x0000000115ea7190: mov    %rbx,0x60(%rsp)
  0x0000000115ea7195: mov    %rbp,0x50(%rsp)
  0x0000000115ea719a: mov    %rsi,0x48(%rsp)
  0x0000000115ea719f: mov    %rdi,0x40(%rsp)
  0x0000000115ea71a4: mov    %r8,0x38(%rsp)
  0x0000000115ea71a9: mov    %r9,0x30(%rsp)
  0x0000000115ea71ae: mov    %r10,0x28(%rsp)
  0x0000000115ea71b3: mov    %r11,0x20(%rsp)
  0x0000000115ea71b8: mov    %r12,0x18(%rsp)
  0x0000000115ea71bd: mov    %r13,0x10(%rsp)
  0x0000000115ea71c2: mov    %r14,0x8(%rsp)
  0x0000000115ea71c7: mov    %r15,(%rsp)
  0x0000000115ea71cb: movabs $0x10ddd8000,%rdi
  0x0000000115ea71d5: movabs $0x115ea7175,%rsi
  0x0000000115ea71df: mov    %rsp,%rdx
  0x0000000115ea71e2: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea71e6: callq  0x000000010dc0341e
  0x0000000115ea71eb: hlt    
  0x0000000115ea71ec: mov    %r13,-0x38(%rbp)
  0x0000000115ea71f0: lea    (%rsi),%rax
  0x0000000115ea71f3: mov    0x8(%rsi),%rcx
  0x0000000115ea71f7: movq   $0x0,0x8(%rsi)
  0x0000000115ea71ff: mov    (%rcx),%rdx
  0x0000000115ea7202: and    $0x7,%rdx
  0x0000000115ea7206: cmp    $0x5,%rdx
  0x0000000115ea720a: je     0x0000000115ea72b0
  0x0000000115ea7210: mov    (%rax),%rdx
  0x0000000115ea7213: test   %rdx,%rdx
  0x0000000115ea7216: je     0x0000000115ea72b0
  0x0000000115ea721c: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea7221: je     0x0000000115ea72b0
  0x0000000115ea7227: mov    %rcx,0x8(%rsi)
  0x0000000115ea722b: callq  0x0000000115ea7235
  0x0000000115ea7230: jmpq   0x0000000115ea72b0
  0x0000000115ea7235: lea    0x8(%rsp),%rax
  0x0000000115ea723a: mov    %r13,-0x38(%rbp)
  0x0000000115ea723e: mov    %r15,%rdi
  0x0000000115ea7241: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7248: mov    %rax,0x1d8(%r15)
  0x0000000115ea724f: test   $0xf,%esp
  0x0000000115ea7255: je     0x0000000115ea726d
  0x0000000115ea725b: sub    $0x8,%rsp
  0x0000000115ea725f: callq  0x000000010dae8608
  0x0000000115ea7264: add    $0x8,%rsp
  0x0000000115ea7268: jmpq   0x0000000115ea7272
  0x0000000115ea726d: callq  0x000000010dae8608
  0x0000000115ea7272: movabs $0x0,%r10
  0x0000000115ea727c: mov    %r10,0x1d8(%r15)
  0x0000000115ea7283: movabs $0x0,%r10
  0x0000000115ea728d: mov    %r10,0x1e8(%r15)
  0x0000000115ea7294: cmpq   $0x0,0x8(%r15)
  0x0000000115ea729c: je     0x0000000115ea72a7
  0x0000000115ea72a2: jmpq   0x0000000115e916e0
  0x0000000115ea72a7: mov    -0x38(%rbp),%r13
  0x0000000115ea72ab: mov    -0x30(%rbp),%r14
  0x0000000115ea72af: retq   
  0x0000000115ea72b0: mov    -0x38(%rbp),%r13
  0x0000000115ea72b4: cmpb   $0x0,-0x7dbfff1(%rip)        # 0x000000010e0e72ca
  0x0000000115ea72bb: je     0x0000000115ea72eb
  0x0000000115ea72c1: mov    -0x18(%rbp),%rsi
  0x0000000115ea72c5: mov    %r15,%rdi
  0x0000000115ea72c8: test   $0xf,%esp
  0x0000000115ea72ce: je     0x0000000115ea72e6
  0x0000000115ea72d4: sub    $0x8,%rsp
  0x0000000115ea72d8: callq  0x000000010dce7696
  0x0000000115ea72dd: add    $0x8,%rsp
  0x0000000115ea72e1: jmpq   0x0000000115ea72eb
  0x0000000115ea72e6: callq  0x000000010dce7696
  0x0000000115ea72eb: mov    (%rsp),%rax
  0x0000000115ea72ef: add    $0x10,%rsp
  0x0000000115ea72f3: vmovsd (%rsp),%xmm0
  0x0000000115ea72f8: add    $0x10,%rsp
  0x0000000115ea72fc: mov    0x18(%rbp),%r11
  0x0000000115ea7300: callq  *%r11
  0x0000000115ea7303: mov    -0x8(%rbp),%r11
  0x0000000115ea7307: leaveq 
  0x0000000115ea7308: pop    %rdi
  0x0000000115ea7309: mov    %r11,%rsp
  0x0000000115ea730c: jmpq   *%rdi
  0x0000000115ea730e: mov    $0x0,%esi
  0x0000000115ea7313: callq  0x0000000115ea731d
  0x0000000115ea7318: jmpq   0x0000000115ea7398
  0x0000000115ea731d: lea    0x8(%rsp),%rax
  0x0000000115ea7322: mov    %r13,-0x38(%rbp)
  0x0000000115ea7326: mov    %r15,%rdi
  0x0000000115ea7329: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7330: mov    %rax,0x1d8(%r15)
  0x0000000115ea7337: test   $0xf,%esp
  0x0000000115ea733d: je     0x0000000115ea7355
  0x0000000115ea7343: sub    $0x8,%rsp
  0x0000000115ea7347: callq  0x000000010dae7476
  0x0000000115ea734c: add    $0x8,%rsp
  0x0000000115ea7350: jmpq   0x0000000115ea735a
  0x0000000115ea7355: callq  0x000000010dae7476
  0x0000000115ea735a: movabs $0x0,%r10
  0x0000000115ea7364: mov    %r10,0x1d8(%r15)
  0x0000000115ea736b: movabs $0x0,%r10
  0x0000000115ea7375: mov    %r10,0x1e8(%r15)
  0x0000000115ea737c: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7384: je     0x0000000115ea738f
  0x0000000115ea738a: jmpq   0x0000000115e916e0
  0x0000000115ea738f: mov    -0x38(%rbp),%r13
  0x0000000115ea7393: mov    -0x30(%rbp),%r14
  0x0000000115ea7397: retq   
  0x0000000115ea7398: mov    -0x18(%rbp),%rbx
  0x0000000115ea739c: jmpq   0x0000000115ea6c01
  0x0000000115ea73a1: nopl   0x0(%rax)
  0x0000000115ea73a8: add    %al,(%rax)
  0x0000000115ea73aa: add    %al,(%rax)
  0x0000000115ea73ac: add    %al,(%rax)
  0x0000000115ea73ae: add    %al,(%rax)
  0x0000000115ea73b0: add    %al,(%rax)
  0x0000000115ea73b2: add    %al,(%rax)
  0x0000000115ea73b4: add    %al,(%rax)
  0x0000000115ea73b6: add    %al,(%rax)
  0x0000000115ea73b8: add    %al,(%rax)
  0x0000000115ea73ba: add    %al,(%rax)
  0x0000000115ea73bc: add    %al,(%rax)
  0x0000000115ea73be: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32_updateBytes)  [0x0000000115ea73e0, 0x0000000115ea7d20]  2368 bytes

  0x0000000115ea73e0: cmpl   $0x0,-0x7db578a(%rip)        # 0x000000010e0f1c60
  0x0000000115ea73ea: jne    0x0000000115ea7432
  0x0000000115ea73f0: mov    0x18(%rsp),%rsi
  0x0000000115ea73f5: add    $0x10,%rsi
  0x0000000115ea73f9: movslq 0x10(%rsp),%rdx
  0x0000000115ea73fe: add    %rdx,%rsi
  0x0000000115ea7401: mov    0x20(%rsp),%edi
  0x0000000115ea7405: mov    0x8(%rsp),%edx
  0x0000000115ea7409: test   $0xf,%esp
  0x0000000115ea740f: je     0x0000000115ea7427
  0x0000000115ea7415: sub    $0x8,%rsp
  0x0000000115ea7419: callq  0x0000000115e91940
  0x0000000115ea741e: add    $0x8,%rsp
  0x0000000115ea7422: jmpq   0x0000000115ea742c
  0x0000000115ea7427: callq  0x0000000115e91940
  0x0000000115ea742c: pop    %rdi
  0x0000000115ea742d: mov    %r13,%rsp
  0x0000000115ea7430: jmpq   *%rdi
  0x0000000115ea7432: mov    0x8(%rbx),%rcx
  0x0000000115ea7436: movzwl 0x2c(%rcx),%ecx
  0x0000000115ea743a: pop    %rax
  0x0000000115ea743b: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea7440: pushq  $0x0
  0x0000000115ea7445: pushq  $0x0
  0x0000000115ea744a: push   %rax
  0x0000000115ea744b: push   %rbp
  0x0000000115ea744c: mov    %rsp,%rbp
  0x0000000115ea744f: push   %r13
  0x0000000115ea7451: pushq  $0x0
  0x0000000115ea7456: mov    0x8(%rbx),%r13
  0x0000000115ea745a: lea    0x30(%r13),%r13
  0x0000000115ea745e: push   %rbx
  0x0000000115ea745f: mov    0x10(%rbx),%rdx
  0x0000000115ea7463: test   %rdx,%rdx
  0x0000000115ea7466: je     0x0000000115ea7473
  0x0000000115ea746c: add    $0x100,%rdx
  0x0000000115ea7473: push   %rdx
  0x0000000115ea7474: mov    0x8(%rbx),%rdx
  0x0000000115ea7478: mov    0x8(%rdx),%rdx
  0x0000000115ea747c: mov    0x10(%rdx),%rdx
  0x0000000115ea7480: push   %rdx
  0x0000000115ea7481: push   %r14
  0x0000000115ea7483: pushq  $0x0
  0x0000000115ea7488: pushq  $0x0
  0x0000000115ea748d: mov    %rsp,(%rsp)
  0x0000000115ea7491: movb   $0x1,0x295(%r15)
  0x0000000115ea7499: mov    0x10(%rbx),%rax
  0x0000000115ea749d: test   %rax,%rax
  0x0000000115ea74a0: je     0x0000000115ea74c2
  0x0000000115ea74a2: mov    0xdc(%rax),%ecx
  0x0000000115ea74a8: add    $0x8,%ecx
  0x0000000115ea74ab: mov    %ecx,0xdc(%rax)
  0x0000000115ea74b1: and    $0x3f8,%ecx
  0x0000000115ea74b7: je     0x0000000115ea7c86
  0x0000000115ea74bd: jmpq   0x0000000115ea7579
  0x0000000115ea74c2: mov    0x18(%rbx),%rax
  0x0000000115ea74c6: test   %rax,%rax
  0x0000000115ea74c9: jne    0x0000000115ea7564
  0x0000000115ea74cf: callq  0x0000000115ea74d9
  0x0000000115ea74d4: jmpq   0x0000000115ea7557
  0x0000000115ea74d9: mov    %rbx,%rsi
  0x0000000115ea74dc: lea    0x8(%rsp),%rax
  0x0000000115ea74e1: mov    %r13,-0x38(%rbp)
  0x0000000115ea74e5: mov    %r15,%rdi
  0x0000000115ea74e8: mov    %rbp,0x1e8(%r15)
  0x0000000115ea74ef: mov    %rax,0x1d8(%r15)
  0x0000000115ea74f6: test   $0xf,%esp
  0x0000000115ea74fc: je     0x0000000115ea7514
  0x0000000115ea7502: sub    $0x8,%rsp
  0x0000000115ea7506: callq  0x000000010dae6d98
  0x0000000115ea750b: add    $0x8,%rsp
  0x0000000115ea750f: jmpq   0x0000000115ea7519
  0x0000000115ea7514: callq  0x000000010dae6d98
  0x0000000115ea7519: movabs $0x0,%r10
  0x0000000115ea7523: mov    %r10,0x1d8(%r15)
  0x0000000115ea752a: movabs $0x0,%r10
  0x0000000115ea7534: mov    %r10,0x1e8(%r15)
  0x0000000115ea753b: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7543: je     0x0000000115ea754e
  0x0000000115ea7549: jmpq   0x0000000115e916e0
  0x0000000115ea754e: mov    -0x38(%rbp),%r13
  0x0000000115ea7552: mov    -0x30(%rbp),%r14
  0x0000000115ea7556: retq   
  0x0000000115ea7557: mov    0x18(%rbx),%rax
  0x0000000115ea755b: test   %rax,%rax
  0x0000000115ea755e: je     0x0000000115ea7579
  0x0000000115ea7564: mov    0x8(%rax),%ecx
  0x0000000115ea7567: add    $0x8,%ecx
  0x0000000115ea756a: mov    %ecx,0x8(%rax)
  0x0000000115ea756d: and    $0x3f8,%ecx
  0x0000000115ea7573: je     0x0000000115ea7c86
  0x0000000115ea7579: mov    %eax,-0x14000(%rsp)
  0x0000000115ea7580: movb   $0x0,0x295(%r15)
  0x0000000115ea7588: cmpb   $0x0,-0x7dc02c5(%rip)        # 0x000000010e0e72ca
  0x0000000115ea758f: je     0x0000000115ea75bf
  0x0000000115ea7595: mov    -0x18(%rbp),%rsi
  0x0000000115ea7599: mov    %r15,%rdi
  0x0000000115ea759c: test   $0xf,%esp
  0x0000000115ea75a2: je     0x0000000115ea75ba
  0x0000000115ea75a8: sub    $0x8,%rsp
  0x0000000115ea75ac: callq  0x000000010dce7724
  0x0000000115ea75b1: add    $0x8,%rsp
  0x0000000115ea75b5: jmpq   0x0000000115ea75bf
  0x0000000115ea75ba: callq  0x000000010dce7724
  0x0000000115ea75bf: mov    -0x18(%rbp),%rbx
  0x0000000115ea75c3: mov    0x8(%rbx),%r11
  0x0000000115ea75c7: movzwl 0x2c(%r11),%r11d
  0x0000000115ea75cc: shl    $0x3,%r11d
  0x0000000115ea75d0: sub    %r11,%rsp
  0x0000000115ea75d3: sub    $0x0,%rsp
  0x0000000115ea75d7: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea75db: mov    0x60(%rbx),%r11
  0x0000000115ea75df: test   %r11,%r11
  0x0000000115ea75e2: jne    0x0000000115ea7678
  0x0000000115ea75e8: callq  0x0000000115ea75f2
  0x0000000115ea75ed: jmpq   0x0000000115ea7670
  0x0000000115ea75f2: mov    %rbx,%rsi
  0x0000000115ea75f5: lea    0x8(%rsp),%rax
  0x0000000115ea75fa: mov    %r13,-0x38(%rbp)
  0x0000000115ea75fe: mov    %r15,%rdi
  0x0000000115ea7601: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7608: mov    %rax,0x1d8(%r15)
  0x0000000115ea760f: test   $0xf,%esp
  0x0000000115ea7615: je     0x0000000115ea762d
  0x0000000115ea761b: sub    $0x8,%rsp
  0x0000000115ea761f: callq  0x000000010dae6686
  0x0000000115ea7624: add    $0x8,%rsp
  0x0000000115ea7628: jmpq   0x0000000115ea7632
  0x0000000115ea762d: callq  0x000000010dae6686
  0x0000000115ea7632: movabs $0x0,%r10
  0x0000000115ea763c: mov    %r10,0x1d8(%r15)
  0x0000000115ea7643: movabs $0x0,%r10
  0x0000000115ea764d: mov    %r10,0x1e8(%r15)
  0x0000000115ea7654: cmpq   $0x0,0x8(%r15)
  0x0000000115ea765c: je     0x0000000115ea7667
  0x0000000115ea7662: jmpq   0x0000000115e916e0
  0x0000000115ea7667: mov    -0x38(%rbp),%r13
  0x0000000115ea766b: mov    -0x30(%rbp),%r14
  0x0000000115ea766f: retq   
  0x0000000115ea7670: mov    -0x18(%rbp),%rbx
  0x0000000115ea7674: mov    0x60(%rbx),%r11
  0x0000000115ea7678: callq  *%r11
  0x0000000115ea767b: mov    -0x18(%rbp),%rbx
  0x0000000115ea767f: mov    %rax,0x18(%rbp)
  0x0000000115ea7683: mov    0x20(%rbx),%r11d
  0x0000000115ea7687: test   $0x8,%r11d
  0x0000000115ea768e: je     0x0000000115ea76ac
  0x0000000115ea7694: mov    0x8(%rbx),%r11
  0x0000000115ea7698: mov    0x8(%r11),%r11
  0x0000000115ea769c: mov    0x18(%r11),%r11
  0x0000000115ea76a0: mov    0x68(%r11),%r11
  0x0000000115ea76a4: mov    %r11,0x10(%rbp)
  0x0000000115ea76a8: lea    0x10(%rbp),%rsi
  0x0000000115ea76ac: mov    0x58(%rbx),%rax
  0x0000000115ea76b0: movabs $0x10dce4067,%r11
  0x0000000115ea76ba: cmp    %r11,%rax
  0x0000000115ea76bd: jne    0x0000000115ea7753
  0x0000000115ea76c3: callq  0x0000000115ea76cd
  0x0000000115ea76c8: jmpq   0x0000000115ea774b
  0x0000000115ea76cd: mov    %rbx,%rsi
  0x0000000115ea76d0: lea    0x8(%rsp),%rax
  0x0000000115ea76d5: mov    %r13,-0x38(%rbp)
  0x0000000115ea76d9: mov    %r15,%rdi
  0x0000000115ea76dc: mov    %rbp,0x1e8(%r15)
  0x0000000115ea76e3: mov    %rax,0x1d8(%r15)
  0x0000000115ea76ea: test   $0xf,%esp
  0x0000000115ea76f0: je     0x0000000115ea7708
  0x0000000115ea76f6: sub    $0x8,%rsp
  0x0000000115ea76fa: callq  0x000000010dae6686
  0x0000000115ea76ff: add    $0x8,%rsp
  0x0000000115ea7703: jmpq   0x0000000115ea770d
  0x0000000115ea7708: callq  0x000000010dae6686
  0x0000000115ea770d: movabs $0x0,%r10
  0x0000000115ea7717: mov    %r10,0x1d8(%r15)
  0x0000000115ea771e: movabs $0x0,%r10
  0x0000000115ea7728: mov    %r10,0x1e8(%r15)
  0x0000000115ea772f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7737: je     0x0000000115ea7742
  0x0000000115ea773d: jmpq   0x0000000115e916e0
  0x0000000115ea7742: mov    -0x38(%rbp),%r13
  0x0000000115ea7746: mov    -0x30(%rbp),%r14
  0x0000000115ea774a: retq   
  0x0000000115ea774b: mov    -0x18(%rbp),%rbx
  0x0000000115ea774f: mov    0x58(%rbx),%rax
  0x0000000115ea7753: lea    0x1f8(%r15),%rdi
  0x0000000115ea775a: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7761: movabs $0x115ea775a,%r10
  0x0000000115ea776b: mov    %r10,0x1e0(%r15)
  0x0000000115ea7772: mov    %rsp,0x1d8(%r15)
  0x0000000115ea7779: movl   $0x4,0x270(%r15)
  0x0000000115ea7784: callq  *%rax
  0x0000000115ea7786: vzeroupper 
  0x0000000115ea7789: sub    $0x10,%rsp
  0x0000000115ea778d: vmovsd %xmm0,(%rsp)
  0x0000000115ea7792: sub    $0x10,%rsp
  0x0000000115ea7796: mov    %rax,(%rsp)
  0x0000000115ea779a: movl   $0x5,0x270(%r15)
  0x0000000115ea77a5: lock addl $0x0,(%rsp)
  0x0000000115ea77aa: cmpl   $0x0,-0x7db5b54(%rip)        # 0x000000010e0f1c60
  0x0000000115ea77b4: jne    0x0000000115ea77c8
  0x0000000115ea77ba: cmpl   $0x0,0x30(%r15)
  0x0000000115ea77c2: je     0x0000000115ea77e1
  0x0000000115ea77c8: mov    %r15,%rdi
  0x0000000115ea77cb: mov    %rsp,%r12
  0x0000000115ea77ce: sub    $0x0,%rsp
  0x0000000115ea77d2: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea77d6: callq  0x000000010dd69dc0
  0x0000000115ea77db: mov    %r12,%rsp
  0x0000000115ea77de: xor    %r12,%r12
  0x0000000115ea77e1: movl   $0x8,0x270(%r15)
  0x0000000115ea77ec: movabs $0x0,%r10
  0x0000000115ea77f6: mov    %r10,0x1d8(%r15)
  0x0000000115ea77fd: movabs $0x0,%r10
  0x0000000115ea7807: mov    %r10,0x1e8(%r15)
  0x0000000115ea780e: movabs $0x0,%r10
  0x0000000115ea7818: mov    %r10,0x1e0(%r15)
  0x0000000115ea781f: mov    0x38(%r15),%r11
  0x0000000115ea7823: movl   $0x0,0x100(%r11)
  0x0000000115ea782e: movabs $0x115ea253b,%r11
  0x0000000115ea7838: cmp    0x18(%rbp),%r11
  0x0000000115ea783c: jne    0x0000000115ea7862
  0x0000000115ea7842: mov    (%rsp),%rax
  0x0000000115ea7846: add    $0x10,%rsp
  0x0000000115ea784a: test   %rax,%rax
  0x0000000115ea784d: je     0x0000000115ea7856
  0x0000000115ea7853: mov    (%rax),%rax
  0x0000000115ea7856: mov    %rax,0x10(%rbp)
  0x0000000115ea785a: sub    $0x10,%rsp
  0x0000000115ea785e: mov    %rax,(%rsp)
  0x0000000115ea7862: cmpl   $0x1,0x29c(%r15)
  0x0000000115ea786d: jne    0x0000000115ea7930
  0x0000000115ea7873: mov    %rsp,-0x28(%rsp)
  0x0000000115ea7878: sub    $0x80,%rsp
  0x0000000115ea787f: mov    %rax,0x78(%rsp)
  0x0000000115ea7884: mov    %rcx,0x70(%rsp)
  0x0000000115ea7889: mov    %rdx,0x68(%rsp)
  0x0000000115ea788e: mov    %rbx,0x60(%rsp)
  0x0000000115ea7893: mov    %rbp,0x50(%rsp)
  0x0000000115ea7898: mov    %rsi,0x48(%rsp)
  0x0000000115ea789d: mov    %rdi,0x40(%rsp)
  0x0000000115ea78a2: mov    %r8,0x38(%rsp)
  0x0000000115ea78a7: mov    %r9,0x30(%rsp)
  0x0000000115ea78ac: mov    %r10,0x28(%rsp)
  0x0000000115ea78b1: mov    %r11,0x20(%rsp)
  0x0000000115ea78b6: mov    %r12,0x18(%rsp)
  0x0000000115ea78bb: mov    %r13,0x10(%rsp)
  0x0000000115ea78c0: mov    %r14,0x8(%rsp)
  0x0000000115ea78c5: mov    %r15,(%rsp)
  0x0000000115ea78c9: mov    %rsp,%r12
  0x0000000115ea78cc: sub    $0x0,%rsp
  0x0000000115ea78d0: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea78d4: callq  0x000000010dce54fc
  0x0000000115ea78d9: mov    %r12,%rsp
  0x0000000115ea78dc: mov    (%rsp),%r15
  0x0000000115ea78e0: mov    0x8(%rsp),%r14
  0x0000000115ea78e5: mov    0x10(%rsp),%r13
  0x0000000115ea78ea: mov    0x18(%rsp),%r12
  0x0000000115ea78ef: mov    0x20(%rsp),%r11
  0x0000000115ea78f4: mov    0x28(%rsp),%r10
  0x0000000115ea78f9: mov    0x30(%rsp),%r9
  0x0000000115ea78fe: mov    0x38(%rsp),%r8
  0x0000000115ea7903: mov    0x40(%rsp),%rdi
  0x0000000115ea7908: mov    0x48(%rsp),%rsi
  0x0000000115ea790d: mov    0x50(%rsp),%rbp
  0x0000000115ea7912: mov    0x60(%rsp),%rbx
  0x0000000115ea7917: mov    0x68(%rsp),%rdx
  0x0000000115ea791c: mov    0x70(%rsp),%rcx
  0x0000000115ea7921: mov    0x78(%rsp),%rax
  0x0000000115ea7926: add    $0x80,%rsp
  0x0000000115ea792d: xor    %r12,%r12
  0x0000000115ea7930: mov    -0x18(%rbp),%rbx
  0x0000000115ea7934: mov    0x8(%rbx),%r13
  0x0000000115ea7938: lea    0x30(%r13),%r13
  0x0000000115ea793c: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7944: je     0x0000000115ea7a46
  0x0000000115ea794a: callq  0x0000000115ea7954
  0x0000000115ea794f: jmpq   0x0000000115ea79cf
  0x0000000115ea7954: lea    0x8(%rsp),%rax
  0x0000000115ea7959: mov    %r13,-0x38(%rbp)
  0x0000000115ea795d: mov    %r15,%rdi
  0x0000000115ea7960: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7967: mov    %rax,0x1d8(%r15)
  0x0000000115ea796e: test   $0xf,%esp
  0x0000000115ea7974: je     0x0000000115ea798c
  0x0000000115ea797a: sub    $0x8,%rsp
  0x0000000115ea797e: callq  0x000000010dae5ebc
  0x0000000115ea7983: add    $0x8,%rsp
  0x0000000115ea7987: jmpq   0x0000000115ea7991
  0x0000000115ea798c: callq  0x000000010dae5ebc
  0x0000000115ea7991: movabs $0x0,%r10
  0x0000000115ea799b: mov    %r10,0x1d8(%r15)
  0x0000000115ea79a2: movabs $0x0,%r10
  0x0000000115ea79ac: mov    %r10,0x1e8(%r15)
  0x0000000115ea79b3: cmpq   $0x0,0x8(%r15)
  0x0000000115ea79bb: je     0x0000000115ea79c6
  0x0000000115ea79c1: jmpq   0x0000000115e916e0
  0x0000000115ea79c6: mov    -0x38(%rbp),%r13
  0x0000000115ea79ca: mov    -0x30(%rbp),%r14
  0x0000000115ea79ce: retq   
  0x0000000115ea79cf: mov    %rsp,-0x28(%rsp)
  0x0000000115ea79d4: sub    $0x80,%rsp
  0x0000000115ea79db: mov    %rax,0x78(%rsp)
  0x0000000115ea79e0: mov    %rcx,0x70(%rsp)
  0x0000000115ea79e5: mov    %rdx,0x68(%rsp)
  0x0000000115ea79ea: mov    %rbx,0x60(%rsp)
  0x0000000115ea79ef: mov    %rbp,0x50(%rsp)
  0x0000000115ea79f4: mov    %rsi,0x48(%rsp)
  0x0000000115ea79f9: mov    %rdi,0x40(%rsp)
  0x0000000115ea79fe: mov    %r8,0x38(%rsp)
  0x0000000115ea7a03: mov    %r9,0x30(%rsp)
  0x0000000115ea7a08: mov    %r10,0x28(%rsp)
  0x0000000115ea7a0d: mov    %r11,0x20(%rsp)
  0x0000000115ea7a12: mov    %r12,0x18(%rsp)
  0x0000000115ea7a17: mov    %r13,0x10(%rsp)
  0x0000000115ea7a1c: mov    %r14,0x8(%rsp)
  0x0000000115ea7a21: mov    %r15,(%rsp)
  0x0000000115ea7a25: movabs $0x10ddd8000,%rdi
  0x0000000115ea7a2f: movabs $0x115ea79cf,%rsi
  0x0000000115ea7a39: mov    %rsp,%rdx
  0x0000000115ea7a3c: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea7a40: callq  0x000000010dc0341e
  0x0000000115ea7a45: hlt    
  0x0000000115ea7a46: mov    0x20(%rbx),%r11d
  0x0000000115ea7a4a: test   $0x20,%r11d
  0x0000000115ea7a51: je     0x0000000115ea7c2c
  0x0000000115ea7a57: lea    -0x50(%rbp),%rsi
  0x0000000115ea7a5b: mov    0x8(%rsi),%r11
  0x0000000115ea7a5f: test   %r11,%r11
  0x0000000115ea7a62: jne    0x0000000115ea7b64
  0x0000000115ea7a68: callq  0x0000000115ea7a72
  0x0000000115ea7a6d: jmpq   0x0000000115ea7aed
  0x0000000115ea7a72: lea    0x8(%rsp),%rax
  0x0000000115ea7a77: mov    %r13,-0x38(%rbp)
  0x0000000115ea7a7b: mov    %r15,%rdi
  0x0000000115ea7a7e: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7a85: mov    %rax,0x1d8(%r15)
  0x0000000115ea7a8c: test   $0xf,%esp
  0x0000000115ea7a92: je     0x0000000115ea7aaa
  0x0000000115ea7a98: sub    $0x8,%rsp
  0x0000000115ea7a9c: callq  0x000000010dae850c
  0x0000000115ea7aa1: add    $0x8,%rsp
  0x0000000115ea7aa5: jmpq   0x0000000115ea7aaf
  0x0000000115ea7aaa: callq  0x000000010dae850c
  0x0000000115ea7aaf: movabs $0x0,%r10
  0x0000000115ea7ab9: mov    %r10,0x1d8(%r15)
  0x0000000115ea7ac0: movabs $0x0,%r10
  0x0000000115ea7aca: mov    %r10,0x1e8(%r15)
  0x0000000115ea7ad1: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7ad9: je     0x0000000115ea7ae4
  0x0000000115ea7adf: jmpq   0x0000000115e916e0
  0x0000000115ea7ae4: mov    -0x38(%rbp),%r13
  0x0000000115ea7ae8: mov    -0x30(%rbp),%r14
  0x0000000115ea7aec: retq   
  0x0000000115ea7aed: mov    %rsp,-0x28(%rsp)
  0x0000000115ea7af2: sub    $0x80,%rsp
  0x0000000115ea7af9: mov    %rax,0x78(%rsp)
  0x0000000115ea7afe: mov    %rcx,0x70(%rsp)
  0x0000000115ea7b03: mov    %rdx,0x68(%rsp)
  0x0000000115ea7b08: mov    %rbx,0x60(%rsp)
  0x0000000115ea7b0d: mov    %rbp,0x50(%rsp)
  0x0000000115ea7b12: mov    %rsi,0x48(%rsp)
  0x0000000115ea7b17: mov    %rdi,0x40(%rsp)
  0x0000000115ea7b1c: mov    %r8,0x38(%rsp)
  0x0000000115ea7b21: mov    %r9,0x30(%rsp)
  0x0000000115ea7b26: mov    %r10,0x28(%rsp)
  0x0000000115ea7b2b: mov    %r11,0x20(%rsp)
  0x0000000115ea7b30: mov    %r12,0x18(%rsp)
  0x0000000115ea7b35: mov    %r13,0x10(%rsp)
  0x0000000115ea7b3a: mov    %r14,0x8(%rsp)
  0x0000000115ea7b3f: mov    %r15,(%rsp)
  0x0000000115ea7b43: movabs $0x10ddd8000,%rdi
  0x0000000115ea7b4d: movabs $0x115ea7aed,%rsi
  0x0000000115ea7b57: mov    %rsp,%rdx
  0x0000000115ea7b5a: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea7b5e: callq  0x000000010dc0341e
  0x0000000115ea7b63: hlt    
  0x0000000115ea7b64: mov    %r13,-0x38(%rbp)
  0x0000000115ea7b68: lea    (%rsi),%rax
  0x0000000115ea7b6b: mov    0x8(%rsi),%rcx
  0x0000000115ea7b6f: movq   $0x0,0x8(%rsi)
  0x0000000115ea7b77: mov    (%rcx),%rdx
  0x0000000115ea7b7a: and    $0x7,%rdx
  0x0000000115ea7b7e: cmp    $0x5,%rdx
  0x0000000115ea7b82: je     0x0000000115ea7c28
  0x0000000115ea7b88: mov    (%rax),%rdx
  0x0000000115ea7b8b: test   %rdx,%rdx
  0x0000000115ea7b8e: je     0x0000000115ea7c28
  0x0000000115ea7b94: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea7b99: je     0x0000000115ea7c28
  0x0000000115ea7b9f: mov    %rcx,0x8(%rsi)
  0x0000000115ea7ba3: callq  0x0000000115ea7bad
  0x0000000115ea7ba8: jmpq   0x0000000115ea7c28
  0x0000000115ea7bad: lea    0x8(%rsp),%rax
  0x0000000115ea7bb2: mov    %r13,-0x38(%rbp)
  0x0000000115ea7bb6: mov    %r15,%rdi
  0x0000000115ea7bb9: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7bc0: mov    %rax,0x1d8(%r15)
  0x0000000115ea7bc7: test   $0xf,%esp
  0x0000000115ea7bcd: je     0x0000000115ea7be5
  0x0000000115ea7bd3: sub    $0x8,%rsp
  0x0000000115ea7bd7: callq  0x000000010dae8608
  0x0000000115ea7bdc: add    $0x8,%rsp
  0x0000000115ea7be0: jmpq   0x0000000115ea7bea
  0x0000000115ea7be5: callq  0x000000010dae8608
  0x0000000115ea7bea: movabs $0x0,%r10
  0x0000000115ea7bf4: mov    %r10,0x1d8(%r15)
  0x0000000115ea7bfb: movabs $0x0,%r10
  0x0000000115ea7c05: mov    %r10,0x1e8(%r15)
  0x0000000115ea7c0c: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7c14: je     0x0000000115ea7c1f
  0x0000000115ea7c1a: jmpq   0x0000000115e916e0
  0x0000000115ea7c1f: mov    -0x38(%rbp),%r13
  0x0000000115ea7c23: mov    -0x30(%rbp),%r14
  0x0000000115ea7c27: retq   
  0x0000000115ea7c28: mov    -0x38(%rbp),%r13
  0x0000000115ea7c2c: cmpb   $0x0,-0x7dc0969(%rip)        # 0x000000010e0e72ca
  0x0000000115ea7c33: je     0x0000000115ea7c63
  0x0000000115ea7c39: mov    -0x18(%rbp),%rsi
  0x0000000115ea7c3d: mov    %r15,%rdi
  0x0000000115ea7c40: test   $0xf,%esp
  0x0000000115ea7c46: je     0x0000000115ea7c5e
  0x0000000115ea7c4c: sub    $0x8,%rsp
  0x0000000115ea7c50: callq  0x000000010dce7696
  0x0000000115ea7c55: add    $0x8,%rsp
  0x0000000115ea7c59: jmpq   0x0000000115ea7c63
  0x0000000115ea7c5e: callq  0x000000010dce7696
  0x0000000115ea7c63: mov    (%rsp),%rax
  0x0000000115ea7c67: add    $0x10,%rsp
  0x0000000115ea7c6b: vmovsd (%rsp),%xmm0
  0x0000000115ea7c70: add    $0x10,%rsp
  0x0000000115ea7c74: mov    0x18(%rbp),%r11
  0x0000000115ea7c78: callq  *%r11
  0x0000000115ea7c7b: mov    -0x8(%rbp),%r11
  0x0000000115ea7c7f: leaveq 
  0x0000000115ea7c80: pop    %rdi
  0x0000000115ea7c81: mov    %r11,%rsp
  0x0000000115ea7c84: jmpq   *%rdi
  0x0000000115ea7c86: mov    $0x0,%esi
  0x0000000115ea7c8b: callq  0x0000000115ea7c95
  0x0000000115ea7c90: jmpq   0x0000000115ea7d10
  0x0000000115ea7c95: lea    0x8(%rsp),%rax
  0x0000000115ea7c9a: mov    %r13,-0x38(%rbp)
  0x0000000115ea7c9e: mov    %r15,%rdi
  0x0000000115ea7ca1: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7ca8: mov    %rax,0x1d8(%r15)
  0x0000000115ea7caf: test   $0xf,%esp
  0x0000000115ea7cb5: je     0x0000000115ea7ccd
  0x0000000115ea7cbb: sub    $0x8,%rsp
  0x0000000115ea7cbf: callq  0x000000010dae7476
  0x0000000115ea7cc4: add    $0x8,%rsp
  0x0000000115ea7cc8: jmpq   0x0000000115ea7cd2
  0x0000000115ea7ccd: callq  0x000000010dae7476
  0x0000000115ea7cd2: movabs $0x0,%r10
  0x0000000115ea7cdc: mov    %r10,0x1d8(%r15)
  0x0000000115ea7ce3: movabs $0x0,%r10
  0x0000000115ea7ced: mov    %r10,0x1e8(%r15)
  0x0000000115ea7cf4: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7cfc: je     0x0000000115ea7d07
  0x0000000115ea7d02: jmpq   0x0000000115e916e0
  0x0000000115ea7d07: mov    -0x38(%rbp),%r13
  0x0000000115ea7d0b: mov    -0x30(%rbp),%r14
  0x0000000115ea7d0f: retq   
  0x0000000115ea7d10: mov    -0x18(%rbp),%rbx
  0x0000000115ea7d14: jmpq   0x0000000115ea7579
  0x0000000115ea7d19: nopl   0x0(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32_updateByteBuffer)  [0x0000000115ea7d40, 0x0000000115ea8680]  2368 bytes

  0x0000000115ea7d40: cmpl   $0x0,-0x7db60ea(%rip)        # 0x000000010e0f1c60
  0x0000000115ea7d4a: jne    0x0000000115ea7d8e
  0x0000000115ea7d50: mov    0x18(%rsp),%rsi
  0x0000000115ea7d55: movslq 0x10(%rsp),%rdx
  0x0000000115ea7d5a: add    %rdx,%rsi
  0x0000000115ea7d5d: mov    0x28(%rsp),%edi
  0x0000000115ea7d61: mov    0x8(%rsp),%edx
  0x0000000115ea7d65: test   $0xf,%esp
  0x0000000115ea7d6b: je     0x0000000115ea7d83
  0x0000000115ea7d71: sub    $0x8,%rsp
  0x0000000115ea7d75: callq  0x0000000115e91940
  0x0000000115ea7d7a: add    $0x8,%rsp
  0x0000000115ea7d7e: jmpq   0x0000000115ea7d88
  0x0000000115ea7d83: callq  0x0000000115e91940
  0x0000000115ea7d88: pop    %rdi
  0x0000000115ea7d89: mov    %r13,%rsp
  0x0000000115ea7d8c: jmpq   *%rdi
  0x0000000115ea7d8e: mov    0x8(%rbx),%rcx
  0x0000000115ea7d92: movzwl 0x2c(%rcx),%ecx
  0x0000000115ea7d96: pop    %rax
  0x0000000115ea7d97: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea7d9c: pushq  $0x0
  0x0000000115ea7da1: pushq  $0x0
  0x0000000115ea7da6: push   %rax
  0x0000000115ea7da7: push   %rbp
  0x0000000115ea7da8: mov    %rsp,%rbp
  0x0000000115ea7dab: push   %r13
  0x0000000115ea7dad: pushq  $0x0
  0x0000000115ea7db2: mov    0x8(%rbx),%r13
  0x0000000115ea7db6: lea    0x30(%r13),%r13
  0x0000000115ea7dba: push   %rbx
  0x0000000115ea7dbb: mov    0x10(%rbx),%rdx
  0x0000000115ea7dbf: test   %rdx,%rdx
  0x0000000115ea7dc2: je     0x0000000115ea7dcf
  0x0000000115ea7dc8: add    $0x100,%rdx
  0x0000000115ea7dcf: push   %rdx
  0x0000000115ea7dd0: mov    0x8(%rbx),%rdx
  0x0000000115ea7dd4: mov    0x8(%rdx),%rdx
  0x0000000115ea7dd8: mov    0x10(%rdx),%rdx
  0x0000000115ea7ddc: push   %rdx
  0x0000000115ea7ddd: push   %r14
  0x0000000115ea7ddf: pushq  $0x0
  0x0000000115ea7de4: pushq  $0x0
  0x0000000115ea7de9: mov    %rsp,(%rsp)
  0x0000000115ea7ded: movb   $0x1,0x295(%r15)
  0x0000000115ea7df5: mov    0x10(%rbx),%rax
  0x0000000115ea7df9: test   %rax,%rax
  0x0000000115ea7dfc: je     0x0000000115ea7e1e
  0x0000000115ea7dfe: mov    0xdc(%rax),%ecx
  0x0000000115ea7e04: add    $0x8,%ecx
  0x0000000115ea7e07: mov    %ecx,0xdc(%rax)
  0x0000000115ea7e0d: and    $0x3f8,%ecx
  0x0000000115ea7e13: je     0x0000000115ea85e2
  0x0000000115ea7e19: jmpq   0x0000000115ea7ed5
  0x0000000115ea7e1e: mov    0x18(%rbx),%rax
  0x0000000115ea7e22: test   %rax,%rax
  0x0000000115ea7e25: jne    0x0000000115ea7ec0
  0x0000000115ea7e2b: callq  0x0000000115ea7e35
  0x0000000115ea7e30: jmpq   0x0000000115ea7eb3
  0x0000000115ea7e35: mov    %rbx,%rsi
  0x0000000115ea7e38: lea    0x8(%rsp),%rax
  0x0000000115ea7e3d: mov    %r13,-0x38(%rbp)
  0x0000000115ea7e41: mov    %r15,%rdi
  0x0000000115ea7e44: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7e4b: mov    %rax,0x1d8(%r15)
  0x0000000115ea7e52: test   $0xf,%esp
  0x0000000115ea7e58: je     0x0000000115ea7e70
  0x0000000115ea7e5e: sub    $0x8,%rsp
  0x0000000115ea7e62: callq  0x000000010dae6d98
  0x0000000115ea7e67: add    $0x8,%rsp
  0x0000000115ea7e6b: jmpq   0x0000000115ea7e75
  0x0000000115ea7e70: callq  0x000000010dae6d98
  0x0000000115ea7e75: movabs $0x0,%r10
  0x0000000115ea7e7f: mov    %r10,0x1d8(%r15)
  0x0000000115ea7e86: movabs $0x0,%r10
  0x0000000115ea7e90: mov    %r10,0x1e8(%r15)
  0x0000000115ea7e97: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7e9f: je     0x0000000115ea7eaa
  0x0000000115ea7ea5: jmpq   0x0000000115e916e0
  0x0000000115ea7eaa: mov    -0x38(%rbp),%r13
  0x0000000115ea7eae: mov    -0x30(%rbp),%r14
  0x0000000115ea7eb2: retq   
  0x0000000115ea7eb3: mov    0x18(%rbx),%rax
  0x0000000115ea7eb7: test   %rax,%rax
  0x0000000115ea7eba: je     0x0000000115ea7ed5
  0x0000000115ea7ec0: mov    0x8(%rax),%ecx
  0x0000000115ea7ec3: add    $0x8,%ecx
  0x0000000115ea7ec6: mov    %ecx,0x8(%rax)
  0x0000000115ea7ec9: and    $0x3f8,%ecx
  0x0000000115ea7ecf: je     0x0000000115ea85e2
  0x0000000115ea7ed5: mov    %eax,-0x14000(%rsp)
  0x0000000115ea7edc: movb   $0x0,0x295(%r15)
  0x0000000115ea7ee4: cmpb   $0x0,-0x7dc0c21(%rip)        # 0x000000010e0e72ca
  0x0000000115ea7eeb: je     0x0000000115ea7f1b
  0x0000000115ea7ef1: mov    -0x18(%rbp),%rsi
  0x0000000115ea7ef5: mov    %r15,%rdi
  0x0000000115ea7ef8: test   $0xf,%esp
  0x0000000115ea7efe: je     0x0000000115ea7f16
  0x0000000115ea7f04: sub    $0x8,%rsp
  0x0000000115ea7f08: callq  0x000000010dce7724
  0x0000000115ea7f0d: add    $0x8,%rsp
  0x0000000115ea7f11: jmpq   0x0000000115ea7f1b
  0x0000000115ea7f16: callq  0x000000010dce7724
  0x0000000115ea7f1b: mov    -0x18(%rbp),%rbx
  0x0000000115ea7f1f: mov    0x8(%rbx),%r11
  0x0000000115ea7f23: movzwl 0x2c(%r11),%r11d
  0x0000000115ea7f28: shl    $0x3,%r11d
  0x0000000115ea7f2c: sub    %r11,%rsp
  0x0000000115ea7f2f: sub    $0x0,%rsp
  0x0000000115ea7f33: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea7f37: mov    0x60(%rbx),%r11
  0x0000000115ea7f3b: test   %r11,%r11
  0x0000000115ea7f3e: jne    0x0000000115ea7fd4
  0x0000000115ea7f44: callq  0x0000000115ea7f4e
  0x0000000115ea7f49: jmpq   0x0000000115ea7fcc
  0x0000000115ea7f4e: mov    %rbx,%rsi
  0x0000000115ea7f51: lea    0x8(%rsp),%rax
  0x0000000115ea7f56: mov    %r13,-0x38(%rbp)
  0x0000000115ea7f5a: mov    %r15,%rdi
  0x0000000115ea7f5d: mov    %rbp,0x1e8(%r15)
  0x0000000115ea7f64: mov    %rax,0x1d8(%r15)
  0x0000000115ea7f6b: test   $0xf,%esp
  0x0000000115ea7f71: je     0x0000000115ea7f89
  0x0000000115ea7f77: sub    $0x8,%rsp
  0x0000000115ea7f7b: callq  0x000000010dae6686
  0x0000000115ea7f80: add    $0x8,%rsp
  0x0000000115ea7f84: jmpq   0x0000000115ea7f8e
  0x0000000115ea7f89: callq  0x000000010dae6686
  0x0000000115ea7f8e: movabs $0x0,%r10
  0x0000000115ea7f98: mov    %r10,0x1d8(%r15)
  0x0000000115ea7f9f: movabs $0x0,%r10
  0x0000000115ea7fa9: mov    %r10,0x1e8(%r15)
  0x0000000115ea7fb0: cmpq   $0x0,0x8(%r15)
  0x0000000115ea7fb8: je     0x0000000115ea7fc3
  0x0000000115ea7fbe: jmpq   0x0000000115e916e0
  0x0000000115ea7fc3: mov    -0x38(%rbp),%r13
  0x0000000115ea7fc7: mov    -0x30(%rbp),%r14
  0x0000000115ea7fcb: retq   
  0x0000000115ea7fcc: mov    -0x18(%rbp),%rbx
  0x0000000115ea7fd0: mov    0x60(%rbx),%r11
  0x0000000115ea7fd4: callq  *%r11
  0x0000000115ea7fd7: mov    -0x18(%rbp),%rbx
  0x0000000115ea7fdb: mov    %rax,0x18(%rbp)
  0x0000000115ea7fdf: mov    0x20(%rbx),%r11d
  0x0000000115ea7fe3: test   $0x8,%r11d
  0x0000000115ea7fea: je     0x0000000115ea8008
  0x0000000115ea7ff0: mov    0x8(%rbx),%r11
  0x0000000115ea7ff4: mov    0x8(%r11),%r11
  0x0000000115ea7ff8: mov    0x18(%r11),%r11
  0x0000000115ea7ffc: mov    0x68(%r11),%r11
  0x0000000115ea8000: mov    %r11,0x10(%rbp)
  0x0000000115ea8004: lea    0x10(%rbp),%rsi
  0x0000000115ea8008: mov    0x58(%rbx),%rax
  0x0000000115ea800c: movabs $0x10dce4067,%r11
  0x0000000115ea8016: cmp    %r11,%rax
  0x0000000115ea8019: jne    0x0000000115ea80af
  0x0000000115ea801f: callq  0x0000000115ea8029
  0x0000000115ea8024: jmpq   0x0000000115ea80a7
  0x0000000115ea8029: mov    %rbx,%rsi
  0x0000000115ea802c: lea    0x8(%rsp),%rax
  0x0000000115ea8031: mov    %r13,-0x38(%rbp)
  0x0000000115ea8035: mov    %r15,%rdi
  0x0000000115ea8038: mov    %rbp,0x1e8(%r15)
  0x0000000115ea803f: mov    %rax,0x1d8(%r15)
  0x0000000115ea8046: test   $0xf,%esp
  0x0000000115ea804c: je     0x0000000115ea8064
  0x0000000115ea8052: sub    $0x8,%rsp
  0x0000000115ea8056: callq  0x000000010dae6686
  0x0000000115ea805b: add    $0x8,%rsp
  0x0000000115ea805f: jmpq   0x0000000115ea8069
  0x0000000115ea8064: callq  0x000000010dae6686
  0x0000000115ea8069: movabs $0x0,%r10
  0x0000000115ea8073: mov    %r10,0x1d8(%r15)
  0x0000000115ea807a: movabs $0x0,%r10
  0x0000000115ea8084: mov    %r10,0x1e8(%r15)
  0x0000000115ea808b: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8093: je     0x0000000115ea809e
  0x0000000115ea8099: jmpq   0x0000000115e916e0
  0x0000000115ea809e: mov    -0x38(%rbp),%r13
  0x0000000115ea80a2: mov    -0x30(%rbp),%r14
  0x0000000115ea80a6: retq   
  0x0000000115ea80a7: mov    -0x18(%rbp),%rbx
  0x0000000115ea80ab: mov    0x58(%rbx),%rax
  0x0000000115ea80af: lea    0x1f8(%r15),%rdi
  0x0000000115ea80b6: mov    %rbp,0x1e8(%r15)
  0x0000000115ea80bd: movabs $0x115ea80b6,%r10
  0x0000000115ea80c7: mov    %r10,0x1e0(%r15)
  0x0000000115ea80ce: mov    %rsp,0x1d8(%r15)
  0x0000000115ea80d5: movl   $0x4,0x270(%r15)
  0x0000000115ea80e0: callq  *%rax
  0x0000000115ea80e2: vzeroupper 
  0x0000000115ea80e5: sub    $0x10,%rsp
  0x0000000115ea80e9: vmovsd %xmm0,(%rsp)
  0x0000000115ea80ee: sub    $0x10,%rsp
  0x0000000115ea80f2: mov    %rax,(%rsp)
  0x0000000115ea80f6: movl   $0x5,0x270(%r15)
  0x0000000115ea8101: lock addl $0x0,(%rsp)
  0x0000000115ea8106: cmpl   $0x0,-0x7db64b0(%rip)        # 0x000000010e0f1c60
  0x0000000115ea8110: jne    0x0000000115ea8124
  0x0000000115ea8116: cmpl   $0x0,0x30(%r15)
  0x0000000115ea811e: je     0x0000000115ea813d
  0x0000000115ea8124: mov    %r15,%rdi
  0x0000000115ea8127: mov    %rsp,%r12
  0x0000000115ea812a: sub    $0x0,%rsp
  0x0000000115ea812e: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8132: callq  0x000000010dd69dc0
  0x0000000115ea8137: mov    %r12,%rsp
  0x0000000115ea813a: xor    %r12,%r12
  0x0000000115ea813d: movl   $0x8,0x270(%r15)
  0x0000000115ea8148: movabs $0x0,%r10
  0x0000000115ea8152: mov    %r10,0x1d8(%r15)
  0x0000000115ea8159: movabs $0x0,%r10
  0x0000000115ea8163: mov    %r10,0x1e8(%r15)
  0x0000000115ea816a: movabs $0x0,%r10
  0x0000000115ea8174: mov    %r10,0x1e0(%r15)
  0x0000000115ea817b: mov    0x38(%r15),%r11
  0x0000000115ea817f: movl   $0x0,0x100(%r11)
  0x0000000115ea818a: movabs $0x115ea253b,%r11
  0x0000000115ea8194: cmp    0x18(%rbp),%r11
  0x0000000115ea8198: jne    0x0000000115ea81be
  0x0000000115ea819e: mov    (%rsp),%rax
  0x0000000115ea81a2: add    $0x10,%rsp
  0x0000000115ea81a6: test   %rax,%rax
  0x0000000115ea81a9: je     0x0000000115ea81b2
  0x0000000115ea81af: mov    (%rax),%rax
  0x0000000115ea81b2: mov    %rax,0x10(%rbp)
  0x0000000115ea81b6: sub    $0x10,%rsp
  0x0000000115ea81ba: mov    %rax,(%rsp)
  0x0000000115ea81be: cmpl   $0x1,0x29c(%r15)
  0x0000000115ea81c9: jne    0x0000000115ea828c
  0x0000000115ea81cf: mov    %rsp,-0x28(%rsp)
  0x0000000115ea81d4: sub    $0x80,%rsp
  0x0000000115ea81db: mov    %rax,0x78(%rsp)
  0x0000000115ea81e0: mov    %rcx,0x70(%rsp)
  0x0000000115ea81e5: mov    %rdx,0x68(%rsp)
  0x0000000115ea81ea: mov    %rbx,0x60(%rsp)
  0x0000000115ea81ef: mov    %rbp,0x50(%rsp)
  0x0000000115ea81f4: mov    %rsi,0x48(%rsp)
  0x0000000115ea81f9: mov    %rdi,0x40(%rsp)
  0x0000000115ea81fe: mov    %r8,0x38(%rsp)
  0x0000000115ea8203: mov    %r9,0x30(%rsp)
  0x0000000115ea8208: mov    %r10,0x28(%rsp)
  0x0000000115ea820d: mov    %r11,0x20(%rsp)
  0x0000000115ea8212: mov    %r12,0x18(%rsp)
  0x0000000115ea8217: mov    %r13,0x10(%rsp)
  0x0000000115ea821c: mov    %r14,0x8(%rsp)
  0x0000000115ea8221: mov    %r15,(%rsp)
  0x0000000115ea8225: mov    %rsp,%r12
  0x0000000115ea8228: sub    $0x0,%rsp
  0x0000000115ea822c: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8230: callq  0x000000010dce54fc
  0x0000000115ea8235: mov    %r12,%rsp
  0x0000000115ea8238: mov    (%rsp),%r15
  0x0000000115ea823c: mov    0x8(%rsp),%r14
  0x0000000115ea8241: mov    0x10(%rsp),%r13
  0x0000000115ea8246: mov    0x18(%rsp),%r12
  0x0000000115ea824b: mov    0x20(%rsp),%r11
  0x0000000115ea8250: mov    0x28(%rsp),%r10
  0x0000000115ea8255: mov    0x30(%rsp),%r9
  0x0000000115ea825a: mov    0x38(%rsp),%r8
  0x0000000115ea825f: mov    0x40(%rsp),%rdi
  0x0000000115ea8264: mov    0x48(%rsp),%rsi
  0x0000000115ea8269: mov    0x50(%rsp),%rbp
  0x0000000115ea826e: mov    0x60(%rsp),%rbx
  0x0000000115ea8273: mov    0x68(%rsp),%rdx
  0x0000000115ea8278: mov    0x70(%rsp),%rcx
  0x0000000115ea827d: mov    0x78(%rsp),%rax
  0x0000000115ea8282: add    $0x80,%rsp
  0x0000000115ea8289: xor    %r12,%r12
  0x0000000115ea828c: mov    -0x18(%rbp),%rbx
  0x0000000115ea8290: mov    0x8(%rbx),%r13
  0x0000000115ea8294: lea    0x30(%r13),%r13
  0x0000000115ea8298: cmpq   $0x0,0x8(%r15)
  0x0000000115ea82a0: je     0x0000000115ea83a2
  0x0000000115ea82a6: callq  0x0000000115ea82b0
  0x0000000115ea82ab: jmpq   0x0000000115ea832b
  0x0000000115ea82b0: lea    0x8(%rsp),%rax
  0x0000000115ea82b5: mov    %r13,-0x38(%rbp)
  0x0000000115ea82b9: mov    %r15,%rdi
  0x0000000115ea82bc: mov    %rbp,0x1e8(%r15)
  0x0000000115ea82c3: mov    %rax,0x1d8(%r15)
  0x0000000115ea82ca: test   $0xf,%esp
  0x0000000115ea82d0: je     0x0000000115ea82e8
  0x0000000115ea82d6: sub    $0x8,%rsp
  0x0000000115ea82da: callq  0x000000010dae5ebc
  0x0000000115ea82df: add    $0x8,%rsp
  0x0000000115ea82e3: jmpq   0x0000000115ea82ed
  0x0000000115ea82e8: callq  0x000000010dae5ebc
  0x0000000115ea82ed: movabs $0x0,%r10
  0x0000000115ea82f7: mov    %r10,0x1d8(%r15)
  0x0000000115ea82fe: movabs $0x0,%r10
  0x0000000115ea8308: mov    %r10,0x1e8(%r15)
  0x0000000115ea830f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8317: je     0x0000000115ea8322
  0x0000000115ea831d: jmpq   0x0000000115e916e0
  0x0000000115ea8322: mov    -0x38(%rbp),%r13
  0x0000000115ea8326: mov    -0x30(%rbp),%r14
  0x0000000115ea832a: retq   
  0x0000000115ea832b: mov    %rsp,-0x28(%rsp)
  0x0000000115ea8330: sub    $0x80,%rsp
  0x0000000115ea8337: mov    %rax,0x78(%rsp)
  0x0000000115ea833c: mov    %rcx,0x70(%rsp)
  0x0000000115ea8341: mov    %rdx,0x68(%rsp)
  0x0000000115ea8346: mov    %rbx,0x60(%rsp)
  0x0000000115ea834b: mov    %rbp,0x50(%rsp)
  0x0000000115ea8350: mov    %rsi,0x48(%rsp)
  0x0000000115ea8355: mov    %rdi,0x40(%rsp)
  0x0000000115ea835a: mov    %r8,0x38(%rsp)
  0x0000000115ea835f: mov    %r9,0x30(%rsp)
  0x0000000115ea8364: mov    %r10,0x28(%rsp)
  0x0000000115ea8369: mov    %r11,0x20(%rsp)
  0x0000000115ea836e: mov    %r12,0x18(%rsp)
  0x0000000115ea8373: mov    %r13,0x10(%rsp)
  0x0000000115ea8378: mov    %r14,0x8(%rsp)
  0x0000000115ea837d: mov    %r15,(%rsp)
  0x0000000115ea8381: movabs $0x10ddd8000,%rdi
  0x0000000115ea838b: movabs $0x115ea832b,%rsi
  0x0000000115ea8395: mov    %rsp,%rdx
  0x0000000115ea8398: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea839c: callq  0x000000010dc0341e
  0x0000000115ea83a1: hlt    
  0x0000000115ea83a2: mov    0x20(%rbx),%r11d
  0x0000000115ea83a6: test   $0x20,%r11d
  0x0000000115ea83ad: je     0x0000000115ea8588
  0x0000000115ea83b3: lea    -0x50(%rbp),%rsi
  0x0000000115ea83b7: mov    0x8(%rsi),%r11
  0x0000000115ea83bb: test   %r11,%r11
  0x0000000115ea83be: jne    0x0000000115ea84c0
  0x0000000115ea83c4: callq  0x0000000115ea83ce
  0x0000000115ea83c9: jmpq   0x0000000115ea8449
  0x0000000115ea83ce: lea    0x8(%rsp),%rax
  0x0000000115ea83d3: mov    %r13,-0x38(%rbp)
  0x0000000115ea83d7: mov    %r15,%rdi
  0x0000000115ea83da: mov    %rbp,0x1e8(%r15)
  0x0000000115ea83e1: mov    %rax,0x1d8(%r15)
  0x0000000115ea83e8: test   $0xf,%esp
  0x0000000115ea83ee: je     0x0000000115ea8406
  0x0000000115ea83f4: sub    $0x8,%rsp
  0x0000000115ea83f8: callq  0x000000010dae850c
  0x0000000115ea83fd: add    $0x8,%rsp
  0x0000000115ea8401: jmpq   0x0000000115ea840b
  0x0000000115ea8406: callq  0x000000010dae850c
  0x0000000115ea840b: movabs $0x0,%r10
  0x0000000115ea8415: mov    %r10,0x1d8(%r15)
  0x0000000115ea841c: movabs $0x0,%r10
  0x0000000115ea8426: mov    %r10,0x1e8(%r15)
  0x0000000115ea842d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8435: je     0x0000000115ea8440
  0x0000000115ea843b: jmpq   0x0000000115e916e0
  0x0000000115ea8440: mov    -0x38(%rbp),%r13
  0x0000000115ea8444: mov    -0x30(%rbp),%r14
  0x0000000115ea8448: retq   
  0x0000000115ea8449: mov    %rsp,-0x28(%rsp)
  0x0000000115ea844e: sub    $0x80,%rsp
  0x0000000115ea8455: mov    %rax,0x78(%rsp)
  0x0000000115ea845a: mov    %rcx,0x70(%rsp)
  0x0000000115ea845f: mov    %rdx,0x68(%rsp)
  0x0000000115ea8464: mov    %rbx,0x60(%rsp)
  0x0000000115ea8469: mov    %rbp,0x50(%rsp)
  0x0000000115ea846e: mov    %rsi,0x48(%rsp)
  0x0000000115ea8473: mov    %rdi,0x40(%rsp)
  0x0000000115ea8478: mov    %r8,0x38(%rsp)
  0x0000000115ea847d: mov    %r9,0x30(%rsp)
  0x0000000115ea8482: mov    %r10,0x28(%rsp)
  0x0000000115ea8487: mov    %r11,0x20(%rsp)
  0x0000000115ea848c: mov    %r12,0x18(%rsp)
  0x0000000115ea8491: mov    %r13,0x10(%rsp)
  0x0000000115ea8496: mov    %r14,0x8(%rsp)
  0x0000000115ea849b: mov    %r15,(%rsp)
  0x0000000115ea849f: movabs $0x10ddd8000,%rdi
  0x0000000115ea84a9: movabs $0x115ea8449,%rsi
  0x0000000115ea84b3: mov    %rsp,%rdx
  0x0000000115ea84b6: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea84ba: callq  0x000000010dc0341e
  0x0000000115ea84bf: hlt    
  0x0000000115ea84c0: mov    %r13,-0x38(%rbp)
  0x0000000115ea84c4: lea    (%rsi),%rax
  0x0000000115ea84c7: mov    0x8(%rsi),%rcx
  0x0000000115ea84cb: movq   $0x0,0x8(%rsi)
  0x0000000115ea84d3: mov    (%rcx),%rdx
  0x0000000115ea84d6: and    $0x7,%rdx
  0x0000000115ea84da: cmp    $0x5,%rdx
  0x0000000115ea84de: je     0x0000000115ea8584
  0x0000000115ea84e4: mov    (%rax),%rdx
  0x0000000115ea84e7: test   %rdx,%rdx
  0x0000000115ea84ea: je     0x0000000115ea8584
  0x0000000115ea84f0: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea84f5: je     0x0000000115ea8584
  0x0000000115ea84fb: mov    %rcx,0x8(%rsi)
  0x0000000115ea84ff: callq  0x0000000115ea8509
  0x0000000115ea8504: jmpq   0x0000000115ea8584
  0x0000000115ea8509: lea    0x8(%rsp),%rax
  0x0000000115ea850e: mov    %r13,-0x38(%rbp)
  0x0000000115ea8512: mov    %r15,%rdi
  0x0000000115ea8515: mov    %rbp,0x1e8(%r15)
  0x0000000115ea851c: mov    %rax,0x1d8(%r15)
  0x0000000115ea8523: test   $0xf,%esp
  0x0000000115ea8529: je     0x0000000115ea8541
  0x0000000115ea852f: sub    $0x8,%rsp
  0x0000000115ea8533: callq  0x000000010dae8608
  0x0000000115ea8538: add    $0x8,%rsp
  0x0000000115ea853c: jmpq   0x0000000115ea8546
  0x0000000115ea8541: callq  0x000000010dae8608
  0x0000000115ea8546: movabs $0x0,%r10
  0x0000000115ea8550: mov    %r10,0x1d8(%r15)
  0x0000000115ea8557: movabs $0x0,%r10
  0x0000000115ea8561: mov    %r10,0x1e8(%r15)
  0x0000000115ea8568: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8570: je     0x0000000115ea857b
  0x0000000115ea8576: jmpq   0x0000000115e916e0
  0x0000000115ea857b: mov    -0x38(%rbp),%r13
  0x0000000115ea857f: mov    -0x30(%rbp),%r14
  0x0000000115ea8583: retq   
  0x0000000115ea8584: mov    -0x38(%rbp),%r13
  0x0000000115ea8588: cmpb   $0x0,-0x7dc12c5(%rip)        # 0x000000010e0e72ca
  0x0000000115ea858f: je     0x0000000115ea85bf
  0x0000000115ea8595: mov    -0x18(%rbp),%rsi
  0x0000000115ea8599: mov    %r15,%rdi
  0x0000000115ea859c: test   $0xf,%esp
  0x0000000115ea85a2: je     0x0000000115ea85ba
  0x0000000115ea85a8: sub    $0x8,%rsp
  0x0000000115ea85ac: callq  0x000000010dce7696
  0x0000000115ea85b1: add    $0x8,%rsp
  0x0000000115ea85b5: jmpq   0x0000000115ea85bf
  0x0000000115ea85ba: callq  0x000000010dce7696
  0x0000000115ea85bf: mov    (%rsp),%rax
  0x0000000115ea85c3: add    $0x10,%rsp
  0x0000000115ea85c7: vmovsd (%rsp),%xmm0
  0x0000000115ea85cc: add    $0x10,%rsp
  0x0000000115ea85d0: mov    0x18(%rbp),%r11
  0x0000000115ea85d4: callq  *%r11
  0x0000000115ea85d7: mov    -0x8(%rbp),%r11
  0x0000000115ea85db: leaveq 
  0x0000000115ea85dc: pop    %rdi
  0x0000000115ea85dd: mov    %r11,%rsp
  0x0000000115ea85e0: jmpq   *%rdi
  0x0000000115ea85e2: mov    $0x0,%esi
  0x0000000115ea85e7: callq  0x0000000115ea85f1
  0x0000000115ea85ec: jmpq   0x0000000115ea866c
  0x0000000115ea85f1: lea    0x8(%rsp),%rax
  0x0000000115ea85f6: mov    %r13,-0x38(%rbp)
  0x0000000115ea85fa: mov    %r15,%rdi
  0x0000000115ea85fd: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8604: mov    %rax,0x1d8(%r15)
  0x0000000115ea860b: test   $0xf,%esp
  0x0000000115ea8611: je     0x0000000115ea8629
  0x0000000115ea8617: sub    $0x8,%rsp
  0x0000000115ea861b: callq  0x000000010dae7476
  0x0000000115ea8620: add    $0x8,%rsp
  0x0000000115ea8624: jmpq   0x0000000115ea862e
  0x0000000115ea8629: callq  0x000000010dae7476
  0x0000000115ea862e: movabs $0x0,%r10
  0x0000000115ea8638: mov    %r10,0x1d8(%r15)
  0x0000000115ea863f: movabs $0x0,%r10
  0x0000000115ea8649: mov    %r10,0x1e8(%r15)
  0x0000000115ea8650: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8658: je     0x0000000115ea8663
  0x0000000115ea865e: jmpq   0x0000000115e916e0
  0x0000000115ea8663: mov    -0x38(%rbp),%r13
  0x0000000115ea8667: mov    -0x30(%rbp),%r14
  0x0000000115ea866b: retq   
  0x0000000115ea866c: mov    -0x18(%rbp),%rbx
  0x0000000115ea8670: jmpq   0x0000000115ea7ed5
  0x0000000115ea8675: data32 xchg %ax,%ax
  0x0000000115ea8678: add    %al,(%rax)
  0x0000000115ea867a: add    %al,(%rax)
  0x0000000115ea867c: add    %al,(%rax)
  0x0000000115ea867e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = native)  [0x0000000115ea86a0, 0x0000000115ea8fa0]  2304 bytes

  0x0000000115ea86a0: mov    0x8(%rbx),%rcx
  0x0000000115ea86a4: movzwl 0x2c(%rcx),%ecx
  0x0000000115ea86a8: pop    %rax
  0x0000000115ea86a9: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea86ae: pushq  $0x0
  0x0000000115ea86b3: pushq  $0x0
  0x0000000115ea86b8: push   %rax
  0x0000000115ea86b9: push   %rbp
  0x0000000115ea86ba: mov    %rsp,%rbp
  0x0000000115ea86bd: push   %r13
  0x0000000115ea86bf: pushq  $0x0
  0x0000000115ea86c4: mov    0x8(%rbx),%r13
  0x0000000115ea86c8: lea    0x30(%r13),%r13
  0x0000000115ea86cc: push   %rbx
  0x0000000115ea86cd: mov    0x10(%rbx),%rdx
  0x0000000115ea86d1: test   %rdx,%rdx
  0x0000000115ea86d4: je     0x0000000115ea86e1
  0x0000000115ea86da: add    $0x100,%rdx
  0x0000000115ea86e1: push   %rdx
  0x0000000115ea86e2: mov    0x8(%rbx),%rdx
  0x0000000115ea86e6: mov    0x8(%rdx),%rdx
  0x0000000115ea86ea: mov    0x10(%rdx),%rdx
  0x0000000115ea86ee: push   %rdx
  0x0000000115ea86ef: push   %r14
  0x0000000115ea86f1: pushq  $0x0
  0x0000000115ea86f6: pushq  $0x0
  0x0000000115ea86fb: mov    %rsp,(%rsp)
  0x0000000115ea86ff: movb   $0x1,0x295(%r15)
  0x0000000115ea8707: mov    0x10(%rbx),%rax
  0x0000000115ea870b: test   %rax,%rax
  0x0000000115ea870e: je     0x0000000115ea8730
  0x0000000115ea8710: mov    0xdc(%rax),%ecx
  0x0000000115ea8716: add    $0x8,%ecx
  0x0000000115ea8719: mov    %ecx,0xdc(%rax)
  0x0000000115ea871f: and    $0x3f8,%ecx
  0x0000000115ea8725: je     0x0000000115ea8ef4
  0x0000000115ea872b: jmpq   0x0000000115ea87e7
  0x0000000115ea8730: mov    0x18(%rbx),%rax
  0x0000000115ea8734: test   %rax,%rax
  0x0000000115ea8737: jne    0x0000000115ea87d2
  0x0000000115ea873d: callq  0x0000000115ea8747
  0x0000000115ea8742: jmpq   0x0000000115ea87c5
  0x0000000115ea8747: mov    %rbx,%rsi
  0x0000000115ea874a: lea    0x8(%rsp),%rax
  0x0000000115ea874f: mov    %r13,-0x38(%rbp)
  0x0000000115ea8753: mov    %r15,%rdi
  0x0000000115ea8756: mov    %rbp,0x1e8(%r15)
  0x0000000115ea875d: mov    %rax,0x1d8(%r15)
  0x0000000115ea8764: test   $0xf,%esp
  0x0000000115ea876a: je     0x0000000115ea8782
  0x0000000115ea8770: sub    $0x8,%rsp
  0x0000000115ea8774: callq  0x000000010dae6d98
  0x0000000115ea8779: add    $0x8,%rsp
  0x0000000115ea877d: jmpq   0x0000000115ea8787
  0x0000000115ea8782: callq  0x000000010dae6d98
  0x0000000115ea8787: movabs $0x0,%r10
  0x0000000115ea8791: mov    %r10,0x1d8(%r15)
  0x0000000115ea8798: movabs $0x0,%r10
  0x0000000115ea87a2: mov    %r10,0x1e8(%r15)
  0x0000000115ea87a9: cmpq   $0x0,0x8(%r15)
  0x0000000115ea87b1: je     0x0000000115ea87bc
  0x0000000115ea87b7: jmpq   0x0000000115e916e0
  0x0000000115ea87bc: mov    -0x38(%rbp),%r13
  0x0000000115ea87c0: mov    -0x30(%rbp),%r14
  0x0000000115ea87c4: retq   
  0x0000000115ea87c5: mov    0x18(%rbx),%rax
  0x0000000115ea87c9: test   %rax,%rax
  0x0000000115ea87cc: je     0x0000000115ea87e7
  0x0000000115ea87d2: mov    0x8(%rax),%ecx
  0x0000000115ea87d5: add    $0x8,%ecx
  0x0000000115ea87d8: mov    %ecx,0x8(%rax)
  0x0000000115ea87db: and    $0x3f8,%ecx
  0x0000000115ea87e1: je     0x0000000115ea8ef4
  0x0000000115ea87e7: mov    %eax,-0x14000(%rsp)
  0x0000000115ea87ee: movb   $0x0,0x295(%r15)
  0x0000000115ea87f6: cmpb   $0x0,-0x7dc1533(%rip)        # 0x000000010e0e72ca
  0x0000000115ea87fd: je     0x0000000115ea882d
  0x0000000115ea8803: mov    -0x18(%rbp),%rsi
  0x0000000115ea8807: mov    %r15,%rdi
  0x0000000115ea880a: test   $0xf,%esp
  0x0000000115ea8810: je     0x0000000115ea8828
  0x0000000115ea8816: sub    $0x8,%rsp
  0x0000000115ea881a: callq  0x000000010dce7724
  0x0000000115ea881f: add    $0x8,%rsp
  0x0000000115ea8823: jmpq   0x0000000115ea882d
  0x0000000115ea8828: callq  0x000000010dce7724
  0x0000000115ea882d: mov    -0x18(%rbp),%rbx
  0x0000000115ea8831: mov    0x8(%rbx),%r11
  0x0000000115ea8835: movzwl 0x2c(%r11),%r11d
  0x0000000115ea883a: shl    $0x3,%r11d
  0x0000000115ea883e: sub    %r11,%rsp
  0x0000000115ea8841: sub    $0x0,%rsp
  0x0000000115ea8845: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8849: mov    0x60(%rbx),%r11
  0x0000000115ea884d: test   %r11,%r11
  0x0000000115ea8850: jne    0x0000000115ea88e6
  0x0000000115ea8856: callq  0x0000000115ea8860
  0x0000000115ea885b: jmpq   0x0000000115ea88de
  0x0000000115ea8860: mov    %rbx,%rsi
  0x0000000115ea8863: lea    0x8(%rsp),%rax
  0x0000000115ea8868: mov    %r13,-0x38(%rbp)
  0x0000000115ea886c: mov    %r15,%rdi
  0x0000000115ea886f: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8876: mov    %rax,0x1d8(%r15)
  0x0000000115ea887d: test   $0xf,%esp
  0x0000000115ea8883: je     0x0000000115ea889b
  0x0000000115ea8889: sub    $0x8,%rsp
  0x0000000115ea888d: callq  0x000000010dae6686
  0x0000000115ea8892: add    $0x8,%rsp
  0x0000000115ea8896: jmpq   0x0000000115ea88a0
  0x0000000115ea889b: callq  0x000000010dae6686
  0x0000000115ea88a0: movabs $0x0,%r10
  0x0000000115ea88aa: mov    %r10,0x1d8(%r15)
  0x0000000115ea88b1: movabs $0x0,%r10
  0x0000000115ea88bb: mov    %r10,0x1e8(%r15)
  0x0000000115ea88c2: cmpq   $0x0,0x8(%r15)
  0x0000000115ea88ca: je     0x0000000115ea88d5
  0x0000000115ea88d0: jmpq   0x0000000115e916e0
  0x0000000115ea88d5: mov    -0x38(%rbp),%r13
  0x0000000115ea88d9: mov    -0x30(%rbp),%r14
  0x0000000115ea88dd: retq   
  0x0000000115ea88de: mov    -0x18(%rbp),%rbx
  0x0000000115ea88e2: mov    0x60(%rbx),%r11
  0x0000000115ea88e6: callq  *%r11
  0x0000000115ea88e9: mov    -0x18(%rbp),%rbx
  0x0000000115ea88ed: mov    %rax,0x18(%rbp)
  0x0000000115ea88f1: mov    0x20(%rbx),%r11d
  0x0000000115ea88f5: test   $0x8,%r11d
  0x0000000115ea88fc: je     0x0000000115ea891a
  0x0000000115ea8902: mov    0x8(%rbx),%r11
  0x0000000115ea8906: mov    0x8(%r11),%r11
  0x0000000115ea890a: mov    0x18(%r11),%r11
  0x0000000115ea890e: mov    0x68(%r11),%r11
  0x0000000115ea8912: mov    %r11,0x10(%rbp)
  0x0000000115ea8916: lea    0x10(%rbp),%rsi
  0x0000000115ea891a: mov    0x58(%rbx),%rax
  0x0000000115ea891e: movabs $0x10dce4067,%r11
  0x0000000115ea8928: cmp    %r11,%rax
  0x0000000115ea892b: jne    0x0000000115ea89c1
  0x0000000115ea8931: callq  0x0000000115ea893b
  0x0000000115ea8936: jmpq   0x0000000115ea89b9
  0x0000000115ea893b: mov    %rbx,%rsi
  0x0000000115ea893e: lea    0x8(%rsp),%rax
  0x0000000115ea8943: mov    %r13,-0x38(%rbp)
  0x0000000115ea8947: mov    %r15,%rdi
  0x0000000115ea894a: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8951: mov    %rax,0x1d8(%r15)
  0x0000000115ea8958: test   $0xf,%esp
  0x0000000115ea895e: je     0x0000000115ea8976
  0x0000000115ea8964: sub    $0x8,%rsp
  0x0000000115ea8968: callq  0x000000010dae6686
  0x0000000115ea896d: add    $0x8,%rsp
  0x0000000115ea8971: jmpq   0x0000000115ea897b
  0x0000000115ea8976: callq  0x000000010dae6686
  0x0000000115ea897b: movabs $0x0,%r10
  0x0000000115ea8985: mov    %r10,0x1d8(%r15)
  0x0000000115ea898c: movabs $0x0,%r10
  0x0000000115ea8996: mov    %r10,0x1e8(%r15)
  0x0000000115ea899d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea89a5: je     0x0000000115ea89b0
  0x0000000115ea89ab: jmpq   0x0000000115e916e0
  0x0000000115ea89b0: mov    -0x38(%rbp),%r13
  0x0000000115ea89b4: mov    -0x30(%rbp),%r14
  0x0000000115ea89b8: retq   
  0x0000000115ea89b9: mov    -0x18(%rbp),%rbx
  0x0000000115ea89bd: mov    0x58(%rbx),%rax
  0x0000000115ea89c1: lea    0x1f8(%r15),%rdi
  0x0000000115ea89c8: mov    %rbp,0x1e8(%r15)
  0x0000000115ea89cf: movabs $0x115ea89c8,%r10
  0x0000000115ea89d9: mov    %r10,0x1e0(%r15)
  0x0000000115ea89e0: mov    %rsp,0x1d8(%r15)
  0x0000000115ea89e7: movl   $0x4,0x270(%r15)
  0x0000000115ea89f2: callq  *%rax
  0x0000000115ea89f4: vzeroupper 
  0x0000000115ea89f7: sub    $0x10,%rsp
  0x0000000115ea89fb: vmovsd %xmm0,(%rsp)
  0x0000000115ea8a00: sub    $0x10,%rsp
  0x0000000115ea8a04: mov    %rax,(%rsp)
  0x0000000115ea8a08: movl   $0x5,0x270(%r15)
  0x0000000115ea8a13: lock addl $0x0,(%rsp)
  0x0000000115ea8a18: cmpl   $0x0,-0x7db6dc2(%rip)        # 0x000000010e0f1c60
  0x0000000115ea8a22: jne    0x0000000115ea8a36
  0x0000000115ea8a28: cmpl   $0x0,0x30(%r15)
  0x0000000115ea8a30: je     0x0000000115ea8a4f
  0x0000000115ea8a36: mov    %r15,%rdi
  0x0000000115ea8a39: mov    %rsp,%r12
  0x0000000115ea8a3c: sub    $0x0,%rsp
  0x0000000115ea8a40: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8a44: callq  0x000000010dd69dc0
  0x0000000115ea8a49: mov    %r12,%rsp
  0x0000000115ea8a4c: xor    %r12,%r12
  0x0000000115ea8a4f: movl   $0x8,0x270(%r15)
  0x0000000115ea8a5a: movabs $0x0,%r10
  0x0000000115ea8a64: mov    %r10,0x1d8(%r15)
  0x0000000115ea8a6b: movabs $0x0,%r10
  0x0000000115ea8a75: mov    %r10,0x1e8(%r15)
  0x0000000115ea8a7c: movabs $0x0,%r10
  0x0000000115ea8a86: mov    %r10,0x1e0(%r15)
  0x0000000115ea8a8d: mov    0x38(%r15),%r11
  0x0000000115ea8a91: movl   $0x0,0x100(%r11)
  0x0000000115ea8a9c: movabs $0x115ea253b,%r11
  0x0000000115ea8aa6: cmp    0x18(%rbp),%r11
  0x0000000115ea8aaa: jne    0x0000000115ea8ad0
  0x0000000115ea8ab0: mov    (%rsp),%rax
  0x0000000115ea8ab4: add    $0x10,%rsp
  0x0000000115ea8ab8: test   %rax,%rax
  0x0000000115ea8abb: je     0x0000000115ea8ac4
  0x0000000115ea8ac1: mov    (%rax),%rax
  0x0000000115ea8ac4: mov    %rax,0x10(%rbp)
  0x0000000115ea8ac8: sub    $0x10,%rsp
  0x0000000115ea8acc: mov    %rax,(%rsp)
  0x0000000115ea8ad0: cmpl   $0x1,0x29c(%r15)
  0x0000000115ea8adb: jne    0x0000000115ea8b9e
  0x0000000115ea8ae1: mov    %rsp,-0x28(%rsp)
  0x0000000115ea8ae6: sub    $0x80,%rsp
  0x0000000115ea8aed: mov    %rax,0x78(%rsp)
  0x0000000115ea8af2: mov    %rcx,0x70(%rsp)
  0x0000000115ea8af7: mov    %rdx,0x68(%rsp)
  0x0000000115ea8afc: mov    %rbx,0x60(%rsp)
  0x0000000115ea8b01: mov    %rbp,0x50(%rsp)
  0x0000000115ea8b06: mov    %rsi,0x48(%rsp)
  0x0000000115ea8b0b: mov    %rdi,0x40(%rsp)
  0x0000000115ea8b10: mov    %r8,0x38(%rsp)
  0x0000000115ea8b15: mov    %r9,0x30(%rsp)
  0x0000000115ea8b1a: mov    %r10,0x28(%rsp)
  0x0000000115ea8b1f: mov    %r11,0x20(%rsp)
  0x0000000115ea8b24: mov    %r12,0x18(%rsp)
  0x0000000115ea8b29: mov    %r13,0x10(%rsp)
  0x0000000115ea8b2e: mov    %r14,0x8(%rsp)
  0x0000000115ea8b33: mov    %r15,(%rsp)
  0x0000000115ea8b37: mov    %rsp,%r12
  0x0000000115ea8b3a: sub    $0x0,%rsp
  0x0000000115ea8b3e: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8b42: callq  0x000000010dce54fc
  0x0000000115ea8b47: mov    %r12,%rsp
  0x0000000115ea8b4a: mov    (%rsp),%r15
  0x0000000115ea8b4e: mov    0x8(%rsp),%r14
  0x0000000115ea8b53: mov    0x10(%rsp),%r13
  0x0000000115ea8b58: mov    0x18(%rsp),%r12
  0x0000000115ea8b5d: mov    0x20(%rsp),%r11
  0x0000000115ea8b62: mov    0x28(%rsp),%r10
  0x0000000115ea8b67: mov    0x30(%rsp),%r9
  0x0000000115ea8b6c: mov    0x38(%rsp),%r8
  0x0000000115ea8b71: mov    0x40(%rsp),%rdi
  0x0000000115ea8b76: mov    0x48(%rsp),%rsi
  0x0000000115ea8b7b: mov    0x50(%rsp),%rbp
  0x0000000115ea8b80: mov    0x60(%rsp),%rbx
  0x0000000115ea8b85: mov    0x68(%rsp),%rdx
  0x0000000115ea8b8a: mov    0x70(%rsp),%rcx
  0x0000000115ea8b8f: mov    0x78(%rsp),%rax
  0x0000000115ea8b94: add    $0x80,%rsp
  0x0000000115ea8b9b: xor    %r12,%r12
  0x0000000115ea8b9e: mov    -0x18(%rbp),%rbx
  0x0000000115ea8ba2: mov    0x8(%rbx),%r13
  0x0000000115ea8ba6: lea    0x30(%r13),%r13
  0x0000000115ea8baa: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8bb2: je     0x0000000115ea8cb4
  0x0000000115ea8bb8: callq  0x0000000115ea8bc2
  0x0000000115ea8bbd: jmpq   0x0000000115ea8c3d
  0x0000000115ea8bc2: lea    0x8(%rsp),%rax
  0x0000000115ea8bc7: mov    %r13,-0x38(%rbp)
  0x0000000115ea8bcb: mov    %r15,%rdi
  0x0000000115ea8bce: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8bd5: mov    %rax,0x1d8(%r15)
  0x0000000115ea8bdc: test   $0xf,%esp
  0x0000000115ea8be2: je     0x0000000115ea8bfa
  0x0000000115ea8be8: sub    $0x8,%rsp
  0x0000000115ea8bec: callq  0x000000010dae5ebc
  0x0000000115ea8bf1: add    $0x8,%rsp
  0x0000000115ea8bf5: jmpq   0x0000000115ea8bff
  0x0000000115ea8bfa: callq  0x000000010dae5ebc
  0x0000000115ea8bff: movabs $0x0,%r10
  0x0000000115ea8c09: mov    %r10,0x1d8(%r15)
  0x0000000115ea8c10: movabs $0x0,%r10
  0x0000000115ea8c1a: mov    %r10,0x1e8(%r15)
  0x0000000115ea8c21: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8c29: je     0x0000000115ea8c34
  0x0000000115ea8c2f: jmpq   0x0000000115e916e0
  0x0000000115ea8c34: mov    -0x38(%rbp),%r13
  0x0000000115ea8c38: mov    -0x30(%rbp),%r14
  0x0000000115ea8c3c: retq   
  0x0000000115ea8c3d: mov    %rsp,-0x28(%rsp)
  0x0000000115ea8c42: sub    $0x80,%rsp
  0x0000000115ea8c49: mov    %rax,0x78(%rsp)
  0x0000000115ea8c4e: mov    %rcx,0x70(%rsp)
  0x0000000115ea8c53: mov    %rdx,0x68(%rsp)
  0x0000000115ea8c58: mov    %rbx,0x60(%rsp)
  0x0000000115ea8c5d: mov    %rbp,0x50(%rsp)
  0x0000000115ea8c62: mov    %rsi,0x48(%rsp)
  0x0000000115ea8c67: mov    %rdi,0x40(%rsp)
  0x0000000115ea8c6c: mov    %r8,0x38(%rsp)
  0x0000000115ea8c71: mov    %r9,0x30(%rsp)
  0x0000000115ea8c76: mov    %r10,0x28(%rsp)
  0x0000000115ea8c7b: mov    %r11,0x20(%rsp)
  0x0000000115ea8c80: mov    %r12,0x18(%rsp)
  0x0000000115ea8c85: mov    %r13,0x10(%rsp)
  0x0000000115ea8c8a: mov    %r14,0x8(%rsp)
  0x0000000115ea8c8f: mov    %r15,(%rsp)
  0x0000000115ea8c93: movabs $0x10ddd8000,%rdi
  0x0000000115ea8c9d: movabs $0x115ea8c3d,%rsi
  0x0000000115ea8ca7: mov    %rsp,%rdx
  0x0000000115ea8caa: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8cae: callq  0x000000010dc0341e
  0x0000000115ea8cb3: hlt    
  0x0000000115ea8cb4: mov    0x20(%rbx),%r11d
  0x0000000115ea8cb8: test   $0x20,%r11d
  0x0000000115ea8cbf: je     0x0000000115ea8e9a
  0x0000000115ea8cc5: lea    -0x50(%rbp),%rsi
  0x0000000115ea8cc9: mov    0x8(%rsi),%r11
  0x0000000115ea8ccd: test   %r11,%r11
  0x0000000115ea8cd0: jne    0x0000000115ea8dd2
  0x0000000115ea8cd6: callq  0x0000000115ea8ce0
  0x0000000115ea8cdb: jmpq   0x0000000115ea8d5b
  0x0000000115ea8ce0: lea    0x8(%rsp),%rax
  0x0000000115ea8ce5: mov    %r13,-0x38(%rbp)
  0x0000000115ea8ce9: mov    %r15,%rdi
  0x0000000115ea8cec: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8cf3: mov    %rax,0x1d8(%r15)
  0x0000000115ea8cfa: test   $0xf,%esp
  0x0000000115ea8d00: je     0x0000000115ea8d18
  0x0000000115ea8d06: sub    $0x8,%rsp
  0x0000000115ea8d0a: callq  0x000000010dae850c
  0x0000000115ea8d0f: add    $0x8,%rsp
  0x0000000115ea8d13: jmpq   0x0000000115ea8d1d
  0x0000000115ea8d18: callq  0x000000010dae850c
  0x0000000115ea8d1d: movabs $0x0,%r10
  0x0000000115ea8d27: mov    %r10,0x1d8(%r15)
  0x0000000115ea8d2e: movabs $0x0,%r10
  0x0000000115ea8d38: mov    %r10,0x1e8(%r15)
  0x0000000115ea8d3f: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8d47: je     0x0000000115ea8d52
  0x0000000115ea8d4d: jmpq   0x0000000115e916e0
  0x0000000115ea8d52: mov    -0x38(%rbp),%r13
  0x0000000115ea8d56: mov    -0x30(%rbp),%r14
  0x0000000115ea8d5a: retq   
  0x0000000115ea8d5b: mov    %rsp,-0x28(%rsp)
  0x0000000115ea8d60: sub    $0x80,%rsp
  0x0000000115ea8d67: mov    %rax,0x78(%rsp)
  0x0000000115ea8d6c: mov    %rcx,0x70(%rsp)
  0x0000000115ea8d71: mov    %rdx,0x68(%rsp)
  0x0000000115ea8d76: mov    %rbx,0x60(%rsp)
  0x0000000115ea8d7b: mov    %rbp,0x50(%rsp)
  0x0000000115ea8d80: mov    %rsi,0x48(%rsp)
  0x0000000115ea8d85: mov    %rdi,0x40(%rsp)
  0x0000000115ea8d8a: mov    %r8,0x38(%rsp)
  0x0000000115ea8d8f: mov    %r9,0x30(%rsp)
  0x0000000115ea8d94: mov    %r10,0x28(%rsp)
  0x0000000115ea8d99: mov    %r11,0x20(%rsp)
  0x0000000115ea8d9e: mov    %r12,0x18(%rsp)
  0x0000000115ea8da3: mov    %r13,0x10(%rsp)
  0x0000000115ea8da8: mov    %r14,0x8(%rsp)
  0x0000000115ea8dad: mov    %r15,(%rsp)
  0x0000000115ea8db1: movabs $0x10ddd8000,%rdi
  0x0000000115ea8dbb: movabs $0x115ea8d5b,%rsi
  0x0000000115ea8dc5: mov    %rsp,%rdx
  0x0000000115ea8dc8: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea8dcc: callq  0x000000010dc0341e
  0x0000000115ea8dd1: hlt    
  0x0000000115ea8dd2: mov    %r13,-0x38(%rbp)
  0x0000000115ea8dd6: lea    (%rsi),%rax
  0x0000000115ea8dd9: mov    0x8(%rsi),%rcx
  0x0000000115ea8ddd: movq   $0x0,0x8(%rsi)
  0x0000000115ea8de5: mov    (%rcx),%rdx
  0x0000000115ea8de8: and    $0x7,%rdx
  0x0000000115ea8dec: cmp    $0x5,%rdx
  0x0000000115ea8df0: je     0x0000000115ea8e96
  0x0000000115ea8df6: mov    (%rax),%rdx
  0x0000000115ea8df9: test   %rdx,%rdx
  0x0000000115ea8dfc: je     0x0000000115ea8e96
  0x0000000115ea8e02: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea8e07: je     0x0000000115ea8e96
  0x0000000115ea8e0d: mov    %rcx,0x8(%rsi)
  0x0000000115ea8e11: callq  0x0000000115ea8e1b
  0x0000000115ea8e16: jmpq   0x0000000115ea8e96
  0x0000000115ea8e1b: lea    0x8(%rsp),%rax
  0x0000000115ea8e20: mov    %r13,-0x38(%rbp)
  0x0000000115ea8e24: mov    %r15,%rdi
  0x0000000115ea8e27: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8e2e: mov    %rax,0x1d8(%r15)
  0x0000000115ea8e35: test   $0xf,%esp
  0x0000000115ea8e3b: je     0x0000000115ea8e53
  0x0000000115ea8e41: sub    $0x8,%rsp
  0x0000000115ea8e45: callq  0x000000010dae8608
  0x0000000115ea8e4a: add    $0x8,%rsp
  0x0000000115ea8e4e: jmpq   0x0000000115ea8e58
  0x0000000115ea8e53: callq  0x000000010dae8608
  0x0000000115ea8e58: movabs $0x0,%r10
  0x0000000115ea8e62: mov    %r10,0x1d8(%r15)
  0x0000000115ea8e69: movabs $0x0,%r10
  0x0000000115ea8e73: mov    %r10,0x1e8(%r15)
  0x0000000115ea8e7a: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8e82: je     0x0000000115ea8e8d
  0x0000000115ea8e88: jmpq   0x0000000115e916e0
  0x0000000115ea8e8d: mov    -0x38(%rbp),%r13
  0x0000000115ea8e91: mov    -0x30(%rbp),%r14
  0x0000000115ea8e95: retq   
  0x0000000115ea8e96: mov    -0x38(%rbp),%r13
  0x0000000115ea8e9a: cmpb   $0x0,-0x7dc1bd7(%rip)        # 0x000000010e0e72ca
  0x0000000115ea8ea1: je     0x0000000115ea8ed1
  0x0000000115ea8ea7: mov    -0x18(%rbp),%rsi
  0x0000000115ea8eab: mov    %r15,%rdi
  0x0000000115ea8eae: test   $0xf,%esp
  0x0000000115ea8eb4: je     0x0000000115ea8ecc
  0x0000000115ea8eba: sub    $0x8,%rsp
  0x0000000115ea8ebe: callq  0x000000010dce7696
  0x0000000115ea8ec3: add    $0x8,%rsp
  0x0000000115ea8ec7: jmpq   0x0000000115ea8ed1
  0x0000000115ea8ecc: callq  0x000000010dce7696
  0x0000000115ea8ed1: mov    (%rsp),%rax
  0x0000000115ea8ed5: add    $0x10,%rsp
  0x0000000115ea8ed9: vmovsd (%rsp),%xmm0
  0x0000000115ea8ede: add    $0x10,%rsp
  0x0000000115ea8ee2: mov    0x18(%rbp),%r11
  0x0000000115ea8ee6: callq  *%r11
  0x0000000115ea8ee9: mov    -0x8(%rbp),%r11
  0x0000000115ea8eed: leaveq 
  0x0000000115ea8eee: pop    %rdi
  0x0000000115ea8eef: mov    %r11,%rsp
  0x0000000115ea8ef2: jmpq   *%rdi
  0x0000000115ea8ef4: mov    $0x0,%esi
  0x0000000115ea8ef9: callq  0x0000000115ea8f03
  0x0000000115ea8efe: jmpq   0x0000000115ea8f7e
  0x0000000115ea8f03: lea    0x8(%rsp),%rax
  0x0000000115ea8f08: mov    %r13,-0x38(%rbp)
  0x0000000115ea8f0c: mov    %r15,%rdi
  0x0000000115ea8f0f: mov    %rbp,0x1e8(%r15)
  0x0000000115ea8f16: mov    %rax,0x1d8(%r15)
  0x0000000115ea8f1d: test   $0xf,%esp
  0x0000000115ea8f23: je     0x0000000115ea8f3b
  0x0000000115ea8f29: sub    $0x8,%rsp
  0x0000000115ea8f2d: callq  0x000000010dae7476
  0x0000000115ea8f32: add    $0x8,%rsp
  0x0000000115ea8f36: jmpq   0x0000000115ea8f40
  0x0000000115ea8f3b: callq  0x000000010dae7476
  0x0000000115ea8f40: movabs $0x0,%r10
  0x0000000115ea8f4a: mov    %r10,0x1d8(%r15)
  0x0000000115ea8f51: movabs $0x0,%r10
  0x0000000115ea8f5b: mov    %r10,0x1e8(%r15)
  0x0000000115ea8f62: cmpq   $0x0,0x8(%r15)
  0x0000000115ea8f6a: je     0x0000000115ea8f75
  0x0000000115ea8f70: jmpq   0x0000000115e916e0
  0x0000000115ea8f75: mov    -0x38(%rbp),%r13
  0x0000000115ea8f79: mov    -0x30(%rbp),%r14
  0x0000000115ea8f7d: retq   
  0x0000000115ea8f7e: mov    -0x18(%rbp),%rbx
  0x0000000115ea8f82: jmpq   0x0000000115ea87e7
  0x0000000115ea8f87: nop
  0x0000000115ea8f88: add    %al,(%rax)
  0x0000000115ea8f8a: add    %al,(%rax)
  0x0000000115ea8f8c: add    %al,(%rax)
  0x0000000115ea8f8e: add    %al,(%rax)
  0x0000000115ea8f90: add    %al,(%rax)
  0x0000000115ea8f92: add    %al,(%rax)
  0x0000000115ea8f94: add    %al,(%rax)
  0x0000000115ea8f96: add    %al,(%rax)
  0x0000000115ea8f98: add    %al,(%rax)
  0x0000000115ea8f9a: add    %al,(%rax)
  0x0000000115ea8f9c: add    %al,(%rax)
  0x0000000115ea8f9e: add    %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = native_synchronized)  [0x0000000115ea8fc0, 0x0000000115ea9a40]  2688 bytes

  0x0000000115ea8fc0: mov    0x8(%rbx),%rcx
  0x0000000115ea8fc4: movzwl 0x2c(%rcx),%ecx
  0x0000000115ea8fc8: pop    %rax
  0x0000000115ea8fc9: lea    -0x8(%rsp,%rcx,8),%r14
  0x0000000115ea8fce: pushq  $0x0
  0x0000000115ea8fd3: pushq  $0x0
  0x0000000115ea8fd8: push   %rax
  0x0000000115ea8fd9: push   %rbp
  0x0000000115ea8fda: mov    %rsp,%rbp
  0x0000000115ea8fdd: push   %r13
  0x0000000115ea8fdf: pushq  $0x0
  0x0000000115ea8fe4: mov    0x8(%rbx),%r13
  0x0000000115ea8fe8: lea    0x30(%r13),%r13
  0x0000000115ea8fec: push   %rbx
  0x0000000115ea8fed: mov    0x10(%rbx),%rdx
  0x0000000115ea8ff1: test   %rdx,%rdx
  0x0000000115ea8ff4: je     0x0000000115ea9001
  0x0000000115ea8ffa: add    $0x100,%rdx
  0x0000000115ea9001: push   %rdx
  0x0000000115ea9002: mov    0x8(%rbx),%rdx
  0x0000000115ea9006: mov    0x8(%rdx),%rdx
  0x0000000115ea900a: mov    0x10(%rdx),%rdx
  0x0000000115ea900e: push   %rdx
  0x0000000115ea900f: push   %r14
  0x0000000115ea9011: pushq  $0x0
  0x0000000115ea9016: pushq  $0x0
  0x0000000115ea901b: mov    %rsp,(%rsp)
  0x0000000115ea901f: movb   $0x1,0x295(%r15)
  0x0000000115ea9027: mov    0x10(%rbx),%rax
  0x0000000115ea902b: test   %rax,%rax
  0x0000000115ea902e: je     0x0000000115ea9050
  0x0000000115ea9030: mov    0xdc(%rax),%ecx
  0x0000000115ea9036: add    $0x8,%ecx
  0x0000000115ea9039: mov    %ecx,0xdc(%rax)
  0x0000000115ea903f: and    $0x3f8,%ecx
  0x0000000115ea9045: je     0x0000000115ea998f
  0x0000000115ea904b: jmpq   0x0000000115ea9107
  0x0000000115ea9050: mov    0x18(%rbx),%rax
  0x0000000115ea9054: test   %rax,%rax
  0x0000000115ea9057: jne    0x0000000115ea90f2
  0x0000000115ea905d: callq  0x0000000115ea9067
  0x0000000115ea9062: jmpq   0x0000000115ea90e5
  0x0000000115ea9067: mov    %rbx,%rsi
  0x0000000115ea906a: lea    0x8(%rsp),%rax
  0x0000000115ea906f: mov    %r13,-0x38(%rbp)
  0x0000000115ea9073: mov    %r15,%rdi
  0x0000000115ea9076: mov    %rbp,0x1e8(%r15)
  0x0000000115ea907d: mov    %rax,0x1d8(%r15)
  0x0000000115ea9084: test   $0xf,%esp
  0x0000000115ea908a: je     0x0000000115ea90a2
  0x0000000115ea9090: sub    $0x8,%rsp
  0x0000000115ea9094: callq  0x000000010dae6d98
  0x0000000115ea9099: add    $0x8,%rsp
  0x0000000115ea909d: jmpq   0x0000000115ea90a7
  0x0000000115ea90a2: callq  0x000000010dae6d98
  0x0000000115ea90a7: movabs $0x0,%r10
  0x0000000115ea90b1: mov    %r10,0x1d8(%r15)
  0x0000000115ea90b8: movabs $0x0,%r10
  0x0000000115ea90c2: mov    %r10,0x1e8(%r15)
  0x0000000115ea90c9: cmpq   $0x0,0x8(%r15)
  0x0000000115ea90d1: je     0x0000000115ea90dc
  0x0000000115ea90d7: jmpq   0x0000000115e916e0
  0x0000000115ea90dc: mov    -0x38(%rbp),%r13
  0x0000000115ea90e0: mov    -0x30(%rbp),%r14
  0x0000000115ea90e4: retq   
  0x0000000115ea90e5: mov    0x18(%rbx),%rax
  0x0000000115ea90e9: test   %rax,%rax
  0x0000000115ea90ec: je     0x0000000115ea9107
  0x0000000115ea90f2: mov    0x8(%rax),%ecx
  0x0000000115ea90f5: add    $0x8,%ecx
  0x0000000115ea90f8: mov    %ecx,0x8(%rax)
  0x0000000115ea90fb: and    $0x3f8,%ecx
  0x0000000115ea9101: je     0x0000000115ea998f
  0x0000000115ea9107: mov    %eax,-0x14000(%rsp)
  0x0000000115ea910e: movb   $0x0,0x295(%r15)
  0x0000000115ea9116: mov    0x20(%rbx),%eax
  0x0000000115ea9119: test   $0x8,%eax
  0x0000000115ea911e: mov    (%r14),%rax
  0x0000000115ea9121: je     0x0000000115ea9137
  0x0000000115ea9127: mov    0x8(%rbx),%rax
  0x0000000115ea912b: mov    0x8(%rax),%rax
  0x0000000115ea912f: mov    0x18(%rax),%rax
  0x0000000115ea9133: mov    0x68(%rax),%rax
  0x0000000115ea9137: sub    $0x10,%rsp
  0x0000000115ea913b: mov    %rsp,-0x40(%rbp)
  0x0000000115ea913f: mov    %rax,0x8(%rsp)
  0x0000000115ea9144: mov    %rsp,%rsi
  0x0000000115ea9147: mov    0x8(%rsi),%rcx
  0x0000000115ea914b: mov    (%rcx),%rax
  0x0000000115ea914e: mov    %rax,%r10
  0x0000000115ea9151: and    $0x7,%r10
  0x0000000115ea9155: cmp    $0x5,%r10
  0x0000000115ea9159: jne    0x0000000115ea91e3
  0x0000000115ea915f: mov    0x8(%rcx),%r10d
  0x0000000115ea9163: shl    $0x3,%r10
  0x0000000115ea9167: mov    0xa8(%r10),%r10
  0x0000000115ea916e: or     %r15,%r10
  0x0000000115ea9171: xor    %rax,%r10
  0x0000000115ea9174: and    $0xffffffffffffff87,%r10
  0x0000000115ea9178: je     0x0000000115ea9291
  0x0000000115ea917e: test   $0x7,%r10
  0x0000000115ea9185: jne    0x0000000115ea91cf
  0x0000000115ea9187: test   $0x300,%r10
  0x0000000115ea918e: jne    0x0000000115ea91ad
  0x0000000115ea9190: and    $0x37f,%rax
  0x0000000115ea9197: mov    %rax,%r10
  0x0000000115ea919a: or     %r15,%r10
  0x0000000115ea919d: lock cmpxchg %r10,(%rcx)
  0x0000000115ea91a2: jne    0x0000000115ea920c
  0x0000000115ea91a8: jmpq   0x0000000115ea9291
  0x0000000115ea91ad: mov    0x8(%rcx),%r10d
  0x0000000115ea91b1: shl    $0x3,%r10
  0x0000000115ea91b5: mov    0xa8(%r10),%r10
  0x0000000115ea91bc: or     %r15,%r10
  0x0000000115ea91bf: lock cmpxchg %r10,(%rcx)
  0x0000000115ea91c4: jne    0x0000000115ea920c
  0x0000000115ea91ca: jmpq   0x0000000115ea9291
  0x0000000115ea91cf: mov    0x8(%rcx),%r10d
  0x0000000115ea91d3: shl    $0x3,%r10
  0x0000000115ea91d7: mov    0xa8(%r10),%r10
  0x0000000115ea91de: lock cmpxchg %r10,(%rcx)
  0x0000000115ea91e3: mov    $0x1,%eax
  0x0000000115ea91e8: or     (%rcx),%rax
  0x0000000115ea91eb: mov    %rax,(%rsi)
  0x0000000115ea91ee: lock cmpxchg %rsi,(%rcx)
  0x0000000115ea91f3: je     0x0000000115ea9291
  0x0000000115ea91f9: sub    %rsp,%rax
  0x0000000115ea91fc: and    $0xfffffffffffff007,%rax
  0x0000000115ea9203: mov    %rax,(%rsi)
  0x0000000115ea9206: je     0x0000000115ea9291
  0x0000000115ea920c: callq  0x0000000115ea9216
  0x0000000115ea9211: jmpq   0x0000000115ea9291
  0x0000000115ea9216: lea    0x8(%rsp),%rax
  0x0000000115ea921b: mov    %r13,-0x38(%rbp)
  0x0000000115ea921f: mov    %r15,%rdi
  0x0000000115ea9222: mov    %rbp,0x1e8(%r15)
  0x0000000115ea9229: mov    %rax,0x1d8(%r15)
  0x0000000115ea9230: test   $0xf,%esp
  0x0000000115ea9236: je     0x0000000115ea924e
  0x0000000115ea923c: sub    $0x8,%rsp
  0x0000000115ea9240: callq  0x000000010dae86d2
  0x0000000115ea9245: add    $0x8,%rsp
  0x0000000115ea9249: jmpq   0x0000000115ea9253
  0x0000000115ea924e: callq  0x000000010dae86d2
  0x0000000115ea9253: movabs $0x0,%r10
  0x0000000115ea925d: mov    %r10,0x1d8(%r15)
  0x0000000115ea9264: movabs $0x0,%r10
  0x0000000115ea926e: mov    %r10,0x1e8(%r15)
  0x0000000115ea9275: cmpq   $0x0,0x8(%r15)
  0x0000000115ea927d: je     0x0000000115ea9288
  0x0000000115ea9283: jmpq   0x0000000115e916e0
  0x0000000115ea9288: mov    -0x38(%rbp),%r13
  0x0000000115ea928c: mov    -0x30(%rbp),%r14
  0x0000000115ea9290: retq   
  0x0000000115ea9291: cmpb   $0x0,-0x7dc1fce(%rip)        # 0x000000010e0e72ca
  0x0000000115ea9298: je     0x0000000115ea92c8
  0x0000000115ea929e: mov    -0x18(%rbp),%rsi
  0x0000000115ea92a2: mov    %r15,%rdi
  0x0000000115ea92a5: test   $0xf,%esp
  0x0000000115ea92ab: je     0x0000000115ea92c3
  0x0000000115ea92b1: sub    $0x8,%rsp
  0x0000000115ea92b5: callq  0x000000010dce7724
  0x0000000115ea92ba: add    $0x8,%rsp
  0x0000000115ea92be: jmpq   0x0000000115ea92c8
  0x0000000115ea92c3: callq  0x000000010dce7724
  0x0000000115ea92c8: mov    -0x18(%rbp),%rbx
  0x0000000115ea92cc: mov    0x8(%rbx),%r11
  0x0000000115ea92d0: movzwl 0x2c(%r11),%r11d
  0x0000000115ea92d5: shl    $0x3,%r11d
  0x0000000115ea92d9: sub    %r11,%rsp
  0x0000000115ea92dc: sub    $0x0,%rsp
  0x0000000115ea92e0: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea92e4: mov    0x60(%rbx),%r11
  0x0000000115ea92e8: test   %r11,%r11
  0x0000000115ea92eb: jne    0x0000000115ea9381
  0x0000000115ea92f1: callq  0x0000000115ea92fb
  0x0000000115ea92f6: jmpq   0x0000000115ea9379
  0x0000000115ea92fb: mov    %rbx,%rsi
  0x0000000115ea92fe: lea    0x8(%rsp),%rax
  0x0000000115ea9303: mov    %r13,-0x38(%rbp)
  0x0000000115ea9307: mov    %r15,%rdi
  0x0000000115ea930a: mov    %rbp,0x1e8(%r15)
  0x0000000115ea9311: mov    %rax,0x1d8(%r15)
  0x0000000115ea9318: test   $0xf,%esp
  0x0000000115ea931e: je     0x0000000115ea9336
  0x0000000115ea9324: sub    $0x8,%rsp
  0x0000000115ea9328: callq  0x000000010dae6686
  0x0000000115ea932d: add    $0x8,%rsp
  0x0000000115ea9331: jmpq   0x0000000115ea933b
  0x0000000115ea9336: callq  0x000000010dae6686
  0x0000000115ea933b: movabs $0x0,%r10
  0x0000000115ea9345: mov    %r10,0x1d8(%r15)
  0x0000000115ea934c: movabs $0x0,%r10
  0x0000000115ea9356: mov    %r10,0x1e8(%r15)
  0x0000000115ea935d: cmpq   $0x0,0x8(%r15)
  0x0000000115ea9365: je     0x0000000115ea9370
  0x0000000115ea936b: jmpq   0x0000000115e916e0
  0x0000000115ea9370: mov    -0x38(%rbp),%r13
  0x0000000115ea9374: mov    -0x30(%rbp),%r14
  0x0000000115ea9378: retq   
  0x0000000115ea9379: mov    -0x18(%rbp),%rbx
  0x0000000115ea937d: mov    0x60(%rbx),%r11
  0x0000000115ea9381: callq  *%r11
  0x0000000115ea9384: mov    -0x18(%rbp),%rbx
  0x0000000115ea9388: mov    %rax,0x18(%rbp)
  0x0000000115ea938c: mov    0x20(%rbx),%r11d
  0x0000000115ea9390: test   $0x8,%r11d
  0x0000000115ea9397: je     0x0000000115ea93b5
  0x0000000115ea939d: mov    0x8(%rbx),%r11
  0x0000000115ea93a1: mov    0x8(%r11),%r11
  0x0000000115ea93a5: mov    0x18(%r11),%r11
  0x0000000115ea93a9: mov    0x68(%r11),%r11
  0x0000000115ea93ad: mov    %r11,0x10(%rbp)
  0x0000000115ea93b1: lea    0x10(%rbp),%rsi
  0x0000000115ea93b5: mov    0x58(%rbx),%rax
  0x0000000115ea93b9: movabs $0x10dce4067,%r11
  0x0000000115ea93c3: cmp    %r11,%rax
  0x0000000115ea93c6: jne    0x0000000115ea945c
  0x0000000115ea93cc: callq  0x0000000115ea93d6
  0x0000000115ea93d1: jmpq   0x0000000115ea9454
  0x0000000115ea93d6: mov    %rbx,%rsi
  0x0000000115ea93d9: lea    0x8(%rsp),%rax
  0x0000000115ea93de: mov    %r13,-0x38(%rbp)
  0x0000000115ea93e2: mov    %r15,%rdi
  0x0000000115ea93e5: mov    %rbp,0x1e8(%r15)
  0x0000000115ea93ec: mov    %rax,0x1d8(%r15)
  0x0000000115ea93f3: test   $0xf,%esp
  0x0000000115ea93f9: je     0x0000000115ea9411
  0x0000000115ea93ff: sub    $0x8,%rsp
  0x0000000115ea9403: callq  0x000000010dae6686
  0x0000000115ea9408: add    $0x8,%rsp
  0x0000000115ea940c: jmpq   0x0000000115ea9416
  0x0000000115ea9411: callq  0x000000010dae6686
  0x0000000115ea9416: movabs $0x0,%r10
  0x0000000115ea9420: mov    %r10,0x1d8(%r15)
  0x0000000115ea9427: movabs $0x0,%r10
  0x0000000115ea9431: mov    %r10,0x1e8(%r15)
  0x0000000115ea9438: cmpq   $0x0,0x8(%r15)
  0x0000000115ea9440: je     0x0000000115ea944b
  0x0000000115ea9446: jmpq   0x0000000115e916e0
  0x0000000115ea944b: mov    -0x38(%rbp),%r13
  0x0000000115ea944f: mov    -0x30(%rbp),%r14
  0x0000000115ea9453: retq   
  0x0000000115ea9454: mov    -0x18(%rbp),%rbx
  0x0000000115ea9458: mov    0x58(%rbx),%rax
  0x0000000115ea945c: lea    0x1f8(%r15),%rdi
  0x0000000115ea9463: mov    %rbp,0x1e8(%r15)
  0x0000000115ea946a: movabs $0x115ea9463,%r10
  0x0000000115ea9474: mov    %r10,0x1e0(%r15)
  0x0000000115ea947b: mov    %rsp,0x1d8(%r15)
  0x0000000115ea9482: movl   $0x4,0x270(%r15)
  0x0000000115ea948d: callq  *%rax
  0x0000000115ea948f: vzeroupper 
  0x0000000115ea9492: sub    $0x10,%rsp
  0x0000000115ea9496: vmovsd %xmm0,(%rsp)
  0x0000000115ea949b: sub    $0x10,%rsp
  0x0000000115ea949f: mov    %rax,(%rsp)
  0x0000000115ea94a3: movl   $0x5,0x270(%r15)
  0x0000000115ea94ae: lock addl $0x0,(%rsp)
  0x0000000115ea94b3: cmpl   $0x0,-0x7db785d(%rip)        # 0x000000010e0f1c60
  0x0000000115ea94bd: jne    0x0000000115ea94d1
  0x0000000115ea94c3: cmpl   $0x0,0x30(%r15)
  0x0000000115ea94cb: je     0x0000000115ea94ea
  0x0000000115ea94d1: mov    %r15,%rdi
  0x0000000115ea94d4: mov    %rsp,%r12
  0x0000000115ea94d7: sub    $0x0,%rsp
  0x0000000115ea94db: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea94df: callq  0x000000010dd69dc0
  0x0000000115ea94e4: mov    %r12,%rsp
  0x0000000115ea94e7: xor    %r12,%r12
  0x0000000115ea94ea: movl   $0x8,0x270(%r15)
  0x0000000115ea94f5: movabs $0x0,%r10
  0x0000000115ea94ff: mov    %r10,0x1d8(%r15)
  0x0000000115ea9506: movabs $0x0,%r10
  0x0000000115ea9510: mov    %r10,0x1e8(%r15)
  0x0000000115ea9517: movabs $0x0,%r10
  0x0000000115ea9521: mov    %r10,0x1e0(%r15)
  0x0000000115ea9528: mov    0x38(%r15),%r11
  0x0000000115ea952c: movl   $0x0,0x100(%r11)
  0x0000000115ea9537: movabs $0x115ea253b,%r11
  0x0000000115ea9541: cmp    0x18(%rbp),%r11
  0x0000000115ea9545: jne    0x0000000115ea956b
  0x0000000115ea954b: mov    (%rsp),%rax
  0x0000000115ea954f: add    $0x10,%rsp
  0x0000000115ea9553: test   %rax,%rax
  0x0000000115ea9556: je     0x0000000115ea955f
  0x0000000115ea955c: mov    (%rax),%rax
  0x0000000115ea955f: mov    %rax,0x10(%rbp)
  0x0000000115ea9563: sub    $0x10,%rsp
  0x0000000115ea9567: mov    %rax,(%rsp)
  0x0000000115ea956b: cmpl   $0x1,0x29c(%r15)
  0x0000000115ea9576: jne    0x0000000115ea9639
  0x0000000115ea957c: mov    %rsp,-0x28(%rsp)
  0x0000000115ea9581: sub    $0x80,%rsp
  0x0000000115ea9588: mov    %rax,0x78(%rsp)
  0x0000000115ea958d: mov    %rcx,0x70(%rsp)
  0x0000000115ea9592: mov    %rdx,0x68(%rsp)
  0x0000000115ea9597: mov    %rbx,0x60(%rsp)
  0x0000000115ea959c: mov    %rbp,0x50(%rsp)
  0x0000000115ea95a1: mov    %rsi,0x48(%rsp)
  0x0000000115ea95a6: mov    %rdi,0x40(%rsp)
  0x0000000115ea95ab: mov    %r8,0x38(%rsp)
  0x0000000115ea95b0: mov    %r9,0x30(%rsp)
  0x0000000115ea95b5: mov    %r10,0x28(%rsp)
  0x0000000115ea95ba: mov    %r11,0x20(%rsp)
  0x0000000115ea95bf: mov    %r12,0x18(%rsp)
  0x0000000115ea95c4: mov    %r13,0x10(%rsp)
  0x0000000115ea95c9: mov    %r14,0x8(%rsp)
  0x0000000115ea95ce: mov    %r15,(%rsp)
  0x0000000115ea95d2: mov    %rsp,%r12
  0x0000000115ea95d5: sub    $0x0,%rsp
  0x0000000115ea95d9: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea95dd: callq  0x000000010dce54fc
  0x0000000115ea95e2: mov    %r12,%rsp
  0x0000000115ea95e5: mov    (%rsp),%r15
  0x0000000115ea95e9: mov    0x8(%rsp),%r14
  0x0000000115ea95ee: mov    0x10(%rsp),%r13
  0x0000000115ea95f3: mov    0x18(%rsp),%r12
  0x0000000115ea95f8: mov    0x20(%rsp),%r11
  0x0000000115ea95fd: mov    0x28(%rsp),%r10
  0x0000000115ea9602: mov    0x30(%rsp),%r9
  0x0000000115ea9607: mov    0x38(%rsp),%r8
  0x0000000115ea960c: mov    0x40(%rsp),%rdi
  0x0000000115ea9611: mov    0x48(%rsp),%rsi
  0x0000000115ea9616: mov    0x50(%rsp),%rbp
  0x0000000115ea961b: mov    0x60(%rsp),%rbx
  0x0000000115ea9620: mov    0x68(%rsp),%rdx
  0x0000000115ea9625: mov    0x70(%rsp),%rcx
  0x0000000115ea962a: mov    0x78(%rsp),%rax
  0x0000000115ea962f: add    $0x80,%rsp
  0x0000000115ea9636: xor    %r12,%r12
  0x0000000115ea9639: mov    -0x18(%rbp),%rbx
  0x0000000115ea963d: mov    0x8(%rbx),%r13
  0x0000000115ea9641: lea    0x30(%r13),%r13
  0x0000000115ea9645: cmpq   $0x0,0x8(%r15)
  0x0000000115ea964d: je     0x0000000115ea974f
  0x0000000115ea9653: callq  0x0000000115ea965d
  0x0000000115ea9658: jmpq   0x0000000115ea96d8
  0x0000000115ea965d: lea    0x8(%rsp),%rax
  0x0000000115ea9662: mov    %r13,-0x38(%rbp)
  0x0000000115ea9666: mov    %r15,%rdi
  0x0000000115ea9669: mov    %rbp,0x1e8(%r15)
  0x0000000115ea9670: mov    %rax,0x1d8(%r15)
  0x0000000115ea9677: test   $0xf,%esp
  0x0000000115ea967d: je     0x0000000115ea9695
  0x0000000115ea9683: sub    $0x8,%rsp
  0x0000000115ea9687: callq  0x000000010dae5ebc
  0x0000000115ea968c: add    $0x8,%rsp
  0x0000000115ea9690: jmpq   0x0000000115ea969a
  0x0000000115ea9695: callq  0x000000010dae5ebc
  0x0000000115ea969a: movabs $0x0,%r10
  0x0000000115ea96a4: mov    %r10,0x1d8(%r15)
  0x0000000115ea96ab: movabs $0x0,%r10
  0x0000000115ea96b5: mov    %r10,0x1e8(%r15)
  0x0000000115ea96bc: cmpq   $0x0,0x8(%r15)
  0x0000000115ea96c4: je     0x0000000115ea96cf
  0x0000000115ea96ca: jmpq   0x0000000115e916e0
  0x0000000115ea96cf: mov    -0x38(%rbp),%r13
  0x0000000115ea96d3: mov    -0x30(%rbp),%r14
  0x0000000115ea96d7: retq   
  0x0000000115ea96d8: mov    %rsp,-0x28(%rsp)
  0x0000000115ea96dd: sub    $0x80,%rsp
  0x0000000115ea96e4: mov    %rax,0x78(%rsp)
  0x0000000115ea96e9: mov    %rcx,0x70(%rsp)
  0x0000000115ea96ee: mov    %rdx,0x68(%rsp)
  0x0000000115ea96f3: mov    %rbx,0x60(%rsp)
  0x0000000115ea96f8: mov    %rbp,0x50(%rsp)
  0x0000000115ea96fd: mov    %rsi,0x48(%rsp)
  0x0000000115ea9702: mov    %rdi,0x40(%rsp)
  0x0000000115ea9707: mov    %r8,0x38(%rsp)
  0x0000000115ea970c: mov    %r9,0x30(%rsp)
  0x0000000115ea9711: mov    %r10,0x28(%rsp)
  0x0000000115ea9716: mov    %r11,0x20(%rsp)
  0x0000000115ea971b: mov    %r12,0x18(%rsp)
  0x0000000115ea9720: mov    %r13,0x10(%rsp)
  0x0000000115ea9725: mov    %r14,0x8(%rsp)
  0x0000000115ea972a: mov    %r15,(%rsp)
  0x0000000115ea972e: movabs $0x10ddd8000,%rdi
  0x0000000115ea9738: movabs $0x115ea96d8,%rsi
  0x0000000115ea9742: mov    %rsp,%rdx
  0x0000000115ea9745: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea9749: callq  0x000000010dc0341e
  0x0000000115ea974e: hlt    
  0x0000000115ea974f: mov    0x20(%rbx),%r11d
  0x0000000115ea9753: test   $0x20,%r11d
  0x0000000115ea975a: je     0x0000000115ea9935
  0x0000000115ea9760: lea    -0x50(%rbp),%rsi
  0x0000000115ea9764: mov    0x8(%rsi),%r11
  0x0000000115ea9768: test   %r11,%r11
  0x0000000115ea976b: jne    0x0000000115ea986d
  0x0000000115ea9771: callq  0x0000000115ea977b
  0x0000000115ea9776: jmpq   0x0000000115ea97f6
  0x0000000115ea977b: lea    0x8(%rsp),%rax
  0x0000000115ea9780: mov    %r13,-0x38(%rbp)
  0x0000000115ea9784: mov    %r15,%rdi
  0x0000000115ea9787: mov    %rbp,0x1e8(%r15)
  0x0000000115ea978e: mov    %rax,0x1d8(%r15)
  0x0000000115ea9795: test   $0xf,%esp
  0x0000000115ea979b: je     0x0000000115ea97b3
  0x0000000115ea97a1: sub    $0x8,%rsp
  0x0000000115ea97a5: callq  0x000000010dae850c
  0x0000000115ea97aa: add    $0x8,%rsp
  0x0000000115ea97ae: jmpq   0x0000000115ea97b8
  0x0000000115ea97b3: callq  0x000000010dae850c
  0x0000000115ea97b8: movabs $0x0,%r10
  0x0000000115ea97c2: mov    %r10,0x1d8(%r15)
  0x0000000115ea97c9: movabs $0x0,%r10
  0x0000000115ea97d3: mov    %r10,0x1e8(%r15)
  0x0000000115ea97da: cmpq   $0x0,0x8(%r15)
  0x0000000115ea97e2: je     0x0000000115ea97ed
  0x0000000115ea97e8: jmpq   0x0000000115e916e0
  0x0000000115ea97ed: mov    -0x38(%rbp),%r13
  0x0000000115ea97f1: mov    -0x30(%rbp),%r14
  0x0000000115ea97f5: retq   
  0x0000000115ea97f6: mov    %rsp,-0x28(%rsp)
  0x0000000115ea97fb: sub    $0x80,%rsp
  0x0000000115ea9802: mov    %rax,0x78(%rsp)
  0x0000000115ea9807: mov    %rcx,0x70(%rsp)
  0x0000000115ea980c: mov    %rdx,0x68(%rsp)
  0x0000000115ea9811: mov    %rbx,0x60(%rsp)
  0x0000000115ea9816: mov    %rbp,0x50(%rsp)
  0x0000000115ea981b: mov    %rsi,0x48(%rsp)
  0x0000000115ea9820: mov    %rdi,0x40(%rsp)
  0x0000000115ea9825: mov    %r8,0x38(%rsp)
  0x0000000115ea982a: mov    %r9,0x30(%rsp)
  0x0000000115ea982f: mov    %r10,0x28(%rsp)
  0x0000000115ea9834: mov    %r11,0x20(%rsp)
  0x0000000115ea9839: mov    %r12,0x18(%rsp)
  0x0000000115ea983e: mov    %r13,0x10(%rsp)
  0x0000000115ea9843: mov    %r14,0x8(%rsp)
  0x0000000115ea9848: mov    %r15,(%rsp)
  0x0000000115ea984c: movabs $0x10ddd8000,%rdi
  0x0000000115ea9856: movabs $0x115ea97f6,%rsi
  0x0000000115ea9860: mov    %rsp,%rdx
  0x0000000115ea9863: and    $0xfffffffffffffff0,%rsp
  0x0000000115ea9867: callq  0x000000010dc0341e
  0x0000000115ea986c: hlt    
  0x0000000115ea986d: mov    %r13,-0x38(%rbp)
  0x0000000115ea9871: lea    (%rsi),%rax
  0x0000000115ea9874: mov    0x8(%rsi),%rcx
  0x0000000115ea9878: movq   $0x0,0x8(%rsi)
  0x0000000115ea9880: mov    (%rcx),%rdx
  0x0000000115ea9883: and    $0x7,%rdx
  0x0000000115ea9887: cmp    $0x5,%rdx
  0x0000000115ea988b: je     0x0000000115ea9931
  0x0000000115ea9891: mov    (%rax),%rdx
  0x0000000115ea9894: test   %rdx,%rdx
  0x0000000115ea9897: je     0x0000000115ea9931
  0x0000000115ea989d: lock cmpxchg %rdx,(%rcx)
  0x0000000115ea98a2: je     0x0000000115ea9931
  0x0000000115ea98a8: mov    %rcx,0x8(%rsi)
  0x0000000115ea98ac: callq  0x0000000115ea98b6
  0x0000000115ea98b1: jmpq   0x0000000115ea9931
  0x0000000115ea98b6: lea    0x8(%rsp),%rax
  0x0000000115ea98bb: mov    %r13,-0x38(%rbp)
  0x0000000115ea98bf: mov    %r15,%rdi
  0x0000000115ea98c2: mov    %rbp,0x1e8(%r15)
  0x0000000115ea98c9: mov    %rax,0x1d8(%r15)
  0x0000000115ea98d0: test   $0xf,%esp
  0x0000000115ea98d6: je     0x0000000115ea98ee
  0x0000000115ea98dc: sub    $0x8,%rsp
  0x0000000115ea98e0: callq  0x000000010dae8608
  0x0000000115ea98e5: add    $0x8,%rsp
  0x0000000115ea98e9: jmpq   0x0000000115ea98f3
  0x0000000115ea98ee: callq  0x000000010dae8608
  0x0000000115ea98f3: movabs $0x0,%r10
  0x0000000115ea98fd: mov    %r10,0x1d8(%r15)
  0x0000000115ea9904: movabs $0x0,%r10
  0x0000000115ea990e: mov    %r10,0x1e8(%r15)
  0x0000000115ea9915: cmpq   $0x0,0x8(%r15)
  0x0000000115ea991d: je     0x0000000115ea9928
  0x0000000115ea9923: jmpq   0x0000000115e916e0
  0x0000000115ea9928: mov    -0x38(%rbp),%r13
  0x0000000115ea992c: mov    -0x30(%rbp),%r14
  0x0000000115ea9930: retq   
  0x0000000115ea9931: mov    -0x38(%rbp),%r13
  0x0000000115ea9935: cmpb   $0x0,-0x7dc2672(%rip)        # 0x000000010e0e72ca
  0x0000000115ea993c: je     0x0000000115ea996c
  0x0000000115ea9942: mov    -0x18(%rbp),%rsi
  0x0000000115ea9946: mov    %r15,%rdi
  0x0000000115ea9949: test   $0xf,%esp
  0x0000000115ea994f: je     0x0000000115ea9967
  0x0000000115ea9955: sub    $0x8,%rsp
  0x0000000115ea9959: callq  0x000000010dce7696
  0x0000000115ea995e: add    $0x8,%rsp
  0x0000000115ea9962: jmpq   0x0000000115ea996c
  0x0000000115ea9967: callq  0x000000010dce7696
  0x0000000115ea996c: mov    (%rsp),%rax
  0x0000000115ea9970: add    $0x10,%rsp
  0x0000000115ea9974: vmovsd (%rsp),%xmm0
  0x0000000115ea9979: add    $0x10,%rsp
  0x0000000115ea997d: mov    0x18(%rbp),%r11
  0x0000000115ea9981: callq  *%r11
  0x0000000115ea9984: mov    -0x8(%rbp),%r11
  0x0000000115ea9988: leaveq 
  0x0000000115ea9989: pop    %rdi
  0x0000000115ea998a: mov    %r11,%rsp
  0x0000000115ea998d: jmpq   *%rdi
  0x0000000115ea998f: mov    $0x0,%esi
  0x0000000115ea9994: callq  0x0000000115ea999e
  0x0000000115ea9999: jmpq   0x0000000115ea9a19
  0x0000000115ea999e: lea    0x8(%rsp),%rax
  0x0000000115ea99a3: mov    %r13,-0x38(%rbp)
  0x0000000115ea99a7: mov    %r15,%rdi
  0x0000000115ea99aa: mov    %rbp,0x1e8(%r15)
  0x0000000115ea99b1: mov    %rax,0x1d8(%r15)
  0x0000000115ea99b8: test   $0xf,%esp
  0x0000000115ea99be: je     0x0000000115ea99d6
  0x0000000115ea99c4: sub    $0x8,%rsp
  0x0000000115ea99c8: callq  0x000000010dae7476
  0x0000000115ea99cd: add    $0x8,%rsp
  0x0000000115ea99d1: jmpq   0x0000000115ea99db
  0x0000000115ea99d6: callq  0x000000010dae7476
  0x0000000115ea99db: movabs $0x0,%r10
  0x0000000115ea99e5: mov    %r10,0x1d8(%r15)
  0x0000000115ea99ec: movabs $0x0,%r10
  0x0000000115ea99f6: mov    %r10,0x1e8(%r15)
  0x0000000115ea99fd: cmpq   $0x0,0x8(%r15)
  0x0000000115ea9a05: je     0x0000000115ea9a10
  0x0000000115ea9a0b: jmpq   0x0000000115e916e0
  0x0000000115ea9a10: mov    -0x38(%rbp),%r13
  0x0000000115ea9a14: mov    -0x30(%rbp),%r14
  0x0000000115ea9a18: retq   
  0x0000000115ea9a19: mov    -0x18(%rbp),%rbx
  0x0000000115ea9a1d: jmpq   0x0000000115ea9107
  0x0000000115ea9a22: nopw   0x0(%rax,%rax,1)
  0x0000000115ea9a28: add    %al,(%rax)
  0x0000000115ea9a2a: add    %al,(%rax)
  0x0000000115ea9a2c: add    %al,(%rax)
  0x0000000115ea9a2e: add    %al,(%rax)
  0x0000000115ea9a30: add    %al,(%rax)
  0x0000000115ea9a32: add    %al,(%rax)
  0x0000000115ea9a34: add    %al,(%rax)
  0x0000000115ea9a36: add    %al,(%rax)
  0x0000000115ea9a38: add    %al,(%rax)
  0x0000000115ea9a3a: add    %al,(%rax)
  0x0000000115ea9a3c: add    %al,(%rax)
  0x0000000115ea9a3e: add    %al,(%rax)

----------------------------------------------------------------------
nop  0 nop  [0x0000000115ea9a60, 0x0000000115ea9ac0]  96 bytes

  0x0000000115ea9a60: push   %rax
  0x0000000115ea9a61: jmpq   0x0000000115ea9a90
  0x0000000115ea9a66: sub    $0x8,%rsp
  0x0000000115ea9a6a: vmovss %xmm0,(%rsp)
  0x0000000115ea9a6f: jmpq   0x0000000115ea9a90
  0x0000000115ea9a74: sub    $0x10,%rsp
  0x0000000115ea9a78: vmovsd %xmm0,(%rsp)
  0x0000000115ea9a7d: jmpq   0x0000000115ea9a90
  0x0000000115ea9a82: sub    $0x10,%rsp
  0x0000000115ea9a86: mov    %rax,(%rsp)
  0x0000000115ea9a8a: jmpq   0x0000000115ea9a90
  0x0000000115ea9a8f: push   %rax
  0x0000000115ea9a90: movzbl 0x1(%r13),%ebx
  0x0000000115ea9a95: inc    %r13
  0x0000000115ea9a98: movabs $0x10e101840,%r10
  0x0000000115ea9aa2: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9aa6: xchg   %ax,%ax
  0x0000000115ea9aa8: add    %al,(%rax)
  0x0000000115ea9aaa: add    %al,(%rax)
  0x0000000115ea9aac: add    %al,(%rax)
  0x0000000115ea9aae: add    %al,(%rax)
  0x0000000115ea9ab0: add    %al,(%rax)
  0x0000000115ea9ab2: add    %al,(%rax)
  0x0000000115ea9ab4: add    %al,(%rax)
  0x0000000115ea9ab6: add    %al,(%rax)
  0x0000000115ea9ab8: add    %al,(%rax)
  0x0000000115ea9aba: add    %al,(%rax)
  0x0000000115ea9abc: add    %al,(%rax)
  0x0000000115ea9abe: add    %al,(%rax)

----------------------------------------------------------------------
aconst_null  1 aconst_null  [0x0000000115ea9ae0, 0x0000000115ea9b40]  96 bytes

  0x0000000115ea9ae0: push   %rax
  0x0000000115ea9ae1: jmpq   0x0000000115ea9b10
  0x0000000115ea9ae6: sub    $0x8,%rsp
  0x0000000115ea9aea: vmovss %xmm0,(%rsp)
  0x0000000115ea9aef: jmpq   0x0000000115ea9b10
  0x0000000115ea9af4: sub    $0x10,%rsp
  0x0000000115ea9af8: vmovsd %xmm0,(%rsp)
  0x0000000115ea9afd: jmpq   0x0000000115ea9b10
  0x0000000115ea9b02: sub    $0x10,%rsp
  0x0000000115ea9b06: mov    %rax,(%rsp)
  0x0000000115ea9b0a: jmpq   0x0000000115ea9b10
  0x0000000115ea9b0f: push   %rax
  0x0000000115ea9b10: xor    %eax,%eax
  0x0000000115ea9b12: movzbl 0x1(%r13),%ebx
  0x0000000115ea9b17: inc    %r13
  0x0000000115ea9b1a: movabs $0x10e101040,%r10
  0x0000000115ea9b24: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9b28: add    %al,(%rax)
  0x0000000115ea9b2a: add    %al,(%rax)
  0x0000000115ea9b2c: add    %al,(%rax)
  0x0000000115ea9b2e: add    %al,(%rax)
  0x0000000115ea9b30: add    %al,(%rax)
  0x0000000115ea9b32: add    %al,(%rax)
  0x0000000115ea9b34: add    %al,(%rax)
  0x0000000115ea9b36: add    %al,(%rax)
  0x0000000115ea9b38: add    %al,(%rax)
  0x0000000115ea9b3a: add    %al,(%rax)
  0x0000000115ea9b3c: add    %al,(%rax)
  0x0000000115ea9b3e: add    %al,(%rax)

----------------------------------------------------------------------
iconst_m1  2 iconst_m1  [0x0000000115ea9b60, 0x0000000115ea9bc0]  96 bytes

  0x0000000115ea9b60: push   %rax
  0x0000000115ea9b61: jmpq   0x0000000115ea9b90
  0x0000000115ea9b66: sub    $0x8,%rsp
  0x0000000115ea9b6a: vmovss %xmm0,(%rsp)
  0x0000000115ea9b6f: jmpq   0x0000000115ea9b90
  0x0000000115ea9b74: sub    $0x10,%rsp
  0x0000000115ea9b78: vmovsd %xmm0,(%rsp)
  0x0000000115ea9b7d: jmpq   0x0000000115ea9b90
  0x0000000115ea9b82: sub    $0x10,%rsp
  0x0000000115ea9b86: mov    %rax,(%rsp)
  0x0000000115ea9b8a: jmpq   0x0000000115ea9b90
  0x0000000115ea9b8f: push   %rax
  0x0000000115ea9b90: mov    $0xffffffff,%eax
  0x0000000115ea9b95: movzbl 0x1(%r13),%ebx
  0x0000000115ea9b9a: inc    %r13
  0x0000000115ea9b9d: movabs $0x10e0ff040,%r10
  0x0000000115ea9ba7: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9bab: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9bb0: add    %al,(%rax)
  0x0000000115ea9bb2: add    %al,(%rax)
  0x0000000115ea9bb4: add    %al,(%rax)
  0x0000000115ea9bb6: add    %al,(%rax)
  0x0000000115ea9bb8: add    %al,(%rax)
  0x0000000115ea9bba: add    %al,(%rax)
  0x0000000115ea9bbc: add    %al,(%rax)
  0x0000000115ea9bbe: add    %al,(%rax)

----------------------------------------------------------------------
iconst_0  3 iconst_0  [0x0000000115ea9be0, 0x0000000115ea9c40]  96 bytes

  0x0000000115ea9be0: push   %rax
  0x0000000115ea9be1: jmpq   0x0000000115ea9c10
  0x0000000115ea9be6: sub    $0x8,%rsp
  0x0000000115ea9bea: vmovss %xmm0,(%rsp)
  0x0000000115ea9bef: jmpq   0x0000000115ea9c10
  0x0000000115ea9bf4: sub    $0x10,%rsp
  0x0000000115ea9bf8: vmovsd %xmm0,(%rsp)
  0x0000000115ea9bfd: jmpq   0x0000000115ea9c10
  0x0000000115ea9c02: sub    $0x10,%rsp
  0x0000000115ea9c06: mov    %rax,(%rsp)
  0x0000000115ea9c0a: jmpq   0x0000000115ea9c10
  0x0000000115ea9c0f: push   %rax
  0x0000000115ea9c10: xor    %eax,%eax
  0x0000000115ea9c12: movzbl 0x1(%r13),%ebx
  0x0000000115ea9c17: inc    %r13
  0x0000000115ea9c1a: movabs $0x10e0ff040,%r10
  0x0000000115ea9c24: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9c28: add    %al,(%rax)
  0x0000000115ea9c2a: add    %al,(%rax)
  0x0000000115ea9c2c: add    %al,(%rax)
  0x0000000115ea9c2e: add    %al,(%rax)
  0x0000000115ea9c30: add    %al,(%rax)
  0x0000000115ea9c32: add    %al,(%rax)
  0x0000000115ea9c34: add    %al,(%rax)
  0x0000000115ea9c36: add    %al,(%rax)
  0x0000000115ea9c38: add    %al,(%rax)
  0x0000000115ea9c3a: add    %al,(%rax)
  0x0000000115ea9c3c: add    %al,(%rax)
  0x0000000115ea9c3e: add    %al,(%rax)

----------------------------------------------------------------------
iconst_1  4 iconst_1  [0x0000000115ea9c60, 0x0000000115ea9cc0]  96 bytes

  0x0000000115ea9c60: push   %rax
  0x0000000115ea9c61: jmpq   0x0000000115ea9c90
  0x0000000115ea9c66: sub    $0x8,%rsp
  0x0000000115ea9c6a: vmovss %xmm0,(%rsp)
  0x0000000115ea9c6f: jmpq   0x0000000115ea9c90
  0x0000000115ea9c74: sub    $0x10,%rsp
  0x0000000115ea9c78: vmovsd %xmm0,(%rsp)
  0x0000000115ea9c7d: jmpq   0x0000000115ea9c90
  0x0000000115ea9c82: sub    $0x10,%rsp
  0x0000000115ea9c86: mov    %rax,(%rsp)
  0x0000000115ea9c8a: jmpq   0x0000000115ea9c90
  0x0000000115ea9c8f: push   %rax
  0x0000000115ea9c90: mov    $0x1,%eax
  0x0000000115ea9c95: movzbl 0x1(%r13),%ebx
  0x0000000115ea9c9a: inc    %r13
  0x0000000115ea9c9d: movabs $0x10e0ff040,%r10
  0x0000000115ea9ca7: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9cab: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9cb0: add    %al,(%rax)
  0x0000000115ea9cb2: add    %al,(%rax)
  0x0000000115ea9cb4: add    %al,(%rax)
  0x0000000115ea9cb6: add    %al,(%rax)
  0x0000000115ea9cb8: add    %al,(%rax)
  0x0000000115ea9cba: add    %al,(%rax)
  0x0000000115ea9cbc: add    %al,(%rax)
  0x0000000115ea9cbe: add    %al,(%rax)

----------------------------------------------------------------------
iconst_2  5 iconst_2  [0x0000000115ea9ce0, 0x0000000115ea9d40]  96 bytes

  0x0000000115ea9ce0: push   %rax
  0x0000000115ea9ce1: jmpq   0x0000000115ea9d10
  0x0000000115ea9ce6: sub    $0x8,%rsp
  0x0000000115ea9cea: vmovss %xmm0,(%rsp)
  0x0000000115ea9cef: jmpq   0x0000000115ea9d10
  0x0000000115ea9cf4: sub    $0x10,%rsp
  0x0000000115ea9cf8: vmovsd %xmm0,(%rsp)
  0x0000000115ea9cfd: jmpq   0x0000000115ea9d10
  0x0000000115ea9d02: sub    $0x10,%rsp
  0x0000000115ea9d06: mov    %rax,(%rsp)
  0x0000000115ea9d0a: jmpq   0x0000000115ea9d10
  0x0000000115ea9d0f: push   %rax
  0x0000000115ea9d10: mov    $0x2,%eax
  0x0000000115ea9d15: movzbl 0x1(%r13),%ebx
  0x0000000115ea9d1a: inc    %r13
  0x0000000115ea9d1d: movabs $0x10e0ff040,%r10
  0x0000000115ea9d27: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9d2b: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9d30: add    %al,(%rax)
  0x0000000115ea9d32: add    %al,(%rax)
  0x0000000115ea9d34: add    %al,(%rax)
  0x0000000115ea9d36: add    %al,(%rax)
  0x0000000115ea9d38: add    %al,(%rax)
  0x0000000115ea9d3a: add    %al,(%rax)
  0x0000000115ea9d3c: add    %al,(%rax)
  0x0000000115ea9d3e: add    %al,(%rax)

----------------------------------------------------------------------
iconst_3  6 iconst_3  [0x0000000115ea9d60, 0x0000000115ea9dc0]  96 bytes

  0x0000000115ea9d60: push   %rax
  0x0000000115ea9d61: jmpq   0x0000000115ea9d90
  0x0000000115ea9d66: sub    $0x8,%rsp
  0x0000000115ea9d6a: vmovss %xmm0,(%rsp)
  0x0000000115ea9d6f: jmpq   0x0000000115ea9d90
  0x0000000115ea9d74: sub    $0x10,%rsp
  0x0000000115ea9d78: vmovsd %xmm0,(%rsp)
  0x0000000115ea9d7d: jmpq   0x0000000115ea9d90
  0x0000000115ea9d82: sub    $0x10,%rsp
  0x0000000115ea9d86: mov    %rax,(%rsp)
  0x0000000115ea9d8a: jmpq   0x0000000115ea9d90
  0x0000000115ea9d8f: push   %rax
  0x0000000115ea9d90: mov    $0x3,%eax
  0x0000000115ea9d95: movzbl 0x1(%r13),%ebx
  0x0000000115ea9d9a: inc    %r13
  0x0000000115ea9d9d: movabs $0x10e0ff040,%r10
  0x0000000115ea9da7: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9dab: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9db0: add    %al,(%rax)
  0x0000000115ea9db2: add    %al,(%rax)
  0x0000000115ea9db4: add    %al,(%rax)
  0x0000000115ea9db6: add    %al,(%rax)
  0x0000000115ea9db8: add    %al,(%rax)
  0x0000000115ea9dba: add    %al,(%rax)
  0x0000000115ea9dbc: add    %al,(%rax)
  0x0000000115ea9dbe: add    %al,(%rax)

----------------------------------------------------------------------
iconst_4  7 iconst_4  [0x0000000115ea9de0, 0x0000000115ea9e40]  96 bytes

  0x0000000115ea9de0: push   %rax
  0x0000000115ea9de1: jmpq   0x0000000115ea9e10
  0x0000000115ea9de6: sub    $0x8,%rsp
  0x0000000115ea9dea: vmovss %xmm0,(%rsp)
  0x0000000115ea9def: jmpq   0x0000000115ea9e10
  0x0000000115ea9df4: sub    $0x10,%rsp
  0x0000000115ea9df8: vmovsd %xmm0,(%rsp)
  0x0000000115ea9dfd: jmpq   0x0000000115ea9e10
  0x0000000115ea9e02: sub    $0x10,%rsp
  0x0000000115ea9e06: mov    %rax,(%rsp)
  0x0000000115ea9e0a: jmpq   0x0000000115ea9e10
  0x0000000115ea9e0f: push   %rax
  0x0000000115ea9e10: mov    $0x4,%eax
  0x0000000115ea9e15: movzbl 0x1(%r13),%ebx
  0x0000000115ea9e1a: inc    %r13
  0x0000000115ea9e1d: movabs $0x10e0ff040,%r10
  0x0000000115ea9e27: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9e2b: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9e30: add    %al,(%rax)
  0x0000000115ea9e32: add    %al,(%rax)
  0x0000000115ea9e34: add    %al,(%rax)
  0x0000000115ea9e36: add    %al,(%rax)
  0x0000000115ea9e38: add    %al,(%rax)
  0x0000000115ea9e3a: add    %al,(%rax)
  0x0000000115ea9e3c: add    %al,(%rax)
  0x0000000115ea9e3e: add    %al,(%rax)

----------------------------------------------------------------------
iconst_5  8 iconst_5  [0x0000000115ea9e60, 0x0000000115ea9ec0]  96 bytes

  0x0000000115ea9e60: push   %rax
  0x0000000115ea9e61: jmpq   0x0000000115ea9e90
  0x0000000115ea9e66: sub    $0x8,%rsp
  0x0000000115ea9e6a: vmovss %xmm0,(%rsp)
  0x0000000115ea9e6f: jmpq   0x0000000115ea9e90
  0x0000000115ea9e74: sub    $0x10,%rsp
  0x0000000115ea9e78: vmovsd %xmm0,(%rsp)
  0x0000000115ea9e7d: jmpq   0x0000000115ea9e90
  0x0000000115ea9e82: sub    $0x10,%rsp
  0x0000000115ea9e86: mov    %rax,(%rsp)
  0x0000000115ea9e8a: jmpq   0x0000000115ea9e90
  0x0000000115ea9e8f: push   %rax
  0x0000000115ea9e90: mov    $0x5,%eax
  0x0000000115ea9e95: movzbl 0x1(%r13),%ebx
  0x0000000115ea9e9a: inc    %r13
  0x0000000115ea9e9d: movabs $0x10e0ff040,%r10
  0x0000000115ea9ea7: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9eab: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9eb0: add    %al,(%rax)
  0x0000000115ea9eb2: add    %al,(%rax)
  0x0000000115ea9eb4: add    %al,(%rax)
  0x0000000115ea9eb6: add    %al,(%rax)
  0x0000000115ea9eb8: add    %al,(%rax)
  0x0000000115ea9eba: add    %al,(%rax)
  0x0000000115ea9ebc: add    %al,(%rax)
  0x0000000115ea9ebe: add    %al,(%rax)

----------------------------------------------------------------------
lconst_0  9 lconst_0  [0x0000000115ea9ee0, 0x0000000115ea9f40]  96 bytes

  0x0000000115ea9ee0: push   %rax
  0x0000000115ea9ee1: jmpq   0x0000000115ea9f10
  0x0000000115ea9ee6: sub    $0x8,%rsp
  0x0000000115ea9eea: vmovss %xmm0,(%rsp)
  0x0000000115ea9eef: jmpq   0x0000000115ea9f10
  0x0000000115ea9ef4: sub    $0x10,%rsp
  0x0000000115ea9ef8: vmovsd %xmm0,(%rsp)
  0x0000000115ea9efd: jmpq   0x0000000115ea9f10
  0x0000000115ea9f02: sub    $0x10,%rsp
  0x0000000115ea9f06: mov    %rax,(%rsp)
  0x0000000115ea9f0a: jmpq   0x0000000115ea9f10
  0x0000000115ea9f0f: push   %rax
  0x0000000115ea9f10: xor    %eax,%eax
  0x0000000115ea9f12: movzbl 0x1(%r13),%ebx
  0x0000000115ea9f17: inc    %r13
  0x0000000115ea9f1a: movabs $0x10e0ff840,%r10
  0x0000000115ea9f24: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9f28: add    %al,(%rax)
  0x0000000115ea9f2a: add    %al,(%rax)
  0x0000000115ea9f2c: add    %al,(%rax)
  0x0000000115ea9f2e: add    %al,(%rax)
  0x0000000115ea9f30: add    %al,(%rax)
  0x0000000115ea9f32: add    %al,(%rax)
  0x0000000115ea9f34: add    %al,(%rax)
  0x0000000115ea9f36: add    %al,(%rax)
  0x0000000115ea9f38: add    %al,(%rax)
  0x0000000115ea9f3a: add    %al,(%rax)
  0x0000000115ea9f3c: add    %al,(%rax)
  0x0000000115ea9f3e: add    %al,(%rax)

----------------------------------------------------------------------
lconst_1  10 lconst_1  [0x0000000115ea9f60, 0x0000000115ea9fc0]  96 bytes

  0x0000000115ea9f60: push   %rax
  0x0000000115ea9f61: jmpq   0x0000000115ea9f90
  0x0000000115ea9f66: sub    $0x8,%rsp
  0x0000000115ea9f6a: vmovss %xmm0,(%rsp)
  0x0000000115ea9f6f: jmpq   0x0000000115ea9f90
  0x0000000115ea9f74: sub    $0x10,%rsp
  0x0000000115ea9f78: vmovsd %xmm0,(%rsp)
  0x0000000115ea9f7d: jmpq   0x0000000115ea9f90
  0x0000000115ea9f82: sub    $0x10,%rsp
  0x0000000115ea9f86: mov    %rax,(%rsp)
  0x0000000115ea9f8a: jmpq   0x0000000115ea9f90
  0x0000000115ea9f8f: push   %rax
  0x0000000115ea9f90: mov    $0x1,%eax
  0x0000000115ea9f95: movzbl 0x1(%r13),%ebx
  0x0000000115ea9f9a: inc    %r13
  0x0000000115ea9f9d: movabs $0x10e0ff840,%r10
  0x0000000115ea9fa7: jmpq   *(%r10,%rbx,8)
  0x0000000115ea9fab: nopl   0x0(%rax,%rax,1)
  0x0000000115ea9fb0: add    %al,(%rax)
  0x0000000115ea9fb2: add    %al,(%rax)
  0x0000000115ea9fb4: add    %al,(%rax)
  0x0000000115ea9fb6: add    %al,(%rax)
  0x0000000115ea9fb8: add    %al,(%rax)
  0x0000000115ea9fba: add    %al,(%rax)
  0x0000000115ea9fbc: add    %al,(%rax)
  0x0000000115ea9fbe: add    %al,(%rax)

----------------------------------------------------------------------
fconst_0  11 fconst_0  [0x0000000115ea9fe0, 0x0000000115eaa040]  96 bytes

  0x0000000115ea9fe0: push   %rax
  0x0000000115ea9fe1: jmpq   0x0000000115eaa010
  0x0000000115ea9fe6: sub    $0x8,%rsp
  0x0000000115ea9fea: vmovss %xmm0,(%rsp)
  0x0000000115ea9fef: jmpq   0x0000000115eaa010
  0x0000000115ea9ff4: sub    $0x10,%rsp
  0x0000000115ea9ff8: vmovsd %xmm0,(%rsp)
  0x0000000115ea9ffd: jmpq   0x0000000115eaa010
  0x0000000115eaa002: sub    $0x10,%rsp
  0x0000000115eaa006: mov    %rax,(%rsp)
  0x0000000115eaa00a: jmpq   0x0000000115eaa010
  0x0000000115eaa00f: push   %rax
  0x0000000115eaa010: vxorps %xmm0,%xmm0,%xmm0
  0x0000000115eaa014: movzbl 0x1(%r13),%ebx
  0x0000000115eaa019: inc    %r13
  0x0000000115eaa01c: movabs $0x10e100040,%r10
  0x0000000115eaa026: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa02a: nopw   0x0(%rax,%rax,1)
  0x0000000115eaa030: add    %al,(%rax)
  0x0000000115eaa032: add    %al,(%rax)
  0x0000000115eaa034: add    %al,(%rax)
  0x0000000115eaa036: add    %al,(%rax)
  0x0000000115eaa038: add    %al,(%rax)
  0x0000000115eaa03a: add    %al,(%rax)
  0x0000000115eaa03c: add    %al,(%rax)
  0x0000000115eaa03e: add    %al,(%rax)

----------------------------------------------------------------------
fconst_1  12 fconst_1  [0x0000000115eaa060, 0x0000000115eaa0c0]  96 bytes

  0x0000000115eaa060: push   %rax
  0x0000000115eaa061: jmpq   0x0000000115eaa090
  0x0000000115eaa066: sub    $0x8,%rsp
  0x0000000115eaa06a: vmovss %xmm0,(%rsp)
  0x0000000115eaa06f: jmpq   0x0000000115eaa090
  0x0000000115eaa074: sub    $0x10,%rsp
  0x0000000115eaa078: vmovsd %xmm0,(%rsp)
  0x0000000115eaa07d: jmpq   0x0000000115eaa090
  0x0000000115eaa082: sub    $0x10,%rsp
  0x0000000115eaa086: mov    %rax,(%rsp)
  0x0000000115eaa08a: jmpq   0x0000000115eaa090
  0x0000000115eaa08f: push   %rax
  0x0000000115eaa090: vmovss -0x7e73f20(%rip),%xmm0        # 0x000000010e036178
  0x0000000115eaa098: movzbl 0x1(%r13),%ebx
  0x0000000115eaa09d: inc    %r13
  0x0000000115eaa0a0: movabs $0x10e100040,%r10
  0x0000000115eaa0aa: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa0ae: xchg   %ax,%ax
  0x0000000115eaa0b0: add    %al,(%rax)
  0x0000000115eaa0b2: add    %al,(%rax)
  0x0000000115eaa0b4: add    %al,(%rax)
  0x0000000115eaa0b6: add    %al,(%rax)
  0x0000000115eaa0b8: add    %al,(%rax)
  0x0000000115eaa0ba: add    %al,(%rax)
  0x0000000115eaa0bc: add    %al,(%rax)
  0x0000000115eaa0be: add    %al,(%rax)

----------------------------------------------------------------------
fconst_2  13 fconst_2  [0x0000000115eaa0e0, 0x0000000115eaa140]  96 bytes

  0x0000000115eaa0e0: push   %rax
  0x0000000115eaa0e1: jmpq   0x0000000115eaa110
  0x0000000115eaa0e6: sub    $0x8,%rsp
  0x0000000115eaa0ea: vmovss %xmm0,(%rsp)
  0x0000000115eaa0ef: jmpq   0x0000000115eaa110
  0x0000000115eaa0f4: sub    $0x10,%rsp
  0x0000000115eaa0f8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa0fd: jmpq   0x0000000115eaa110
  0x0000000115eaa102: sub    $0x10,%rsp
  0x0000000115eaa106: mov    %rax,(%rsp)
  0x0000000115eaa10a: jmpq   0x0000000115eaa110
  0x0000000115eaa10f: push   %rax
  0x0000000115eaa110: vmovss -0x7e73f9c(%rip),%xmm0        # 0x000000010e03617c
  0x0000000115eaa118: movzbl 0x1(%r13),%ebx
  0x0000000115eaa11d: inc    %r13
  0x0000000115eaa120: movabs $0x10e100040,%r10
  0x0000000115eaa12a: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa12e: xchg   %ax,%ax
  0x0000000115eaa130: add    %al,(%rax)
  0x0000000115eaa132: add    %al,(%rax)
  0x0000000115eaa134: add    %al,(%rax)
  0x0000000115eaa136: add    %al,(%rax)
  0x0000000115eaa138: add    %al,(%rax)
  0x0000000115eaa13a: add    %al,(%rax)
  0x0000000115eaa13c: add    %al,(%rax)
  0x0000000115eaa13e: add    %al,(%rax)

----------------------------------------------------------------------
dconst_0  14 dconst_0  [0x0000000115eaa160, 0x0000000115eaa1c0]  96 bytes

  0x0000000115eaa160: push   %rax
  0x0000000115eaa161: jmpq   0x0000000115eaa190
  0x0000000115eaa166: sub    $0x8,%rsp
  0x0000000115eaa16a: vmovss %xmm0,(%rsp)
  0x0000000115eaa16f: jmpq   0x0000000115eaa190
  0x0000000115eaa174: sub    $0x10,%rsp
  0x0000000115eaa178: vmovsd %xmm0,(%rsp)
  0x0000000115eaa17d: jmpq   0x0000000115eaa190
  0x0000000115eaa182: sub    $0x10,%rsp
  0x0000000115eaa186: mov    %rax,(%rsp)
  0x0000000115eaa18a: jmpq   0x0000000115eaa190
  0x0000000115eaa18f: push   %rax
  0x0000000115eaa190: vxorpd %xmm0,%xmm0,%xmm0
  0x0000000115eaa194: movzbl 0x1(%r13),%ebx
  0x0000000115eaa199: inc    %r13
  0x0000000115eaa19c: movabs $0x10e100840,%r10
  0x0000000115eaa1a6: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa1aa: nopw   0x0(%rax,%rax,1)
  0x0000000115eaa1b0: add    %al,(%rax)
  0x0000000115eaa1b2: add    %al,(%rax)
  0x0000000115eaa1b4: add    %al,(%rax)
  0x0000000115eaa1b6: add    %al,(%rax)
  0x0000000115eaa1b8: add    %al,(%rax)
  0x0000000115eaa1ba: add    %al,(%rax)
  0x0000000115eaa1bc: add    %al,(%rax)
  0x0000000115eaa1be: add    %al,(%rax)

----------------------------------------------------------------------
dconst_1  15 dconst_1  [0x0000000115eaa1e0, 0x0000000115eaa240]  96 bytes

  0x0000000115eaa1e0: push   %rax
  0x0000000115eaa1e1: jmpq   0x0000000115eaa210
  0x0000000115eaa1e6: sub    $0x8,%rsp
  0x0000000115eaa1ea: vmovss %xmm0,(%rsp)
  0x0000000115eaa1ef: jmpq   0x0000000115eaa210
  0x0000000115eaa1f4: sub    $0x10,%rsp
  0x0000000115eaa1f8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa1fd: jmpq   0x0000000115eaa210
  0x0000000115eaa202: sub    $0x10,%rsp
  0x0000000115eaa206: mov    %rax,(%rsp)
  0x0000000115eaa20a: jmpq   0x0000000115eaa210
  0x0000000115eaa20f: push   %rax
  0x0000000115eaa210: vmovsd -0x7e740a8(%rip),%xmm0        # 0x000000010e036170
  0x0000000115eaa218: movzbl 0x1(%r13),%ebx
  0x0000000115eaa21d: inc    %r13
  0x0000000115eaa220: movabs $0x10e100840,%r10
  0x0000000115eaa22a: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa22e: xchg   %ax,%ax
  0x0000000115eaa230: add    %al,(%rax)
  0x0000000115eaa232: add    %al,(%rax)
  0x0000000115eaa234: add    %al,(%rax)
  0x0000000115eaa236: add    %al,(%rax)
  0x0000000115eaa238: add    %al,(%rax)
  0x0000000115eaa23a: add    %al,(%rax)
  0x0000000115eaa23c: add    %al,(%rax)
  0x0000000115eaa23e: add    %al,(%rax)

----------------------------------------------------------------------
bipush  16 bipush  [0x0000000115eaa260, 0x0000000115eaa2c0]  96 bytes

  0x0000000115eaa260: push   %rax
  0x0000000115eaa261: jmpq   0x0000000115eaa290
  0x0000000115eaa266: sub    $0x8,%rsp
  0x0000000115eaa26a: vmovss %xmm0,(%rsp)
  0x0000000115eaa26f: jmpq   0x0000000115eaa290
  0x0000000115eaa274: sub    $0x10,%rsp
  0x0000000115eaa278: vmovsd %xmm0,(%rsp)
  0x0000000115eaa27d: jmpq   0x0000000115eaa290
  0x0000000115eaa282: sub    $0x10,%rsp
  0x0000000115eaa286: mov    %rax,(%rsp)
  0x0000000115eaa28a: jmpq   0x0000000115eaa290
  0x0000000115eaa28f: push   %rax
  0x0000000115eaa290: movsbl 0x1(%r13),%eax
  0x0000000115eaa295: movzbl 0x2(%r13),%ebx
  0x0000000115eaa29a: add    $0x2,%r13
  0x0000000115eaa29e: movabs $0x10e0ff040,%r10
  0x0000000115eaa2a8: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa2ac: nopl   0x0(%rax)
  0x0000000115eaa2b0: add    %al,(%rax)
  0x0000000115eaa2b2: add    %al,(%rax)
  0x0000000115eaa2b4: add    %al,(%rax)
  0x0000000115eaa2b6: add    %al,(%rax)
  0x0000000115eaa2b8: add    %al,(%rax)
  0x0000000115eaa2ba: add    %al,(%rax)
  0x0000000115eaa2bc: add    %al,(%rax)
  0x0000000115eaa2be: add    %al,(%rax)

----------------------------------------------------------------------
sipush  17 sipush  [0x0000000115eaa2e0, 0x0000000115eaa340]  96 bytes

  0x0000000115eaa2e0: push   %rax
  0x0000000115eaa2e1: jmpq   0x0000000115eaa310
  0x0000000115eaa2e6: sub    $0x8,%rsp
  0x0000000115eaa2ea: vmovss %xmm0,(%rsp)
  0x0000000115eaa2ef: jmpq   0x0000000115eaa310
  0x0000000115eaa2f4: sub    $0x10,%rsp
  0x0000000115eaa2f8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa2fd: jmpq   0x0000000115eaa310
  0x0000000115eaa302: sub    $0x10,%rsp
  0x0000000115eaa306: mov    %rax,(%rsp)
  0x0000000115eaa30a: jmpq   0x0000000115eaa310
  0x0000000115eaa30f: push   %rax
  0x0000000115eaa310: movzwl 0x1(%r13),%eax
  0x0000000115eaa315: bswap  %eax
  0x0000000115eaa317: sar    $0x10,%eax
  0x0000000115eaa31a: movzbl 0x3(%r13),%ebx
  0x0000000115eaa31f: add    $0x3,%r13
  0x0000000115eaa323: movabs $0x10e0ff040,%r10
  0x0000000115eaa32d: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa331: nopl   0x0(%rax)
  0x0000000115eaa338: add    %al,(%rax)
  0x0000000115eaa33a: add    %al,(%rax)
  0x0000000115eaa33c: add    %al,(%rax)
  0x0000000115eaa33e: add    %al,(%rax)

----------------------------------------------------------------------
ldc  18 ldc  [0x0000000115eaa360, 0x0000000115eaa4a0]  320 bytes

  0x0000000115eaa360: push   %rax
  0x0000000115eaa361: jmpq   0x0000000115eaa390
  0x0000000115eaa366: sub    $0x8,%rsp
  0x0000000115eaa36a: vmovss %xmm0,(%rsp)
  0x0000000115eaa36f: jmpq   0x0000000115eaa390
  0x0000000115eaa374: sub    $0x10,%rsp
  0x0000000115eaa378: vmovsd %xmm0,(%rsp)
  0x0000000115eaa37d: jmpq   0x0000000115eaa390
  0x0000000115eaa382: sub    $0x10,%rsp
  0x0000000115eaa386: mov    %rax,(%rsp)
  0x0000000115eaa38a: jmpq   0x0000000115eaa390
  0x0000000115eaa38f: push   %rax
  0x0000000115eaa390: movzbl 0x1(%r13),%ebx
  0x0000000115eaa395: mov    -0x18(%rbp),%rcx
  0x0000000115eaa399: mov    0x8(%rcx),%rcx
  0x0000000115eaa39d: mov    0x8(%rcx),%rcx
  0x0000000115eaa3a1: mov    0x8(%rcx),%rax
  0x0000000115eaa3a5: movzbl 0x4(%rax,%rbx,1),%edx
  0x0000000115eaa3aa: cmp    $0x64,%edx
  0x0000000115eaa3ad: je     0x0000000115eaa3bd
  0x0000000115eaa3af: cmp    $0x67,%edx
  0x0000000115eaa3b2: je     0x0000000115eaa3bd
  0x0000000115eaa3b4: cmp    $0x7,%edx
  0x0000000115eaa3b7: jne    0x0000000115eaa465
  0x0000000115eaa3bd: mov    $0x0,%esi
  0x0000000115eaa3c2: callq  0x0000000115eaa3cc
  0x0000000115eaa3c7: jmpq   0x0000000115eaa45f
  0x0000000115eaa3cc: lea    0x8(%rsp),%rax
  0x0000000115eaa3d1: mov    %r13,-0x38(%rbp)
  0x0000000115eaa3d5: mov    %r15,%rdi
  0x0000000115eaa3d8: mov    %rbp,0x1e8(%r15)
  0x0000000115eaa3df: mov    %rax,0x1d8(%r15)
  0x0000000115eaa3e6: test   $0xf,%esp
  0x0000000115eaa3ec: je     0x0000000115eaa404
  0x0000000115eaa3f2: sub    $0x8,%rsp
  0x0000000115eaa3f6: callq  0x000000010dae9464
  0x0000000115eaa3fb: add    $0x8,%rsp
  0x0000000115eaa3ff: jmpq   0x0000000115eaa409
  0x0000000115eaa404: callq  0x000000010dae9464
  0x0000000115eaa409: movabs $0x0,%r10
  0x0000000115eaa413: mov    %r10,0x1d8(%r15)
  0x0000000115eaa41a: movabs $0x0,%r10
  0x0000000115eaa424: mov    %r10,0x1e8(%r15)
  0x0000000115eaa42b: cmpq   $0x0,0x8(%r15)
  0x0000000115eaa433: je     0x0000000115eaa43e
  0x0000000115eaa439: jmpq   0x0000000115e916e0
  0x0000000115eaa43e: mov    0x238(%r15),%rax
  0x0000000115eaa445: movabs $0x0,%r10
  0x0000000115eaa44f: mov    %r10,0x238(%r15)
  0x0000000115eaa456: mov    -0x38(%rbp),%r13
  0x0000000115eaa45a: mov    -0x30(%rbp),%r14
  0x0000000115eaa45e: retq   
  0x0000000115eaa45f: push   %rax
  0x0000000115eaa460: jmpq   0x0000000115eaa483
  0x0000000115eaa465: cmp    $0x4,%edx
  0x0000000115eaa468: jne    0x0000000115eaa47e
  0x0000000115eaa46a: vmovss 0x50(%rcx,%rbx,8),%xmm0
  0x0000000115eaa470: sub    $0x8,%rsp
  0x0000000115eaa474: vmovss %xmm0,(%rsp)
  0x0000000115eaa479: jmpq   0x0000000115eaa483
  0x0000000115eaa47e: mov    0x50(%rcx,%rbx,8),%eax
  0x0000000115eaa482: push   %rax
  0x0000000115eaa483: movzbl 0x2(%r13),%ebx
  0x0000000115eaa488: add    $0x2,%r13
  0x0000000115eaa48c: movabs $0x10e101840,%r10
  0x0000000115eaa496: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa49a: nopw   0x0(%rax,%rax,1)

----------------------------------------------------------------------
ldc_w  19 ldc_w  [0x0000000115eaa4c0, 0x0000000115eaa600]  320 bytes

  0x0000000115eaa4c0: push   %rax
  0x0000000115eaa4c1: jmpq   0x0000000115eaa4f0
  0x0000000115eaa4c6: sub    $0x8,%rsp
  0x0000000115eaa4ca: vmovss %xmm0,(%rsp)
  0x0000000115eaa4cf: jmpq   0x0000000115eaa4f0
  0x0000000115eaa4d4: sub    $0x10,%rsp
  0x0000000115eaa4d8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa4dd: jmpq   0x0000000115eaa4f0
  0x0000000115eaa4e2: sub    $0x10,%rsp
  0x0000000115eaa4e6: mov    %rax,(%rsp)
  0x0000000115eaa4ea: jmpq   0x0000000115eaa4f0
  0x0000000115eaa4ef: push   %rax
  0x0000000115eaa4f0: movzwl 0x1(%r13),%ebx
  0x0000000115eaa4f5: bswap  %ebx
  0x0000000115eaa4f7: shr    $0x10,%ebx
  0x0000000115eaa4fa: mov    -0x18(%rbp),%rcx
  0x0000000115eaa4fe: mov    0x8(%rcx),%rcx
  0x0000000115eaa502: mov    0x8(%rcx),%rcx
  0x0000000115eaa506: mov    0x8(%rcx),%rax
  0x0000000115eaa50a: movzbl 0x4(%rax,%rbx,1),%edx
  0x0000000115eaa50f: cmp    $0x64,%edx
  0x0000000115eaa512: je     0x0000000115eaa522
  0x0000000115eaa514: cmp    $0x67,%edx
  0x0000000115eaa517: je     0x0000000115eaa522
  0x0000000115eaa519: cmp    $0x7,%edx
  0x0000000115eaa51c: jne    0x0000000115eaa5ca
  0x0000000115eaa522: mov    $0x1,%esi
  0x0000000115eaa527: callq  0x0000000115eaa531
  0x0000000115eaa52c: jmpq   0x0000000115eaa5c4
  0x0000000115eaa531: lea    0x8(%rsp),%rax
  0x0000000115eaa536: mov    %r13,-0x38(%rbp)
  0x0000000115eaa53a: mov    %r15,%rdi
  0x0000000115eaa53d: mov    %rbp,0x1e8(%r15)
  0x0000000115eaa544: mov    %rax,0x1d8(%r15)
  0x0000000115eaa54b: test   $0xf,%esp
  0x0000000115eaa551: je     0x0000000115eaa569
  0x0000000115eaa557: sub    $0x8,%rsp
  0x0000000115eaa55b: callq  0x000000010dae9464
  0x0000000115eaa560: add    $0x8,%rsp
  0x0000000115eaa564: jmpq   0x0000000115eaa56e
  0x0000000115eaa569: callq  0x000000010dae9464
  0x0000000115eaa56e: movabs $0x0,%r10
  0x0000000115eaa578: mov    %r10,0x1d8(%r15)
  0x0000000115eaa57f: movabs $0x0,%r10
  0x0000000115eaa589: mov    %r10,0x1e8(%r15)
  0x0000000115eaa590: cmpq   $0x0,0x8(%r15)
  0x0000000115eaa598: je     0x0000000115eaa5a3
  0x0000000115eaa59e: jmpq   0x0000000115e916e0
  0x0000000115eaa5a3: mov    0x238(%r15),%rax
  0x0000000115eaa5aa: movabs $0x0,%r10
  0x0000000115eaa5b4: mov    %r10,0x238(%r15)
  0x0000000115eaa5bb: mov    -0x38(%rbp),%r13
  0x0000000115eaa5bf: mov    -0x30(%rbp),%r14
  0x0000000115eaa5c3: retq   
  0x0000000115eaa5c4: push   %rax
  0x0000000115eaa5c5: jmpq   0x0000000115eaa5e8
  0x0000000115eaa5ca: cmp    $0x4,%edx
  0x0000000115eaa5cd: jne    0x0000000115eaa5e3
  0x0000000115eaa5cf: vmovss 0x50(%rcx,%rbx,8),%xmm0
  0x0000000115eaa5d5: sub    $0x8,%rsp
  0x0000000115eaa5d9: vmovss %xmm0,(%rsp)
  0x0000000115eaa5de: jmpq   0x0000000115eaa5e8
  0x0000000115eaa5e3: mov    0x50(%rcx,%rbx,8),%eax
  0x0000000115eaa5e7: push   %rax
  0x0000000115eaa5e8: movzbl 0x3(%r13),%ebx
  0x0000000115eaa5ed: add    $0x3,%r13
  0x0000000115eaa5f1: movabs $0x10e101840,%r10
  0x0000000115eaa5fb: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa5ff: nop

----------------------------------------------------------------------
ldc2_w  20 ldc2_w  [0x0000000115eaa620, 0x0000000115eaa6c0]  160 bytes

  0x0000000115eaa620: push   %rax
  0x0000000115eaa621: jmpq   0x0000000115eaa650
  0x0000000115eaa626: sub    $0x8,%rsp
  0x0000000115eaa62a: vmovss %xmm0,(%rsp)
  0x0000000115eaa62f: jmpq   0x0000000115eaa650
  0x0000000115eaa634: sub    $0x10,%rsp
  0x0000000115eaa638: vmovsd %xmm0,(%rsp)
  0x0000000115eaa63d: jmpq   0x0000000115eaa650
  0x0000000115eaa642: sub    $0x10,%rsp
  0x0000000115eaa646: mov    %rax,(%rsp)
  0x0000000115eaa64a: jmpq   0x0000000115eaa650
  0x0000000115eaa64f: push   %rax
  0x0000000115eaa650: movzwl 0x1(%r13),%ebx
  0x0000000115eaa655: bswap  %ebx
  0x0000000115eaa657: shr    $0x10,%ebx
  0x0000000115eaa65a: mov    -0x18(%rbp),%rcx
  0x0000000115eaa65e: mov    0x8(%rcx),%rcx
  0x0000000115eaa662: mov    0x8(%rcx),%rcx
  0x0000000115eaa666: mov    0x8(%rcx),%rax
  0x0000000115eaa66a: cmpb   $0x6,0x4(%rax,%rbx,1)
  0x0000000115eaa66f: jne    0x0000000115eaa682
  0x0000000115eaa671: vmovsd 0x50(%rcx,%rbx,8),%xmm0
  0x0000000115eaa677: sub    $0x10,%rsp
  0x0000000115eaa67b: vmovsd %xmm0,(%rsp)
  0x0000000115eaa680: jmp    0x0000000115eaa68f
  0x0000000115eaa682: mov    0x50(%rcx,%rbx,8),%rax
  0x0000000115eaa687: sub    $0x10,%rsp
  0x0000000115eaa68b: mov    %rax,(%rsp)
  0x0000000115eaa68f: movzbl 0x3(%r13),%ebx
  0x0000000115eaa694: add    $0x3,%r13
  0x0000000115eaa698: movabs $0x10e101840,%r10
  0x0000000115eaa6a2: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa6a6: xchg   %ax,%ax
  0x0000000115eaa6a8: add    %al,(%rax)
  0x0000000115eaa6aa: add    %al,(%rax)
  0x0000000115eaa6ac: add    %al,(%rax)
  0x0000000115eaa6ae: add    %al,(%rax)
  0x0000000115eaa6b0: add    %al,(%rax)
  0x0000000115eaa6b2: add    %al,(%rax)
  0x0000000115eaa6b4: add    %al,(%rax)
  0x0000000115eaa6b6: add    %al,(%rax)
  0x0000000115eaa6b8: add    %al,(%rax)
  0x0000000115eaa6ba: add    %al,(%rax)
  0x0000000115eaa6bc: add    %al,(%rax)
  0x0000000115eaa6be: add    %al,(%rax)

----------------------------------------------------------------------
iload  21 iload  [0x0000000115eaa6e0, 0x0000000115eaa7a0]  192 bytes

  0x0000000115eaa6e0: push   %rax
  0x0000000115eaa6e1: jmpq   0x0000000115eaa710
  0x0000000115eaa6e6: sub    $0x8,%rsp
  0x0000000115eaa6ea: vmovss %xmm0,(%rsp)
  0x0000000115eaa6ef: jmpq   0x0000000115eaa710
  0x0000000115eaa6f4: sub    $0x10,%rsp
  0x0000000115eaa6f8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa6fd: jmpq   0x0000000115eaa710
  0x0000000115eaa702: sub    $0x10,%rsp
  0x0000000115eaa706: mov    %rax,(%rsp)
  0x0000000115eaa70a: jmpq   0x0000000115eaa710
  0x0000000115eaa70f: push   %rax
  0x0000000115eaa710: movzbl 0x2(%r13),%ebx
  0x0000000115eaa715: cmp    $0x15,%ebx
  0x0000000115eaa718: je     0x0000000115eaa73e
  0x0000000115eaa71e: cmp    $0xe0,%ebx
  0x0000000115eaa724: mov    $0xe1,%ecx
  0x0000000115eaa729: je     0x0000000115eaa73a
  0x0000000115eaa72b: cmp    $0x34,%ebx
  0x0000000115eaa72e: mov    $0xe2,%ecx
  0x0000000115eaa733: je     0x0000000115eaa73a
  0x0000000115eaa735: mov    $0xe0,%ecx
  0x0000000115eaa73a: mov    %cl,0x0(%r13)
  0x0000000115eaa73e: movzbl 0x1(%r13),%ebx
  0x0000000115eaa743: neg    %rbx
  0x0000000115eaa746: mov    (%r14,%rbx,8),%eax
  0x0000000115eaa74a: movzbl 0x2(%r13),%ebx
  0x0000000115eaa74f: add    $0x2,%r13
  0x0000000115eaa753: movabs $0x10e0ff040,%r10
  0x0000000115eaa75d: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa761: movzwl 0x2(%r13),%ebx
  0x0000000115eaa766: bswap  %ebx
  0x0000000115eaa768: shr    $0x10,%ebx
  0x0000000115eaa76b: neg    %rbx
  0x0000000115eaa76e: mov    (%r14,%rbx,8),%eax
  0x0000000115eaa772: movzbl 0x4(%r13),%ebx
  0x0000000115eaa777: add    $0x4,%r13
  0x0000000115eaa77b: movabs $0x10e0ff040,%r10
  0x0000000115eaa785: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa789: nopl   0x0(%rax)
  0x0000000115eaa790: add    %al,(%rax)
  0x0000000115eaa792: add    %al,(%rax)
  0x0000000115eaa794: add    %al,(%rax)
  0x0000000115eaa796: add    %al,(%rax)
  0x0000000115eaa798: add    %al,(%rax)
  0x0000000115eaa79a: add    %al,(%rax)
  0x0000000115eaa79c: add    %al,(%rax)
  0x0000000115eaa79e: add    %al,(%rax)

----------------------------------------------------------------------
lload  22 lload  [0x0000000115eaa7c0, 0x0000000115eaa840]  128 bytes

  0x0000000115eaa7c0: push   %rax
  0x0000000115eaa7c1: jmpq   0x0000000115eaa7f0
  0x0000000115eaa7c6: sub    $0x8,%rsp
  0x0000000115eaa7ca: vmovss %xmm0,(%rsp)
  0x0000000115eaa7cf: jmpq   0x0000000115eaa7f0
  0x0000000115eaa7d4: sub    $0x10,%rsp
  0x0000000115eaa7d8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa7dd: jmpq   0x0000000115eaa7f0
  0x0000000115eaa7e2: sub    $0x10,%rsp
  0x0000000115eaa7e6: mov    %rax,(%rsp)
  0x0000000115eaa7ea: jmpq   0x0000000115eaa7f0
  0x0000000115eaa7ef: push   %rax
  0x0000000115eaa7f0: movzbl 0x1(%r13),%ebx
  0x0000000115eaa7f5: neg    %rbx
  0x0000000115eaa7f8: mov    -0x8(%r14,%rbx,8),%rax
  0x0000000115eaa7fd: movzbl 0x2(%r13),%ebx
  0x0000000115eaa802: add    $0x2,%r13
  0x0000000115eaa806: movabs $0x10e0ff840,%r10
  0x0000000115eaa810: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa814: movzwl 0x2(%r13),%ebx
  0x0000000115eaa819: bswap  %ebx
  0x0000000115eaa81b: shr    $0x10,%ebx
  0x0000000115eaa81e: neg    %rbx
  0x0000000115eaa821: mov    -0x8(%r14,%rbx,8),%rax
  0x0000000115eaa826: movzbl 0x4(%r13),%ebx
  0x0000000115eaa82b: add    $0x4,%r13
  0x0000000115eaa82f: movabs $0x10e0ff840,%r10
  0x0000000115eaa839: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa83d: data32 xchg %ax,%ax

----------------------------------------------------------------------
fload  23 fload  [0x0000000115eaa860, 0x0000000115eaa8e0]  128 bytes

  0x0000000115eaa860: push   %rax
  0x0000000115eaa861: jmpq   0x0000000115eaa890
  0x0000000115eaa866: sub    $0x8,%rsp
  0x0000000115eaa86a: vmovss %xmm0,(%rsp)
  0x0000000115eaa86f: jmpq   0x0000000115eaa890
  0x0000000115eaa874: sub    $0x10,%rsp
  0x0000000115eaa878: vmovsd %xmm0,(%rsp)
  0x0000000115eaa87d: jmpq   0x0000000115eaa890
  0x0000000115eaa882: sub    $0x10,%rsp
  0x0000000115eaa886: mov    %rax,(%rsp)
  0x0000000115eaa88a: jmpq   0x0000000115eaa890
  0x0000000115eaa88f: push   %rax
  0x0000000115eaa890: movzbl 0x1(%r13),%ebx
  0x0000000115eaa895: neg    %rbx
  0x0000000115eaa898: vmovss (%r14,%rbx,8),%xmm0
  0x0000000115eaa89e: movzbl 0x2(%r13),%ebx
  0x0000000115eaa8a3: add    $0x2,%r13
  0x0000000115eaa8a7: movabs $0x10e100040,%r10
  0x0000000115eaa8b1: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa8b5: movzwl 0x2(%r13),%ebx
  0x0000000115eaa8ba: bswap  %ebx
  0x0000000115eaa8bc: shr    $0x10,%ebx
  0x0000000115eaa8bf: neg    %rbx
  0x0000000115eaa8c2: vmovss (%r14,%rbx,8),%xmm0
  0x0000000115eaa8c8: movzbl 0x4(%r13),%ebx
  0x0000000115eaa8cd: add    $0x4,%r13
  0x0000000115eaa8d1: movabs $0x10e100040,%r10
  0x0000000115eaa8db: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa8df: nop

----------------------------------------------------------------------
dload  24 dload  [0x0000000115eaa900, 0x0000000115eaa9a0]  160 bytes

  0x0000000115eaa900: push   %rax
  0x0000000115eaa901: jmpq   0x0000000115eaa930
  0x0000000115eaa906: sub    $0x8,%rsp
  0x0000000115eaa90a: vmovss %xmm0,(%rsp)
  0x0000000115eaa90f: jmpq   0x0000000115eaa930
  0x0000000115eaa914: sub    $0x10,%rsp
  0x0000000115eaa918: vmovsd %xmm0,(%rsp)
  0x0000000115eaa91d: jmpq   0x0000000115eaa930
  0x0000000115eaa922: sub    $0x10,%rsp
  0x0000000115eaa926: mov    %rax,(%rsp)
  0x0000000115eaa92a: jmpq   0x0000000115eaa930
  0x0000000115eaa92f: push   %rax
  0x0000000115eaa930: movzbl 0x1(%r13),%ebx
  0x0000000115eaa935: neg    %rbx
  0x0000000115eaa938: vmovsd -0x8(%r14,%rbx,8),%xmm0
  0x0000000115eaa93f: movzbl 0x2(%r13),%ebx
  0x0000000115eaa944: add    $0x2,%r13
  0x0000000115eaa948: movabs $0x10e100840,%r10
  0x0000000115eaa952: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa956: movzwl 0x2(%r13),%ebx
  0x0000000115eaa95b: bswap  %ebx
  0x0000000115eaa95d: shr    $0x10,%ebx
  0x0000000115eaa960: neg    %rbx
  0x0000000115eaa963: vmovsd -0x8(%r14,%rbx,8),%xmm0
  0x0000000115eaa96a: movzbl 0x4(%r13),%ebx
  0x0000000115eaa96f: add    $0x4,%r13
  0x0000000115eaa973: movabs $0x10e100840,%r10
  0x0000000115eaa97d: jmpq   *(%r10,%rbx,8)
  0x0000000115eaa981: nopl   0x0(%rax)
  0x0000000115eaa988: add    %al,(%rax)
  0x0000000115eaa98a: add    %al,(%rax)
  0x0000000115eaa98c: add    %al,(%rax)
  0x0000000115eaa98e: add    %al,(%rax)
  0x0000000115eaa990: add    %al,(%rax)
  0x0000000115eaa992: add    %al,(%rax)
  0x0000000115eaa994: add    %al,(%rax)
  0x0000000115eaa996: add    %al,(%rax)
  0x0000000115eaa998: add    %al,(%rax)
  0x0000000115eaa99a: add    %al,(%rax)
  0x0000000115eaa99c: add    %al,(%rax)
  0x0000000115eaa99e: add    %al,(%rax)

----------------------------------------------------------------------
aload  25 aload  [0x0000000115eaa9c0, 0x0000000115eaaa40]  128 bytes

  0x0000000115eaa9c0: push   %rax
  0x0000000115eaa9c1: jmpq   0x0000000115eaa9f0
  0x0000000115eaa9c6: sub    $0x8,%rsp
  0x0000000115eaa9ca: vmovss %xmm0,(%rsp)
  0x0000000115eaa9cf: jmpq   0x0000000115eaa9f0
  0x0000000115eaa9d4: sub    $0x10,%rsp
  0x0000000115eaa9d8: vmovsd %xmm0,(%rsp)
  0x0000000115eaa9dd: jmpq   0x0000000115eaa9f0
  0x0000000115eaa9e2: sub    $0x10,%rsp
  0x0000000115eaa9e6: mov    %rax,(%rsp)
  0x0000000115eaa9ea: jmpq   0x0000000115eaa9f0
  0x0000000115eaa9ef: push   %rax
  0x0000000115eaa9f0: movzbl 0x1(%r13),%ebx
  0x0000000115eaa9f5: neg    %rbx
  0x0000000115eaa9f8: mov    (%r14,%rbx,8),%rax
  0x0000000115eaa9fc: movzbl 0x2(%r13),%ebx
  0x0000000115eaaa01: add    $0x2,%r13
  0x0000000115eaaa05: movabs $0x10e101040,%r10
  0x0000000115eaaa0f: jmpq   *(%r10,%rbx,8)
  0x0000000115eaaa13: movzwl 0x2(%r13),%ebx
  0x0000000115eaaa18: bswap  %ebx
  0x0000000115eaaa1a: shr    $0x10,%ebx
  0x0000000115eaaa1d: neg    %rbx
  0x0000000115eaaa20: mov    (%r14,%rbx,8),%rax
  0x0000000115eaaa24: movzbl 0x4(%r13),%ebx
  0x0000000115eaaa29: add    $0x4,%r13
  0x0000000115eaaa2d: movabs $0x10e101040,%r10
  0x0000000115eaaa37: jmpq   *(%r10,%rbx,8)
  0x0000000115eaaa3b: nopl   0x0(%rax,%rax,1)

----------------------------------------------------------------------
iload_0  26 iload_0  [0x0000000115eaaa60, 0x0000000115eaaac0]  96 bytes

  0x0000000115eaaa60: push   %rax
  0x0000000115eaaa61: jmpq   0x0000000115eaaa90
  0x0000000115eaaa66: sub    $0x8,%rsp
  0x0000000115eaaa6a: vmovss %xmm0,(%rsp)
  0x0000000115eaaa6f: jmpq   0x0000000115eaaa90
  0x0000000115eaaa74: sub    $0x10,%rsp
  0x0000000115eaaa78: vmovsd %xmm0,(%rsp)
  0x0000000115eaaa7d: jmpq   0x0000000115eaaa90
  0x0000000115eaaa82: sub    $0x10,%rsp
  0x0000000115eaaa86: mov    %rax,(%rsp)
  0x0000000115eaaa8a: jmpq   0x0000000115eaaa90
  0x0000000115eaaa8f: push   %rax
  0x0000000115eaaa90: mov    (%r14),%eax
  0x0000000115eaaa93: movzbl 0x1(%r13),%ebx
  0x0000000115eaaa98: inc    %r13
  0x0000000115eaaa9b: movabs $0x10e0ff040,%r10
  0x0000000115eaaaa5: jmpq   *(%r10,%rbx,8)
  0x0000000115eaaaa9: nopl   0x0(%rax)
  0x0000000115eaaab0: add    %al,(%rax)
  0x0000000115eaaab2: add    %al,(%rax)
  0x0000000115eaaab4: add    %al,(%rax)
  0x0000000115eaaab6: add    %al,(%rax)
  0x0000000115eaaab8: add    %al,(%rax)
  0x0000000115eaaaba: add    %al,(%rax)
  0x0000000115eaaabc: add    %al,(%rax)
  0x0000000115eaaabe: add    %al,(%rax)

----------------------------------------------------------------------
iload_1  27 iload_1  [0x0000000115eaaae0, 0x0000000115eaab40]  96 bytes

  0x0000000115eaaae0: push   %rax
  0x0000000115eaaae1: jmpq   0x0000000115eaab10
  0x0000000115eaaae6: sub    $0x8,%rsp
  0x0000000115eaaaea: vmovss %xmm0,(%rsp)
  0x0000000115eaaaef: jmpq   0x0000000115eaab10
  0x0000000115eaaaf4: sub    $0x10,%rsp
  0x0000000115eaaaf8: vmovsd %xmm0,(%rsp)
  0x0000000115eaaafd: jmpq   0x0000000115eaab10
  0x0000000115eaab02: sub    $0x10,%rsp
  0x0000000115eaab06: mov    %rax,(%rsp)
  0x0000000115eaab0a: jmpq   0x0000000115eaab10
  0x0000000115eaab0f: push   %rax
  0x0000000115eaab10: mov    -0x8(%r14),%eax
  0x0000000115eaab14: movzbl 0x1(%r13),%ebx
  0x0000000115eaab19: inc    %r13
  0x0000000115eaab1c: movabs $0x10e0ff040,%r10
  0x0000000115eaab26: jmpq   *(%r10,%rbx,8)
  0x0000000115eaab2a: nopw   0x0(%rax,%rax,1)
  0x0000000115eaab30: add    %al,(%rax)
  0x0000000115eaab32: add    %al,(%rax)
  0x0000000115eaab34: add    %al,(%rax)
  0x0000000115eaab36: add    %al,(%rax)
  0x0000000115eaab38: add    %al,(%rax)
  0x0000000115eaab3a: add    %al,(%rax)
  0x0000000115eaab3c: add    %al,(%rax)
  0x0000000115eaab3e: add    %al,(%rax)

----------------------------------------------------------------------
iload_2  28 iload_2  [0x0000000115eaab60, 0x0000000115eaabc0]  96 bytes

  0x0000000115eaab60: push   %rax
  0x0000000115eaab61: jmpq   0x0000000115eaab90
  0x0000000115eaab66: sub    $0x8,%rsp
  0x0000000115eaab6a: vmovss %xmm0,(%rsp)
  0x0000000115eaab6f: jmpq   0x0000000115eaab90
  0x0000000115eaab74: sub    $0x10,%rsp
  0x0000000115eaab78: vmovsd %xmm0,(%rsp)
  0x0000000115eaab7d: jmpq   0x0000000115eaab90
  0x0000000115eaab82: sub    $0x10,%rsp
  0x0000000115eaab86: mov    %rax,(%rsp)
  0x0000000115eaab8a: jmpq   0x0000000115eaab90
  0x0000000115eaab8f: push   %rax
  0x0000000115eaab90: mov    -0x10(%r14),%eax
  0x0000000115eaab94: movzbl 0x1(%r13),%ebx
  0x0000000115eaab99: inc    %r13
  0x0000000115eaab9c: movabs $0x10e0ff040,%r10
  0x0000000115eaaba6: jmpq   *(%r10,%rbx,8)
  0x0000000115eaabaa: nopw   0x0(%rax,%rax,1)
  0x0000000115eaabb0: add    %al,(%rax)
  0x0000000115eaabb2: add    %al,(%rax)
  0x0000000115eaabb4: add    %al,(%rax)
  0x0000000115eaabb6: add    %al,(%rax)
  0x0000000115eaabb8: add    %al,(%rax)
  0x0000000115eaabba: add    %al,(%rax)
  0x0000000115eaabbc: add    %al,(%rax)
  0x0000000115eaabbe: add    %al,(%rax)

----------------------------------------------------------------------
iload_3  29 iload_3  [0x0000000115eaabe0, 0x0000000115eaac40]  96 bytes

  0x0000000115eaabe0: push   %rax
  0x0000000115eaabe1: jmpq   0x0000000115eaac10
  0x0000000115eaabe6: sub    $0x8,%rsp
  0x0000000115eaabea: vmovss %xmm0,(%rsp)
  0x0000000115eaabef: jmpq   0x0000000115eaac10
  0x0000000115eaabf4: sub    $0x10,%rsp
  0x0000000115eaabf8: vmovsd %xmm0,(%rsp)
  0x0000000115eaabfd: jmpq   0x0000000115eaac10
  0x0000000115eaac02: sub    $0x10,%rsp
  0x0000000115eaac06: mov    %rax,(%rsp)
  0x0000000115eaac0a: jmpq   0x0000000115eaac10
  0x0000000115eaac0f: push   %rax
  0x0000000115eaac10: mov    -0x18(%r14),%eax
  0x0000000115eaac14: movzbl 0x1(%r13),%ebx
  0x0000000115eaac19: inc    %r13
  0x0000000115eaac1c: movabs $0x10e0ff040,%r10
  0x0000000115eaac26: jmpq   *(%r10,%rbx,8)
  0x0000000115eaac2a: nopw   0x0(%rax,%rax,1)
  0x0000000115eaac30: add    %al,(%rax)
  0x0000000115eaac32: add    %al,(%rax)
  0x0000000115eaac34: add    %al,(%rax)
  0x0000000115eaac36: add    %al,(%rax)
  0x0000000115eaac38: add    %al,(%rax)
  0x0000000115eaac3a: add    %al,(%rax)
  0x0000000115eaac3c: add    %al,(%rax)
  0x0000000115eaac3e: add    %al,(%rax)

----------------------------------------------------------------------
lload_0  30 lload_0  [0x0000000115eaac60, 0x0000000115eaacc0]  96 bytes

  0x0000000115eaac60: push   %rax
  0x0000000115eaac61: jmpq   0x0000000115eaac90
  0x0000000115eaac66: sub    $0x8,%rsp
  0x0000000115eaac6a: vmovss %xmm0,(%rsp)
  0x0000000115eaac6f: jmpq   0x0000000115eaac90
  0x0000000115eaac74: sub    $0x10,%rsp
  0x0000000115eaac78: vmovsd %xmm0,(%rsp)
  0x0000000115eaac7d: jmpq   0x0000000115eaac90
  0x0000000115eaac82: sub    $0x10,%rsp
  0x0000000115eaac86: mov    %rax,(%rsp)
  0x0000000115eaac8a: jmpq   0x0000000115eaac90
  0x0000000115eaac8f: push   %rax
  0x0000000115eaac90: mov    -0x8(%r14),%rax
  0x0000000115eaac94: movzbl 0x1(%r13),%ebx
  0x0000000115eaac99: inc    %r13
  0x0000000115eaac9c: movabs $0x10e0ff840,%r10
  0x0000000115eaaca6: jmpq   *(%r10,%rbx,8)
  0x0000000115eaacaa: nopw   0x0(%rax,%rax,1)
  0x0000000115eaacb0: add    %al,(%rax)
  0x0000000115eaacb2: add    %al,(%rax)
  0x0000000115eaacb4: add    %al,(%rax)
  0x0000000115eaacb6: add    %al,(%rax)
  0x0000000115eaacb8: add    %al,(%rax)
  0x0000000115eaacba: add    %al,(%rax)
  0x0000000115eaacbc: add    %al,(%rax)
  0x0000000115eaacbe: add    %al,(%rax)

----------------------------------------------------------------------
lload_1  31 lload_1  [0x0000000115eaace0, 0x0000000115eaad40]  96 bytes

  0x0000000115eaace0: push   %rax
  0x0000000115eaace1: jmpq   0x0000000115eaad10
  0x0000000115eaace6: sub    $0x8,%rsp
  0x0000000115eaacea: vmovss %xmm0,(%rsp)
  0x0000000115eaacef: jmpq   0x0000000115eaad10
  0x0000000115eaacf4: sub    $0x10,%rsp
  0x0000000115eaacf8: vmovsd %xmm0,(%rsp)
  0x0000000115eaacfd: jmpq   0x0000000115eaad10
  0x0000000115eaad02: sub    $0x10,%rsp
  0x0000000115eaad06: mov    %rax,(%rsp)
  0x0000000115eaad0a: jmpq   0x0000000115eaad10
  0x0000000115eaad0f: push   %rax
  0x0000000115eaad10: mov    -0x10(%r14),%rax
  0x0000000115eaad14: movzbl 0x1(%r13),%ebx
  0x0000000115eaad19: inc    %r13
  0x0000000115eaad1c: movabs $0x10e0ff840,%r10
  0x0000000115eaad26: jmpq   *(%r10,%rbx,8)
  0x0000000115eaad2a: nopw   0x0(%rax,%rax,1)
  0x0000000115eaad30: add    %al,(%rax)
  0x0000000115eaad32: add    %al,(%rax)
  0x0000000115eaad34: add    %al,(%rax)
  0x0000000115eaad36: add    %al,(%rax)
  0x0000000115eaad38: add    %al,(%rax)
  0x0000000115eaad3a: add    %al,(%rax)
  0x0000000115eaad3c: add    %al,(%rax)
  0x0000000115eaad3e: add    %al,(%rax)

----------------------------------------------------------------------
lload_2  32 lload_2  [0x0000000115eaad60, 0x0000000115eaadc0]  96 bytes

  0x0000000115eaad60: push   %rax
  0x0000000115eaad61: jmpq   0x0000000115eaad90
  0x0000000115eaad66: sub    $0x8,%rsp
  0x0000000115eaad6a: vmovss %xmm0,(%rsp)
  0x0000000115eaad6f: jmpq   0x0000000115eaad90
  0x0000000115eaad74: sub    $0x10,%rsp
  0x0000000115eaad78: vmovsd %xmm0,(%rsp)
  0x0000000115eaad7d: jmpq   0x0000000115eaad90
  0x0000000115eaad82: sub    $0x10,%rsp
  0x0000000115eaad86: mov    %rax,(%rsp)
  0x0000000115eaad8a: jmpq   0x0000000115eaad90
  0x0000000115eaad8f: push   %rax
  0x0000000115eaad90: mov    -0x18(%r14),%rax
  0x0000000115eaad94: movzbl 0x1(%r13),%ebx
  0x0000000115eaad99: inc    %r13
  0x0000000115eaad9c: movabs $0x10e0ff840,%r10
  0x0000000115eaada6: jmpq   *(%r10,%rbx,8)
  0x0000000115eaadaa: nopw   0x0(%rax,%rax,1)
  0x0000000115eaadb0: add    %al,(%rax)
  0x0000000115eaadb2: add    %al,(%rax)
  0x0000000115eaadb4: add    %al,(%rax)
  0x0000000115eaadb6: add    %al,(%rax)
  0x0000000115eaadb8: add    %al,(%rax)
  0x0000000115eaadba: add    %al,(%rax)
  0x0000000115eaadbc: add    %al,(%rax)
  0x0000000115eaadbe: add    %al,(%rax)

----------------------------------------------------------------------
lload_3  33 lload_3  [0x0000000115eaade0, 0x0000000115eaae40]  96 bytes

  0x0000000115eaade0: push   %rax
  0x0000000115eaade1: jmpq   0x0000000115eaae10
  0x0000000115eaade6: sub    $0x8,%rsp
  0x0000000115eaadea: vmovss %xmm0,(%rsp)
  0x0000000115eaadef: jmpq   0x0000000115eaae10
  0x0000000115eaadf4: sub    $0x10,%rsp
  0x0000000115eaadf8: vmovsd %xmm0,(%rsp)
  0x0000000115eaadfd: jmpq   0x0000000115eaae10
  0x0000000115eaae02: sub    $0x10,%rsp
  0x0000000115eaae06: mov    %rax,(%rsp)
  0x0000000115eaae0a: jmpq   0x0000000115eaae10
  0x0000000115eaae0f: push   %rax
  0x0000000115eaae10: mov    -0x20(%r14),%rax
  0x0000000115eaae14: movzbl 0x1(%r13),%ebx
  0x0000000115eaae19: inc    %r13
  0x0000000115eaae1c: movabs $0x10e0ff840,%r10
  0x0000000115eaae26: jmpq   *(%r10,%rbx,8)
  0x0000000115eaae2a: nopw   0x0(%rax,%rax,1)
  0x0000000115eaae30: add    %al,(%rax)
  0x0000000115eaae32: add    %al,(%rax)
  0x0000000115eaae34: add    %al,(%rax)
  0x0000000115eaae36: add    %al,(%rax)
  0x0000000115eaae38: add    %al,(%rax)
  0x0000000115eaae3a: add    %al,(%rax)
  0x0000000115eaae3c: add    %al,(%rax)
  0x0000000115eaae3e: add    %al,(%rax)

----------------------------------------------------------------------
fload_0  34 fload_0  [0x0000000115eaae60, 0x0000000115eaaec0]  96 bytes

  0x0000000115eaae60: push   %rax
  0x0000000115eaae61: jmpq   0x0000000115eaae90
  0x0000000115eaae66: sub    $0x8,%rsp
  0x0000000115eaae6a: vmovss %xmm0,(%rsp)
  0x0000000115eaae6f: jmpq   0x0000000115eaae90
  0x0000000115eaae74: sub    $0x10,%rsp
  0x0000000115eaae78: vmovsd %xmm0,(%rsp)
  0x0000000115eaae7d: jmpq   0x0000000115eaae90
  0x0000000115eaae82: sub    $0x10,%rsp
  0x0000000115eaae86: mov    %rax,(%rsp)
  0x0000000115eaae8a: jmpq   0x0000000115eaae90
  0x0000000115eaae8f: push   %rax
  0x0000000115eaae90: vmovss (%r14),%xmm0
  0x0000000115eaae95: movzbl 0x1(%r13),%ebx
  0x0000000115eaae9a: inc    %r13
  0x0000000115eaae9d: movabs $0x10e100040,%r10
  0x0000000115eaaea7: jmpq   *(%r10,%rbx,8)
  0x0000000115eaaeab: nopl   0x0(%rax,%rax,1)
  0x0000000115eaaeb0: add    %al,(%rax)
  0x0000000115eaaeb2: add    %al,(%rax)
  0x0000000115eaaeb4: add    %al,(%rax)
  0x0000000115eaaeb6: add    %al,(%rax)
  0x0000000115eaaeb8: add    %al,(%rax)
  0x0000000115eaaeba: add    %al,(%rax)
  0x0000000115eaaebc: add    %al,(%rax)
  0x0000000115eaaebe: add    %al,(%rax)

----------------------------------------------------------------------
fload_1  35 fload_1  [0x0000000115eaaee0, 0x0000000115eaaf40]  96 bytes

  0x0000000115eaaee0: push   %rax
  0x0000000115eaaee1: jmpq   0x0000000115eaaf10
  0x0000000115eaaee6: sub    $0x8,%rsp
  0x0000000115eaaeea: vmovss %xmm0,(%rsp)
  0x0000000115eaaeef: jmpq   0x0000000115eaaf10
  0x0000000115eaaef4: sub    $0x10,%rsp
  0x0000000115eaaef8: vmovsd %xmm0,(%rsp)
  0x0000000115eaaefd: jmpq   0x0000000115eaaf10
  0x0000000115eaaf02: sub    $0x10,%rsp
  0x0000000115eaaf06: mov    %rax,(%rsp)
  0x0000000115eaaf0a: jmpq   0x0000000115eaaf10
  0x0000000115eaaf0f: push   %rax
  0x0000000115eaaf10: vmovss -0x8(%r14),%xmm0
  0x0000000115eaaf16: movzbl 0x1(%r13),%ebx
  0x0000000115eaaf1b: inc    %r13
  0x0000000115eaaf1e: movabs $0x10e100040,%r10
  0x0000000115eaaf28: jmpq   *(%r10,%rbx,8)
  0x0000000115eaaf2c: nopl   0x0(%rax)
  0x0000000115eaaf30: add    %al,(%rax)
  0x0000000115eaaf32: add    %al,(%rax)
  0x0000000115eaaf34: add    %al,(%rax)
  0x0000000115eaaf36: add    %al,(%rax)
  0x0000000115eaaf38: add    %al,(%rax)
  0x0000000115eaaf3a: add    %al,(%rax)
  0x0000000115eaaf3c: add    %al,(%rax)
  0x0000000115eaaf3e: add    %al,(%rax)

----------------------------------------------------------------------
fload_2  36 fload_2  [0x0000000115eaaf60, 0x0000000115eaafc0]  96 bytes

  0x0000000115eaaf60: push   %rax
  0x0000000115eaaf61: jmpq   0x0000000115eaaf90
  0x0000000115eaaf66: sub    $0x8,%rsp
  0x0000000115eaaf6a: vmovss %xmm0,(%rsp)
  0x0000000115eaaf6f: jmpq   0x0000000115eaaf90
  0x0000000115eaaf74: sub    $0x10,%rsp
  0x0000000115eaaf78: vmovsd %xmm0,(%rsp)
  0x0000000115eaaf7d: jmpq   0x0000000115eaaf90
  0x0000000115eaaf82: sub    $0x10,%rsp
  0x0000000115eaaf86: mov    %rax,(%rsp)
  0x0000000115eaaf8a: jmpq   0x0000000115eaaf90
  0x0000000115eaaf8f: push   %rax
  0x0000000115eaaf90: vmovss -0x10(%r14),%xmm0
  0x0000000115eaaf96: movzbl 0x1(%r13),%ebx
  0x0000000115eaaf9b: inc    %r13
  0x0000000115eaaf9e: movabs $0x10e100040,%r10
  0x0000000115eaafa8: jmpq   *(%r10,%rbx,8)
  0x0000000115eaafac: nopl   0x0(%rax)
  0x0000000115eaafb0: add    %al,(%rax)
  0x0000000115eaafb2: add    %al,(%rax)
  0x0000000115eaafb4: add    %al,(%rax)
  0x0000000115eaafb6: add    %al,(%rax)
  0x0000000115eaafb8: add    %al,(%rax)
  0x0000000115eaafba: add    %al,(%rax)
  0x0000000115eaafbc: add    %al,(%rax)
  0x0000000115eaafbe: add    %al,(%rax)

----------------------------------------------------------------------
fload_3  37 fload_3  [0x0000000115eaafe0, 0x0000000115eab040]  96 bytes

  0x0000000115eaafe0: push   %rax
  0x0000000115eaafe1: jmpq   0x0000000115eab010
  0x0000000115eaafe6: sub    $0x8,%rsp
  0x0000000115eaafea: vmovss %xmm0,(%rsp)
  0x0000000115eaafef: jmpq   0x0000000115eab010
  0x0000000115eaaff4: sub    $0x10,%rsp
  0x0000000115eaaff8: vmovsd %xmm0,(%rsp)
  0x0000000115eaaffd: jmpq   0x0000000115eab010
  0x0000000115eab002: sub    $0x10,%rsp
  0x0000000115eab006: mov    %rax,(%rsp)
  0x0000000115eab00a: jmpq   0x0000000115eab010
  0x0000000115eab00f: push   %rax
  0x0000000115eab010: vmovss -0x18(%r14),%xmm0
  0x0000000115eab016: movzbl 0x1(%r13),%ebx
  0x0000000115eab01b: inc    %r13
  0x0000000115eab01e: movabs $0x10e100040,%r10
  0x0000000115eab028: jmpq   *(%r10,%rbx,8)
  0x0000000115eab02c: nopl   0x0(%rax)
  0x0000000115eab030: add    %al,(%rax)
  0x0000000115eab032: add    %al,(%rax)
  0x0000000115eab034: add    %al,(%rax)
  0x0000000115eab036: add    %al,(%rax)
  0x0000000115eab038: add    %al,(%rax)
  0x0000000115eab03a: add    %al,(%rax)
  0x0000000115eab03c: add    %al,(%rax)
  0x0000000115eab03e: add    %al,(%rax)

----------------------------------------------------------------------
dload_0  38 dload_0  [0x0000000115eab060, 0x0000000115eab0c0]  96 bytes

  0x0000000115eab060: push   %rax
  0x0000000115eab061: jmpq   0x0000000115eab090
  0x0000000115eab066: sub    $0x8,%rsp
  0x0000000115eab06a: vmovss %xmm0,(%rsp)
  0x0000000115eab06f: jmpq   0x0000000115eab090
  0x0000000115eab074: sub    $0x10,%rsp
  0x0000000115eab078: vmovsd %xmm0,(%rsp)
  0x0000000115eab07d: jmpq   0x0000000115eab090
  0x0000000115eab082: sub    $0x10,%rsp
  0x0000000115eab086: mov    %rax,(%rsp)
  0x0000000115eab08a: jmpq   0x0000000115eab090
  0x0000000115eab08f: push   %rax
  0x0000000115eab090: vmovsd -0x8(%r14),%xmm0
  0x0000000115eab096: movzbl 0x1(%r13),%ebx
  0x0000000115eab09b: inc    %r13
  0x0000000115eab09e: movabs $0x10e100840,%r10
  0x0000000115eab0a8: jmpq   *(%r10,%rbx,8)
  0x0000000115eab0ac: nopl   0x0(%rax)
  0x0000000115eab0b0: add    %al,(%rax)
  0x0000000115eab0b2: add    %al,(%rax)
  0x0000000115eab0b4: add    %al,(%rax)
  0x0000000115eab0b6: add    %al,(%rax)
  0x0000000115eab0b8: add    %al,(%rax)
  0x0000000115eab0ba: add    %al,(%rax)
  0x0000000115eab0bc: add    %al,(%rax)
  0x0000000115eab0be: add    %al,(%rax)

----------------------------------------------------------------------
dload_1  39 dload_1  [0x0000000115eab0e0, 0x0000000115eab140]  96 bytes

  0x0000000115eab0e0: push   %rax
  0x0000000115eab0e1: jmpq   0x0000000115eab110
  0x0000000115eab0e6: sub    $0x8,%rsp
  0x0000000115eab0ea: vmovss %xmm0,(%rsp)
  0x0000000115eab0ef: jmpq   0x0000000115eab110
  0x0000000115eab0f4: sub    $0x10,%rsp
  0x0000000115eab0f8: vmovsd %xmm0,(%rsp)
  0x0000000115eab0fd: jmpq   0x0000000115eab110
  0x0000000115eab102: sub    $0x10,%rsp
  0x0000000115eab106: mov    %rax,(%rsp)
  0x0000000115eab10a: jmpq   0x0000000115eab110
  0x0000000115eab10f: push   %rax
  0x0000000115eab110: vmovsd -0x10(%r14),%xmm0
  0x0000000115eab116: movzbl 0x1(%r13),%ebx
  0x0000000115eab11b: inc    %r13
  0x0000000115eab11e: movabs $0x10e100840,%r10
  0x0000000115eab128: jmpq   *(%r10,%rbx,8)
  0x0000000115eab12c: nopl   0x0(%rax)
  0x0000000115eab130: add    %al,(%rax)
  0x0000000115eab132: add    %al,(%rax)
  0x0000000115eab134: add    %al,(%rax)
  0x0000000115eab136: add    %al,(%rax)
  0x0000000115eab138: add    %al,(%rax)
  0x0000000115eab13a: add    %al,(%rax)
  0x0000000115eab13c: add    %al,(%rax)
  0x0000000115eab13e: add    %al,(%rax)

----------------------------------------------------------------------
dload_2  40 dload_2  [0x0000000115eab160, 0x0000000115eab1c0]  96 bytes

  0x0000000115eab160: push   %rax
  0x0000000115eab161: jmpq   0x0000000115eab190
  0x0000000115eab166: sub    $0x8,%rsp
  0x0000000115eab16a: vmovss %xmm0,(%rsp)
  0x0000000115eab16f: jmpq   0x0000000115eab190
  0x0000000115eab174: sub    $0x10,%rsp
  0x0000000115eab178: vmovsd %xmm0,(%rsp)
  0x0000000115eab17d: jmpq   0x0000000115eab190
  0x0000000115eab182: sub    $0x10,%rsp
  0x0000000115eab186: mov    %rax,(%rsp)
  0x0000000115eab18a: jmpq   0x0000000115eab190
  0x0000000115eab18f: push   %rax
  0x0000000115eab190: vmovsd -0x18(%r14),%xmm0
  0x0000000115eab196: movzbl 0x1(%r13),%ebx
  0x0000000115eab19b: inc    %r13
  0x0000000115eab19e: movabs $0x10e100840,%r10
  0x0000000115eab1a8: jmpq   *(%r10,%rbx,8)
  0x0000000115eab1ac: nopl   0x0(%rax)
  0x0000000115eab1b0: add    %al,(%rax)
  0x0000000115eab1b2: add    %al,(%rax)
  0x0000000115eab1b4: add    %al,(%rax)
  0x0000000115eab1b6: add    %al,(%rax)
  0x0000000115eab1b8: add    %al,(%rax)
  0x0000000115eab1ba: add    %al,(%rax)
  0x0000000115eab1bc: add    %al,(%rax)
  0x0000000115eab1be: add    %al,(%rax)

----------------------------------------------------------------------
dload_3  41 dload_3  [0x0000000115eab1e0, 0x0000000115eab240]  96 bytes

  0x0000000115eab1e0: push   %rax
  0x0000000115eab1e1: jmpq   0x0000000115eab210
  0x0000000115eab1e6: sub    $0x8,%rsp
  0x0000000115eab1ea: vmovss %xmm0,(%rsp)
  0x0000000115eab1ef: jmpq   0x0000000115eab210
  0x0000000115eab1f4: sub    $0x10,%rsp
  0x0000000115eab1f8: vmovsd %xmm0,(%rsp)
  0x0000000115eab1fd: jmpq   0x0000000115eab210
  0x0000000115eab202: sub    $0x10,%rsp
  0x0000000115eab206: mov    %rax,(%rsp)
  0x0000000115eab20a: jmpq   0x0000000115eab210
  0x0000000115eab20f: push   %rax
  0x0000000115eab210: vmovsd -0x20(%r14),%xmm0
  0x0000000115eab216: movzbl 0x1(%r13),%ebx
  0x0000000115eab21b: inc    %r13
  0x0000000115eab21e: movabs $0x10e100840,%r10
  0x0000000115eab228: jmpq   *(%r10,%rbx,8)
  0x0000000115eab22c: nopl   0x0(%rax)
  0x0000000115eab230: add    %al,(%rax)
  0x0000000115eab232: add    %al,(%rax)
  0x0000000115eab234: add    %al,(%rax)
  0x0000000115eab236: add    %al,(%rax)
  0x0000000115eab238: add    %al,(%rax)
  0x0000000115eab23a: add    %al,(%rax)
  0x0000000115eab23c: add    %al,(%rax)
  0x0000000115eab23e: add    %al,(%rax)

----------------------------------------------------------------------
aload_0  42 aload_0  [0x0000000115eab260, 0x0000000115eab300]  160 bytes

  0x0000000115eab260: push   %rax
  0x0000000115eab261: jmpq   0x0000000115eab290
  0x0000000115eab266: sub    $0x8,%rsp
  0x0000000115eab26a: vmovss %xmm0,(%rsp)
  0x0000000115eab26f: jmpq   0x0000000115eab290
  0x0000000115eab274: sub    $0x10,%rsp
  0x0000000115eab278: vmovsd %xmm0,(%rsp)
  0x0000000115eab27d: jmpq   0x0000000115eab290
  0x0000000115eab282: sub    $0x10,%rsp
  0x0000000115eab286: mov    %rax,(%rsp)
  0x0000000115eab28a: jmpq   0x0000000115eab290
  0x0000000115eab28f: push   %rax
  0x0000000115eab290: movzbl 0x1(%r13),%ebx
  0x0000000115eab295: mov    (%r14),%rax
  0x0000000115eab298: cmp    $0xb4,%ebx
  0x0000000115eab29e: je     0x0000000115eab2d4
  0x0000000115eab2a4: cmp    $0xd0,%ebx
  0x0000000115eab2aa: mov    $0xdd,%ecx
  0x0000000115eab2af: je     0x0000000115eab2d0
  0x0000000115eab2b1: cmp    $0xcb,%ebx
  0x0000000115eab2b7: mov    $0xde,%ecx
  0x0000000115eab2bc: je     0x0000000115eab2d0
  0x0000000115eab2be: cmp    $0xcf,%ebx
  0x0000000115eab2c4: mov    $0xdf,%ecx
  0x0000000115eab2c9: je     0x0000000115eab2d0
  0x0000000115eab2cb: mov    $0xdc,%ecx
  0x0000000115eab2d0: mov    %cl,0x0(%r13)
  0x0000000115eab2d4: movzbl 0x1(%r13),%ebx
  0x0000000115eab2d9: inc    %r13
  0x0000000115eab2dc: movabs $0x10e101040,%r10
  0x0000000115eab2e6: jmpq   *(%r10,%rbx,8)
  0x0000000115eab2ea: nopw   0x0(%rax,%rax,1)
  0x0000000115eab2f0: add    %al,(%rax)
  0x0000000115eab2f2: add    %al,(%rax)
  0x0000000115eab2f4: add    %al,(%rax)
  0x0000000115eab2f6: add    %al,(%rax)
  0x0000000115eab2f8: add    %al,(%rax)
  0x0000000115eab2fa: add    %al,(%rax)
  0x0000000115eab2fc: add    %al,(%rax)
  0x0000000115eab2fe: add    %al,(%rax)

----------------------------------------------------------------------
aload_1  43 aload_1  [0x0000000115eab320, 0x0000000115eab380]  96 bytes

  0x0000000115eab320: push   %rax
  0x0000000115eab321: jmpq   0x0000000115eab350
  0x0000000115eab326: sub    $0x8,%rsp
  0x0000000115eab32a: vmovss %xmm0,(%rsp)
  0x0000000115eab32f: jmpq   0x0000000115eab350
  0x0000000115eab334: sub    $0x10,%rsp
  0x0000000115eab338: vmovsd %xmm0,(%rsp)
  0x0000000115eab33d: jmpq   0x0000000115eab350
  0x0000000115eab342: sub    $0x10,%rsp
  0x0000000115eab346: mov    %rax,(%rsp)
  0x0000000115eab34a: jmpq   0x0000000115eab350
  0x0000000115eab34f: push   %rax
  0x0000000115eab350: mov    -0x8(%r14),%rax
  0x0000000115eab354: movzbl 0x1(%r13),%ebx
  0x0000000115eab359: inc    %r13
  0x0000000115eab35c: movabs $0x10e101040,%r10
  0x0000000115eab366: jmpq   *(%r10,%rbx,8)
  0x0000000115eab36a: nopw   0x0(%rax,%rax,1)
  0x0000000115eab370: add    %al,(%rax)
  0x0000000115eab372: add    %al,(%rax)
  0x0000000115eab374: add    %al,(%rax)
  0x0000000115eab376: add    %al,(%rax)
  0x0000000115eab378: add    %al,(%rax)
  0x0000000115eab37a: add    %al,(%rax)
  0x0000000115eab37c: add    %al,(%rax)
  0x0000000115eab37e: add    %al,(%rax)

----------------------------------------------------------------------
aload_2  44 aload_2  [0x0000000115eab3a0, 0x0000000115eab400]  96 bytes

  0x0000000115eab3a0: push   %rax
  0x0000000115eab3a1: jmpq   0x0000000115eab3d0
  0x0000000115eab3a6: sub    $0x8,%rsp
  0x0000000115eab3aa: vmovss %xmm0,(%rsp)
  0x0000000115eab3af: jmpq   0x0000000115eab3d0
  0x0000000115eab3b4: sub    $0x10,%rsp
  0x0000000115eab3b8: vmovsd %xmm0,(%rsp)
  0x0000000115eab3bd: jmpq   0x0000000115eab3d0
  0x0000000115eab3c2: sub    $0x10,%rsp
  0x0000000115eab3c6: mov    %rax,(%rsp)
  0x0000000115eab3ca: jmpq   0x0000000115eab3d0
  0x0000000115eab3cf: push   %rax
  0x0000000115eab3d0: mov    -0x10(%r14),%rax
  0x0000000115eab3d4: movzbl 0x1(%r13),%ebx
  0x0000000115eab3d9: inc    %r13
  0x0000000115eab3dc: movabs $0x10e101040,%r10
  0x0000000115eab3e6: jmpq   *(%r10,%rbx,8)
  0x0000000115eab3ea: nopw   0x0(%rax,%rax,1)
  0x0000000115eab3f0: add    %al,(%rax)
  0x0000000115eab3f2: add    %al,(%rax)
  0x0000000115eab3f4: add    %al,(%rax)
  0x0000000115eab3f6: add    %al,(%rax)
  0x0000000115eab3f8: add    %al,(%rax)
  0x0000000115eab3fa: add    %al,(%rax)
  0x0000000115eab3fc: add    %al,(%rax)
  0x0000000115eab3fe: add    %al,(%rax)

----------------------------------------------------------------------
aload_3  45 aload_3  [0x0000000115eab420, 0x0000000115eab480]  96 bytes

  0x0000000115eab420: push   %rax
  0x0000000115eab421: jmpq   0x0000000115eab450
  0x0000000115eab426: sub    $0x8,%rsp
  0x0000000115eab42a: vmovss %xmm0,(%rsp)
  0x0000000115eab42f: jmpq   0x0000000115eab450
  0x0000000115eab434: sub    $0x10,%rsp
  0x0000000115eab438: vmovsd %xmm0,(%rsp)
  0x0000000115eab43d: jmpq   0x0000000115eab450
  0x0000000115eab442: sub    $0x10,%rsp
  0x0000000115eab446: mov    %rax,(%rsp)
  0x0000000115eab44a: jmpq   0x0000000115eab450
  0x0000000115eab44f: push   %rax
  0x0000000115eab450: mov    -0x18(%r14),%rax
  0x0000000115eab454: movzbl 0x1(%r13),%ebx
  0x0000000115eab459: inc    %r13
  0x0000000115eab45c: movabs $0x10e101040,%r10
  0x0000000115eab466: jmpq   *(%r10,%rbx,8)
  0x0000000115eab46a: nopw   0x0(%rax,%rax,1)
  0x0000000115eab470: add    %al,(%rax)
  0x0000000115eab472: add    %al,(%rax)
  0x0000000115eab474: add    %al,(%rax)
  0x0000000115eab476: add    %al,(%rax)
  0x0000000115eab478: add    %al,(%rax)
  0x0000000115eab47a: add    %al,(%rax)
  0x0000000115eab47c: add    %al,(%rax)
  0x0000000115eab47e: add    %al,(%rax)

----------------------------------------------------------------------
iaload  46 iaload  [0x0000000115eab4a0, 0x0000000115eab4e0]  64 bytes

  0x0000000115eab4a0: mov    (%rsp),%eax
  0x0000000115eab4a3: add    $0x8,%rsp
  0x0000000115eab4a7: pop    %rdx
  0x0000000115eab4a8: movslq %eax,%rax
  0x0000000115eab4ab: cmp    0xc(%rdx),%eax
  0x0000000115eab4ae: mov    %eax,%ebx
  0x0000000115eab4b0: jae    0x0000000115ea3840
  0x0000000115eab4b6: mov    0x10(%rdx,%rax,4),%eax
  0x0000000115eab4ba: movzbl 0x1(%r13),%ebx
  0x0000000115eab4bf: inc    %r13
  0x0000000115eab4c2: movabs $0x10e0ff040,%r10
  0x0000000115eab4cc: jmpq   *(%r10,%rbx,8)
  0x0000000115eab4d0: add    %al,(%rax)
  0x0000000115eab4d2: add    %al,(%rax)
  0x0000000115eab4d4: add    %al,(%rax)
  0x0000000115eab4d6: add    %al,(%rax)
  0x0000000115eab4d8: add    %al,(%rax)
  0x0000000115eab4da: add    %al,(%rax)
  0x0000000115eab4dc: add    %al,(%rax)
  0x0000000115eab4de: add    %al,(%rax)

----------------------------------------------------------------------
laload  47 laload  [0x0000000115eab500, 0x0000000115eab540]  64 bytes

  0x0000000115eab500: mov    (%rsp),%eax
  0x0000000115eab503: add    $0x8,%rsp
  0x0000000115eab507: pop    %rdx
  0x0000000115eab508: movslq %eax,%rax
  0x0000000115eab50b: cmp    0xc(%rdx),%eax
  0x0000000115eab50e: mov    %eax,%ebx
  0x0000000115eab510: jae    0x0000000115ea3840
  0x0000000115eab516: mov    0x10(%rdx,%rbx,8),%rax
  0x0000000115eab51b: movzbl 0x1(%r13),%ebx
  0x0000000115eab520: inc    %r13
  0x0000000115eab523: movabs $0x10e0ff840,%r10
  0x0000000115eab52d: jmpq   *(%r10,%rbx,8)
  0x0000000115eab531: nopl   0x0(%rax)
  0x0000000115eab538: add    %al,(%rax)
  0x0000000115eab53a: add    %al,(%rax)
  0x0000000115eab53c: add    %al,(%rax)
  0x0000000115eab53e: add    %al,(%rax)

----------------------------------------------------------------------
faload  48 faload  [0x0000000115eab560, 0x0000000115eab5a0]  64 bytes

  0x0000000115eab560: mov    (%rsp),%eax
  0x0000000115eab563: add    $0x8,%rsp
  0x0000000115eab567: pop    %rdx
  0x0000000115eab568: movslq %eax,%rax
  0x0000000115eab56b: cmp    0xc(%rdx),%eax
  0x0000000115eab56e: mov    %eax,%ebx
  0x0000000115eab570: jae    0x0000000115ea3840
  0x0000000115eab576: vmovss 0x10(%rdx,%rax,4),%xmm0
  0x0000000115eab57c: movzbl 0x1(%r13),%ebx
  0x0000000115eab581: inc    %r13
  0x0000000115eab584: movabs $0x10e100040,%r10
  0x0000000115eab58e: jmpq   *(%r10,%rbx,8)
  0x0000000115eab592: nopw   0x0(%rax,%rax,1)
  0x0000000115eab598: add    %al,(%rax)
  0x0000000115eab59a: add    %al,(%rax)
  0x0000000115eab59c: add    %al,(%rax)
  0x0000000115eab59e: add    %al,(%rax)

----------------------------------------------------------------------
daload  49 daload  [0x0000000115eab5c0, 0x0000000115eab600]  64 bytes

  0x0000000115eab5c0: mov    (%rsp),%eax
  0x0000000115eab5c3: add    $0x8,%rsp
  0x0000000115eab5c7: pop    %rdx
  0x0000000115eab5c8: movslq %eax,%rax
  0x0000000115eab5cb: cmp    0xc(%rdx),%eax
  0x0000000115eab5ce: mov    %eax,%ebx
  0x0000000115eab5d0: jae    0x0000000115ea3840
  0x0000000115eab5d6: vmovsd 0x10(%rdx,%rax,8),%xmm0
  0x0000000115eab5dc: movzbl 0x1(%r13),%ebx
  0x0000000115eab5e1: inc    %r13
  0x0000000115eab5e4: movabs $0x10e100840,%r10
  0x0000000115eab5ee: jmpq   *(%r10,%rbx,8)
  0x0000000115eab5f2: nopw   0x0(%rax,%rax,1)
  0x0000000115eab5f8: add    %al,(%rax)
  0x0000000115eab5fa: add    %al,(%rax)
  0x0000000115eab5fc: add    %al,(%rax)
  0x0000000115eab5fe: add    %al,(%rax)

----------------------------------------------------------------------
aaload  50 aaload  [0x0000000115eab620, 0x0000000115eab660]  64 bytes

  0x0000000115eab620: mov    (%rsp),%eax
  0x0000000115eab623: add    $0x8,%rsp
  0x0000000115eab627: pop    %rdx
  0x0000000115eab628: movslq %eax,%rax
  0x0000000115eab62b: cmp    0xc(%rdx),%eax
  0x0000000115eab62e: mov    %eax,%ebx
  0x0000000115eab630: jae    0x0000000115ea3840
  0x0000000115eab636: mov    0x10(%rdx,%rax,4),%eax
  0x0000000115eab63a: shl    $0x3,%rax
  0x0000000115eab63e: movzbl 0x1(%r13),%ebx
  0x0000000115eab643: inc    %r13
  0x0000000115eab646: movabs $0x10e101040,%r10
  0x0000000115eab650: jmpq   *(%r10,%rbx,8)
  0x0000000115eab654: nopl   0x0(%rax)
  0x0000000115eab658: add    %al,(%rax)
  0x0000000115eab65a: add    %al,(%rax)
  0x0000000115eab65c: add    %al,(%rax)
  0x0000000115eab65e: add    %al,(%rax)

----------------------------------------------------------------------
baload  51 baload  [0x0000000115eab680, 0x0000000115eab6c0]  64 bytes

  0x0000000115eab680: mov    (%rsp),%eax
  0x0000000115eab683: add    $0x8,%rsp
  0x0000000115eab687: pop    %rdx
  0x0000000115eab688: movslq %eax,%rax
  0x0000000115eab68b: cmp    0xc(%rdx),%eax
  0x0000000115eab68e: mov    %eax,%ebx
  0x0000000115eab690: jae    0x0000000115ea3840
  0x0000000115eab696: movsbl 0x10(%rdx,%rax,1),%eax
  0x0000000115eab69b: movzbl 0x1(%r13),%ebx
  0x0000000115eab6a0: inc    %r13
  0x0000000115eab6a3: movabs $0x10e0ff040,%r10
  0x0000000115eab6ad: jmpq   *(%r10,%rbx,8)
  0x0000000115eab6b1: nopl   0x0(%rax)
  0x0000000115eab6b8: add    %al,(%rax)
  0x0000000115eab6ba: add    %al,(%rax)
  0x0000000115eab6bc: add    %al,(%rax)
  0x0000000115eab6be: add    %al,(%rax)

----------------------------------------------------------------------
caload  52 caload  [0x0000000115eab6e0, 0x0000000115eab720]  64 bytes

  0x0000000115eab6e0: mov    (%rsp),%eax
  0x0000000115eab6e3: add    $0x8,%rsp
  0x0000000115eab6e7: pop    %rdx
  0x0000000115eab6e8: movslq %eax,%rax
  0x0000000115eab6eb: cmp    0xc(%rdx),%eax
  0x0000000115eab6ee: mov    %eax,%ebx
  0x0000000115eab6f0: jae    0x0000000115ea3840
  0x0000000115eab6f6: movzwl 0x10(%rdx,%rax,2),%eax
  0x0000000115eab6fb: movzbl 0x1(%r13),%ebx
  0x0000000115eab700: inc    %r13
  0x0000000115eab703: movabs $0x10e0ff040,%r10
  0x0000000115eab70d: jmpq   *(%r10,%rbx,8)
  0x0000000115eab711: nopl   0x0(%rax)
  0x0000000115eab718: add    %al,(%rax)
  0x0000000115eab71a: add    %al,(%rax)
  0x0000000115eab71c: add    %al,(%rax)
  0x0000000115eab71e: add    %al,(%rax)

----------------------------------------------------------------------
saload  53 saload  [0x0000000115eab740, 0x0000000115eab780]  64 bytes

  0x0000000115eab740: mov    (%rsp),%eax
  0x0000000115eab743: add    $0x8,%rsp
  0x0000000115eab747: pop    %rdx
  0x0000000115eab748: movslq %eax,%rax
  0x0000000115eab74b: cmp    0xc(%rdx),%eax
  0x0000000115eab74e: mov    %eax,%ebx
  0x0000000115eab750: jae    0x0000000115ea3840
  0x0000000115eab756: movswl 0x10(%rdx,%rax,2),%eax
  0x0000000115eab75b: movzbl 0x1(%r13),%ebx
  0x0000000115eab760: inc    %r13
  0x0000000115eab763: movabs $0x10e0ff040,%r10
  0x0000000115eab76d: jmpq   *(%r10,%rbx,8)
  0x0000000115eab771: nopl   0x0(%rax)
  0x0000000115eab778: add    %al,(%rax)
  0x0000000115eab77a: add    %al,(%rax)
  0x0000000115eab77c: add    %al,(%rax)
  0x0000000115eab77e: add    %al,(%rax)

----------------------------------------------------------------------
istore  54 istore  [0x0000000115eab7a0, 0x0000000115eab800]  96 bytes

  0x0000000115eab7a0: mov    (%rsp),%eax
  0x0000000115eab7a3: add    $0x8,%rsp
  0x0000000115eab7a7: movzbl 0x1(%r13),%ebx
  0x0000000115eab7ac: neg    %rbx
  0x0000000115eab7af: mov    %eax,(%r14,%rbx,8)
  0x0000000115eab7b3: movzbl 0x2(%r13),%ebx
  0x0000000115eab7b8: add    $0x2,%r13
  0x0000000115eab7bc: movabs $0x10e101840,%r10
  0x0000000115eab7c6: jmpq   *(%r10,%rbx,8)
  0x0000000115eab7ca: mov    (%rsp),%eax
  0x0000000115eab7cd: add    $0x8,%rsp
  0x0000000115eab7d1: movzwl 0x2(%r13),%ebx
  0x0000000115eab7d6: bswap  %ebx
  0x0000000115eab7d8: shr    $0x10,%ebx
  0x0000000115eab7db: neg    %rbx
  0x0000000115eab7de: mov    %eax,(%r14,%rbx,8)
  0x0000000115eab7e2: movzbl 0x4(%r13),%ebx
  0x0000000115eab7e7: add    $0x4,%r13
  0x0000000115eab7eb: movabs $0x10e101840,%r10
  0x0000000115eab7f5: jmpq   *(%r10,%rbx,8)
  0x0000000115eab7f9: nopl   0x0(%rax)

----------------------------------------------------------------------
lstore  55 lstore  [0x0000000115eab820, 0x0000000115eab880]  96 bytes

  0x0000000115eab820: mov    (%rsp),%rax
  0x0000000115eab824: add    $0x10,%rsp
  0x0000000115eab828: movzbl 0x1(%r13),%ebx
  0x0000000115eab82d: neg    %rbx
  0x0000000115eab830: mov    %rax,-0x8(%r14,%rbx,8)
  0x0000000115eab835: movzbl 0x2(%r13),%ebx
  0x0000000115eab83a: add    $0x2,%r13
  0x0000000115eab83e: movabs $0x10e101840,%r10
  0x0000000115eab848: jmpq   *(%r10,%rbx,8)
  0x0000000115eab84c: mov    (%rsp),%rax
  0x0000000115eab850: add    $0x10,%rsp
  0x0000000115eab854: movzwl 0x2(%r13),%ebx
  0x0000000115eab859: bswap  %ebx
  0x0000000115eab85b: shr    $0x10,%ebx
  0x0000000115eab85e: neg    %rbx
  0x0000000115eab861: mov    %rax,-0x8(%r14,%rbx,8)
  0x0000000115eab866: movzbl 0x4(%r13),%ebx
  0x0000000115eab86b: add    $0x4,%r13
  0x0000000115eab86f: movabs $0x10e101840,%r10
  0x0000000115eab879: jmpq   *(%r10,%rbx,8)
  0x0000000115eab87d: data32 xchg %ax,%ax

----------------------------------------------------------------------
fstore  56 fstore  [0x0000000115eab8a0, 0x0000000115eab920]  128 bytes

  0x0000000115eab8a0: vmovss (%rsp),%xmm0
  0x0000000115eab8a5: add    $0x8,%rsp
  0x0000000115eab8a9: movzbl 0x1(%r13),%ebx
  0x0000000115eab8ae: neg    %rbx
  0x0000000115eab8b1: vmovss %xmm0,(%r14,%rbx,8)
  0x0000000115eab8b7: movzbl 0x2(%r13),%ebx
  0x0000000115eab8bc: add    $0x2,%r13
  0x0000000115eab8c0: movabs $0x10e101840,%r10
  0x0000000115eab8ca: jmpq   *(%r10,%rbx,8)
  0x0000000115eab8ce: vmovss (%rsp),%xmm0
  0x0000000115eab8d3: add    $0x8,%rsp
  0x0000000115eab8d7: movzwl 0x2(%r13),%ebx
  0x0000000115eab8dc: bswap  %ebx
  0x0000000115eab8de: shr    $0x10,%ebx
  0x0000000115eab8e1: neg    %rbx
  0x0000000115eab8e4: vmovss %xmm0,(%r14,%rbx,8)
  0x0000000115eab8ea: movzbl 0x4(%r13),%ebx
  0x0000000115eab8ef: add    $0x4,%r13
  0x0000000115eab8f3: movabs $0x10e101840,%r10
  0x0000000115eab8fd: jmpq   *(%r10,%rbx,8)
  0x0000000115eab901: nopl   0x0(%rax)
  0x0000000115eab908: add    %al,(%rax)
  0x0000000115eab90a: add    %al,(%rax)
  0x0000000115eab90c: add    %al,(%rax)
  0x0000000115eab90e: add    %al,(%rax)
  0x0000000115eab910: add    %al,(%rax)
  0x0000000115eab912: add    %al,(%rax)
  0x0000000115eab914: add    %al,(%rax)
  0x0000000115eab916: add    %al,(%rax)
  0x0000000115eab918: add    %al,(%rax)
  0x0000000115eab91a: add    %al,(%rax)
  0x0000000115eab91c: add    %al,(%rax)
  0x0000000115eab91e: add    %al,(%rax)

----------------------------------------------------------------------
dstore  57 dstore  [0x0000000115eab940, 0x0000000115eab9c0]  128 bytes

  0x0000000115eab940: vmovsd (%rsp),%xmm0
  0x0000000115eab945: add    $0x10,%rsp
  0x0000000115eab949: movzbl 0x1(%r13),%ebx
  0x0000000115eab94e: neg    %rbx
  0x0000000115eab951: vmovsd %xmm0,-0x8(%r14,%rbx,8)
  0x0000000115eab958: movzbl 0x2(%r13),%ebx
  0x0000000115eab95d: add    $0x2,%r13
  0x0000000115eab961: movabs $0x10e101840,%r10
  0x0000000115eab96b: jmpq   *(%r10,%rbx,8)
  0x0000000115eab96f: vmovsd (%rsp),%xmm0
  0x0000000115eab974: add    $0x10,%rsp
  0x0000000115eab978: movzwl 0x2(%r13),%ebx
  0x0000000115eab97d: bswap  %ebx
  0x0000000115eab97f: shr    $0x10,%ebx
  0x0000000115eab982: neg    %rbx
  0x0000000115eab985: vmovsd %xmm0,-0x8(%r14,%rbx,8)
  0x0000000115eab98c: movzbl 0x4(%r13),%ebx
  0x0000000115eab991: add    $0x4,%r13
  0x0000000115eab995: movabs $0x10e101840,%r10
  0x0000000115eab99f: jmpq   *(%r10,%rbx,8)
  0x0000000115eab9a3: nopl   0x0(%rax,%rax,1)
  0x0000000115eab9a8: add    %al,(%rax)
  0x0000000115eab9aa: add    %al,(%rax)
  0x0000000115eab9ac: add    %al,(%rax)
  0x0000000115eab9ae: add    %al,(%rax)
  0x0000000115eab9b0: add    %al,(%rax)
  0x0000000115eab9b2: add    %al,(%rax)
  0x0000000115eab9b4: add    %al,(%rax)
  0x0000000115eab9b6: add    %al,(%rax)
  0x0000000115eab9b8: add    %al,(%rax)
  0x0000000115eab9ba: add    %al,(%rax)
  0x0000000115eab9bc: add    %al,(%rax)
  0x0000000115eab9be: add    %al,(%rax)

----------------------------------------------------------------------
astore  58 astore  [0x0000000115eab9e0, 0x0000000115eaba60]  128 bytes

  0x0000000115eab9e0: push   %rax
  0x0000000115eab9e1: jmpq   0x0000000115eaba10
  0x0000000115eab9e6: sub    $0x8,%rsp
  0x0000000115eab9ea: vmovss %xmm0,(%rsp)
  0x0000000115eab9ef: jmpq   0x0000000115eaba10
  0x0000000115eab9f4: sub    $0x10,%rsp
  0x0000000115eab9f8: vmovsd %xmm0,(%rsp)
  0x0000000115eab9fd: jmpq   0x0000000115eaba10
  0x0000000115eaba02: sub    $0x10,%rsp
  0x0000000115eaba06: mov    %rax,(%rsp)
  0x0000000115eaba0a: jmpq   0x0000000115eaba10
  0x0000000115eaba0f: push   %rax
  0x0000000115eaba10: pop    %rax
  0x0000000115eaba11: movzbl 0x1(%r13),%ebx
  0x0000000115eaba16: neg    %rbx
  0x0000000115eaba19: mov    %rax,(%r14,%rbx,8)
  0x0000000115eaba1d: movzbl 0x2(%r13),%ebx
  0x0000000115eaba22: add    $0x2,%r13
  0x0000000115eaba26: movabs $0x10e101840,%r10
  0x0000000115eaba30: jmpq   *(%r10,%rbx,8)
  0x0000000115eaba34: pop    %rax
  0x0000000115eaba35: movzwl 0x2(%r13),%ebx
  0x0000000115eaba3a: bswap  %ebx
  0x0000000115eaba3c: shr    $0x10,%ebx
  0x0000000115eaba3f: neg    %rbx
  0x0000000115eaba42: mov    %rax,(%r14,%rbx,8)
  0x0000000115eaba46: movzbl 0x4(%r13),%ebx
  0x0000000115eaba4b: add    $0x4,%r13
  0x0000000115eaba4f: movabs $0x10e101840,%r10
  0x0000000115eaba59: jmpq   *(%r10,%rbx,8)
  0x0000000115eaba5d: data32 xchg %ax,%ax

----------------------------------------------------------------------
istore_0  59 istore_0  [0x0000000115eaba80, 0x0000000115eabaa0]  32 bytes

  0x0000000115eaba80: mov    (%rsp),%eax
  0x0000000115eaba83: add    $0x8,%rsp
  0x0000000115eaba87: mov    %eax,(%r14)
  0x0000000115eaba8a: movzbl 0x1(%r13),%ebx
  0x0000000115eaba8f: inc    %r13
  0x0000000115eaba92: movabs $0x10e101840,%r10
  0x0000000115eaba9c: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
istore_1  60 istore_1  [0x0000000115eabac0, 0x0000000115eabb00]  64 bytes

  0x0000000115eabac0: mov    (%rsp),%eax
  0x0000000115eabac3: add    $0x8,%rsp
  0x0000000115eabac7: mov    %eax,-0x8(%r14)
  0x0000000115eabacb: movzbl 0x1(%r13),%ebx
  0x0000000115eabad0: inc    %r13
  0x0000000115eabad3: movabs $0x10e101840,%r10
  0x0000000115eabadd: jmpq   *(%r10,%rbx,8)
  0x0000000115eabae1: nopl   0x0(%rax)
  0x0000000115eabae8: add    %al,(%rax)
  0x0000000115eabaea: add    %al,(%rax)
  0x0000000115eabaec: add    %al,(%rax)
  0x0000000115eabaee: add    %al,(%rax)
  0x0000000115eabaf0: add    %al,(%rax)
  0x0000000115eabaf2: add    %al,(%rax)
  0x0000000115eabaf4: add    %al,(%rax)
  0x0000000115eabaf6: add    %al,(%rax)
  0x0000000115eabaf8: add    %al,(%rax)
  0x0000000115eabafa: add    %al,(%rax)
  0x0000000115eabafc: add    %al,(%rax)
  0x0000000115eabafe: add    %al,(%rax)

----------------------------------------------------------------------
istore_2  61 istore_2  [0x0000000115eabb20, 0x0000000115eabb60]  64 bytes

  0x0000000115eabb20: mov    (%rsp),%eax
  0x0000000115eabb23: add    $0x8,%rsp
  0x0000000115eabb27: mov    %eax,-0x10(%r14)
  0x0000000115eabb2b: movzbl 0x1(%r13),%ebx
  0x0000000115eabb30: inc    %r13
  0x0000000115eabb33: movabs $0x10e101840,%r10
  0x0000000115eabb3d: jmpq   *(%r10,%rbx,8)
  0x0000000115eabb41: nopl   0x0(%rax)
  0x0000000115eabb48: add    %al,(%rax)
  0x0000000115eabb4a: add    %al,(%rax)
  0x0000000115eabb4c: add    %al,(%rax)
  0x0000000115eabb4e: add    %al,(%rax)
  0x0000000115eabb50: add    %al,(%rax)
  0x0000000115eabb52: add    %al,(%rax)
  0x0000000115eabb54: add    %al,(%rax)
  0x0000000115eabb56: add    %al,(%rax)
  0x0000000115eabb58: add    %al,(%rax)
  0x0000000115eabb5a: add    %al,(%rax)
  0x0000000115eabb5c: add    %al,(%rax)
  0x0000000115eabb5e: add    %al,(%rax)

----------------------------------------------------------------------
istore_3  62 istore_3  [0x0000000115eabb80, 0x0000000115eabbc0]  64 bytes

  0x0000000115eabb80: mov    (%rsp),%eax
  0x0000000115eabb83: add    $0x8,%rsp
  0x0000000115eabb87: mov    %eax,-0x18(%r14)
  0x0000000115eabb8b: movzbl 0x1(%r13),%ebx
  0x0000000115eabb90: inc    %r13
  0x0000000115eabb93: movabs $0x10e101840,%r10
  0x0000000115eabb9d: jmpq   *(%r10,%rbx,8)
  0x0000000115eabba1: nopl   0x0(%rax)
  0x0000000115eabba8: add    %al,(%rax)
  0x0000000115eabbaa: add    %al,(%rax)
  0x0000000115eabbac: add    %al,(%rax)
  0x0000000115eabbae: add    %al,(%rax)
  0x0000000115eabbb0: add    %al,(%rax)
  0x0000000115eabbb2: add    %al,(%rax)
  0x0000000115eabbb4: add    %al,(%rax)
  0x0000000115eabbb6: add    %al,(%rax)
  0x0000000115eabbb8: add    %al,(%rax)
  0x0000000115eabbba: add    %al,(%rax)
  0x0000000115eabbbc: add    %al,(%rax)
  0x0000000115eabbbe: add    %al,(%rax)

----------------------------------------------------------------------
lstore_0  63 lstore_0  [0x0000000115eabbe0, 0x0000000115eabc20]  64 bytes

  0x0000000115eabbe0: mov    (%rsp),%rax
  0x0000000115eabbe4: add    $0x10,%rsp
  0x0000000115eabbe8: mov    %rax,-0x8(%r14)
  0x0000000115eabbec: movzbl 0x1(%r13),%ebx
  0x0000000115eabbf1: inc    %r13
  0x0000000115eabbf4: movabs $0x10e101840,%r10
  0x0000000115eabbfe: jmpq   *(%r10,%rbx,8)
  0x0000000115eabc02: nopw   0x0(%rax,%rax,1)
  0x0000000115eabc08: add    %al,(%rax)
  0x0000000115eabc0a: add    %al,(%rax)
  0x0000000115eabc0c: add    %al,(%rax)
  0x0000000115eabc0e: add    %al,(%rax)
  0x0000000115eabc10: add    %al,(%rax)
  0x0000000115eabc12: add    %al,(%rax)
  0x0000000115eabc14: add    %al,(%rax)
  0x0000000115eabc16: add    %al,(%rax)
  0x0000000115eabc18: add    %al,(%rax)
  0x0000000115eabc1a: add    %al,(%rax)
  0x0000000115eabc1c: add    %al,(%rax)
  0x0000000115eabc1e: add    %al,(%rax)

----------------------------------------------------------------------
lstore_1  64 lstore_1  [0x0000000115eabc40, 0x0000000115eabc80]  64 bytes

  0x0000000115eabc40: mov    (%rsp),%rax
  0x0000000115eabc44: add    $0x10,%rsp
  0x0000000115eabc48: mov    %rax,-0x10(%r14)
  0x0000000115eabc4c: movzbl 0x1(%r13),%ebx
  0x0000000115eabc51: inc    %r13
  0x0000000115eabc54: movabs $0x10e101840,%r10
  0x0000000115eabc5e: jmpq   *(%r10,%rbx,8)
  0x0000000115eabc62: nopw   0x0(%rax,%rax,1)
  0x0000000115eabc68: add    %al,(%rax)
  0x0000000115eabc6a: add    %al,(%rax)
  0x0000000115eabc6c: add    %al,(%rax)
  0x0000000115eabc6e: add    %al,(%rax)
  0x0000000115eabc70: add    %al,(%rax)
  0x0000000115eabc72: add    %al,(%rax)
  0x0000000115eabc74: add    %al,(%rax)
  0x0000000115eabc76: add    %al,(%rax)
  0x0000000115eabc78: add    %al,(%rax)
  0x0000000115eabc7a: add    %al,(%rax)
  0x0000000115eabc7c: add    %al,(%rax)
  0x0000000115eabc7e: add    %al,(%rax)

----------------------------------------------------------------------
lstore_2  65 lstore_2  [0x0000000115eabca0, 0x0000000115eabce0]  64 bytes

  0x0000000115eabca0: mov    (%rsp),%rax
  0x0000000115eabca4: add    $0x10,%rsp
  0x0000000115eabca8: mov    %rax,-0x18(%r14)
  0x0000000115eabcac: movzbl 0x1(%r13),%ebx
  0x0000000115eabcb1: inc    %r13
  0x0000000115eabcb4: movabs $0x10e101840,%r10
  0x0000000115eabcbe: jmpq   *(%r10,%rbx,8)
  0x0000000115eabcc2: nopw   0x0(%rax,%rax,1)
  0x0000000115eabcc8: add    %al,(%rax)
  0x0000000115eabcca: add    %al,(%rax)
  0x0000000115eabccc: add    %al,(%rax)
  0x0000000115eabcce: add    %al,(%rax)
  0x0000000115eabcd0: add    %al,(%rax)
  0x0000000115eabcd2: add    %al,(%rax)
  0x0000000115eabcd4: add    %al,(%rax)
  0x0000000115eabcd6: add    %al,(%rax)
  0x0000000115eabcd8: add    %al,(%rax)
  0x0000000115eabcda: add    %al,(%rax)
  0x0000000115eabcdc: add    %al,(%rax)
  0x0000000115eabcde: add    %al,(%rax)

----------------------------------------------------------------------
lstore_3  66 lstore_3  [0x0000000115eabd00, 0x0000000115eabd40]  64 bytes

  0x0000000115eabd00: mov    (%rsp),%rax
  0x0000000115eabd04: add    $0x10,%rsp
  0x0000000115eabd08: mov    %rax,-0x20(%r14)
  0x0000000115eabd0c: movzbl 0x1(%r13),%ebx
  0x0000000115eabd11: inc    %r13
  0x0000000115eabd14: movabs $0x10e101840,%r10
  0x0000000115eabd1e: jmpq   *(%r10,%rbx,8)
  0x0000000115eabd22: nopw   0x0(%rax,%rax,1)
  0x0000000115eabd28: add    %al,(%rax)
  0x0000000115eabd2a: add    %al,(%rax)
  0x0000000115eabd2c: add    %al,(%rax)
  0x0000000115eabd2e: add    %al,(%rax)
  0x0000000115eabd30: add    %al,(%rax)
  0x0000000115eabd32: add    %al,(%rax)
  0x0000000115eabd34: add    %al,(%rax)
  0x0000000115eabd36: add    %al,(%rax)
  0x0000000115eabd38: add    %al,(%rax)
  0x0000000115eabd3a: add    %al,(%rax)
  0x0000000115eabd3c: add    %al,(%rax)
  0x0000000115eabd3e: add    %al,(%rax)

----------------------------------------------------------------------
fstore_0  67 fstore_0  [0x0000000115eabd60, 0x0000000115eabda0]  64 bytes

  0x0000000115eabd60: vmovss (%rsp),%xmm0
  0x0000000115eabd65: add    $0x8,%rsp
  0x0000000115eabd69: vmovss %xmm0,(%r14)
  0x0000000115eabd6e: movzbl 0x1(%r13),%ebx
  0x0000000115eabd73: inc    %r13
  0x0000000115eabd76: movabs $0x10e101840,%r10
  0x0000000115eabd80: jmpq   *(%r10,%rbx,8)
  0x0000000115eabd84: nopl   0x0(%rax)
  0x0000000115eabd88: add    %al,(%rax)
  0x0000000115eabd8a: add    %al,(%rax)
  0x0000000115eabd8c: add    %al,(%rax)
  0x0000000115eabd8e: add    %al,(%rax)
  0x0000000115eabd90: add    %al,(%rax)
  0x0000000115eabd92: add    %al,(%rax)
  0x0000000115eabd94: add    %al,(%rax)
  0x0000000115eabd96: add    %al,(%rax)
  0x0000000115eabd98: add    %al,(%rax)
  0x0000000115eabd9a: add    %al,(%rax)
  0x0000000115eabd9c: add    %al,(%rax)
  0x0000000115eabd9e: add    %al,(%rax)

----------------------------------------------------------------------
fstore_1  68 fstore_1  [0x0000000115eabdc0, 0x0000000115eabe00]  64 bytes

  0x0000000115eabdc0: vmovss (%rsp),%xmm0
  0x0000000115eabdc5: add    $0x8,%rsp
  0x0000000115eabdc9: vmovss %xmm0,-0x8(%r14)
  0x0000000115eabdcf: movzbl 0x1(%r13),%ebx
  0x0000000115eabdd4: inc    %r13
  0x0000000115eabdd7: movabs $0x10e101840,%r10
  0x0000000115eabde1: jmpq   *(%r10,%rbx,8)
  0x0000000115eabde5: data32 xchg %ax,%ax
  0x0000000115eabde8: add    %al,(%rax)
  0x0000000115eabdea: add    %al,(%rax)
  0x0000000115eabdec: add    %al,(%rax)
  0x0000000115eabdee: add    %al,(%rax)
  0x0000000115eabdf0: add    %al,(%rax)
  0x0000000115eabdf2: add    %al,(%rax)
  0x0000000115eabdf4: add    %al,(%rax)
  0x0000000115eabdf6: add    %al,(%rax)
  0x0000000115eabdf8: add    %al,(%rax)
  0x0000000115eabdfa: add    %al,(%rax)
  0x0000000115eabdfc: add    %al,(%rax)
  0x0000000115eabdfe: add    %al,(%rax)

----------------------------------------------------------------------
fstore_2  69 fstore_2  [0x0000000115eabe20, 0x0000000115eabe60]  64 bytes

  0x0000000115eabe20: vmovss (%rsp),%xmm0
  0x0000000115eabe25: add    $0x8,%rsp
  0x0000000115eabe29: vmovss %xmm0,-0x10(%r14)
  0x0000000115eabe2f: movzbl 0x1(%r13),%ebx
  0x0000000115eabe34: inc    %r13
  0x0000000115eabe37: movabs $0x10e101840,%r10
  0x0000000115eabe41: jmpq   *(%r10,%rbx,8)
  0x0000000115eabe45: data32 xchg %ax,%ax
  0x0000000115eabe48: add    %al,(%rax)
  0x0000000115eabe4a: add    %al,(%rax)
  0x0000000115eabe4c: add    %al,(%rax)
  0x0000000115eabe4e: add    %al,(%rax)
  0x0000000115eabe50: add    %al,(%rax)
  0x0000000115eabe52: add    %al,(%rax)
  0x0000000115eabe54: add    %al,(%rax)
  0x0000000115eabe56: add    %al,(%rax)
  0x0000000115eabe58: add    %al,(%rax)
  0x0000000115eabe5a: add    %al,(%rax)
  0x0000000115eabe5c: add    %al,(%rax)
  0x0000000115eabe5e: add    %al,(%rax)

----------------------------------------------------------------------
fstore_3  70 fstore_3  [0x0000000115eabe80, 0x0000000115eabec0]  64 bytes

  0x0000000115eabe80: vmovss (%rsp),%xmm0
  0x0000000115eabe85: add    $0x8,%rsp
  0x0000000115eabe89: vmovss %xmm0,-0x18(%r14)
  0x0000000115eabe8f: movzbl 0x1(%r13),%ebx
  0x0000000115eabe94: inc    %r13
  0x0000000115eabe97: movabs $0x10e101840,%r10
  0x0000000115eabea1: jmpq   *(%r10,%rbx,8)
  0x0000000115eabea5: data32 xchg %ax,%ax
  0x0000000115eabea8: add    %al,(%rax)
  0x0000000115eabeaa: add    %al,(%rax)
  0x0000000115eabeac: add    %al,(%rax)
  0x0000000115eabeae: add    %al,(%rax)
  0x0000000115eabeb0: add    %al,(%rax)
  0x0000000115eabeb2: add    %al,(%rax)
  0x0000000115eabeb4: add    %al,(%rax)
  0x0000000115eabeb6: add    %al,(%rax)
  0x0000000115eabeb8: add    %al,(%rax)
  0x0000000115eabeba: add    %al,(%rax)
  0x0000000115eabebc: add    %al,(%rax)
  0x0000000115eabebe: add    %al,(%rax)

----------------------------------------------------------------------
dstore_0  71 dstore_0  [0x0000000115eabee0, 0x0000000115eabf20]  64 bytes

  0x0000000115eabee0: vmovsd (%rsp),%xmm0
  0x0000000115eabee5: add    $0x10,%rsp
  0x0000000115eabee9: vmovsd %xmm0,-0x8(%r14)
  0x0000000115eabeef: movzbl 0x1(%r13),%ebx
  0x0000000115eabef4: inc    %r13
  0x0000000115eabef7: movabs $0x10e101840,%r10
  0x0000000115eabf01: jmpq   *(%r10,%rbx,8)
  0x0000000115eabf05: data32 xchg %ax,%ax
  0x0000000115eabf08: add    %al,(%rax)
  0x0000000115eabf0a: add    %al,(%rax)
  0x0000000115eabf0c: add    %al,(%rax)
  0x0000000115eabf0e: add    %al,(%rax)
  0x0000000115eabf10: add    %al,(%rax)
  0x0000000115eabf12: add    %al,(%rax)
  0x0000000115eabf14: add    %al,(%rax)
  0x0000000115eabf16: add    %al,(%rax)
  0x0000000115eabf18: add    %al,(%rax)
  0x0000000115eabf1a: add    %al,(%rax)
  0x0000000115eabf1c: add    %al,(%rax)
  0x0000000115eabf1e: add    %al,(%rax)

----------------------------------------------------------------------
dstore_1  72 dstore_1  [0x0000000115eabf40, 0x0000000115eabf80]  64 bytes

  0x0000000115eabf40: vmovsd (%rsp),%xmm0
  0x0000000115eabf45: add    $0x10,%rsp
  0x0000000115eabf49: vmovsd %xmm0,-0x10(%r14)
  0x0000000115eabf4f: movzbl 0x1(%r13),%ebx
  0x0000000115eabf54: inc    %r13
  0x0000000115eabf57: movabs $0x10e101840,%r10
  0x0000000115eabf61: jmpq   *(%r10,%rbx,8)
  0x0000000115eabf65: data32 xchg %ax,%ax
  0x0000000115eabf68: add    %al,(%rax)
  0x0000000115eabf6a: add    %al,(%rax)
  0x0000000115eabf6c: add    %al,(%rax)
  0x0000000115eabf6e: add    %al,(%rax)
  0x0000000115eabf70: add    %al,(%rax)
  0x0000000115eabf72: add    %al,(%rax)
  0x0000000115eabf74: add    %al,(%rax)
  0x0000000115eabf76: add    %al,(%rax)
  0x0000000115eabf78: add    %al,(%rax)
  0x0000000115eabf7a: add    %al,(%rax)
  0x0000000115eabf7c: add    %al,(%rax)
  0x0000000115eabf7e: add    %al,(%rax)

----------------------------------------------------------------------
dstore_2  73 dstore_2  [0x0000000115eabfa0, 0x0000000115eabfe0]  64 bytes

  0x0000000115eabfa0: vmovsd (%rsp),%xmm0
  0x0000000115eabfa5: add    $0x10,%rsp
  0x0000000115eabfa9: vmovsd %xmm0,-0x18(%r14)
  0x0000000115eabfaf: movzbl 0x1(%r13),%ebx
  0x0000000115eabfb4: inc    %r13
  0x0000000115eabfb7: movabs $0x10e101840,%r10
  0x0000000115eabfc1: jmpq   *(%r10,%rbx,8)
  0x0000000115eabfc5: data32 xchg %ax,%ax
  0x0000000115eabfc8: add    %al,(%rax)
  0x0000000115eabfca: add    %al,(%rax)
  0x0000000115eabfcc: add    %al,(%rax)
  0x0000000115eabfce: add    %al,(%rax)
  0x0000000115eabfd0: add    %al,(%rax)
  0x0000000115eabfd2: add    %al,(%rax)
  0x0000000115eabfd4: add    %al,(%rax)
  0x0000000115eabfd6: add    %al,(%rax)
  0x0000000115eabfd8: add    %al,(%rax)
  0x0000000115eabfda: add    %al,(%rax)
  0x0000000115eabfdc: add    %al,(%rax)
  0x0000000115eabfde: add    %al,(%rax)

----------------------------------------------------------------------
dstore_3  74 dstore_3  [0x0000000115eac000, 0x0000000115eac040]  64 bytes

  0x0000000115eac000: vmovsd (%rsp),%xmm0
  0x0000000115eac005: add    $0x10,%rsp
  0x0000000115eac009: vmovsd %xmm0,-0x20(%r14)
  0x0000000115eac00f: movzbl 0x1(%r13),%ebx
  0x0000000115eac014: inc    %r13
  0x0000000115eac017: movabs $0x10e101840,%r10
  0x0000000115eac021: jmpq   *(%r10,%rbx,8)
  0x0000000115eac025: data32 xchg %ax,%ax
  0x0000000115eac028: add    %al,(%rax)
  0x0000000115eac02a: add    %al,(%rax)
  0x0000000115eac02c: add    %al,(%rax)
  0x0000000115eac02e: add    %al,(%rax)
  0x0000000115eac030: add    %al,(%rax)
  0x0000000115eac032: add    %al,(%rax)
  0x0000000115eac034: add    %al,(%rax)
  0x0000000115eac036: add    %al,(%rax)
  0x0000000115eac038: add    %al,(%rax)
  0x0000000115eac03a: add    %al,(%rax)
  0x0000000115eac03c: add    %al,(%rax)
  0x0000000115eac03e: add    %al,(%rax)

----------------------------------------------------------------------
astore_0  75 astore_0  [0x0000000115eac060, 0x0000000115eac0c0]  96 bytes

  0x0000000115eac060: push   %rax
  0x0000000115eac061: jmpq   0x0000000115eac090
  0x0000000115eac066: sub    $0x8,%rsp
  0x0000000115eac06a: vmovss %xmm0,(%rsp)
  0x0000000115eac06f: jmpq   0x0000000115eac090
  0x0000000115eac074: sub    $0x10,%rsp
  0x0000000115eac078: vmovsd %xmm0,(%rsp)
  0x0000000115eac07d: jmpq   0x0000000115eac090
  0x0000000115eac082: sub    $0x10,%rsp
  0x0000000115eac086: mov    %rax,(%rsp)
  0x0000000115eac08a: jmpq   0x0000000115eac090
  0x0000000115eac08f: push   %rax
  0x0000000115eac090: pop    %rax
  0x0000000115eac091: mov    %rax,(%r14)
  0x0000000115eac094: movzbl 0x1(%r13),%ebx
  0x0000000115eac099: inc    %r13
  0x0000000115eac09c: movabs $0x10e101840,%r10
  0x0000000115eac0a6: jmpq   *(%r10,%rbx,8)
  0x0000000115eac0aa: nopw   0x0(%rax,%rax,1)
  0x0000000115eac0b0: add    %al,(%rax)
  0x0000000115eac0b2: add    %al,(%rax)
  0x0000000115eac0b4: add    %al,(%rax)
  0x0000000115eac0b6: add    %al,(%rax)
  0x0000000115eac0b8: add    %al,(%rax)
  0x0000000115eac0ba: add    %al,(%rax)
  0x0000000115eac0bc: add    %al,(%rax)
  0x0000000115eac0be: add    %al,(%rax)

----------------------------------------------------------------------
astore_1  76 astore_1  [0x0000000115eac0e0, 0x0000000115eac140]  96 bytes

  0x0000000115eac0e0: push   %rax
  0x0000000115eac0e1: jmpq   0x0000000115eac110
  0x0000000115eac0e6: sub    $0x8,%rsp
  0x0000000115eac0ea: vmovss %xmm0,(%rsp)
  0x0000000115eac0ef: jmpq   0x0000000115eac110
  0x0000000115eac0f4: sub    $0x10,%rsp
  0x0000000115eac0f8: vmovsd %xmm0,(%rsp)
  0x0000000115eac0fd: jmpq   0x0000000115eac110
  0x0000000115eac102: sub    $0x10,%rsp
  0x0000000115eac106: mov    %rax,(%rsp)
  0x0000000115eac10a: jmpq   0x0000000115eac110
  0x0000000115eac10f: push   %rax
  0x0000000115eac110: pop    %rax
  0x0000000115eac111: mov    %rax,-0x8(%r14)
  0x0000000115eac115: movzbl 0x1(%r13),%ebx
  0x0000000115eac11a: inc    %r13
  0x0000000115eac11d: movabs $0x10e101840,%r10
  0x0000000115eac127: jmpq   *(%r10,%rbx,8)
  0x0000000115eac12b: nopl   0x0(%rax,%rax,1)
  0x0000000115eac130: add    %al,(%rax)
  0x0000000115eac132: add    %al,(%rax)
  0x0000000115eac134: add    %al,(%rax)
  0x0000000115eac136: add    %al,(%rax)
  0x0000000115eac138: add    %al,(%rax)
  0x0000000115eac13a: add    %al,(%rax)
  0x0000000115eac13c: add    %al,(%rax)
  0x0000000115eac13e: add    %al,(%rax)

----------------------------------------------------------------------
astore_2  77 astore_2  [0x0000000115eac160, 0x0000000115eac1c0]  96 bytes

  0x0000000115eac160: push   %rax
  0x0000000115eac161: jmpq   0x0000000115eac190
  0x0000000115eac166: sub    $0x8,%rsp
  0x0000000115eac16a: vmovss %xmm0,(%rsp)
  0x0000000115eac16f: jmpq   0x0000000115eac190
  0x0000000115eac174: sub    $0x10,%rsp
  0x0000000115eac178: vmovsd %xmm0,(%rsp)
  0x0000000115eac17d: jmpq   0x0000000115eac190
  0x0000000115eac182: sub    $0x10,%rsp
  0x0000000115eac186: mov    %rax,(%rsp)
  0x0000000115eac18a: jmpq   0x0000000115eac190
  0x0000000115eac18f: push   %rax
  0x0000000115eac190: pop    %rax
  0x0000000115eac191: mov    %rax,-0x10(%r14)
  0x0000000115eac195: movzbl 0x1(%r13),%ebx
  0x0000000115eac19a: inc    %r13
  0x0000000115eac19d: movabs $0x10e101840,%r10
  0x0000000115eac1a7: jmpq   *(%r10,%rbx,8)
  0x0000000115eac1ab: nopl   0x0(%rax,%rax,1)
  0x0000000115eac1b0: add    %al,(%rax)
  0x0000000115eac1b2: add    %al,(%rax)
  0x0000000115eac1b4: add    %al,(%rax)
  0x0000000115eac1b6: add    %al,(%rax)
  0x0000000115eac1b8: add    %al,(%rax)
  0x0000000115eac1ba: add    %al,(%rax)
  0x0000000115eac1bc: add    %al,(%rax)
  0x0000000115eac1be: add    %al,(%rax)

----------------------------------------------------------------------
astore_3  78 astore_3  [0x0000000115eac1e0, 0x0000000115eac240]  96 bytes

  0x0000000115eac1e0: push   %rax
  0x0000000115eac1e1: jmpq   0x0000000115eac210
  0x0000000115eac1e6: sub    $0x8,%rsp
  0x0000000115eac1ea: vmovss %xmm0,(%rsp)
  0x0000000115eac1ef: jmpq   0x0000000115eac210
  0x0000000115eac1f4: sub    $0x10,%rsp
  0x0000000115eac1f8: vmovsd %xmm0,(%rsp)
  0x0000000115eac1fd: jmpq   0x0000000115eac210
  0x0000000115eac202: sub    $0x10,%rsp
  0x0000000115eac206: mov    %rax,(%rsp)
  0x0000000115eac20a: jmpq   0x0000000115eac210
  0x0000000115eac20f: push   %rax
  0x0000000115eac210: pop    %rax
  0x0000000115eac211: mov    %rax,-0x18(%r14)
  0x0000000115eac215: movzbl 0x1(%r13),%ebx
  0x0000000115eac21a: inc    %r13
  0x0000000115eac21d: movabs $0x10e101840,%r10
  0x0000000115eac227: jmpq   *(%r10,%rbx,8)
  0x0000000115eac22b: nopl   0x0(%rax,%rax,1)
  0x0000000115eac230: add    %al,(%rax)
  0x0000000115eac232: add    %al,(%rax)
  0x0000000115eac234: add    %al,(%rax)
  0x0000000115eac236: add    %al,(%rax)
  0x0000000115eac238: add    %al,(%rax)
  0x0000000115eac23a: add    %al,(%rax)
  0x0000000115eac23c: add    %al,(%rax)
  0x0000000115eac23e: add    %al,(%rax)

----------------------------------------------------------------------
iastore  79 iastore  [0x0000000115eac260, 0x0000000115eac2a0]  64 bytes

  0x0000000115eac260: mov    (%rsp),%eax
  0x0000000115eac263: add    $0x8,%rsp
  0x0000000115eac267: mov    (%rsp),%ebx
  0x0000000115eac26a: add    $0x8,%rsp
  0x0000000115eac26e: pop    %rdx
  0x0000000115eac26f: movslq %ebx,%rbx
  0x0000000115eac272: cmp    0xc(%rdx),%ebx
  0x0000000115eac275: jae    0x0000000115ea3840
  0x0000000115eac27b: mov    %eax,0x10(%rdx,%rbx,4)
  0x0000000115eac27f: movzbl 0x1(%r13),%ebx
  0x0000000115eac284: inc    %r13
  0x0000000115eac287: movabs $0x10e101840,%r10
  0x0000000115eac291: jmpq   *(%r10,%rbx,8)
  0x0000000115eac295: data32 xchg %ax,%ax
  0x0000000115eac298: add    %al,(%rax)
  0x0000000115eac29a: add    %al,(%rax)
  0x0000000115eac29c: add    %al,(%rax)
  0x0000000115eac29e: add    %al,(%rax)

----------------------------------------------------------------------
lastore  80 lastore  [0x0000000115eac2c0, 0x0000000115eac300]  64 bytes

  0x0000000115eac2c0: mov    (%rsp),%rax
  0x0000000115eac2c4: add    $0x10,%rsp
  0x0000000115eac2c8: mov    (%rsp),%ebx
  0x0000000115eac2cb: add    $0x8,%rsp
  0x0000000115eac2cf: pop    %rdx
  0x0000000115eac2d0: movslq %ebx,%rbx
  0x0000000115eac2d3: cmp    0xc(%rdx),%ebx
  0x0000000115eac2d6: jae    0x0000000115ea3840
  0x0000000115eac2dc: mov    %rax,0x10(%rdx,%rbx,8)
  0x0000000115eac2e1: movzbl 0x1(%r13),%ebx
  0x0000000115eac2e6: inc    %r13
  0x0000000115eac2e9: movabs $0x10e101840,%r10
  0x0000000115eac2f3: jmpq   *(%r10,%rbx,8)
  0x0000000115eac2f7: nop
  0x0000000115eac2f8: add    %al,(%rax)
  0x0000000115eac2fa: add    %al,(%rax)
  0x0000000115eac2fc: add    %al,(%rax)
  0x0000000115eac2fe: add    %al,(%rax)

----------------------------------------------------------------------
fastore  81 fastore  [0x0000000115eac320, 0x0000000115eac360]  64 bytes

  0x0000000115eac320: vmovss (%rsp),%xmm0
  0x0000000115eac325: add    $0x8,%rsp
  0x0000000115eac329: mov    (%rsp),%ebx
  0x0000000115eac32c: add    $0x8,%rsp
  0x0000000115eac330: pop    %rdx
  0x0000000115eac331: movslq %ebx,%rbx
  0x0000000115eac334: cmp    0xc(%rdx),%ebx
  0x0000000115eac337: jae    0x0000000115ea3840
  0x0000000115eac33d: vmovss %xmm0,0x10(%rdx,%rbx,4)
  0x0000000115eac343: movzbl 0x1(%r13),%ebx
  0x0000000115eac348: inc    %r13
  0x0000000115eac34b: movabs $0x10e101840,%r10
  0x0000000115eac355: jmpq   *(%r10,%rbx,8)
  0x0000000115eac359: nopl   0x0(%rax)

----------------------------------------------------------------------
dastore  82 dastore  [0x0000000115eac380, 0x0000000115eac3c0]  64 bytes

  0x0000000115eac380: vmovsd (%rsp),%xmm0
  0x0000000115eac385: add    $0x10,%rsp
  0x0000000115eac389: mov    (%rsp),%ebx
  0x0000000115eac38c: add    $0x8,%rsp
  0x0000000115eac390: pop    %rdx
  0x0000000115eac391: movslq %ebx,%rbx
  0x0000000115eac394: cmp    0xc(%rdx),%ebx
  0x0000000115eac397: jae    0x0000000115ea3840
  0x0000000115eac39d: vmovsd %xmm0,0x10(%rdx,%rbx,8)
  0x0000000115eac3a3: movzbl 0x1(%r13),%ebx
  0x0000000115eac3a8: inc    %r13
  0x0000000115eac3ab: movabs $0x10e101840,%r10
  0x0000000115eac3b5: jmpq   *(%r10,%rbx,8)
  0x0000000115eac3b9: nopl   0x0(%rax)

----------------------------------------------------------------------
aastore  83 aastore  [0x0000000115eac3e0, 0x0000000115eac5c0]  480 bytes

  0x0000000115eac3e0: push   %rax
  0x0000000115eac3e1: jmpq   0x0000000115eac410
  0x0000000115eac3e6: sub    $0x8,%rsp
  0x0000000115eac3ea: vmovss %xmm0,(%rsp)
  0x0000000115eac3ef: jmpq   0x0000000115eac410
  0x0000000115eac3f4: sub    $0x10,%rsp
  0x0000000115eac3f8: vmovsd %xmm0,(%rsp)
  0x0000000115eac3fd: jmpq   0x0000000115eac410
  0x0000000115eac402: sub    $0x10,%rsp
  0x0000000115eac406: mov    %rax,(%rsp)
  0x0000000115eac40a: jmpq   0x0000000115eac410
  0x0000000115eac40f: push   %rax
  0x0000000115eac410: mov    (%rsp),%rax
  0x0000000115eac414: mov    0x8(%rsp),%ecx
  0x0000000115eac418: mov    0x10(%rsp),%rdx
  0x0000000115eac41d: movslq %ecx,%rcx
  0x0000000115eac420: cmp    0xc(%rdx),%ecx
  0x0000000115eac423: mov    %ecx,%ebx
  0x0000000115eac425: jae    0x0000000115ea3840
  0x0000000115eac42b: test   %rax,%rax
  0x0000000115eac42e: je     0x0000000115eac56a
  0x0000000115eac434: mov    0x8(%rax),%ebx
  0x0000000115eac437: shl    $0x3,%rbx
  0x0000000115eac43b: mov    0x8(%rdx),%eax
  0x0000000115eac43e: shl    $0x3,%rax
  0x0000000115eac442: mov    0xe8(%rax),%rax
  0x0000000115eac449: lea    0x10(%rdx,%rcx,4),%rdx
  0x0000000115eac44e: mov    -0x20(%rbp),%rcx
  0x0000000115eac452: test   %rcx,%rcx
  0x0000000115eac455: je     0x0000000115eac4e5
  0x0000000115eac45b: mov    0x10(%rcx),%rdi
  0x0000000115eac45f: cmp    %rbx,%rdi
  0x0000000115eac462: jne    0x0000000115eac477
  0x0000000115eac468: addq   $0x1,0x18(%rcx)
  0x0000000115eac46d: sbbq   $0x0,0x18(%rcx)
  0x0000000115eac472: jmpq   0x0000000115eac4dd
  0x0000000115eac477: test   %rdi,%rdi
  0x0000000115eac47a: je     0x0000000115eac4b7
  0x0000000115eac480: mov    0x20(%rcx),%rdi
  0x0000000115eac484: cmp    %rbx,%rdi
  0x0000000115eac487: jne    0x0000000115eac49c
  0x0000000115eac48d: addq   $0x1,0x28(%rcx)
  0x0000000115eac492: sbbq   $0x0,0x28(%rcx)
  0x0000000115eac497: jmpq   0x0000000115eac4dd
  0x0000000115eac49c: test   %rdi,%rdi
  0x0000000115eac49f: jne    0x0000000115eac4dd
  0x0000000115eac4a5: mov    %rbx,0x20(%rcx)
  0x0000000115eac4a9: mov    $0x1,%edi
  0x0000000115eac4ae: mov    %rdi,0x28(%rcx)
  0x0000000115eac4b2: jmpq   0x0000000115eac4dd
  0x0000000115eac4b7: cmp    0x20(%rcx),%rbx
  0x0000000115eac4bb: jne    0x0000000115eac4d0
  0x0000000115eac4c1: addq   $0x1,0x28(%rcx)
  0x0000000115eac4c6: sbbq   $0x0,0x28(%rcx)
  0x0000000115eac4cb: jmpq   0x0000000115eac4dd
  0x0000000115eac4d0: mov    %rbx,0x10(%rcx)
  0x0000000115eac4d4: mov    $0x1,%edi
  0x0000000115eac4d9: mov    %rdi,0x18(%rcx)
  0x0000000115eac4dd: add    $0x30,%rcx
  0x0000000115eac4e1: mov    %rcx,-0x20(%rbp)
  0x0000000115eac4e5: cmp    %rax,%rbx
  0x0000000115eac4e8: je     0x0000000115eac548
  0x0000000115eac4ee: mov    0xc(%rax),%ecx
  0x0000000115eac4f1: cmp    (%rbx,%rcx,1),%rax
  0x0000000115eac4f5: je     0x0000000115eac548
  0x0000000115eac4fb: cmp    $0x18,%ecx
  0x0000000115eac4fe: jne    0x0000000115eac526
  0x0000000115eac504: push   %rax
  0x0000000115eac505: mov    %rax,%rax
  0x0000000115eac508: push   %rdi
  0x0000000115eac509: mov    0x20(%rbx),%rdi
  0x0000000115eac50d: mov    (%rdi),%ecx
  0x0000000115eac50f: add    $0x8,%rdi
  0x0000000115eac513: test   %rax,%rax
  0x0000000115eac516: repnz scas %es:(%rdi),%rax
  0x0000000115eac519: pop    %rdi
  0x0000000115eac51a: pop    %rax
  0x0000000115eac51b: jne    0x0000000115eac526
  0x0000000115eac51d: mov    %rax,0x18(%rbx)
  0x0000000115eac521: jmpq   0x0000000115eac548
  0x0000000115eac526: mov    -0x20(%rbp),%rcx
  0x0000000115eac52a: test   %rcx,%rcx
  0x0000000115eac52d: je     0x0000000115eac543
  0x0000000115eac533: addq   $0xffffffffffffffff,-0x28(%rcx)
  0x0000000115eac538: js     0x0000000115eac543
  0x0000000115eac53e: addq   $0x1,-0x28(%rcx)
  0x0000000115eac543: jmpq   0x0000000115ea38de
  0x0000000115eac548: mov    (%rsp),%rax
  0x0000000115eac54c: shr    $0x3,%rax
  0x0000000115eac550: mov    %eax,(%rdx)
  0x0000000115eac552: shr    $0x9,%rdx
  0x0000000115eac556: movabs $0x10b562000,%r10
  0x0000000115eac560: movb   $0x0,(%r10,%rdx,1)
  0x0000000115eac565: jmpq   0x0000000115eac58d
  0x0000000115eac56a: mov    -0x20(%rbp),%rbx
  0x0000000115eac56e: test   %rbx,%rbx
  0x0000000115eac571: je     0x0000000115eac585
  0x0000000115eac577: orl    $0x100,(%rbx)
  0x0000000115eac57d: add    $0x30,%rbx
  0x0000000115eac581: mov    %rbx,-0x20(%rbp)
  0x0000000115eac585: movl   $0x0,0x10(%rdx,%rcx,4)
  0x0000000115eac58d: add    $0x18,%rsp
  0x0000000115eac591: movzbl 0x1(%r13),%ebx
  0x0000000115eac596: inc    %r13
  0x0000000115eac599: movabs $0x10e101840,%r10
  0x0000000115eac5a3: jmpq   *(%r10,%rbx,8)
  0x0000000115eac5a7: nop
  0x0000000115eac5a8: add    %al,(%rax)
  0x0000000115eac5aa: add    %al,(%rax)
  0x0000000115eac5ac: add    %al,(%rax)
  0x0000000115eac5ae: add    %al,(%rax)
  0x0000000115eac5b0: add    %al,(%rax)
  0x0000000115eac5b2: add    %al,(%rax)
  0x0000000115eac5b4: add    %al,(%rax)
  0x0000000115eac5b6: add    %al,(%rax)
  0x0000000115eac5b8: add    %al,(%rax)
  0x0000000115eac5ba: add    %al,(%rax)
  0x0000000115eac5bc: add    %al,(%rax)
  0x0000000115eac5be: add    %al,(%rax)

----------------------------------------------------------------------
bastore  84 bastore  [0x0000000115eac5e0, 0x0000000115eac640]  96 bytes

  0x0000000115eac5e0: mov    (%rsp),%eax
  0x0000000115eac5e3: add    $0x8,%rsp
  0x0000000115eac5e7: mov    (%rsp),%ebx
  0x0000000115eac5ea: add    $0x8,%rsp
  0x0000000115eac5ee: pop    %rdx
  0x0000000115eac5ef: movslq %ebx,%rbx
  0x0000000115eac5f2: cmp    0xc(%rdx),%ebx
  0x0000000115eac5f5: jae    0x0000000115ea3840
  0x0000000115eac5fb: mov    0x8(%rdx),%ecx
  0x0000000115eac5fe: shl    $0x3,%rcx
  0x0000000115eac602: mov    0x8(%rcx),%ecx
  0x0000000115eac605: test   $0x400,%ecx
  0x0000000115eac60b: je     0x0000000115eac610
  0x0000000115eac60d: and    $0x1,%eax
  0x0000000115eac610: mov    %al,0x10(%rdx,%rbx,1)
  0x0000000115eac614: movzbl 0x1(%r13),%ebx
  0x0000000115eac619: inc    %r13
  0x0000000115eac61c: movabs $0x10e101840,%r10
  0x0000000115eac626: jmpq   *(%r10,%rbx,8)
  0x0000000115eac62a: nopw   0x0(%rax,%rax,1)
  0x0000000115eac630: add    %al,(%rax)
  0x0000000115eac632: add    %al,(%rax)
  0x0000000115eac634: add    %al,(%rax)
  0x0000000115eac636: add    %al,(%rax)
  0x0000000115eac638: add    %al,(%rax)
  0x0000000115eac63a: add    %al,(%rax)
  0x0000000115eac63c: add    %al,(%rax)
  0x0000000115eac63e: add    %al,(%rax)

----------------------------------------------------------------------
castore  85 castore  [0x0000000115eac660, 0x0000000115eac6a0]  64 bytes

  0x0000000115eac660: mov    (%rsp),%eax
  0x0000000115eac663: add    $0x8,%rsp
  0x0000000115eac667: mov    (%rsp),%ebx
  0x0000000115eac66a: add    $0x8,%rsp
  0x0000000115eac66e: pop    %rdx
  0x0000000115eac66f: movslq %ebx,%rbx
  0x0000000115eac672: cmp    0xc(%rdx),%ebx
  0x0000000115eac675: jae    0x0000000115ea3840
  0x0000000115eac67b: mov    %ax,0x10(%rdx,%rbx,2)
  0x0000000115eac680: movzbl 0x1(%r13),%ebx
  0x0000000115eac685: inc    %r13
  0x0000000115eac688: movabs $0x10e101840,%r10
  0x0000000115eac692: jmpq   *(%r10,%rbx,8)
  0x0000000115eac696: xchg   %ax,%ax
  0x0000000115eac698: add    %al,(%rax)
  0x0000000115eac69a: add    %al,(%rax)
  0x0000000115eac69c: add    %al,(%rax)
  0x0000000115eac69e: add    %al,(%rax)

----------------------------------------------------------------------
sastore  86 sastore  [0x0000000115eac6c0, 0x0000000115eac700]  64 bytes

  0x0000000115eac6c0: mov    (%rsp),%eax
  0x0000000115eac6c3: add    $0x8,%rsp
  0x0000000115eac6c7: mov    (%rsp),%ebx
  0x0000000115eac6ca: add    $0x8,%rsp
  0x0000000115eac6ce: pop    %rdx
  0x0000000115eac6cf: movslq %ebx,%rbx
  0x0000000115eac6d2: cmp    0xc(%rdx),%ebx
  0x0000000115eac6d5: jae    0x0000000115ea3840
  0x0000000115eac6db: mov    %ax,0x10(%rdx,%rbx,2)
  0x0000000115eac6e0: movzbl 0x1(%r13),%ebx
  0x0000000115eac6e5: inc    %r13
  0x0000000115eac6e8: movabs $0x10e101840,%r10
  0x0000000115eac6f2: jmpq   *(%r10,%rbx,8)
  0x0000000115eac6f6: xchg   %ax,%ax
  0x0000000115eac6f8: add    %al,(%rax)
  0x0000000115eac6fa: add    %al,(%rax)
  0x0000000115eac6fc: add    %al,(%rax)
  0x0000000115eac6fe: add    %al,(%rax)

----------------------------------------------------------------------
pop  87 pop  [0x0000000115eac720, 0x0000000115eac780]  96 bytes

  0x0000000115eac720: push   %rax
  0x0000000115eac721: jmpq   0x0000000115eac750
  0x0000000115eac726: sub    $0x8,%rsp
  0x0000000115eac72a: vmovss %xmm0,(%rsp)
  0x0000000115eac72f: jmpq   0x0000000115eac750
  0x0000000115eac734: sub    $0x10,%rsp
  0x0000000115eac738: vmovsd %xmm0,(%rsp)
  0x0000000115eac73d: jmpq   0x0000000115eac750
  0x0000000115eac742: sub    $0x10,%rsp
  0x0000000115eac746: mov    %rax,(%rsp)
  0x0000000115eac74a: jmpq   0x0000000115eac750
  0x0000000115eac74f: push   %rax
  0x0000000115eac750: add    $0x8,%rsp
  0x0000000115eac754: movzbl 0x1(%r13),%ebx
  0x0000000115eac759: inc    %r13
  0x0000000115eac75c: movabs $0x10e101840,%r10
  0x0000000115eac766: jmpq   *(%r10,%rbx,8)
  0x0000000115eac76a: nopw   0x0(%rax,%rax,1)
  0x0000000115eac770: add    %al,(%rax)
  0x0000000115eac772: add    %al,(%rax)
  0x0000000115eac774: add    %al,(%rax)
  0x0000000115eac776: add    %al,(%rax)
  0x0000000115eac778: add    %al,(%rax)
  0x0000000115eac77a: add    %al,(%rax)
  0x0000000115eac77c: add    %al,(%rax)
  0x0000000115eac77e: add    %al,(%rax)

----------------------------------------------------------------------
pop2  88 pop2  [0x0000000115eac7a0, 0x0000000115eac800]  96 bytes

  0x0000000115eac7a0: push   %rax
  0x0000000115eac7a1: jmpq   0x0000000115eac7d0
  0x0000000115eac7a6: sub    $0x8,%rsp
  0x0000000115eac7aa: vmovss %xmm0,(%rsp)
  0x0000000115eac7af: jmpq   0x0000000115eac7d0
  0x0000000115eac7b4: sub    $0x10,%rsp
  0x0000000115eac7b8: vmovsd %xmm0,(%rsp)
  0x0000000115eac7bd: jmpq   0x0000000115eac7d0
  0x0000000115eac7c2: sub    $0x10,%rsp
  0x0000000115eac7c6: mov    %rax,(%rsp)
  0x0000000115eac7ca: jmpq   0x0000000115eac7d0
  0x0000000115eac7cf: push   %rax
  0x0000000115eac7d0: add    $0x10,%rsp
  0x0000000115eac7d4: movzbl 0x1(%r13),%ebx
  0x0000000115eac7d9: inc    %r13
  0x0000000115eac7dc: movabs $0x10e101840,%r10
  0x0000000115eac7e6: jmpq   *(%r10,%rbx,8)
  0x0000000115eac7ea: nopw   0x0(%rax,%rax,1)
  0x0000000115eac7f0: add    %al,(%rax)
  0x0000000115eac7f2: add    %al,(%rax)
  0x0000000115eac7f4: add    %al,(%rax)
  0x0000000115eac7f6: add    %al,(%rax)
  0x0000000115eac7f8: add    %al,(%rax)
  0x0000000115eac7fa: add    %al,(%rax)
  0x0000000115eac7fc: add    %al,(%rax)
  0x0000000115eac7fe: add    %al,(%rax)

----------------------------------------------------------------------
dup  89 dup  [0x0000000115eac820, 0x0000000115eac880]  96 bytes

  0x0000000115eac820: push   %rax
  0x0000000115eac821: jmpq   0x0000000115eac850
  0x0000000115eac826: sub    $0x8,%rsp
  0x0000000115eac82a: vmovss %xmm0,(%rsp)
  0x0000000115eac82f: jmpq   0x0000000115eac850
  0x0000000115eac834: sub    $0x10,%rsp
  0x0000000115eac838: vmovsd %xmm0,(%rsp)
  0x0000000115eac83d: jmpq   0x0000000115eac850
  0x0000000115eac842: sub    $0x10,%rsp
  0x0000000115eac846: mov    %rax,(%rsp)
  0x0000000115eac84a: jmpq   0x0000000115eac850
  0x0000000115eac84f: push   %rax
  0x0000000115eac850: mov    (%rsp),%rax
  0x0000000115eac854: push   %rax
  0x0000000115eac855: movzbl 0x1(%r13),%ebx
  0x0000000115eac85a: inc    %r13
  0x0000000115eac85d: movabs $0x10e101840,%r10
  0x0000000115eac867: jmpq   *(%r10,%rbx,8)
  0x0000000115eac86b: nopl   0x0(%rax,%rax,1)
  0x0000000115eac870: add    %al,(%rax)
  0x0000000115eac872: add    %al,(%rax)
  0x0000000115eac874: add    %al,(%rax)
  0x0000000115eac876: add    %al,(%rax)
  0x0000000115eac878: add    %al,(%rax)
  0x0000000115eac87a: add    %al,(%rax)
  0x0000000115eac87c: add    %al,(%rax)
  0x0000000115eac87e: add    %al,(%rax)

----------------------------------------------------------------------
dup_x1  90 dup_x1  [0x0000000115eac8a0, 0x0000000115eac900]  96 bytes

  0x0000000115eac8a0: push   %rax
  0x0000000115eac8a1: jmpq   0x0000000115eac8d0
  0x0000000115eac8a6: sub    $0x8,%rsp
  0x0000000115eac8aa: vmovss %xmm0,(%rsp)
  0x0000000115eac8af: jmpq   0x0000000115eac8d0
  0x0000000115eac8b4: sub    $0x10,%rsp
  0x0000000115eac8b8: vmovsd %xmm0,(%rsp)
  0x0000000115eac8bd: jmpq   0x0000000115eac8d0
  0x0000000115eac8c2: sub    $0x10,%rsp
  0x0000000115eac8c6: mov    %rax,(%rsp)
  0x0000000115eac8ca: jmpq   0x0000000115eac8d0
  0x0000000115eac8cf: push   %rax
  0x0000000115eac8d0: mov    (%rsp),%rax
  0x0000000115eac8d4: mov    0x8(%rsp),%rcx
  0x0000000115eac8d9: mov    %rax,0x8(%rsp)
  0x0000000115eac8de: mov    %rcx,(%rsp)
  0x0000000115eac8e2: push   %rax
  0x0000000115eac8e3: movzbl 0x1(%r13),%ebx
  0x0000000115eac8e8: inc    %r13
  0x0000000115eac8eb: movabs $0x10e101840,%r10
  0x0000000115eac8f5: jmpq   *(%r10,%rbx,8)
  0x0000000115eac8f9: nopl   0x0(%rax)

----------------------------------------------------------------------
dup_x2  91 dup_x2  [0x0000000115eac920, 0x0000000115eac9a0]  128 bytes

  0x0000000115eac920: push   %rax
  0x0000000115eac921: jmpq   0x0000000115eac950
  0x0000000115eac926: sub    $0x8,%rsp
  0x0000000115eac92a: vmovss %xmm0,(%rsp)
  0x0000000115eac92f: jmpq   0x0000000115eac950
  0x0000000115eac934: sub    $0x10,%rsp
  0x0000000115eac938: vmovsd %xmm0,(%rsp)
  0x0000000115eac93d: jmpq   0x0000000115eac950
  0x0000000115eac942: sub    $0x10,%rsp
  0x0000000115eac946: mov    %rax,(%rsp)
  0x0000000115eac94a: jmpq   0x0000000115eac950
  0x0000000115eac94f: push   %rax
  0x0000000115eac950: mov    (%rsp),%rax
  0x0000000115eac954: mov    0x10(%rsp),%rcx
  0x0000000115eac959: mov    %rax,0x10(%rsp)
  0x0000000115eac95e: push   %rax
  0x0000000115eac95f: mov    0x10(%rsp),%rax
  0x0000000115eac964: mov    %rcx,0x10(%rsp)
  0x0000000115eac969: mov    %rax,0x8(%rsp)
  0x0000000115eac96e: movzbl 0x1(%r13),%ebx
  0x0000000115eac973: inc    %r13
  0x0000000115eac976: movabs $0x10e101840,%r10
  0x0000000115eac980: jmpq   *(%r10,%rbx,8)
  0x0000000115eac984: nopl   0x0(%rax)
  0x0000000115eac988: add    %al,(%rax)
  0x0000000115eac98a: add    %al,(%rax)
  0x0000000115eac98c: add    %al,(%rax)
  0x0000000115eac98e: add    %al,(%rax)
  0x0000000115eac990: add    %al,(%rax)
  0x0000000115eac992: add    %al,(%rax)
  0x0000000115eac994: add    %al,(%rax)
  0x0000000115eac996: add    %al,(%rax)
  0x0000000115eac998: add    %al,(%rax)
  0x0000000115eac99a: add    %al,(%rax)
  0x0000000115eac99c: add    %al,(%rax)
  0x0000000115eac99e: add    %al,(%rax)

----------------------------------------------------------------------
dup2  92 dup2  [0x0000000115eac9c0, 0x0000000115eaca20]  96 bytes

  0x0000000115eac9c0: push   %rax
  0x0000000115eac9c1: jmpq   0x0000000115eac9f0
  0x0000000115eac9c6: sub    $0x8,%rsp
  0x0000000115eac9ca: vmovss %xmm0,(%rsp)
  0x0000000115eac9cf: jmpq   0x0000000115eac9f0
  0x0000000115eac9d4: sub    $0x10,%rsp
  0x0000000115eac9d8: vmovsd %xmm0,(%rsp)
  0x0000000115eac9dd: jmpq   0x0000000115eac9f0
  0x0000000115eac9e2: sub    $0x10,%rsp
  0x0000000115eac9e6: mov    %rax,(%rsp)
  0x0000000115eac9ea: jmpq   0x0000000115eac9f0
  0x0000000115eac9ef: push   %rax
  0x0000000115eac9f0: mov    0x8(%rsp),%rax
  0x0000000115eac9f5: push   %rax
  0x0000000115eac9f6: mov    0x8(%rsp),%rax
  0x0000000115eac9fb: push   %rax
  0x0000000115eac9fc: movzbl 0x1(%r13),%ebx
  0x0000000115eaca01: inc    %r13
  0x0000000115eaca04: movabs $0x10e101840,%r10
  0x0000000115eaca0e: jmpq   *(%r10,%rbx,8)
  0x0000000115eaca12: nopw   0x0(%rax,%rax,1)
  0x0000000115eaca18: add    %al,(%rax)
  0x0000000115eaca1a: add    %al,(%rax)
  0x0000000115eaca1c: add    %al,(%rax)
  0x0000000115eaca1e: add    %al,(%rax)

----------------------------------------------------------------------
dup2_x1  93 dup2_x1  [0x0000000115eaca40, 0x0000000115eacac0]  128 bytes

  0x0000000115eaca40: push   %rax
  0x0000000115eaca41: jmpq   0x0000000115eaca70
  0x0000000115eaca46: sub    $0x8,%rsp
  0x0000000115eaca4a: vmovss %xmm0,(%rsp)
  0x0000000115eaca4f: jmpq   0x0000000115eaca70
  0x0000000115eaca54: sub    $0x10,%rsp
  0x0000000115eaca58: vmovsd %xmm0,(%rsp)
  0x0000000115eaca5d: jmpq   0x0000000115eaca70
  0x0000000115eaca62: sub    $0x10,%rsp
  0x0000000115eaca66: mov    %rax,(%rsp)
  0x0000000115eaca6a: jmpq   0x0000000115eaca70
  0x0000000115eaca6f: push   %rax
  0x0000000115eaca70: mov    (%rsp),%rcx
  0x0000000115eaca74: mov    0x8(%rsp),%rax
  0x0000000115eaca79: push   %rax
  0x0000000115eaca7a: push   %rcx
  0x0000000115eaca7b: mov    %rcx,0x18(%rsp)
  0x0000000115eaca80: mov    0x20(%rsp),%rcx
  0x0000000115eaca85: mov    %rcx,0x10(%rsp)
  0x0000000115eaca8a: mov    %rax,0x20(%rsp)
  0x0000000115eaca8f: movzbl 0x1(%r13),%ebx
  0x0000000115eaca94: inc    %r13
  0x0000000115eaca97: movabs $0x10e101840,%r10
  0x0000000115eacaa1: jmpq   *(%r10,%rbx,8)
  0x0000000115eacaa5: data32 xchg %ax,%ax
  0x0000000115eacaa8: add    %al,(%rax)
  0x0000000115eacaaa: add    %al,(%rax)
  0x0000000115eacaac: add    %al,(%rax)
  0x0000000115eacaae: add    %al,(%rax)
  0x0000000115eacab0: add    %al,(%rax)
  0x0000000115eacab2: add    %al,(%rax)
  0x0000000115eacab4: add    %al,(%rax)
  0x0000000115eacab6: add    %al,(%rax)
  0x0000000115eacab8: add    %al,(%rax)
  0x0000000115eacaba: add    %al,(%rax)
  0x0000000115eacabc: add    %al,(%rax)
  0x0000000115eacabe: add    %al,(%rax)

----------------------------------------------------------------------
dup2_x2  94 dup2_x2  [0x0000000115eacae0, 0x0000000115eacb60]  128 bytes

  0x0000000115eacae0: push   %rax
  0x0000000115eacae1: jmpq   0x0000000115eacb10
  0x0000000115eacae6: sub    $0x8,%rsp
  0x0000000115eacaea: vmovss %xmm0,(%rsp)
  0x0000000115eacaef: jmpq   0x0000000115eacb10
  0x0000000115eacaf4: sub    $0x10,%rsp
  0x0000000115eacaf8: vmovsd %xmm0,(%rsp)
  0x0000000115eacafd: jmpq   0x0000000115eacb10
  0x0000000115eacb02: sub    $0x10,%rsp
  0x0000000115eacb06: mov    %rax,(%rsp)
  0x0000000115eacb0a: jmpq   0x0000000115eacb10
  0x0000000115eacb0f: push   %rax
  0x0000000115eacb10: mov    (%rsp),%rcx
  0x0000000115eacb14: mov    0x8(%rsp),%rax
  0x0000000115eacb19: push   %rax
  0x0000000115eacb1a: push   %rcx
  0x0000000115eacb1b: mov    0x20(%rsp),%rax
  0x0000000115eacb20: mov    %rax,0x10(%rsp)
  0x0000000115eacb25: mov    %rcx,0x20(%rsp)
  0x0000000115eacb2a: mov    0x28(%rsp),%rcx
  0x0000000115eacb2f: mov    0x18(%rsp),%rax
  0x0000000115eacb34: mov    %rcx,0x18(%rsp)
  0x0000000115eacb39: mov    %rax,0x28(%rsp)
  0x0000000115eacb3e: movzbl 0x1(%r13),%ebx
  0x0000000115eacb43: inc    %r13
  0x0000000115eacb46: movabs $0x10e101840,%r10
  0x0000000115eacb50: jmpq   *(%r10,%rbx,8)
  0x0000000115eacb54: nopl   0x0(%rax)
  0x0000000115eacb58: add    %al,(%rax)
  0x0000000115eacb5a: add    %al,(%rax)
  0x0000000115eacb5c: add    %al,(%rax)
  0x0000000115eacb5e: add    %al,(%rax)

----------------------------------------------------------------------
swap  95 swap  [0x0000000115eacb80, 0x0000000115eacbe0]  96 bytes

  0x0000000115eacb80: push   %rax
  0x0000000115eacb81: jmpq   0x0000000115eacbb0
  0x0000000115eacb86: sub    $0x8,%rsp
  0x0000000115eacb8a: vmovss %xmm0,(%rsp)
  0x0000000115eacb8f: jmpq   0x0000000115eacbb0
  0x0000000115eacb94: sub    $0x10,%rsp
  0x0000000115eacb98: vmovsd %xmm0,(%rsp)
  0x0000000115eacb9d: jmpq   0x0000000115eacbb0
  0x0000000115eacba2: sub    $0x10,%rsp
  0x0000000115eacba6: mov    %rax,(%rsp)
  0x0000000115eacbaa: jmpq   0x0000000115eacbb0
  0x0000000115eacbaf: push   %rax
  0x0000000115eacbb0: mov    0x8(%rsp),%rcx
  0x0000000115eacbb5: mov    (%rsp),%rax
  0x0000000115eacbb9: mov    %rcx,(%rsp)
  0x0000000115eacbbd: mov    %rax,0x8(%rsp)
  0x0000000115eacbc2: movzbl 0x1(%r13),%ebx
  0x0000000115eacbc7: inc    %r13
  0x0000000115eacbca: movabs $0x10e101840,%r10
  0x0000000115eacbd4: jmpq   *(%r10,%rbx,8)
  0x0000000115eacbd8: add    %al,(%rax)
  0x0000000115eacbda: add    %al,(%rax)
  0x0000000115eacbdc: add    %al,(%rax)
  0x0000000115eacbde: add    %al,(%rax)

----------------------------------------------------------------------
iadd  96 iadd  [0x0000000115eacc00, 0x0000000115eacc40]  64 bytes

  0x0000000115eacc00: mov    (%rsp),%eax
  0x0000000115eacc03: add    $0x8,%rsp
  0x0000000115eacc07: mov    (%rsp),%edx
  0x0000000115eacc0a: add    $0x8,%rsp
  0x0000000115eacc0e: add    %edx,%eax
  0x0000000115eacc10: movzbl 0x1(%r13),%ebx
  0x0000000115eacc15: inc    %r13
  0x0000000115eacc18: movabs $0x10e0ff040,%r10
  0x0000000115eacc22: jmpq   *(%r10,%rbx,8)
  0x0000000115eacc26: xchg   %ax,%ax
  0x0000000115eacc28: add    %al,(%rax)
  0x0000000115eacc2a: add    %al,(%rax)
  0x0000000115eacc2c: add    %al,(%rax)
  0x0000000115eacc2e: add    %al,(%rax)
  0x0000000115eacc30: add    %al,(%rax)
  0x0000000115eacc32: add    %al,(%rax)
  0x0000000115eacc34: add    %al,(%rax)
  0x0000000115eacc36: add    %al,(%rax)
  0x0000000115eacc38: add    %al,(%rax)
  0x0000000115eacc3a: add    %al,(%rax)
  0x0000000115eacc3c: add    %al,(%rax)
  0x0000000115eacc3e: add    %al,(%rax)

----------------------------------------------------------------------
ladd  97 ladd  [0x0000000115eacc60, 0x0000000115eacca0]  64 bytes

  0x0000000115eacc60: mov    (%rsp),%rax
  0x0000000115eacc64: add    $0x10,%rsp
  0x0000000115eacc68: mov    (%rsp),%rdx
  0x0000000115eacc6c: add    $0x10,%rsp
  0x0000000115eacc70: add    %rdx,%rax
  0x0000000115eacc73: movzbl 0x1(%r13),%ebx
  0x0000000115eacc78: inc    %r13
  0x0000000115eacc7b: movabs $0x10e0ff840,%r10
  0x0000000115eacc85: jmpq   *(%r10,%rbx,8)
  0x0000000115eacc89: nopl   0x0(%rax)
  0x0000000115eacc90: add    %al,(%rax)
  0x0000000115eacc92: add    %al,(%rax)
  0x0000000115eacc94: add    %al,(%rax)
  0x0000000115eacc96: add    %al,(%rax)
  0x0000000115eacc98: add    %al,(%rax)
  0x0000000115eacc9a: add    %al,(%rax)
  0x0000000115eacc9c: add    %al,(%rax)
  0x0000000115eacc9e: add    %al,(%rax)

----------------------------------------------------------------------
fadd  98 fadd  [0x0000000115eaccc0, 0x0000000115eacd00]  64 bytes

  0x0000000115eaccc0: vmovss (%rsp),%xmm0
  0x0000000115eaccc5: add    $0x8,%rsp
  0x0000000115eaccc9: vaddss (%rsp),%xmm0,%xmm0
  0x0000000115eaccce: add    $0x8,%rsp
  0x0000000115eaccd2: movzbl 0x1(%r13),%ebx
  0x0000000115eaccd7: inc    %r13
  0x0000000115eaccda: movabs $0x10e100040,%r10
  0x0000000115eacce4: jmpq   *(%r10,%rbx,8)
  0x0000000115eacce8: add    %al,(%rax)
  0x0000000115eaccea: add    %al,(%rax)
  0x0000000115eaccec: add    %al,(%rax)
  0x0000000115eaccee: add    %al,(%rax)
  0x0000000115eaccf0: add    %al,(%rax)
  0x0000000115eaccf2: add    %al,(%rax)
  0x0000000115eaccf4: add    %al,(%rax)
  0x0000000115eaccf6: add    %al,(%rax)
  0x0000000115eaccf8: add    %al,(%rax)
  0x0000000115eaccfa: add    %al,(%rax)
  0x0000000115eaccfc: add    %al,(%rax)
  0x0000000115eaccfe: add    %al,(%rax)

----------------------------------------------------------------------
dadd  99 dadd  [0x0000000115eacd20, 0x0000000115eacd60]  64 bytes

  0x0000000115eacd20: vmovsd (%rsp),%xmm0
  0x0000000115eacd25: add    $0x10,%rsp
  0x0000000115eacd29: vaddsd (%rsp),%xmm0,%xmm0
  0x0000000115eacd2e: add    $0x10,%rsp
  0x0000000115eacd32: movzbl 0x1(%r13),%ebx
  0x0000000115eacd37: inc    %r13
  0x0000000115eacd3a: movabs $0x10e100840,%r10
  0x0000000115eacd44: jmpq   *(%r10,%rbx,8)
  0x0000000115eacd48: add    %al,(%rax)
  0x0000000115eacd4a: add    %al,(%rax)
  0x0000000115eacd4c: add    %al,(%rax)
  0x0000000115eacd4e: add    %al,(%rax)
  0x0000000115eacd50: add    %al,(%rax)
  0x0000000115eacd52: add    %al,(%rax)
  0x0000000115eacd54: add    %al,(%rax)
  0x0000000115eacd56: add    %al,(%rax)
  0x0000000115eacd58: add    %al,(%rax)
  0x0000000115eacd5a: add    %al,(%rax)
  0x0000000115eacd5c: add    %al,(%rax)
  0x0000000115eacd5e: add    %al,(%rax)

----------------------------------------------------------------------
isub  100 isub  [0x0000000115eacd80, 0x0000000115eacdc0]  64 bytes

  0x0000000115eacd80: mov    (%rsp),%eax
  0x0000000115eacd83: add    $0x8,%rsp
  0x0000000115eacd87: mov    %eax,%edx
  0x0000000115eacd89: mov    (%rsp),%eax
  0x0000000115eacd8c: add    $0x8,%rsp
  0x0000000115eacd90: sub    %edx,%eax
  0x0000000115eacd92: movzbl 0x1(%r13),%ebx
  0x0000000115eacd97: inc    %r13
  0x0000000115eacd9a: movabs $0x10e0ff040,%r10
  0x0000000115eacda4: jmpq   *(%r10,%rbx,8)
  0x0000000115eacda8: add    %al,(%rax)
  0x0000000115eacdaa: add    %al,(%rax)
  0x0000000115eacdac: add    %al,(%rax)
  0x0000000115eacdae: add    %al,(%rax)
  0x0000000115eacdb0: add    %al,(%rax)
  0x0000000115eacdb2: add    %al,(%rax)
  0x0000000115eacdb4: add    %al,(%rax)
  0x0000000115eacdb6: add    %al,(%rax)
  0x0000000115eacdb8: add    %al,(%rax)
  0x0000000115eacdba: add    %al,(%rax)
  0x0000000115eacdbc: add    %al,(%rax)
  0x0000000115eacdbe: add    %al,(%rax)

----------------------------------------------------------------------
lsub  101 lsub  [0x0000000115eacde0, 0x0000000115eace20]  64 bytes

  0x0000000115eacde0: mov    (%rsp),%rax
  0x0000000115eacde4: add    $0x10,%rsp
  0x0000000115eacde8: mov    %rax,%rdx
  0x0000000115eacdeb: mov    (%rsp),%rax
  0x0000000115eacdef: add    $0x10,%rsp
  0x0000000115eacdf3: sub    %rdx,%rax
  0x0000000115eacdf6: movzbl 0x1(%r13),%ebx
  0x0000000115eacdfb: inc    %r13
  0x0000000115eacdfe: movabs $0x10e0ff840,%r10
  0x0000000115eace08: jmpq   *(%r10,%rbx,8)
  0x0000000115eace0c: nopl   0x0(%rax)
  0x0000000115eace10: add    %al,(%rax)
  0x0000000115eace12: add    %al,(%rax)
  0x0000000115eace14: add    %al,(%rax)
  0x0000000115eace16: add    %al,(%rax)
  0x0000000115eace18: add    %al,(%rax)
  0x0000000115eace1a: add    %al,(%rax)
  0x0000000115eace1c: add    %al,(%rax)
  0x0000000115eace1e: add    %al,(%rax)

----------------------------------------------------------------------
fsub  102 fsub  [0x0000000115eace40, 0x0000000115eace80]  64 bytes

  0x0000000115eace40: vmovss (%rsp),%xmm0
  0x0000000115eace45: add    $0x8,%rsp
  0x0000000115eace49: vmovaps %xmm0,%xmm1
  0x0000000115eace4d: vmovss (%rsp),%xmm0
  0x0000000115eace52: add    $0x8,%rsp
  0x0000000115eace56: vsubss %xmm1,%xmm0,%xmm0
  0x0000000115eace5a: movzbl 0x1(%r13),%ebx
  0x0000000115eace5f: inc    %r13
  0x0000000115eace62: movabs $0x10e100040,%r10
  0x0000000115eace6c: jmpq   *(%r10,%rbx,8)
  0x0000000115eace70: add    %al,(%rax)
  0x0000000115eace72: add    %al,(%rax)
  0x0000000115eace74: add    %al,(%rax)
  0x0000000115eace76: add    %al,(%rax)
  0x0000000115eace78: add    %al,(%rax)
  0x0000000115eace7a: add    %al,(%rax)
  0x0000000115eace7c: add    %al,(%rax)
  0x0000000115eace7e: add    %al,(%rax)

----------------------------------------------------------------------
dsub  103 dsub  [0x0000000115eacea0, 0x0000000115eacee0]  64 bytes

  0x0000000115eacea0: vmovsd (%rsp),%xmm0
  0x0000000115eacea5: add    $0x10,%rsp
  0x0000000115eacea9: vmovapd %xmm0,%xmm1
  0x0000000115eacead: vmovsd (%rsp),%xmm0
  0x0000000115eaceb2: add    $0x10,%rsp
  0x0000000115eaceb6: vsubsd %xmm1,%xmm0,%xmm0
  0x0000000115eaceba: movzbl 0x1(%r13),%ebx
  0x0000000115eacebf: inc    %r13
  0x0000000115eacec2: movabs $0x10e100840,%r10
  0x0000000115eacecc: jmpq   *(%r10,%rbx,8)
  0x0000000115eaced0: add    %al,(%rax)
  0x0000000115eaced2: add    %al,(%rax)
  0x0000000115eaced4: add    %al,(%rax)
  0x0000000115eaced6: add    %al,(%rax)
  0x0000000115eaced8: add    %al,(%rax)
  0x0000000115eaceda: add    %al,(%rax)
  0x0000000115eacedc: add    %al,(%rax)
  0x0000000115eacede: add    %al,(%rax)

----------------------------------------------------------------------
imul  104 imul  [0x0000000115eacf00, 0x0000000115eacf40]  64 bytes

  0x0000000115eacf00: mov    (%rsp),%eax
  0x0000000115eacf03: add    $0x8,%rsp
  0x0000000115eacf07: mov    (%rsp),%edx
  0x0000000115eacf0a: add    $0x8,%rsp
  0x0000000115eacf0e: imul   %edx,%eax
  0x0000000115eacf11: movzbl 0x1(%r13),%ebx
  0x0000000115eacf16: inc    %r13
  0x0000000115eacf19: movabs $0x10e0ff040,%r10
  0x0000000115eacf23: jmpq   *(%r10,%rbx,8)
  0x0000000115eacf27: nop
  0x0000000115eacf28: add    %al,(%rax)
  0x0000000115eacf2a: add    %al,(%rax)
  0x0000000115eacf2c: add    %al,(%rax)
  0x0000000115eacf2e: add    %al,(%rax)
  0x0000000115eacf30: add    %al,(%rax)
  0x0000000115eacf32: add    %al,(%rax)
  0x0000000115eacf34: add    %al,(%rax)
  0x0000000115eacf36: add    %al,(%rax)
  0x0000000115eacf38: add    %al,(%rax)
  0x0000000115eacf3a: add    %al,(%rax)
  0x0000000115eacf3c: add    %al,(%rax)
  0x0000000115eacf3e: add    %al,(%rax)

----------------------------------------------------------------------
lmul  105 lmul  [0x0000000115eacf60, 0x0000000115eacfa0]  64 bytes

  0x0000000115eacf60: mov    (%rsp),%rax
  0x0000000115eacf64: add    $0x10,%rsp
  0x0000000115eacf68: mov    (%rsp),%rdx
  0x0000000115eacf6c: add    $0x10,%rsp
  0x0000000115eacf70: imul   %rdx,%rax
  0x0000000115eacf74: movzbl 0x1(%r13),%ebx
  0x0000000115eacf79: inc    %r13
  0x0000000115eacf7c: movabs $0x10e0ff840,%r10
  0x0000000115eacf86: jmpq   *(%r10,%rbx,8)
  0x0000000115eacf8a: nopw   0x0(%rax,%rax,1)
  0x0000000115eacf90: add    %al,(%rax)
  0x0000000115eacf92: add    %al,(%rax)
  0x0000000115eacf94: add    %al,(%rax)
  0x0000000115eacf96: add    %al,(%rax)
  0x0000000115eacf98: add    %al,(%rax)
  0x0000000115eacf9a: add    %al,(%rax)
  0x0000000115eacf9c: add    %al,(%rax)
  0x0000000115eacf9e: add    %al,(%rax)

----------------------------------------------------------------------
fmul  106 fmul  [0x0000000115eacfc0, 0x0000000115ead000]  64 bytes

  0x0000000115eacfc0: vmovss (%rsp),%xmm0
  0x0000000115eacfc5: add    $0x8,%rsp
  0x0000000115eacfc9: vmulss (%rsp),%xmm0,%xmm0
  0x0000000115eacfce: add    $0x8,%rsp
  0x0000000115eacfd2: movzbl 0x1(%r13),%ebx
  0x0000000115eacfd7: inc    %r13
  0x0000000115eacfda: movabs $0x10e100040,%r10
  0x0000000115eacfe4: jmpq   *(%r10,%rbx,8)
  0x0000000115eacfe8: add    %al,(%rax)
  0x0000000115eacfea: add    %al,(%rax)
  0x0000000115eacfec: add    %al,(%rax)
  0x0000000115eacfee: add    %al,(%rax)
  0x0000000115eacff0: add    %al,(%rax)
  0x0000000115eacff2: add    %al,(%rax)
  0x0000000115eacff4: add    %al,(%rax)
  0x0000000115eacff6: add    %al,(%rax)
  0x0000000115eacff8: add    %al,(%rax)
  0x0000000115eacffa: add    %al,(%rax)
  0x0000000115eacffc: add    %al,(%rax)
  0x0000000115eacffe: add    %al,(%rax)

----------------------------------------------------------------------
dmul  107 dmul  [0x0000000115ead020, 0x0000000115ead060]  64 bytes

  0x0000000115ead020: vmovsd (%rsp),%xmm0
  0x0000000115ead025: add    $0x10,%rsp
  0x0000000115ead029: vmulsd (%rsp),%xmm0,%xmm0
  0x0000000115ead02e: add    $0x10,%rsp
  0x0000000115ead032: movzbl 0x1(%r13),%ebx
  0x0000000115ead037: inc    %r13
  0x0000000115ead03a: movabs $0x10e100840,%r10
  0x0000000115ead044: jmpq   *(%r10,%rbx,8)
  0x0000000115ead048: add    %al,(%rax)
  0x0000000115ead04a: add    %al,(%rax)
  0x0000000115ead04c: add    %al,(%rax)
  0x0000000115ead04e: add    %al,(%rax)
  0x0000000115ead050: add    %al,(%rax)
  0x0000000115ead052: add    %al,(%rax)
  0x0000000115ead054: add    %al,(%rax)
  0x0000000115ead056: add    %al,(%rax)
  0x0000000115ead058: add    %al,(%rax)
  0x0000000115ead05a: add    %al,(%rax)
  0x0000000115ead05c: add    %al,(%rax)
  0x0000000115ead05e: add    %al,(%rax)

----------------------------------------------------------------------
idiv  108 idiv  [0x0000000115ead080, 0x0000000115ead0c0]  64 bytes

  0x0000000115ead080: mov    (%rsp),%eax
  0x0000000115ead083: add    $0x8,%rsp
  0x0000000115ead087: mov    %eax,%ecx
  0x0000000115ead089: mov    (%rsp),%eax
  0x0000000115ead08c: add    $0x8,%rsp
  0x0000000115ead090: cmp    $0x80000000,%eax
  0x0000000115ead096: jne    0x0000000115ead0a7
  0x0000000115ead09c: xor    %edx,%edx
  0x0000000115ead09e: cmp    $0xffffffffffffffff,%ecx
  0x0000000115ead0a1: je     0x0000000115ead0aa
  0x0000000115ead0a7: cltd   
  0x0000000115ead0a8: idiv   %ecx
  0x0000000115ead0aa: movzbl 0x1(%r13),%ebx
  0x0000000115ead0af: inc    %r13
  0x0000000115ead0b2: movabs $0x10e0ff040,%r10
  0x0000000115ead0bc: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
ldiv  109 ldiv  [0x0000000115ead0e0, 0x0000000115ead140]  96 bytes

  0x0000000115ead0e0: mov    (%rsp),%rax
  0x0000000115ead0e4: add    $0x10,%rsp
  0x0000000115ead0e8: mov    %rax,%rcx
  0x0000000115ead0eb: mov    (%rsp),%rax
  0x0000000115ead0ef: add    $0x10,%rsp
  0x0000000115ead0f3: test   %rcx,%rcx
  0x0000000115ead0f6: je     0x0000000115ea3997
  0x0000000115ead0fc: cmp    -0x807c5db(%rip),%rax        # 0x000000010de30b28
  0x0000000115ead103: jne    0x0000000115ead115
  0x0000000115ead109: xor    %edx,%edx
  0x0000000115ead10b: cmp    $0xffffffffffffffff,%rcx
  0x0000000115ead10f: je     0x0000000115ead11a
  0x0000000115ead115: cqto   
  0x0000000115ead117: idiv   %rcx
  0x0000000115ead11a: movzbl 0x1(%r13),%ebx
  0x0000000115ead11f: inc    %r13
  0x0000000115ead122: movabs $0x10e0ff840,%r10
  0x0000000115ead12c: jmpq   *(%r10,%rbx,8)
  0x0000000115ead130: add    %al,(%rax)
  0x0000000115ead132: add    %al,(%rax)
  0x0000000115ead134: add    %al,(%rax)
  0x0000000115ead136: add    %al,(%rax)
  0x0000000115ead138: add    %al,(%rax)
  0x0000000115ead13a: add    %al,(%rax)
  0x0000000115ead13c: add    %al,(%rax)
  0x0000000115ead13e: add    %al,(%rax)

----------------------------------------------------------------------
fdiv  110 fdiv  [0x0000000115ead160, 0x0000000115ead1a0]  64 bytes

  0x0000000115ead160: vmovss (%rsp),%xmm0
  0x0000000115ead165: add    $0x8,%rsp
  0x0000000115ead169: vmovaps %xmm0,%xmm1
  0x0000000115ead16d: vmovss (%rsp),%xmm0
  0x0000000115ead172: add    $0x8,%rsp
  0x0000000115ead176: vdivss %xmm1,%xmm0,%xmm0
  0x0000000115ead17a: movzbl 0x1(%r13),%ebx
  0x0000000115ead17f: inc    %r13
  0x0000000115ead182: movabs $0x10e100040,%r10
  0x0000000115ead18c: jmpq   *(%r10,%rbx,8)
  0x0000000115ead190: add    %al,(%rax)
  0x0000000115ead192: add    %al,(%rax)
  0x0000000115ead194: add    %al,(%rax)
  0x0000000115ead196: add    %al,(%rax)
  0x0000000115ead198: add    %al,(%rax)
  0x0000000115ead19a: add    %al,(%rax)
  0x0000000115ead19c: add    %al,(%rax)
  0x0000000115ead19e: add    %al,(%rax)

----------------------------------------------------------------------
ddiv  111 ddiv  [0x0000000115ead1c0, 0x0000000115ead200]  64 bytes

  0x0000000115ead1c0: vmovsd (%rsp),%xmm0
  0x0000000115ead1c5: add    $0x10,%rsp
  0x0000000115ead1c9: vmovapd %xmm0,%xmm1
  0x0000000115ead1cd: vmovsd (%rsp),%xmm0
  0x0000000115ead1d2: add    $0x10,%rsp
  0x0000000115ead1d6: vdivsd %xmm1,%xmm0,%xmm0
  0x0000000115ead1da: movzbl 0x1(%r13),%ebx
  0x0000000115ead1df: inc    %r13
  0x0000000115ead1e2: movabs $0x10e100840,%r10
  0x0000000115ead1ec: jmpq   *(%r10,%rbx,8)
  0x0000000115ead1f0: add    %al,(%rax)
  0x0000000115ead1f2: add    %al,(%rax)
  0x0000000115ead1f4: add    %al,(%rax)
  0x0000000115ead1f6: add    %al,(%rax)
  0x0000000115ead1f8: add    %al,(%rax)
  0x0000000115ead1fa: add    %al,(%rax)
  0x0000000115ead1fc: add    %al,(%rax)
  0x0000000115ead1fe: add    %al,(%rax)

----------------------------------------------------------------------
irem  112 irem  [0x0000000115ead220, 0x0000000115ead280]  96 bytes

  0x0000000115ead220: mov    (%rsp),%eax
  0x0000000115ead223: add    $0x8,%rsp
  0x0000000115ead227: mov    %eax,%ecx
  0x0000000115ead229: mov    (%rsp),%eax
  0x0000000115ead22c: add    $0x8,%rsp
  0x0000000115ead230: cmp    $0x80000000,%eax
  0x0000000115ead236: jne    0x0000000115ead247
  0x0000000115ead23c: xor    %edx,%edx
  0x0000000115ead23e: cmp    $0xffffffffffffffff,%ecx
  0x0000000115ead241: je     0x0000000115ead24a
  0x0000000115ead247: cltd   
  0x0000000115ead248: idiv   %ecx
  0x0000000115ead24a: mov    %edx,%eax
  0x0000000115ead24c: movzbl 0x1(%r13),%ebx
  0x0000000115ead251: inc    %r13
  0x0000000115ead254: movabs $0x10e0ff040,%r10
  0x0000000115ead25e: jmpq   *(%r10,%rbx,8)
  0x0000000115ead262: nopw   0x0(%rax,%rax,1)
  0x0000000115ead268: add    %al,(%rax)
  0x0000000115ead26a: add    %al,(%rax)
  0x0000000115ead26c: add    %al,(%rax)
  0x0000000115ead26e: add    %al,(%rax)
  0x0000000115ead270: add    %al,(%rax)
  0x0000000115ead272: add    %al,(%rax)
  0x0000000115ead274: add    %al,(%rax)
  0x0000000115ead276: add    %al,(%rax)
  0x0000000115ead278: add    %al,(%rax)
  0x0000000115ead27a: add    %al,(%rax)
  0x0000000115ead27c: add    %al,(%rax)
  0x0000000115ead27e: add    %al,(%rax)

----------------------------------------------------------------------
lrem  113 lrem  [0x0000000115ead2a0, 0x0000000115ead300]  96 bytes

  0x0000000115ead2a0: mov    (%rsp),%rax
  0x0000000115ead2a4: add    $0x10,%rsp
  0x0000000115ead2a8: mov    %rax,%rcx
  0x0000000115ead2ab: mov    (%rsp),%rax
  0x0000000115ead2af: add    $0x10,%rsp
  0x0000000115ead2b3: test   %rcx,%rcx
  0x0000000115ead2b6: je     0x0000000115ea3997
  0x0000000115ead2bc: cmp    -0x807c79b(%rip),%rax        # 0x000000010de30b28
  0x0000000115ead2c3: jne    0x0000000115ead2d5
  0x0000000115ead2c9: xor    %edx,%edx
  0x0000000115ead2cb: cmp    $0xffffffffffffffff,%rcx
  0x0000000115ead2cf: je     0x0000000115ead2da
  0x0000000115ead2d5: cqto   
  0x0000000115ead2d7: idiv   %rcx
  0x0000000115ead2da: mov    %rdx,%rax
  0x0000000115ead2dd: movzbl 0x1(%r13),%ebx
  0x0000000115ead2e2: inc    %r13
  0x0000000115ead2e5: movabs $0x10e0ff840,%r10
  0x0000000115ead2ef: jmpq   *(%r10,%rbx,8)
  0x0000000115ead2f3: nopl   0x0(%rax,%rax,1)
  0x0000000115ead2f8: add    %al,(%rax)
  0x0000000115ead2fa: add    %al,(%rax)
  0x0000000115ead2fc: add    %al,(%rax)
  0x0000000115ead2fe: add    %al,(%rax)

----------------------------------------------------------------------
frem  114 frem  [0x0000000115ead320, 0x0000000115ead380]  96 bytes

  0x0000000115ead320: vmovss (%rsp),%xmm0
  0x0000000115ead325: add    $0x8,%rsp
  0x0000000115ead329: vmovaps %xmm0,%xmm1
  0x0000000115ead32d: vmovss (%rsp),%xmm0
  0x0000000115ead332: add    $0x8,%rsp
  0x0000000115ead336: test   $0xf,%esp
  0x0000000115ead33c: je     0x0000000115ead354
  0x0000000115ead342: sub    $0x8,%rsp
  0x0000000115ead346: callq  0x000000010dce869a
  0x0000000115ead34b: add    $0x8,%rsp
  0x0000000115ead34f: jmpq   0x0000000115ead359
  0x0000000115ead354: callq  0x000000010dce869a
  0x0000000115ead359: movzbl 0x1(%r13),%ebx
  0x0000000115ead35e: inc    %r13
  0x0000000115ead361: movabs $0x10e100040,%r10
  0x0000000115ead36b: jmpq   *(%r10,%rbx,8)
  0x0000000115ead36f: nop
  0x0000000115ead370: add    %al,(%rax)
  0x0000000115ead372: add    %al,(%rax)
  0x0000000115ead374: add    %al,(%rax)
  0x0000000115ead376: add    %al,(%rax)
  0x0000000115ead378: add    %al,(%rax)
  0x0000000115ead37a: add    %al,(%rax)
  0x0000000115ead37c: add    %al,(%rax)
  0x0000000115ead37e: add    %al,(%rax)

----------------------------------------------------------------------
drem  115 drem  [0x0000000115ead3a0, 0x0000000115ead400]  96 bytes

  0x0000000115ead3a0: vmovsd (%rsp),%xmm0
  0x0000000115ead3a5: add    $0x10,%rsp
  0x0000000115ead3a9: vmovapd %xmm0,%xmm1
  0x0000000115ead3ad: vmovsd (%rsp),%xmm0
  0x0000000115ead3b2: add    $0x10,%rsp
  0x0000000115ead3b6: test   $0xf,%esp
  0x0000000115ead3bc: je     0x0000000115ead3d4
  0x0000000115ead3c2: sub    $0x8,%rsp
  0x0000000115ead3c6: callq  0x000000010dce8690
  0x0000000115ead3cb: add    $0x8,%rsp
  0x0000000115ead3cf: jmpq   0x0000000115ead3d9
  0x0000000115ead3d4: callq  0x000000010dce8690
  0x0000000115ead3d9: movzbl 0x1(%r13),%ebx
  0x0000000115ead3de: inc    %r13
  0x0000000115ead3e1: movabs $0x10e100840,%r10
  0x0000000115ead3eb: jmpq   *(%r10,%rbx,8)
  0x0000000115ead3ef: nop
  0x0000000115ead3f0: add    %al,(%rax)
  0x0000000115ead3f2: add    %al,(%rax)
  0x0000000115ead3f4: add    %al,(%rax)
  0x0000000115ead3f6: add    %al,(%rax)
  0x0000000115ead3f8: add    %al,(%rax)
  0x0000000115ead3fa: add    %al,(%rax)
  0x0000000115ead3fc: add    %al,(%rax)
  0x0000000115ead3fe: add    %al,(%rax)

----------------------------------------------------------------------
ineg  116 ineg  [0x0000000115ead420, 0x0000000115ead440]  32 bytes

  0x0000000115ead420: mov    (%rsp),%eax
  0x0000000115ead423: add    $0x8,%rsp
  0x0000000115ead427: neg    %eax
  0x0000000115ead429: movzbl 0x1(%r13),%ebx
  0x0000000115ead42e: inc    %r13
  0x0000000115ead431: movabs $0x10e0ff040,%r10
  0x0000000115ead43b: jmpq   *(%r10,%rbx,8)
  0x0000000115ead43f: nop

----------------------------------------------------------------------
lneg  117 lneg  [0x0000000115ead460, 0x0000000115ead4a0]  64 bytes

  0x0000000115ead460: mov    (%rsp),%rax
  0x0000000115ead464: add    $0x10,%rsp
  0x0000000115ead468: neg    %rax
  0x0000000115ead46b: movzbl 0x1(%r13),%ebx
  0x0000000115ead470: inc    %r13
  0x0000000115ead473: movabs $0x10e0ff840,%r10
  0x0000000115ead47d: jmpq   *(%r10,%rbx,8)
  0x0000000115ead481: nopl   0x0(%rax)
  0x0000000115ead488: add    %al,(%rax)
  0x0000000115ead48a: add    %al,(%rax)
  0x0000000115ead48c: add    %al,(%rax)
  0x0000000115ead48e: add    %al,(%rax)
  0x0000000115ead490: add    %al,(%rax)
  0x0000000115ead492: add    %al,(%rax)
  0x0000000115ead494: add    %al,(%rax)
  0x0000000115ead496: add    %al,(%rax)
  0x0000000115ead498: add    %al,(%rax)
  0x0000000115ead49a: add    %al,(%rax)
  0x0000000115ead49c: add    %al,(%rax)
  0x0000000115ead49e: add    %al,(%rax)

----------------------------------------------------------------------
fneg  118 fneg  [0x0000000115ead4c0, 0x0000000115ead500]  64 bytes

  0x0000000115ead4c0: vmovss (%rsp),%xmm0
  0x0000000115ead4c5: add    $0x8,%rsp
  0x0000000115ead4c9: vxorps -0x7d9f2c1(%rip),%xmm0,%xmm0        # 0x000000010e10e210
  0x0000000115ead4d1: movzbl 0x1(%r13),%ebx
  0x0000000115ead4d6: inc    %r13
  0x0000000115ead4d9: movabs $0x10e100040,%r10
  0x0000000115ead4e3: jmpq   *(%r10,%rbx,8)
  0x0000000115ead4e7: nop
  0x0000000115ead4e8: add    %al,(%rax)
  0x0000000115ead4ea: add    %al,(%rax)
  0x0000000115ead4ec: add    %al,(%rax)
  0x0000000115ead4ee: add    %al,(%rax)
  0x0000000115ead4f0: add    %al,(%rax)
  0x0000000115ead4f2: add    %al,(%rax)
  0x0000000115ead4f4: add    %al,(%rax)
  0x0000000115ead4f6: add    %al,(%rax)
  0x0000000115ead4f8: add    %al,(%rax)
  0x0000000115ead4fa: add    %al,(%rax)
  0x0000000115ead4fc: add    %al,(%rax)
  0x0000000115ead4fe: add    %al,(%rax)

----------------------------------------------------------------------
dneg  119 dneg  [0x0000000115ead520, 0x0000000115ead560]  64 bytes

  0x0000000115ead520: vmovsd (%rsp),%xmm0
  0x0000000115ead525: add    $0x10,%rsp
  0x0000000115ead529: vxorpd -0x7d9f351(%rip),%xmm0,%xmm0        # 0x000000010e10e1e0
  0x0000000115ead531: movzbl 0x1(%r13),%ebx
  0x0000000115ead536: inc    %r13
  0x0000000115ead539: movabs $0x10e100840,%r10
  0x0000000115ead543: jmpq   *(%r10,%rbx,8)
  0x0000000115ead547: nop
  0x0000000115ead548: add    %al,(%rax)
  0x0000000115ead54a: add    %al,(%rax)
  0x0000000115ead54c: add    %al,(%rax)
  0x0000000115ead54e: add    %al,(%rax)
  0x0000000115ead550: add    %al,(%rax)
  0x0000000115ead552: add    %al,(%rax)
  0x0000000115ead554: add    %al,(%rax)
  0x0000000115ead556: add    %al,(%rax)
  0x0000000115ead558: add    %al,(%rax)
  0x0000000115ead55a: add    %al,(%rax)
  0x0000000115ead55c: add    %al,(%rax)
  0x0000000115ead55e: add    %al,(%rax)

----------------------------------------------------------------------
ishl  120 ishl  [0x0000000115ead580, 0x0000000115ead5c0]  64 bytes

  0x0000000115ead580: mov    (%rsp),%eax
  0x0000000115ead583: add    $0x8,%rsp
  0x0000000115ead587: mov    %eax,%ecx
  0x0000000115ead589: mov    (%rsp),%eax
  0x0000000115ead58c: add    $0x8,%rsp
  0x0000000115ead590: shl    %cl,%eax
  0x0000000115ead592: movzbl 0x1(%r13),%ebx
  0x0000000115ead597: inc    %r13
  0x0000000115ead59a: movabs $0x10e0ff040,%r10
  0x0000000115ead5a4: jmpq   *(%r10,%rbx,8)
  0x0000000115ead5a8: add    %al,(%rax)
  0x0000000115ead5aa: add    %al,(%rax)
  0x0000000115ead5ac: add    %al,(%rax)
  0x0000000115ead5ae: add    %al,(%rax)
  0x0000000115ead5b0: add    %al,(%rax)
  0x0000000115ead5b2: add    %al,(%rax)
  0x0000000115ead5b4: add    %al,(%rax)
  0x0000000115ead5b6: add    %al,(%rax)
  0x0000000115ead5b8: add    %al,(%rax)
  0x0000000115ead5ba: add    %al,(%rax)
  0x0000000115ead5bc: add    %al,(%rax)
  0x0000000115ead5be: add    %al,(%rax)

----------------------------------------------------------------------
lshl  121 lshl  [0x0000000115ead5e0, 0x0000000115ead620]  64 bytes

  0x0000000115ead5e0: mov    (%rsp),%eax
  0x0000000115ead5e3: add    $0x8,%rsp
  0x0000000115ead5e7: mov    %eax,%ecx
  0x0000000115ead5e9: mov    (%rsp),%rax
  0x0000000115ead5ed: add    $0x10,%rsp
  0x0000000115ead5f1: shl    %cl,%rax
  0x0000000115ead5f4: movzbl 0x1(%r13),%ebx
  0x0000000115ead5f9: inc    %r13
  0x0000000115ead5fc: movabs $0x10e0ff840,%r10
  0x0000000115ead606: jmpq   *(%r10,%rbx,8)
  0x0000000115ead60a: nopw   0x0(%rax,%rax,1)
  0x0000000115ead610: add    %al,(%rax)
  0x0000000115ead612: add    %al,(%rax)
  0x0000000115ead614: add    %al,(%rax)
  0x0000000115ead616: add    %al,(%rax)
  0x0000000115ead618: add    %al,(%rax)
  0x0000000115ead61a: add    %al,(%rax)
  0x0000000115ead61c: add    %al,(%rax)
  0x0000000115ead61e: add    %al,(%rax)

----------------------------------------------------------------------
ishr  122 ishr  [0x0000000115ead640, 0x0000000115ead680]  64 bytes

  0x0000000115ead640: mov    (%rsp),%eax
  0x0000000115ead643: add    $0x8,%rsp
  0x0000000115ead647: mov    %eax,%ecx
  0x0000000115ead649: mov    (%rsp),%eax
  0x0000000115ead64c: add    $0x8,%rsp
  0x0000000115ead650: sar    %cl,%eax
  0x0000000115ead652: movzbl 0x1(%r13),%ebx
  0x0000000115ead657: inc    %r13
  0x0000000115ead65a: movabs $0x10e0ff040,%r10
  0x0000000115ead664: jmpq   *(%r10,%rbx,8)
  0x0000000115ead668: add    %al,(%rax)
  0x0000000115ead66a: add    %al,(%rax)
  0x0000000115ead66c: add    %al,(%rax)
  0x0000000115ead66e: add    %al,(%rax)
  0x0000000115ead670: add    %al,(%rax)
  0x0000000115ead672: add    %al,(%rax)
  0x0000000115ead674: add    %al,(%rax)
  0x0000000115ead676: add    %al,(%rax)
  0x0000000115ead678: add    %al,(%rax)
  0x0000000115ead67a: add    %al,(%rax)
  0x0000000115ead67c: add    %al,(%rax)
  0x0000000115ead67e: add    %al,(%rax)

----------------------------------------------------------------------
lshr  123 lshr  [0x0000000115ead6a0, 0x0000000115ead6e0]  64 bytes

  0x0000000115ead6a0: mov    (%rsp),%eax
  0x0000000115ead6a3: add    $0x8,%rsp
  0x0000000115ead6a7: mov    %eax,%ecx
  0x0000000115ead6a9: mov    (%rsp),%rax
  0x0000000115ead6ad: add    $0x10,%rsp
  0x0000000115ead6b1: sar    %cl,%rax
  0x0000000115ead6b4: movzbl 0x1(%r13),%ebx
  0x0000000115ead6b9: inc    %r13
  0x0000000115ead6bc: movabs $0x10e0ff840,%r10
  0x0000000115ead6c6: jmpq   *(%r10,%rbx,8)
  0x0000000115ead6ca: nopw   0x0(%rax,%rax,1)
  0x0000000115ead6d0: add    %al,(%rax)
  0x0000000115ead6d2: add    %al,(%rax)
  0x0000000115ead6d4: add    %al,(%rax)
  0x0000000115ead6d6: add    %al,(%rax)
  0x0000000115ead6d8: add    %al,(%rax)
  0x0000000115ead6da: add    %al,(%rax)
  0x0000000115ead6dc: add    %al,(%rax)
  0x0000000115ead6de: add    %al,(%rax)

----------------------------------------------------------------------
iushr  124 iushr  [0x0000000115ead700, 0x0000000115ead740]  64 bytes

  0x0000000115ead700: mov    (%rsp),%eax
  0x0000000115ead703: add    $0x8,%rsp
  0x0000000115ead707: mov    %eax,%ecx
  0x0000000115ead709: mov    (%rsp),%eax
  0x0000000115ead70c: add    $0x8,%rsp
  0x0000000115ead710: shr    %cl,%eax
  0x0000000115ead712: movzbl 0x1(%r13),%ebx
  0x0000000115ead717: inc    %r13
  0x0000000115ead71a: movabs $0x10e0ff040,%r10
  0x0000000115ead724: jmpq   *(%r10,%rbx,8)
  0x0000000115ead728: add    %al,(%rax)
  0x0000000115ead72a: add    %al,(%rax)
  0x0000000115ead72c: add    %al,(%rax)
  0x0000000115ead72e: add    %al,(%rax)
  0x0000000115ead730: add    %al,(%rax)
  0x0000000115ead732: add    %al,(%rax)
  0x0000000115ead734: add    %al,(%rax)
  0x0000000115ead736: add    %al,(%rax)
  0x0000000115ead738: add    %al,(%rax)
  0x0000000115ead73a: add    %al,(%rax)
  0x0000000115ead73c: add    %al,(%rax)
  0x0000000115ead73e: add    %al,(%rax)

----------------------------------------------------------------------
lushr  125 lushr  [0x0000000115ead760, 0x0000000115ead7a0]  64 bytes

  0x0000000115ead760: mov    (%rsp),%eax
  0x0000000115ead763: add    $0x8,%rsp
  0x0000000115ead767: mov    %eax,%ecx
  0x0000000115ead769: mov    (%rsp),%rax
  0x0000000115ead76d: add    $0x10,%rsp
  0x0000000115ead771: shr    %cl,%rax
  0x0000000115ead774: movzbl 0x1(%r13),%ebx
  0x0000000115ead779: inc    %r13
  0x0000000115ead77c: movabs $0x10e0ff840,%r10
  0x0000000115ead786: jmpq   *(%r10,%rbx,8)
  0x0000000115ead78a: nopw   0x0(%rax,%rax,1)
  0x0000000115ead790: add    %al,(%rax)
  0x0000000115ead792: add    %al,(%rax)
  0x0000000115ead794: add    %al,(%rax)
  0x0000000115ead796: add    %al,(%rax)
  0x0000000115ead798: add    %al,(%rax)
  0x0000000115ead79a: add    %al,(%rax)
  0x0000000115ead79c: add    %al,(%rax)
  0x0000000115ead79e: add    %al,(%rax)

----------------------------------------------------------------------
iand  126 iand  [0x0000000115ead7c0, 0x0000000115ead800]  64 bytes

  0x0000000115ead7c0: mov    (%rsp),%eax
  0x0000000115ead7c3: add    $0x8,%rsp
  0x0000000115ead7c7: mov    (%rsp),%edx
  0x0000000115ead7ca: add    $0x8,%rsp
  0x0000000115ead7ce: and    %edx,%eax
  0x0000000115ead7d0: movzbl 0x1(%r13),%ebx
  0x0000000115ead7d5: inc    %r13
  0x0000000115ead7d8: movabs $0x10e0ff040,%r10
  0x0000000115ead7e2: jmpq   *(%r10,%rbx,8)
  0x0000000115ead7e6: xchg   %ax,%ax
  0x0000000115ead7e8: add    %al,(%rax)
  0x0000000115ead7ea: add    %al,(%rax)
  0x0000000115ead7ec: add    %al,(%rax)
  0x0000000115ead7ee: add    %al,(%rax)
  0x0000000115ead7f0: add    %al,(%rax)
  0x0000000115ead7f2: add    %al,(%rax)
  0x0000000115ead7f4: add    %al,(%rax)
  0x0000000115ead7f6: add    %al,(%rax)
  0x0000000115ead7f8: add    %al,(%rax)
  0x0000000115ead7fa: add    %al,(%rax)
  0x0000000115ead7fc: add    %al,(%rax)
  0x0000000115ead7fe: add    %al,(%rax)

----------------------------------------------------------------------
land  127 land  [0x0000000115ead820, 0x0000000115ead860]  64 bytes

  0x0000000115ead820: mov    (%rsp),%rax
  0x0000000115ead824: add    $0x10,%rsp
  0x0000000115ead828: mov    (%rsp),%rdx
  0x0000000115ead82c: add    $0x10,%rsp
  0x0000000115ead830: and    %rdx,%rax
  0x0000000115ead833: movzbl 0x1(%r13),%ebx
  0x0000000115ead838: inc    %r13
  0x0000000115ead83b: movabs $0x10e0ff840,%r10
  0x0000000115ead845: jmpq   *(%r10,%rbx,8)
  0x0000000115ead849: nopl   0x0(%rax)
  0x0000000115ead850: add    %al,(%rax)
  0x0000000115ead852: add    %al,(%rax)
  0x0000000115ead854: add    %al,(%rax)
  0x0000000115ead856: add    %al,(%rax)
  0x0000000115ead858: add    %al,(%rax)
  0x0000000115ead85a: add    %al,(%rax)
  0x0000000115ead85c: add    %al,(%rax)
  0x0000000115ead85e: add    %al,(%rax)

----------------------------------------------------------------------
ior  128 ior  [0x0000000115ead880, 0x0000000115ead8c0]  64 bytes

  0x0000000115ead880: mov    (%rsp),%eax
  0x0000000115ead883: add    $0x8,%rsp
  0x0000000115ead887: mov    (%rsp),%edx
  0x0000000115ead88a: add    $0x8,%rsp
  0x0000000115ead88e: or     %edx,%eax
  0x0000000115ead890: movzbl 0x1(%r13),%ebx
  0x0000000115ead895: inc    %r13
  0x0000000115ead898: movabs $0x10e0ff040,%r10
  0x0000000115ead8a2: jmpq   *(%r10,%rbx,8)
  0x0000000115ead8a6: xchg   %ax,%ax
  0x0000000115ead8a8: add    %al,(%rax)
  0x0000000115ead8aa: add    %al,(%rax)
  0x0000000115ead8ac: add    %al,(%rax)
  0x0000000115ead8ae: add    %al,(%rax)
  0x0000000115ead8b0: add    %al,(%rax)
  0x0000000115ead8b2: add    %al,(%rax)
  0x0000000115ead8b4: add    %al,(%rax)
  0x0000000115ead8b6: add    %al,(%rax)
  0x0000000115ead8b8: add    %al,(%rax)
  0x0000000115ead8ba: add    %al,(%rax)
  0x0000000115ead8bc: add    %al,(%rax)
  0x0000000115ead8be: add    %al,(%rax)

----------------------------------------------------------------------
lor  129 lor  [0x0000000115ead8e0, 0x0000000115ead920]  64 bytes

  0x0000000115ead8e0: mov    (%rsp),%rax
  0x0000000115ead8e4: add    $0x10,%rsp
  0x0000000115ead8e8: mov    (%rsp),%rdx
  0x0000000115ead8ec: add    $0x10,%rsp
  0x0000000115ead8f0: or     %rdx,%rax
  0x0000000115ead8f3: movzbl 0x1(%r13),%ebx
  0x0000000115ead8f8: inc    %r13
  0x0000000115ead8fb: movabs $0x10e0ff840,%r10
  0x0000000115ead905: jmpq   *(%r10,%rbx,8)
  0x0000000115ead909: nopl   0x0(%rax)
  0x0000000115ead910: add    %al,(%rax)
  0x0000000115ead912: add    %al,(%rax)
  0x0000000115ead914: add    %al,(%rax)
  0x0000000115ead916: add    %al,(%rax)
  0x0000000115ead918: add    %al,(%rax)
  0x0000000115ead91a: add    %al,(%rax)
  0x0000000115ead91c: add    %al,(%rax)
  0x0000000115ead91e: add    %al,(%rax)

----------------------------------------------------------------------
ixor  130 ixor  [0x0000000115ead940, 0x0000000115ead980]  64 bytes

  0x0000000115ead940: mov    (%rsp),%eax
  0x0000000115ead943: add    $0x8,%rsp
  0x0000000115ead947: mov    (%rsp),%edx
  0x0000000115ead94a: add    $0x8,%rsp
  0x0000000115ead94e: xor    %edx,%eax
  0x0000000115ead950: movzbl 0x1(%r13),%ebx
  0x0000000115ead955: inc    %r13
  0x0000000115ead958: movabs $0x10e0ff040,%r10
  0x0000000115ead962: jmpq   *(%r10,%rbx,8)
  0x0000000115ead966: xchg   %ax,%ax
  0x0000000115ead968: add    %al,(%rax)
  0x0000000115ead96a: add    %al,(%rax)
  0x0000000115ead96c: add    %al,(%rax)
  0x0000000115ead96e: add    %al,(%rax)
  0x0000000115ead970: add    %al,(%rax)
  0x0000000115ead972: add    %al,(%rax)
  0x0000000115ead974: add    %al,(%rax)
  0x0000000115ead976: add    %al,(%rax)
  0x0000000115ead978: add    %al,(%rax)
  0x0000000115ead97a: add    %al,(%rax)
  0x0000000115ead97c: add    %al,(%rax)
  0x0000000115ead97e: add    %al,(%rax)

----------------------------------------------------------------------
lxor  131 lxor  [0x0000000115ead9a0, 0x0000000115ead9e0]  64 bytes

  0x0000000115ead9a0: mov    (%rsp),%rax
  0x0000000115ead9a4: add    $0x10,%rsp
  0x0000000115ead9a8: mov    (%rsp),%rdx
  0x0000000115ead9ac: add    $0x10,%rsp
  0x0000000115ead9b0: xor    %rdx,%rax
  0x0000000115ead9b3: movzbl 0x1(%r13),%ebx
  0x0000000115ead9b8: inc    %r13
  0x0000000115ead9bb: movabs $0x10e0ff840,%r10
  0x0000000115ead9c5: jmpq   *(%r10,%rbx,8)
  0x0000000115ead9c9: nopl   0x0(%rax)
  0x0000000115ead9d0: add    %al,(%rax)
  0x0000000115ead9d2: add    %al,(%rax)
  0x0000000115ead9d4: add    %al,(%rax)
  0x0000000115ead9d6: add    %al,(%rax)
  0x0000000115ead9d8: add    %al,(%rax)
  0x0000000115ead9da: add    %al,(%rax)
  0x0000000115ead9dc: add    %al,(%rax)
  0x0000000115ead9de: add    %al,(%rax)

----------------------------------------------------------------------
iinc  132 iinc  [0x0000000115eada00, 0x0000000115eadaa0]  160 bytes

  0x0000000115eada00: push   %rax
  0x0000000115eada01: jmpq   0x0000000115eada30
  0x0000000115eada06: sub    $0x8,%rsp
  0x0000000115eada0a: vmovss %xmm0,(%rsp)
  0x0000000115eada0f: jmpq   0x0000000115eada30
  0x0000000115eada14: sub    $0x10,%rsp
  0x0000000115eada18: vmovsd %xmm0,(%rsp)
  0x0000000115eada1d: jmpq   0x0000000115eada30
  0x0000000115eada22: sub    $0x10,%rsp
  0x0000000115eada26: mov    %rax,(%rsp)
  0x0000000115eada2a: jmpq   0x0000000115eada30
  0x0000000115eada2f: push   %rax
  0x0000000115eada30: movsbl 0x2(%r13),%edx
  0x0000000115eada35: movzbl 0x1(%r13),%ebx
  0x0000000115eada3a: neg    %rbx
  0x0000000115eada3d: add    %edx,(%r14,%rbx,8)
  0x0000000115eada41: movzbl 0x3(%r13),%ebx
  0x0000000115eada46: add    $0x3,%r13
  0x0000000115eada4a: movabs $0x10e101840,%r10
  0x0000000115eada54: jmpq   *(%r10,%rbx,8)
  0x0000000115eada58: mov    0x4(%r13),%edx
  0x0000000115eada5c: movzwl 0x2(%r13),%ebx
  0x0000000115eada61: bswap  %ebx
  0x0000000115eada63: shr    $0x10,%ebx
  0x0000000115eada66: neg    %rbx
  0x0000000115eada69: bswap  %edx
  0x0000000115eada6b: sar    $0x10,%edx
  0x0000000115eada6e: add    %edx,(%r14,%rbx,8)
  0x0000000115eada72: movzbl 0x6(%r13),%ebx
  0x0000000115eada77: add    $0x6,%r13
  0x0000000115eada7b: movabs $0x10e101840,%r10
  0x0000000115eada85: jmpq   *(%r10,%rbx,8)
  0x0000000115eada89: nopl   0x0(%rax)
  0x0000000115eada90: add    %al,(%rax)
  0x0000000115eada92: add    %al,(%rax)
  0x0000000115eada94: add    %al,(%rax)
  0x0000000115eada96: add    %al,(%rax)
  0x0000000115eada98: add    %al,(%rax)
  0x0000000115eada9a: add    %al,(%rax)
  0x0000000115eada9c: add    %al,(%rax)
  0x0000000115eada9e: add    %al,(%rax)

----------------------------------------------------------------------
i2l  133 i2l  [0x0000000115eadac0, 0x0000000115eadae0]  32 bytes

  0x0000000115eadac0: mov    (%rsp),%eax
  0x0000000115eadac3: add    $0x8,%rsp
  0x0000000115eadac7: movslq %eax,%rax
  0x0000000115eadaca: movzbl 0x1(%r13),%ebx
  0x0000000115eadacf: inc    %r13
  0x0000000115eadad2: movabs $0x10e0ff840,%r10
  0x0000000115eadadc: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
i2f  134 i2f  [0x0000000115eadb00, 0x0000000115eadb40]  64 bytes

  0x0000000115eadb00: mov    (%rsp),%eax
  0x0000000115eadb03: add    $0x8,%rsp
  0x0000000115eadb07: vcvtsi2ss %eax,%xmm0,%xmm0
  0x0000000115eadb0b: movzbl 0x1(%r13),%ebx
  0x0000000115eadb10: inc    %r13
  0x0000000115eadb13: movabs $0x10e100040,%r10
  0x0000000115eadb1d: jmpq   *(%r10,%rbx,8)
  0x0000000115eadb21: nopl   0x0(%rax)
  0x0000000115eadb28: add    %al,(%rax)
  0x0000000115eadb2a: add    %al,(%rax)
  0x0000000115eadb2c: add    %al,(%rax)
  0x0000000115eadb2e: add    %al,(%rax)
  0x0000000115eadb30: add    %al,(%rax)
  0x0000000115eadb32: add    %al,(%rax)
  0x0000000115eadb34: add    %al,(%rax)
  0x0000000115eadb36: add    %al,(%rax)
  0x0000000115eadb38: add    %al,(%rax)
  0x0000000115eadb3a: add    %al,(%rax)
  0x0000000115eadb3c: add    %al,(%rax)
  0x0000000115eadb3e: add    %al,(%rax)

----------------------------------------------------------------------
i2d  135 i2d  [0x0000000115eadb60, 0x0000000115eadba0]  64 bytes

  0x0000000115eadb60: mov    (%rsp),%eax
  0x0000000115eadb63: add    $0x8,%rsp
  0x0000000115eadb67: vcvtsi2sd %eax,%xmm0,%xmm0
  0x0000000115eadb6b: movzbl 0x1(%r13),%ebx
  0x0000000115eadb70: inc    %r13
  0x0000000115eadb73: movabs $0x10e100840,%r10
  0x0000000115eadb7d: jmpq   *(%r10,%rbx,8)
  0x0000000115eadb81: nopl   0x0(%rax)
  0x0000000115eadb88: add    %al,(%rax)
  0x0000000115eadb8a: add    %al,(%rax)
  0x0000000115eadb8c: add    %al,(%rax)
  0x0000000115eadb8e: add    %al,(%rax)
  0x0000000115eadb90: add    %al,(%rax)
  0x0000000115eadb92: add    %al,(%rax)
  0x0000000115eadb94: add    %al,(%rax)
  0x0000000115eadb96: add    %al,(%rax)
  0x0000000115eadb98: add    %al,(%rax)
  0x0000000115eadb9a: add    %al,(%rax)
  0x0000000115eadb9c: add    %al,(%rax)
  0x0000000115eadb9e: add    %al,(%rax)

----------------------------------------------------------------------
l2i  136 l2i  [0x0000000115eadbc0, 0x0000000115eadbe0]  32 bytes

  0x0000000115eadbc0: mov    (%rsp),%rax
  0x0000000115eadbc4: add    $0x10,%rsp
  0x0000000115eadbc8: mov    %eax,%eax
  0x0000000115eadbca: movzbl 0x1(%r13),%ebx
  0x0000000115eadbcf: inc    %r13
  0x0000000115eadbd2: movabs $0x10e0ff040,%r10
  0x0000000115eadbdc: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
l2f  137 l2f  [0x0000000115eadc00, 0x0000000115eadc40]  64 bytes

  0x0000000115eadc00: mov    (%rsp),%rax
  0x0000000115eadc04: add    $0x10,%rsp
  0x0000000115eadc08: vcvtsi2ss %rax,%xmm0,%xmm0
  0x0000000115eadc0d: movzbl 0x1(%r13),%ebx
  0x0000000115eadc12: inc    %r13
  0x0000000115eadc15: movabs $0x10e100040,%r10
  0x0000000115eadc1f: jmpq   *(%r10,%rbx,8)
  0x0000000115eadc23: nopl   0x0(%rax,%rax,1)
  0x0000000115eadc28: add    %al,(%rax)
  0x0000000115eadc2a: add    %al,(%rax)
  0x0000000115eadc2c: add    %al,(%rax)
  0x0000000115eadc2e: add    %al,(%rax)
  0x0000000115eadc30: add    %al,(%rax)
  0x0000000115eadc32: add    %al,(%rax)
  0x0000000115eadc34: add    %al,(%rax)
  0x0000000115eadc36: add    %al,(%rax)
  0x0000000115eadc38: add    %al,(%rax)
  0x0000000115eadc3a: add    %al,(%rax)
  0x0000000115eadc3c: add    %al,(%rax)
  0x0000000115eadc3e: add    %al,(%rax)

----------------------------------------------------------------------
l2d  138 l2d  [0x0000000115eadc60, 0x0000000115eadca0]  64 bytes

  0x0000000115eadc60: mov    (%rsp),%rax
  0x0000000115eadc64: add    $0x10,%rsp
  0x0000000115eadc68: vcvtsi2sd %rax,%xmm0,%xmm0
  0x0000000115eadc6d: movzbl 0x1(%r13),%ebx
  0x0000000115eadc72: inc    %r13
  0x0000000115eadc75: movabs $0x10e100840,%r10
  0x0000000115eadc7f: jmpq   *(%r10,%rbx,8)
  0x0000000115eadc83: nopl   0x0(%rax,%rax,1)
  0x0000000115eadc88: add    %al,(%rax)
  0x0000000115eadc8a: add    %al,(%rax)
  0x0000000115eadc8c: add    %al,(%rax)
  0x0000000115eadc8e: add    %al,(%rax)
  0x0000000115eadc90: add    %al,(%rax)
  0x0000000115eadc92: add    %al,(%rax)
  0x0000000115eadc94: add    %al,(%rax)
  0x0000000115eadc96: add    %al,(%rax)
  0x0000000115eadc98: add    %al,(%rax)
  0x0000000115eadc9a: add    %al,(%rax)
  0x0000000115eadc9c: add    %al,(%rax)
  0x0000000115eadc9e: add    %al,(%rax)

----------------------------------------------------------------------
f2i  139 f2i  [0x0000000115eadcc0, 0x0000000115eadd20]  96 bytes

  0x0000000115eadcc0: vmovss (%rsp),%xmm0
  0x0000000115eadcc5: add    $0x8,%rsp
  0x0000000115eadcc9: vcvttss2si %xmm0,%eax
  0x0000000115eadccd: cmp    $0x80000000,%eax
  0x0000000115eadcd3: jne    0x0000000115eadcfc
  0x0000000115eadcd9: test   $0xf,%esp
  0x0000000115eadcdf: je     0x0000000115eadcf7
  0x0000000115eadce5: sub    $0x8,%rsp
  0x0000000115eadce9: callq  0x000000010dce3f34
  0x0000000115eadcee: add    $0x8,%rsp
  0x0000000115eadcf2: jmpq   0x0000000115eadcfc
  0x0000000115eadcf7: callq  0x000000010dce3f34
  0x0000000115eadcfc: movzbl 0x1(%r13),%ebx
  0x0000000115eadd01: inc    %r13
  0x0000000115eadd04: movabs $0x10e0ff040,%r10
  0x0000000115eadd0e: jmpq   *(%r10,%rbx,8)
  0x0000000115eadd12: nopw   0x0(%rax,%rax,1)
  0x0000000115eadd18: add    %al,(%rax)
  0x0000000115eadd1a: add    %al,(%rax)
  0x0000000115eadd1c: add    %al,(%rax)
  0x0000000115eadd1e: add    %al,(%rax)

----------------------------------------------------------------------
f2l  140 f2l  [0x0000000115eadd40, 0x0000000115eadda0]  96 bytes

  0x0000000115eadd40: vmovss (%rsp),%xmm0
  0x0000000115eadd45: add    $0x8,%rsp
  0x0000000115eadd49: vcvttss2si %xmm0,%rax
  0x0000000115eadd4e: cmp    -0x807c91d(%rip),%rax        # 0x000000010de31438
  0x0000000115eadd55: jne    0x0000000115eadd7e
  0x0000000115eadd5b: test   $0xf,%esp
  0x0000000115eadd61: je     0x0000000115eadd79
  0x0000000115eadd67: sub    $0x8,%rsp
  0x0000000115eadd6b: callq  0x000000010dce3f70
  0x0000000115eadd70: add    $0x8,%rsp
  0x0000000115eadd74: jmpq   0x0000000115eadd7e
  0x0000000115eadd79: callq  0x000000010dce3f70
  0x0000000115eadd7e: movzbl 0x1(%r13),%ebx
  0x0000000115eadd83: inc    %r13
  0x0000000115eadd86: movabs $0x10e0ff840,%r10
  0x0000000115eadd90: jmpq   *(%r10,%rbx,8)
  0x0000000115eadd94: nopl   0x0(%rax)
  0x0000000115eadd98: add    %al,(%rax)
  0x0000000115eadd9a: add    %al,(%rax)
  0x0000000115eadd9c: add    %al,(%rax)
  0x0000000115eadd9e: add    %al,(%rax)

----------------------------------------------------------------------
f2d  141 f2d  [0x0000000115eaddc0, 0x0000000115eade00]  64 bytes

  0x0000000115eaddc0: vmovss (%rsp),%xmm0
  0x0000000115eaddc5: add    $0x8,%rsp
  0x0000000115eaddc9: vcvtss2sd %xmm0,%xmm0,%xmm0
  0x0000000115eaddcd: movzbl 0x1(%r13),%ebx
  0x0000000115eaddd2: inc    %r13
  0x0000000115eaddd5: movabs $0x10e100840,%r10
  0x0000000115eadddf: jmpq   *(%r10,%rbx,8)
  0x0000000115eadde3: nopl   0x0(%rax,%rax,1)
  0x0000000115eadde8: add    %al,(%rax)
  0x0000000115eaddea: add    %al,(%rax)
  0x0000000115eaddec: add    %al,(%rax)
  0x0000000115eaddee: add    %al,(%rax)
  0x0000000115eaddf0: add    %al,(%rax)
  0x0000000115eaddf2: add    %al,(%rax)
  0x0000000115eaddf4: add    %al,(%rax)
  0x0000000115eaddf6: add    %al,(%rax)
  0x0000000115eaddf8: add    %al,(%rax)
  0x0000000115eaddfa: add    %al,(%rax)
  0x0000000115eaddfc: add    %al,(%rax)
  0x0000000115eaddfe: add    %al,(%rax)

----------------------------------------------------------------------
d2i  142 d2i  [0x0000000115eade20, 0x0000000115eade80]  96 bytes

  0x0000000115eade20: vmovsd (%rsp),%xmm0
  0x0000000115eade25: add    $0x10,%rsp
  0x0000000115eade29: vcvttsd2si %xmm0,%eax
  0x0000000115eade2d: cmp    $0x80000000,%eax
  0x0000000115eade33: jne    0x0000000115eade5c
  0x0000000115eade39: test   $0xf,%esp
  0x0000000115eade3f: je     0x0000000115eade57
  0x0000000115eade45: sub    $0x8,%rsp
  0x0000000115eade49: callq  0x000000010dce3fb8
  0x0000000115eade4e: add    $0x8,%rsp
  0x0000000115eade52: jmpq   0x0000000115eade5c
  0x0000000115eade57: callq  0x000000010dce3fb8
  0x0000000115eade5c: movzbl 0x1(%r13),%ebx
  0x0000000115eade61: inc    %r13
  0x0000000115eade64: movabs $0x10e0ff040,%r10
  0x0000000115eade6e: jmpq   *(%r10,%rbx,8)
  0x0000000115eade72: nopw   0x0(%rax,%rax,1)
  0x0000000115eade78: add    %al,(%rax)
  0x0000000115eade7a: add    %al,(%rax)
  0x0000000115eade7c: add    %al,(%rax)
  0x0000000115eade7e: add    %al,(%rax)

----------------------------------------------------------------------
d2l  143 d2l  [0x0000000115eadea0, 0x0000000115eadf00]  96 bytes

  0x0000000115eadea0: vmovsd (%rsp),%xmm0
  0x0000000115eadea5: add    $0x10,%rsp
  0x0000000115eadea9: vcvttsd2si %xmm0,%rax
  0x0000000115eadeae: cmp    -0x807ca7d(%rip),%rax        # 0x000000010de31438
  0x0000000115eadeb5: jne    0x0000000115eadede
  0x0000000115eadebb: test   $0xf,%esp
  0x0000000115eadec1: je     0x0000000115eaded9
  0x0000000115eadec7: sub    $0x8,%rsp
  0x0000000115eadecb: callq  0x000000010dce3ff2
  0x0000000115eaded0: add    $0x8,%rsp
  0x0000000115eaded4: jmpq   0x0000000115eadede
  0x0000000115eaded9: callq  0x000000010dce3ff2
  0x0000000115eadede: movzbl 0x1(%r13),%ebx
  0x0000000115eadee3: inc    %r13
  0x0000000115eadee6: movabs $0x10e0ff840,%r10
  0x0000000115eadef0: jmpq   *(%r10,%rbx,8)
  0x0000000115eadef4: nopl   0x0(%rax)
  0x0000000115eadef8: add    %al,(%rax)
  0x0000000115eadefa: add    %al,(%rax)
  0x0000000115eadefc: add    %al,(%rax)
  0x0000000115eadefe: add    %al,(%rax)

----------------------------------------------------------------------
d2f  144 d2f  [0x0000000115eadf20, 0x0000000115eadf60]  64 bytes

  0x0000000115eadf20: vmovsd (%rsp),%xmm0
  0x0000000115eadf25: add    $0x10,%rsp
  0x0000000115eadf29: vcvtsd2ss %xmm0,%xmm0,%xmm0
  0x0000000115eadf2d: movzbl 0x1(%r13),%ebx
  0x0000000115eadf32: inc    %r13
  0x0000000115eadf35: movabs $0x10e100040,%r10
  0x0000000115eadf3f: jmpq   *(%r10,%rbx,8)
  0x0000000115eadf43: nopl   0x0(%rax,%rax,1)
  0x0000000115eadf48: add    %al,(%rax)
  0x0000000115eadf4a: add    %al,(%rax)
  0x0000000115eadf4c: add    %al,(%rax)
  0x0000000115eadf4e: add    %al,(%rax)
  0x0000000115eadf50: add    %al,(%rax)
  0x0000000115eadf52: add    %al,(%rax)
  0x0000000115eadf54: add    %al,(%rax)
  0x0000000115eadf56: add    %al,(%rax)
  0x0000000115eadf58: add    %al,(%rax)
  0x0000000115eadf5a: add    %al,(%rax)
  0x0000000115eadf5c: add    %al,(%rax)
  0x0000000115eadf5e: add    %al,(%rax)

----------------------------------------------------------------------
i2b  145 i2b  [0x0000000115eadf80, 0x0000000115eadfa0]  32 bytes

  0x0000000115eadf80: mov    (%rsp),%eax
  0x0000000115eadf83: add    $0x8,%rsp
  0x0000000115eadf87: movsbl %al,%eax
  0x0000000115eadf8a: movzbl 0x1(%r13),%ebx
  0x0000000115eadf8f: inc    %r13
  0x0000000115eadf92: movabs $0x10e0ff040,%r10
  0x0000000115eadf9c: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
i2c  146 i2c  [0x0000000115eadfc0, 0x0000000115eadfe0]  32 bytes

  0x0000000115eadfc0: mov    (%rsp),%eax
  0x0000000115eadfc3: add    $0x8,%rsp
  0x0000000115eadfc7: movzwl %ax,%eax
  0x0000000115eadfca: movzbl 0x1(%r13),%ebx
  0x0000000115eadfcf: inc    %r13
  0x0000000115eadfd2: movabs $0x10e0ff040,%r10
  0x0000000115eadfdc: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
i2s  147 i2s  [0x0000000115eae000, 0x0000000115eae020]  32 bytes

  0x0000000115eae000: mov    (%rsp),%eax
  0x0000000115eae003: add    $0x8,%rsp
  0x0000000115eae007: movswl %ax,%eax
  0x0000000115eae00a: movzbl 0x1(%r13),%ebx
  0x0000000115eae00f: inc    %r13
  0x0000000115eae012: movabs $0x10e0ff040,%r10
  0x0000000115eae01c: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
lcmp  148 lcmp  [0x0000000115eae040, 0x0000000115eae080]  64 bytes

  0x0000000115eae040: mov    (%rsp),%rax
  0x0000000115eae044: add    $0x10,%rsp
  0x0000000115eae048: mov    (%rsp),%rdx
  0x0000000115eae04c: add    $0x10,%rsp
  0x0000000115eae050: cmp    %rax,%rdx
  0x0000000115eae053: mov    $0xffffffff,%eax
  0x0000000115eae058: jl     0x0000000115eae060
  0x0000000115eae05a: setne  %al
  0x0000000115eae05d: movzbl %al,%eax
  0x0000000115eae060: movzbl 0x1(%r13),%ebx
  0x0000000115eae065: inc    %r13
  0x0000000115eae068: movabs $0x10e0ff040,%r10
  0x0000000115eae072: jmpq   *(%r10,%rbx,8)
  0x0000000115eae076: xchg   %ax,%ax
  0x0000000115eae078: add    %al,(%rax)
  0x0000000115eae07a: add    %al,(%rax)
  0x0000000115eae07c: add    %al,(%rax)
  0x0000000115eae07e: add    %al,(%rax)

----------------------------------------------------------------------
fcmpl  149 fcmpl  [0x0000000115eae0a0, 0x0000000115eae0e0]  64 bytes

  0x0000000115eae0a0: vmovss (%rsp),%xmm0
  0x0000000115eae0a5: add    $0x8,%rsp
  0x0000000115eae0a9: vmovss (%rsp),%xmm1
  0x0000000115eae0ae: add    $0x8,%rsp
  0x0000000115eae0b2: vucomiss %xmm0,%xmm1
  0x0000000115eae0b6: mov    $0xffffffff,%eax
  0x0000000115eae0bb: jp     0x0000000115eae0c5
  0x0000000115eae0bd: jb     0x0000000115eae0c5
  0x0000000115eae0bf: setne  %dl
  0x0000000115eae0c2: movzbl %dl,%eax
  0x0000000115eae0c5: movzbl 0x1(%r13),%ebx
  0x0000000115eae0ca: inc    %r13
  0x0000000115eae0cd: movabs $0x10e0ff040,%r10
  0x0000000115eae0d7: jmpq   *(%r10,%rbx,8)
  0x0000000115eae0db: nopl   0x0(%rax,%rax,1)

----------------------------------------------------------------------
fcmpg  150 fcmpg  [0x0000000115eae100, 0x0000000115eae140]  64 bytes

  0x0000000115eae100: vmovss (%rsp),%xmm0
  0x0000000115eae105: add    $0x8,%rsp
  0x0000000115eae109: vmovss (%rsp),%xmm1
  0x0000000115eae10e: add    $0x8,%rsp
  0x0000000115eae112: vucomiss %xmm0,%xmm1
  0x0000000115eae116: mov    $0x1,%eax
  0x0000000115eae11b: jp     0x0000000115eae128
  0x0000000115eae11d: ja     0x0000000115eae128
  0x0000000115eae11f: mov    $0x0,%eax
  0x0000000115eae124: je     0x0000000115eae128
  0x0000000115eae126: dec    %eax
  0x0000000115eae128: movzbl 0x1(%r13),%ebx
  0x0000000115eae12d: inc    %r13
  0x0000000115eae130: movabs $0x10e0ff040,%r10
  0x0000000115eae13a: jmpq   *(%r10,%rbx,8)
  0x0000000115eae13e: xchg   %ax,%ax

----------------------------------------------------------------------
dcmpl  151 dcmpl  [0x0000000115eae160, 0x0000000115eae1a0]  64 bytes

  0x0000000115eae160: vmovsd (%rsp),%xmm0
  0x0000000115eae165: add    $0x10,%rsp
  0x0000000115eae169: vmovsd (%rsp),%xmm1
  0x0000000115eae16e: add    $0x10,%rsp
  0x0000000115eae172: vucomisd %xmm0,%xmm1
  0x0000000115eae176: mov    $0xffffffff,%eax
  0x0000000115eae17b: jp     0x0000000115eae185
  0x0000000115eae17d: jb     0x0000000115eae185
  0x0000000115eae17f: setne  %dl
  0x0000000115eae182: movzbl %dl,%eax
  0x0000000115eae185: movzbl 0x1(%r13),%ebx
  0x0000000115eae18a: inc    %r13
  0x0000000115eae18d: movabs $0x10e0ff040,%r10
  0x0000000115eae197: jmpq   *(%r10,%rbx,8)
  0x0000000115eae19b: nopl   0x0(%rax,%rax,1)

----------------------------------------------------------------------
dcmpg  152 dcmpg  [0x0000000115eae1c0, 0x0000000115eae200]  64 bytes

  0x0000000115eae1c0: vmovsd (%rsp),%xmm0
  0x0000000115eae1c5: add    $0x10,%rsp
  0x0000000115eae1c9: vmovsd (%rsp),%xmm1
  0x0000000115eae1ce: add    $0x10,%rsp
  0x0000000115eae1d2: vucomisd %xmm0,%xmm1
  0x0000000115eae1d6: mov    $0x1,%eax
  0x0000000115eae1db: jp     0x0000000115eae1e8
  0x0000000115eae1dd: ja     0x0000000115eae1e8
  0x0000000115eae1df: mov    $0x0,%eax
  0x0000000115eae1e4: je     0x0000000115eae1e8
  0x0000000115eae1e6: dec    %eax
  0x0000000115eae1e8: movzbl 0x1(%r13),%ebx
  0x0000000115eae1ed: inc    %r13
  0x0000000115eae1f0: movabs $0x10e0ff040,%r10
  0x0000000115eae1fa: jmpq   *(%r10,%rbx,8)
  0x0000000115eae1fe: xchg   %ax,%ax

----------------------------------------------------------------------
ifeq  153 ifeq  [0x0000000115eae220, 0x0000000115eae5e0]  960 bytes

  0x0000000115eae220: mov    (%rsp),%eax
  0x0000000115eae223: add    $0x8,%rsp
  0x0000000115eae227: test   %eax,%eax
  0x0000000115eae229: jne    0x0000000115eae58f
  0x0000000115eae22f: mov    -0x18(%rbp),%rcx
  0x0000000115eae233: mov    -0x20(%rbp),%rax
  0x0000000115eae237: test   %rax,%rax
  0x0000000115eae23a: je     0x0000000115eae258
  0x0000000115eae240: mov    0x8(%rax),%rbx
  0x0000000115eae244: add    $0x1,%rbx
  0x0000000115eae248: sbb    $0x0,%rbx
  0x0000000115eae24c: mov    %rbx,0x8(%rax)
  0x0000000115eae250: add    0x10(%rax),%rax
  0x0000000115eae254: mov    %rax,-0x20(%rbp)
  0x0000000115eae258: movswl 0x1(%r13),%edx
  0x0000000115eae25d: bswap  %edx
  0x0000000115eae25f: sar    $0x10,%edx
  0x0000000115eae262: movslq %edx,%rdx
  0x0000000115eae265: add    %rdx,%r13
  0x0000000115eae268: test   %edx,%edx
  0x0000000115eae26a: jns    0x0000000115eae355
  0x0000000115eae270: mov    0x18(%rcx),%rax
  0x0000000115eae274: test   %rax,%rax
  0x0000000115eae277: jne    0x0000000115eae313
  0x0000000115eae27d: push   %rdx
  0x0000000115eae27e: push   %rcx
  0x0000000115eae27f: callq  0x0000000115eae289
  0x0000000115eae284: jmpq   0x0000000115eae307
  0x0000000115eae289: mov    %rcx,%rsi
  0x0000000115eae28c: lea    0x8(%rsp),%rax
  0x0000000115eae291: mov    %r13,-0x38(%rbp)
  0x0000000115eae295: mov    %r15,%rdi
  0x0000000115eae298: mov    %rbp,0x1e8(%r15)
  0x0000000115eae29f: mov    %rax,0x1d8(%r15)
  0x0000000115eae2a6: test   $0xf,%esp
  0x0000000115eae2ac: je     0x0000000115eae2c4
  0x0000000115eae2b2: sub    $0x8,%rsp
  0x0000000115eae2b6: callq  0x000000010dae6d98
  0x0000000115eae2bb: add    $0x8,%rsp
  0x0000000115eae2bf: jmpq   0x0000000115eae2c9
  0x0000000115eae2c4: callq  0x000000010dae6d98
  0x0000000115eae2c9: movabs $0x0,%r10
  0x0000000115eae2d3: mov    %r10,0x1d8(%r15)
  0x0000000115eae2da: movabs $0x0,%r10
  0x0000000115eae2e4: mov    %r10,0x1e8(%r15)
  0x0000000115eae2eb: cmpq   $0x0,0x8(%r15)
  0x0000000115eae2f3: je     0x0000000115eae2fe
  0x0000000115eae2f9: jmpq   0x0000000115e916e0
  0x0000000115eae2fe: mov    -0x38(%rbp),%r13
  0x0000000115eae302: mov    -0x30(%rbp),%r14
  0x0000000115eae306: retq   
  0x0000000115eae307: pop    %rcx
  0x0000000115eae308: pop    %rdx
  0x0000000115eae309: mov    0x18(%rcx),%rax
  0x0000000115eae30d: je     0x0000000115eae355
  0x0000000115eae313: mov    0x10(%rcx),%rbx
  0x0000000115eae317: test   %rbx,%rbx
  0x0000000115eae31a: je     0x0000000115eae33c
  0x0000000115eae31c: mov    0xe0(%rbx),%eax
  0x0000000115eae322: add    $0x8,%eax
  0x0000000115eae325: mov    %eax,0xe0(%rbx)
  0x0000000115eae32b: and    $0x1ff8,%eax
  0x0000000115eae331: je     0x0000000115eae447
  0x0000000115eae337: jmpq   0x0000000115eae355
  0x0000000115eae33c: mov    0x18(%rcx),%rcx
  0x0000000115eae340: mov    0xc(%rcx),%eax
  0x0000000115eae343: add    $0x8,%eax
  0x0000000115eae346: mov    %eax,0xc(%rcx)
  0x0000000115eae349: and    $0x1ff8,%eax
  0x0000000115eae34f: je     0x0000000115eae447
  0x0000000115eae355: movzbl 0x0(%r13),%ebx
  0x0000000115eae35a: movabs $0x10e101840,%r10
  0x0000000115eae364: jmpq   *(%r10,%rbx,8)
  0x0000000115eae368: callq  0x0000000115eae372
  0x0000000115eae36d: jmpq   0x0000000115eae3ed
  0x0000000115eae372: lea    0x8(%rsp),%rax
  0x0000000115eae377: mov    %r13,-0x38(%rbp)
  0x0000000115eae37b: mov    %r15,%rdi
  0x0000000115eae37e: mov    %rbp,0x1e8(%r15)
  0x0000000115eae385: mov    %rax,0x1d8(%r15)
  0x0000000115eae38c: test   $0xf,%esp
  0x0000000115eae392: je     0x0000000115eae3aa
  0x0000000115eae398: sub    $0x8,%rsp
  0x0000000115eae39c: callq  0x000000010dae6f16
  0x0000000115eae3a1: add    $0x8,%rsp
  0x0000000115eae3a5: jmpq   0x0000000115eae3af
  0x0000000115eae3aa: callq  0x000000010dae6f16
  0x0000000115eae3af: movabs $0x0,%r10
  0x0000000115eae3b9: mov    %r10,0x1d8(%r15)
  0x0000000115eae3c0: movabs $0x0,%r10
  0x0000000115eae3ca: mov    %r10,0x1e8(%r15)
  0x0000000115eae3d1: cmpq   $0x0,0x8(%r15)
  0x0000000115eae3d9: je     0x0000000115eae3e4
  0x0000000115eae3df: jmpq   0x0000000115e916e0
  0x0000000115eae3e4: mov    -0x38(%rbp),%r13
  0x0000000115eae3e8: mov    -0x30(%rbp),%r14
  0x0000000115eae3ec: retq   
  0x0000000115eae3ed: movzbl 0x0(%r13),%ebx
  0x0000000115eae3f2: push   %rax
  0x0000000115eae3f3: push   %rbx
  0x0000000115eae3f4: mov    -0x18(%rbp),%rbx
  0x0000000115eae3f8: mov    0x10(%rbx),%rax
  0x0000000115eae3fc: test   %rax,%rax
  0x0000000115eae3ff: je     0x0000000115eae43c
  0x0000000115eae405: mov    %r13,%rsi
  0x0000000115eae408: mov    %rbx,%rdi
  0x0000000115eae40b: test   $0xf,%esp
  0x0000000115eae411: je     0x0000000115eae429
  0x0000000115eae417: sub    $0x8,%rsp
  0x0000000115eae41b: callq  0x000000010dae706c
  0x0000000115eae420: add    $0x8,%rsp
  0x0000000115eae424: jmpq   0x0000000115eae42e
  0x0000000115eae429: callq  0x000000010dae706c
  0x0000000115eae42e: mov    0x10(%rbx),%rbx
  0x0000000115eae432: add    $0x100,%rbx
  0x0000000115eae439: add    %rbx,%rax
  0x0000000115eae43c: mov    %rax,-0x20(%rbp)
  0x0000000115eae440: pop    %rbx
  0x0000000115eae441: pop    %rax
  0x0000000115eae442: jmpq   0x0000000115eae355
  0x0000000115eae447: neg    %rdx
  0x0000000115eae44a: add    %r13,%rdx
  0x0000000115eae44d: callq  0x0000000115eae457
  0x0000000115eae452: jmpq   0x0000000115eae4d5
  0x0000000115eae457: mov    %rdx,%rsi
  0x0000000115eae45a: lea    0x8(%rsp),%rax
  0x0000000115eae45f: mov    %r13,-0x38(%rbp)
  0x0000000115eae463: mov    %r15,%rdi
  0x0000000115eae466: mov    %rbp,0x1e8(%r15)
  0x0000000115eae46d: mov    %rax,0x1d8(%r15)
  0x0000000115eae474: test   $0xf,%esp
  0x0000000115eae47a: je     0x0000000115eae492
  0x0000000115eae480: sub    $0x8,%rsp
  0x0000000115eae484: callq  0x000000010dae7476
  0x0000000115eae489: add    $0x8,%rsp
  0x0000000115eae48d: jmpq   0x0000000115eae497
  0x0000000115eae492: callq  0x000000010dae7476
  0x0000000115eae497: movabs $0x0,%r10
  0x0000000115eae4a1: mov    %r10,0x1d8(%r15)
  0x0000000115eae4a8: movabs $0x0,%r10
  0x0000000115eae4b2: mov    %r10,0x1e8(%r15)
  0x0000000115eae4b9: cmpq   $0x0,0x8(%r15)
  0x0000000115eae4c1: je     0x0000000115eae4cc
  0x0000000115eae4c7: jmpq   0x0000000115e916e0
  0x0000000115eae4cc: mov    -0x38(%rbp),%r13
  0x0000000115eae4d0: mov    -0x30(%rbp),%r14
  0x0000000115eae4d4: retq   
  0x0000000115eae4d5: movzbl 0x0(%r13),%ebx
  0x0000000115eae4da: test   %rax,%rax
  0x0000000115eae4dd: je     0x0000000115eae355
  0x0000000115eae4e3: mov    0x48(%rax),%ecx
  0x0000000115eae4e6: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eae4e9: je     0x0000000115eae355
  0x0000000115eae4ef: mov    %rax,%r13
  0x0000000115eae4f2: callq  0x0000000115eae4fc
  0x0000000115eae4f7: jmpq   0x0000000115eae577
  0x0000000115eae4fc: lea    0x8(%rsp),%rax
  0x0000000115eae501: mov    %r13,-0x38(%rbp)
  0x0000000115eae505: mov    %r15,%rdi
  0x0000000115eae508: mov    %rbp,0x1e8(%r15)
  0x0000000115eae50f: mov    %rax,0x1d8(%r15)
  0x0000000115eae516: test   $0xf,%esp
  0x0000000115eae51c: je     0x0000000115eae534
  0x0000000115eae522: sub    $0x8,%rsp
  0x0000000115eae526: callq  0x000000010dce4396
  0x0000000115eae52b: add    $0x8,%rsp
  0x0000000115eae52f: jmpq   0x0000000115eae539
  0x0000000115eae534: callq  0x000000010dce4396
  0x0000000115eae539: movabs $0x0,%r10
  0x0000000115eae543: mov    %r10,0x1d8(%r15)
  0x0000000115eae54a: movabs $0x0,%r10
  0x0000000115eae554: mov    %r10,0x1e8(%r15)
  0x0000000115eae55b: cmpq   $0x0,0x8(%r15)
  0x0000000115eae563: je     0x0000000115eae56e
  0x0000000115eae569: jmpq   0x0000000115e916e0
  0x0000000115eae56e: mov    -0x38(%rbp),%r13
  0x0000000115eae572: mov    -0x30(%rbp),%r14
  0x0000000115eae576: retq   
  0x0000000115eae577: mov    %rax,%rsi
  0x0000000115eae57a: mov    -0x8(%rbp),%rdx
  0x0000000115eae57e: leaveq 
  0x0000000115eae57f: pop    %rcx
  0x0000000115eae580: mov    %rdx,%rsp
  0x0000000115eae583: and    $0xfffffffffffffff0,%rsp
  0x0000000115eae587: push   %rcx
  0x0000000115eae588: jmpq   *0x88(%r13)
  0x0000000115eae58f: mov    -0x20(%rbp),%rax
  0x0000000115eae593: test   %rax,%rax
  0x0000000115eae596: je     0x0000000115eae5ae
  0x0000000115eae59c: addq   $0x1,0x18(%rax)
  0x0000000115eae5a1: sbbq   $0x0,0x18(%rax)
  0x0000000115eae5a6: add    $0x20,%rax
  0x0000000115eae5aa: mov    %rax,-0x20(%rbp)
  0x0000000115eae5ae: movzbl 0x3(%r13),%ebx
  0x0000000115eae5b3: add    $0x3,%r13
  0x0000000115eae5b7: movabs $0x10e101840,%r10
  0x0000000115eae5c1: jmpq   *(%r10,%rbx,8)
  0x0000000115eae5c5: data32 xchg %ax,%ax
  0x0000000115eae5c8: add    %al,(%rax)
  0x0000000115eae5ca: add    %al,(%rax)
  0x0000000115eae5cc: add    %al,(%rax)
  0x0000000115eae5ce: add    %al,(%rax)
  0x0000000115eae5d0: add    %al,(%rax)
  0x0000000115eae5d2: add    %al,(%rax)
  0x0000000115eae5d4: add    %al,(%rax)
  0x0000000115eae5d6: add    %al,(%rax)
  0x0000000115eae5d8: add    %al,(%rax)
  0x0000000115eae5da: add    %al,(%rax)
  0x0000000115eae5dc: add    %al,(%rax)
  0x0000000115eae5de: add    %al,(%rax)

----------------------------------------------------------------------
ifne  154 ifne  [0x0000000115eae600, 0x0000000115eae9c0]  960 bytes

  0x0000000115eae600: mov    (%rsp),%eax
  0x0000000115eae603: add    $0x8,%rsp
  0x0000000115eae607: test   %eax,%eax
  0x0000000115eae609: je     0x0000000115eae96f
  0x0000000115eae60f: mov    -0x18(%rbp),%rcx
  0x0000000115eae613: mov    -0x20(%rbp),%rax
  0x0000000115eae617: test   %rax,%rax
  0x0000000115eae61a: je     0x0000000115eae638
  0x0000000115eae620: mov    0x8(%rax),%rbx
  0x0000000115eae624: add    $0x1,%rbx
  0x0000000115eae628: sbb    $0x0,%rbx
  0x0000000115eae62c: mov    %rbx,0x8(%rax)
  0x0000000115eae630: add    0x10(%rax),%rax
  0x0000000115eae634: mov    %rax,-0x20(%rbp)
  0x0000000115eae638: movswl 0x1(%r13),%edx
  0x0000000115eae63d: bswap  %edx
  0x0000000115eae63f: sar    $0x10,%edx
  0x0000000115eae642: movslq %edx,%rdx
  0x0000000115eae645: add    %rdx,%r13
  0x0000000115eae648: test   %edx,%edx
  0x0000000115eae64a: jns    0x0000000115eae735
  0x0000000115eae650: mov    0x18(%rcx),%rax
  0x0000000115eae654: test   %rax,%rax
  0x0000000115eae657: jne    0x0000000115eae6f3
  0x0000000115eae65d: push   %rdx
  0x0000000115eae65e: push   %rcx
  0x0000000115eae65f: callq  0x0000000115eae669
  0x0000000115eae664: jmpq   0x0000000115eae6e7
  0x0000000115eae669: mov    %rcx,%rsi
  0x0000000115eae66c: lea    0x8(%rsp),%rax
  0x0000000115eae671: mov    %r13,-0x38(%rbp)
  0x0000000115eae675: mov    %r15,%rdi
  0x0000000115eae678: mov    %rbp,0x1e8(%r15)
  0x0000000115eae67f: mov    %rax,0x1d8(%r15)
  0x0000000115eae686: test   $0xf,%esp
  0x0000000115eae68c: je     0x0000000115eae6a4
  0x0000000115eae692: sub    $0x8,%rsp
  0x0000000115eae696: callq  0x000000010dae6d98
  0x0000000115eae69b: add    $0x8,%rsp
  0x0000000115eae69f: jmpq   0x0000000115eae6a9
  0x0000000115eae6a4: callq  0x000000010dae6d98
  0x0000000115eae6a9: movabs $0x0,%r10
  0x0000000115eae6b3: mov    %r10,0x1d8(%r15)
  0x0000000115eae6ba: movabs $0x0,%r10
  0x0000000115eae6c4: mov    %r10,0x1e8(%r15)
  0x0000000115eae6cb: cmpq   $0x0,0x8(%r15)
  0x0000000115eae6d3: je     0x0000000115eae6de
  0x0000000115eae6d9: jmpq   0x0000000115e916e0
  0x0000000115eae6de: mov    -0x38(%rbp),%r13
  0x0000000115eae6e2: mov    -0x30(%rbp),%r14
  0x0000000115eae6e6: retq   
  0x0000000115eae6e7: pop    %rcx
  0x0000000115eae6e8: pop    %rdx
  0x0000000115eae6e9: mov    0x18(%rcx),%rax
  0x0000000115eae6ed: je     0x0000000115eae735
  0x0000000115eae6f3: mov    0x10(%rcx),%rbx
  0x0000000115eae6f7: test   %rbx,%rbx
  0x0000000115eae6fa: je     0x0000000115eae71c
  0x0000000115eae6fc: mov    0xe0(%rbx),%eax
  0x0000000115eae702: add    $0x8,%eax
  0x0000000115eae705: mov    %eax,0xe0(%rbx)
  0x0000000115eae70b: and    $0x1ff8,%eax
  0x0000000115eae711: je     0x0000000115eae827
  0x0000000115eae717: jmpq   0x0000000115eae735
  0x0000000115eae71c: mov    0x18(%rcx),%rcx
  0x0000000115eae720: mov    0xc(%rcx),%eax
  0x0000000115eae723: add    $0x8,%eax
  0x0000000115eae726: mov    %eax,0xc(%rcx)
  0x0000000115eae729: and    $0x1ff8,%eax
  0x0000000115eae72f: je     0x0000000115eae827
  0x0000000115eae735: movzbl 0x0(%r13),%ebx
  0x0000000115eae73a: movabs $0x10e101840,%r10
  0x0000000115eae744: jmpq   *(%r10,%rbx,8)
  0x0000000115eae748: callq  0x0000000115eae752
  0x0000000115eae74d: jmpq   0x0000000115eae7cd
  0x0000000115eae752: lea    0x8(%rsp),%rax
  0x0000000115eae757: mov    %r13,-0x38(%rbp)
  0x0000000115eae75b: mov    %r15,%rdi
  0x0000000115eae75e: mov    %rbp,0x1e8(%r15)
  0x0000000115eae765: mov    %rax,0x1d8(%r15)
  0x0000000115eae76c: test   $0xf,%esp
  0x0000000115eae772: je     0x0000000115eae78a
  0x0000000115eae778: sub    $0x8,%rsp
  0x0000000115eae77c: callq  0x000000010dae6f16
  0x0000000115eae781: add    $0x8,%rsp
  0x0000000115eae785: jmpq   0x0000000115eae78f
  0x0000000115eae78a: callq  0x000000010dae6f16
  0x0000000115eae78f: movabs $0x0,%r10
  0x0000000115eae799: mov    %r10,0x1d8(%r15)
  0x0000000115eae7a0: movabs $0x0,%r10
  0x0000000115eae7aa: mov    %r10,0x1e8(%r15)
  0x0000000115eae7b1: cmpq   $0x0,0x8(%r15)
  0x0000000115eae7b9: je     0x0000000115eae7c4
  0x0000000115eae7bf: jmpq   0x0000000115e916e0
  0x0000000115eae7c4: mov    -0x38(%rbp),%r13
  0x0000000115eae7c8: mov    -0x30(%rbp),%r14
  0x0000000115eae7cc: retq   
  0x0000000115eae7cd: movzbl 0x0(%r13),%ebx
  0x0000000115eae7d2: push   %rax
  0x0000000115eae7d3: push   %rbx
  0x0000000115eae7d4: mov    -0x18(%rbp),%rbx
  0x0000000115eae7d8: mov    0x10(%rbx),%rax
  0x0000000115eae7dc: test   %rax,%rax
  0x0000000115eae7df: je     0x0000000115eae81c
  0x0000000115eae7e5: mov    %r13,%rsi
  0x0000000115eae7e8: mov    %rbx,%rdi
  0x0000000115eae7eb: test   $0xf,%esp
  0x0000000115eae7f1: je     0x0000000115eae809
  0x0000000115eae7f7: sub    $0x8,%rsp
  0x0000000115eae7fb: callq  0x000000010dae706c
  0x0000000115eae800: add    $0x8,%rsp
  0x0000000115eae804: jmpq   0x0000000115eae80e
  0x0000000115eae809: callq  0x000000010dae706c
  0x0000000115eae80e: mov    0x10(%rbx),%rbx
  0x0000000115eae812: add    $0x100,%rbx
  0x0000000115eae819: add    %rbx,%rax
  0x0000000115eae81c: mov    %rax,-0x20(%rbp)
  0x0000000115eae820: pop    %rbx
  0x0000000115eae821: pop    %rax
  0x0000000115eae822: jmpq   0x0000000115eae735
  0x0000000115eae827: neg    %rdx
  0x0000000115eae82a: add    %r13,%rdx
  0x0000000115eae82d: callq  0x0000000115eae837
  0x0000000115eae832: jmpq   0x0000000115eae8b5
  0x0000000115eae837: mov    %rdx,%rsi
  0x0000000115eae83a: lea    0x8(%rsp),%rax
  0x0000000115eae83f: mov    %r13,-0x38(%rbp)
  0x0000000115eae843: mov    %r15,%rdi
  0x0000000115eae846: mov    %rbp,0x1e8(%r15)
  0x0000000115eae84d: mov    %rax,0x1d8(%r15)
  0x0000000115eae854: test   $0xf,%esp
  0x0000000115eae85a: je     0x0000000115eae872
  0x0000000115eae860: sub    $0x8,%rsp
  0x0000000115eae864: callq  0x000000010dae7476
  0x0000000115eae869: add    $0x8,%rsp
  0x0000000115eae86d: jmpq   0x0000000115eae877
  0x0000000115eae872: callq  0x000000010dae7476
  0x0000000115eae877: movabs $0x0,%r10
  0x0000000115eae881: mov    %r10,0x1d8(%r15)
  0x0000000115eae888: movabs $0x0,%r10
  0x0000000115eae892: mov    %r10,0x1e8(%r15)
  0x0000000115eae899: cmpq   $0x0,0x8(%r15)
  0x0000000115eae8a1: je     0x0000000115eae8ac
  0x0000000115eae8a7: jmpq   0x0000000115e916e0
  0x0000000115eae8ac: mov    -0x38(%rbp),%r13
  0x0000000115eae8b0: mov    -0x30(%rbp),%r14
  0x0000000115eae8b4: retq   
  0x0000000115eae8b5: movzbl 0x0(%r13),%ebx
  0x0000000115eae8ba: test   %rax,%rax
  0x0000000115eae8bd: je     0x0000000115eae735
  0x0000000115eae8c3: mov    0x48(%rax),%ecx
  0x0000000115eae8c6: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eae8c9: je     0x0000000115eae735
  0x0000000115eae8cf: mov    %rax,%r13
  0x0000000115eae8d2: callq  0x0000000115eae8dc
  0x0000000115eae8d7: jmpq   0x0000000115eae957
  0x0000000115eae8dc: lea    0x8(%rsp),%rax
  0x0000000115eae8e1: mov    %r13,-0x38(%rbp)
  0x0000000115eae8e5: mov    %r15,%rdi
  0x0000000115eae8e8: mov    %rbp,0x1e8(%r15)
  0x0000000115eae8ef: mov    %rax,0x1d8(%r15)
  0x0000000115eae8f6: test   $0xf,%esp
  0x0000000115eae8fc: je     0x0000000115eae914
  0x0000000115eae902: sub    $0x8,%rsp
  0x0000000115eae906: callq  0x000000010dce4396
  0x0000000115eae90b: add    $0x8,%rsp
  0x0000000115eae90f: jmpq   0x0000000115eae919
  0x0000000115eae914: callq  0x000000010dce4396
  0x0000000115eae919: movabs $0x0,%r10
  0x0000000115eae923: mov    %r10,0x1d8(%r15)
  0x0000000115eae92a: movabs $0x0,%r10
  0x0000000115eae934: mov    %r10,0x1e8(%r15)
  0x0000000115eae93b: cmpq   $0x0,0x8(%r15)
  0x0000000115eae943: je     0x0000000115eae94e
  0x0000000115eae949: jmpq   0x0000000115e916e0
  0x0000000115eae94e: mov    -0x38(%rbp),%r13
  0x0000000115eae952: mov    -0x30(%rbp),%r14
  0x0000000115eae956: retq   
  0x0000000115eae957: mov    %rax,%rsi
  0x0000000115eae95a: mov    -0x8(%rbp),%rdx
  0x0000000115eae95e: leaveq 
  0x0000000115eae95f: pop    %rcx
  0x0000000115eae960: mov    %rdx,%rsp
  0x0000000115eae963: and    $0xfffffffffffffff0,%rsp
  0x0000000115eae967: push   %rcx
  0x0000000115eae968: jmpq   *0x88(%r13)
  0x0000000115eae96f: mov    -0x20(%rbp),%rax
  0x0000000115eae973: test   %rax,%rax
  0x0000000115eae976: je     0x0000000115eae98e
  0x0000000115eae97c: addq   $0x1,0x18(%rax)
  0x0000000115eae981: sbbq   $0x0,0x18(%rax)
  0x0000000115eae986: add    $0x20,%rax
  0x0000000115eae98a: mov    %rax,-0x20(%rbp)
  0x0000000115eae98e: movzbl 0x3(%r13),%ebx
  0x0000000115eae993: add    $0x3,%r13
  0x0000000115eae997: movabs $0x10e101840,%r10
  0x0000000115eae9a1: jmpq   *(%r10,%rbx,8)
  0x0000000115eae9a5: data32 xchg %ax,%ax
  0x0000000115eae9a8: add    %al,(%rax)
  0x0000000115eae9aa: add    %al,(%rax)
  0x0000000115eae9ac: add    %al,(%rax)
  0x0000000115eae9ae: add    %al,(%rax)
  0x0000000115eae9b0: add    %al,(%rax)
  0x0000000115eae9b2: add    %al,(%rax)
  0x0000000115eae9b4: add    %al,(%rax)
  0x0000000115eae9b6: add    %al,(%rax)
  0x0000000115eae9b8: add    %al,(%rax)
  0x0000000115eae9ba: add    %al,(%rax)
  0x0000000115eae9bc: add    %al,(%rax)
  0x0000000115eae9be: add    %al,(%rax)

----------------------------------------------------------------------
iflt  155 iflt  [0x0000000115eae9e0, 0x0000000115eaeda0]  960 bytes

  0x0000000115eae9e0: mov    (%rsp),%eax
  0x0000000115eae9e3: add    $0x8,%rsp
  0x0000000115eae9e7: test   %eax,%eax
  0x0000000115eae9e9: jge    0x0000000115eaed4f
  0x0000000115eae9ef: mov    -0x18(%rbp),%rcx
  0x0000000115eae9f3: mov    -0x20(%rbp),%rax
  0x0000000115eae9f7: test   %rax,%rax
  0x0000000115eae9fa: je     0x0000000115eaea18
  0x0000000115eaea00: mov    0x8(%rax),%rbx
  0x0000000115eaea04: add    $0x1,%rbx
  0x0000000115eaea08: sbb    $0x0,%rbx
  0x0000000115eaea0c: mov    %rbx,0x8(%rax)
  0x0000000115eaea10: add    0x10(%rax),%rax
  0x0000000115eaea14: mov    %rax,-0x20(%rbp)
  0x0000000115eaea18: movswl 0x1(%r13),%edx
  0x0000000115eaea1d: bswap  %edx
  0x0000000115eaea1f: sar    $0x10,%edx
  0x0000000115eaea22: movslq %edx,%rdx
  0x0000000115eaea25: add    %rdx,%r13
  0x0000000115eaea28: test   %edx,%edx
  0x0000000115eaea2a: jns    0x0000000115eaeb15
  0x0000000115eaea30: mov    0x18(%rcx),%rax
  0x0000000115eaea34: test   %rax,%rax
  0x0000000115eaea37: jne    0x0000000115eaead3
  0x0000000115eaea3d: push   %rdx
  0x0000000115eaea3e: push   %rcx
  0x0000000115eaea3f: callq  0x0000000115eaea49
  0x0000000115eaea44: jmpq   0x0000000115eaeac7
  0x0000000115eaea49: mov    %rcx,%rsi
  0x0000000115eaea4c: lea    0x8(%rsp),%rax
  0x0000000115eaea51: mov    %r13,-0x38(%rbp)
  0x0000000115eaea55: mov    %r15,%rdi
  0x0000000115eaea58: mov    %rbp,0x1e8(%r15)
  0x0000000115eaea5f: mov    %rax,0x1d8(%r15)
  0x0000000115eaea66: test   $0xf,%esp
  0x0000000115eaea6c: je     0x0000000115eaea84
  0x0000000115eaea72: sub    $0x8,%rsp
  0x0000000115eaea76: callq  0x000000010dae6d98
  0x0000000115eaea7b: add    $0x8,%rsp
  0x0000000115eaea7f: jmpq   0x0000000115eaea89
  0x0000000115eaea84: callq  0x000000010dae6d98
  0x0000000115eaea89: movabs $0x0,%r10
  0x0000000115eaea93: mov    %r10,0x1d8(%r15)
  0x0000000115eaea9a: movabs $0x0,%r10
  0x0000000115eaeaa4: mov    %r10,0x1e8(%r15)
  0x0000000115eaeaab: cmpq   $0x0,0x8(%r15)
  0x0000000115eaeab3: je     0x0000000115eaeabe
  0x0000000115eaeab9: jmpq   0x0000000115e916e0
  0x0000000115eaeabe: mov    -0x38(%rbp),%r13
  0x0000000115eaeac2: mov    -0x30(%rbp),%r14
  0x0000000115eaeac6: retq   
  0x0000000115eaeac7: pop    %rcx
  0x0000000115eaeac8: pop    %rdx
  0x0000000115eaeac9: mov    0x18(%rcx),%rax
  0x0000000115eaeacd: je     0x0000000115eaeb15
  0x0000000115eaead3: mov    0x10(%rcx),%rbx
  0x0000000115eaead7: test   %rbx,%rbx
  0x0000000115eaeada: je     0x0000000115eaeafc
  0x0000000115eaeadc: mov    0xe0(%rbx),%eax
  0x0000000115eaeae2: add    $0x8,%eax
  0x0000000115eaeae5: mov    %eax,0xe0(%rbx)
  0x0000000115eaeaeb: and    $0x1ff8,%eax
  0x0000000115eaeaf1: je     0x0000000115eaec07
  0x0000000115eaeaf7: jmpq   0x0000000115eaeb15
  0x0000000115eaeafc: mov    0x18(%rcx),%rcx
  0x0000000115eaeb00: mov    0xc(%rcx),%eax
  0x0000000115eaeb03: add    $0x8,%eax
  0x0000000115eaeb06: mov    %eax,0xc(%rcx)
  0x0000000115eaeb09: and    $0x1ff8,%eax
  0x0000000115eaeb0f: je     0x0000000115eaec07
  0x0000000115eaeb15: movzbl 0x0(%r13),%ebx
  0x0000000115eaeb1a: movabs $0x10e101840,%r10
  0x0000000115eaeb24: jmpq   *(%r10,%rbx,8)
  0x0000000115eaeb28: callq  0x0000000115eaeb32
  0x0000000115eaeb2d: jmpq   0x0000000115eaebad
  0x0000000115eaeb32: lea    0x8(%rsp),%rax
  0x0000000115eaeb37: mov    %r13,-0x38(%rbp)
  0x0000000115eaeb3b: mov    %r15,%rdi
  0x0000000115eaeb3e: mov    %rbp,0x1e8(%r15)
  0x0000000115eaeb45: mov    %rax,0x1d8(%r15)
  0x0000000115eaeb4c: test   $0xf,%esp
  0x0000000115eaeb52: je     0x0000000115eaeb6a
  0x0000000115eaeb58: sub    $0x8,%rsp
  0x0000000115eaeb5c: callq  0x000000010dae6f16
  0x0000000115eaeb61: add    $0x8,%rsp
  0x0000000115eaeb65: jmpq   0x0000000115eaeb6f
  0x0000000115eaeb6a: callq  0x000000010dae6f16
  0x0000000115eaeb6f: movabs $0x0,%r10
  0x0000000115eaeb79: mov    %r10,0x1d8(%r15)
  0x0000000115eaeb80: movabs $0x0,%r10
  0x0000000115eaeb8a: mov    %r10,0x1e8(%r15)
  0x0000000115eaeb91: cmpq   $0x0,0x8(%r15)
  0x0000000115eaeb99: je     0x0000000115eaeba4
  0x0000000115eaeb9f: jmpq   0x0000000115e916e0
  0x0000000115eaeba4: mov    -0x38(%rbp),%r13
  0x0000000115eaeba8: mov    -0x30(%rbp),%r14
  0x0000000115eaebac: retq   
  0x0000000115eaebad: movzbl 0x0(%r13),%ebx
  0x0000000115eaebb2: push   %rax
  0x0000000115eaebb3: push   %rbx
  0x0000000115eaebb4: mov    -0x18(%rbp),%rbx
  0x0000000115eaebb8: mov    0x10(%rbx),%rax
  0x0000000115eaebbc: test   %rax,%rax
  0x0000000115eaebbf: je     0x0000000115eaebfc
  0x0000000115eaebc5: mov    %r13,%rsi
  0x0000000115eaebc8: mov    %rbx,%rdi
  0x0000000115eaebcb: test   $0xf,%esp
  0x0000000115eaebd1: je     0x0000000115eaebe9
  0x0000000115eaebd7: sub    $0x8,%rsp
  0x0000000115eaebdb: callq  0x000000010dae706c
  0x0000000115eaebe0: add    $0x8,%rsp
  0x0000000115eaebe4: jmpq   0x0000000115eaebee
  0x0000000115eaebe9: callq  0x000000010dae706c
  0x0000000115eaebee: mov    0x10(%rbx),%rbx
  0x0000000115eaebf2: add    $0x100,%rbx
  0x0000000115eaebf9: add    %rbx,%rax
  0x0000000115eaebfc: mov    %rax,-0x20(%rbp)
  0x0000000115eaec00: pop    %rbx
  0x0000000115eaec01: pop    %rax
  0x0000000115eaec02: jmpq   0x0000000115eaeb15
  0x0000000115eaec07: neg    %rdx
  0x0000000115eaec0a: add    %r13,%rdx
  0x0000000115eaec0d: callq  0x0000000115eaec17
  0x0000000115eaec12: jmpq   0x0000000115eaec95
  0x0000000115eaec17: mov    %rdx,%rsi
  0x0000000115eaec1a: lea    0x8(%rsp),%rax
  0x0000000115eaec1f: mov    %r13,-0x38(%rbp)
  0x0000000115eaec23: mov    %r15,%rdi
  0x0000000115eaec26: mov    %rbp,0x1e8(%r15)
  0x0000000115eaec2d: mov    %rax,0x1d8(%r15)
  0x0000000115eaec34: test   $0xf,%esp
  0x0000000115eaec3a: je     0x0000000115eaec52
  0x0000000115eaec40: sub    $0x8,%rsp
  0x0000000115eaec44: callq  0x000000010dae7476
  0x0000000115eaec49: add    $0x8,%rsp
  0x0000000115eaec4d: jmpq   0x0000000115eaec57
  0x0000000115eaec52: callq  0x000000010dae7476
  0x0000000115eaec57: movabs $0x0,%r10
  0x0000000115eaec61: mov    %r10,0x1d8(%r15)
  0x0000000115eaec68: movabs $0x0,%r10
  0x0000000115eaec72: mov    %r10,0x1e8(%r15)
  0x0000000115eaec79: cmpq   $0x0,0x8(%r15)
  0x0000000115eaec81: je     0x0000000115eaec8c
  0x0000000115eaec87: jmpq   0x0000000115e916e0
  0x0000000115eaec8c: mov    -0x38(%rbp),%r13
  0x0000000115eaec90: mov    -0x30(%rbp),%r14
  0x0000000115eaec94: retq   
  0x0000000115eaec95: movzbl 0x0(%r13),%ebx
  0x0000000115eaec9a: test   %rax,%rax
  0x0000000115eaec9d: je     0x0000000115eaeb15
  0x0000000115eaeca3: mov    0x48(%rax),%ecx
  0x0000000115eaeca6: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eaeca9: je     0x0000000115eaeb15
  0x0000000115eaecaf: mov    %rax,%r13
  0x0000000115eaecb2: callq  0x0000000115eaecbc
  0x0000000115eaecb7: jmpq   0x0000000115eaed37
  0x0000000115eaecbc: lea    0x8(%rsp),%rax
  0x0000000115eaecc1: mov    %r13,-0x38(%rbp)
  0x0000000115eaecc5: mov    %r15,%rdi
  0x0000000115eaecc8: mov    %rbp,0x1e8(%r15)
  0x0000000115eaeccf: mov    %rax,0x1d8(%r15)
  0x0000000115eaecd6: test   $0xf,%esp
  0x0000000115eaecdc: je     0x0000000115eaecf4
  0x0000000115eaece2: sub    $0x8,%rsp
  0x0000000115eaece6: callq  0x000000010dce4396
  0x0000000115eaeceb: add    $0x8,%rsp
  0x0000000115eaecef: jmpq   0x0000000115eaecf9
  0x0000000115eaecf4: callq  0x000000010dce4396
  0x0000000115eaecf9: movabs $0x0,%r10
  0x0000000115eaed03: mov    %r10,0x1d8(%r15)
  0x0000000115eaed0a: movabs $0x0,%r10
  0x0000000115eaed14: mov    %r10,0x1e8(%r15)
  0x0000000115eaed1b: cmpq   $0x0,0x8(%r15)
  0x0000000115eaed23: je     0x0000000115eaed2e
  0x0000000115eaed29: jmpq   0x0000000115e916e0
  0x0000000115eaed2e: mov    -0x38(%rbp),%r13
  0x0000000115eaed32: mov    -0x30(%rbp),%r14
  0x0000000115eaed36: retq   
  0x0000000115eaed37: mov    %rax,%rsi
  0x0000000115eaed3a: mov    -0x8(%rbp),%rdx
  0x0000000115eaed3e: leaveq 
  0x0000000115eaed3f: pop    %rcx
  0x0000000115eaed40: mov    %rdx,%rsp
  0x0000000115eaed43: and    $0xfffffffffffffff0,%rsp
  0x0000000115eaed47: push   %rcx
  0x0000000115eaed48: jmpq   *0x88(%r13)
  0x0000000115eaed4f: mov    -0x20(%rbp),%rax
  0x0000000115eaed53: test   %rax,%rax
  0x0000000115eaed56: je     0x0000000115eaed6e
  0x0000000115eaed5c: addq   $0x1,0x18(%rax)
  0x0000000115eaed61: sbbq   $0x0,0x18(%rax)
  0x0000000115eaed66: add    $0x20,%rax
  0x0000000115eaed6a: mov    %rax,-0x20(%rbp)
  0x0000000115eaed6e: movzbl 0x3(%r13),%ebx
  0x0000000115eaed73: add    $0x3,%r13
  0x0000000115eaed77: movabs $0x10e101840,%r10
  0x0000000115eaed81: jmpq   *(%r10,%rbx,8)
  0x0000000115eaed85: data32 xchg %ax,%ax
  0x0000000115eaed88: add    %al,(%rax)
  0x0000000115eaed8a: add    %al,(%rax)
  0x0000000115eaed8c: add    %al,(%rax)
  0x0000000115eaed8e: add    %al,(%rax)
  0x0000000115eaed90: add    %al,(%rax)
  0x0000000115eaed92: add    %al,(%rax)
  0x0000000115eaed94: add    %al,(%rax)
  0x0000000115eaed96: add    %al,(%rax)
  0x0000000115eaed98: add    %al,(%rax)
  0x0000000115eaed9a: add    %al,(%rax)
  0x0000000115eaed9c: add    %al,(%rax)
  0x0000000115eaed9e: add    %al,(%rax)

----------------------------------------------------------------------
ifge  156 ifge  [0x0000000115eaedc0, 0x0000000115eaf180]  960 bytes

  0x0000000115eaedc0: mov    (%rsp),%eax
  0x0000000115eaedc3: add    $0x8,%rsp
  0x0000000115eaedc7: test   %eax,%eax
  0x0000000115eaedc9: jl     0x0000000115eaf12f
  0x0000000115eaedcf: mov    -0x18(%rbp),%rcx
  0x0000000115eaedd3: mov    -0x20(%rbp),%rax
  0x0000000115eaedd7: test   %rax,%rax
  0x0000000115eaedda: je     0x0000000115eaedf8
  0x0000000115eaede0: mov    0x8(%rax),%rbx
  0x0000000115eaede4: add    $0x1,%rbx
  0x0000000115eaede8: sbb    $0x0,%rbx
  0x0000000115eaedec: mov    %rbx,0x8(%rax)
  0x0000000115eaedf0: add    0x10(%rax),%rax
  0x0000000115eaedf4: mov    %rax,-0x20(%rbp)
  0x0000000115eaedf8: movswl 0x1(%r13),%edx
  0x0000000115eaedfd: bswap  %edx
  0x0000000115eaedff: sar    $0x10,%edx
  0x0000000115eaee02: movslq %edx,%rdx
  0x0000000115eaee05: add    %rdx,%r13
  0x0000000115eaee08: test   %edx,%edx
  0x0000000115eaee0a: jns    0x0000000115eaeef5
  0x0000000115eaee10: mov    0x18(%rcx),%rax
  0x0000000115eaee14: test   %rax,%rax
  0x0000000115eaee17: jne    0x0000000115eaeeb3
  0x0000000115eaee1d: push   %rdx
  0x0000000115eaee1e: push   %rcx
  0x0000000115eaee1f: callq  0x0000000115eaee29
  0x0000000115eaee24: jmpq   0x0000000115eaeea7
  0x0000000115eaee29: mov    %rcx,%rsi
  0x0000000115eaee2c: lea    0x8(%rsp),%rax
  0x0000000115eaee31: mov    %r13,-0x38(%rbp)
  0x0000000115eaee35: mov    %r15,%rdi
  0x0000000115eaee38: mov    %rbp,0x1e8(%r15)
  0x0000000115eaee3f: mov    %rax,0x1d8(%r15)
  0x0000000115eaee46: test   $0xf,%esp
  0x0000000115eaee4c: je     0x0000000115eaee64
  0x0000000115eaee52: sub    $0x8,%rsp
  0x0000000115eaee56: callq  0x000000010dae6d98
  0x0000000115eaee5b: add    $0x8,%rsp
  0x0000000115eaee5f: jmpq   0x0000000115eaee69
  0x0000000115eaee64: callq  0x000000010dae6d98
  0x0000000115eaee69: movabs $0x0,%r10
  0x0000000115eaee73: mov    %r10,0x1d8(%r15)
  0x0000000115eaee7a: movabs $0x0,%r10
  0x0000000115eaee84: mov    %r10,0x1e8(%r15)
  0x0000000115eaee8b: cmpq   $0x0,0x8(%r15)
  0x0000000115eaee93: je     0x0000000115eaee9e
  0x0000000115eaee99: jmpq   0x0000000115e916e0
  0x0000000115eaee9e: mov    -0x38(%rbp),%r13
  0x0000000115eaeea2: mov    -0x30(%rbp),%r14
  0x0000000115eaeea6: retq   
  0x0000000115eaeea7: pop    %rcx
  0x0000000115eaeea8: pop    %rdx
  0x0000000115eaeea9: mov    0x18(%rcx),%rax
  0x0000000115eaeead: je     0x0000000115eaeef5
  0x0000000115eaeeb3: mov    0x10(%rcx),%rbx
  0x0000000115eaeeb7: test   %rbx,%rbx
  0x0000000115eaeeba: je     0x0000000115eaeedc
  0x0000000115eaeebc: mov    0xe0(%rbx),%eax
  0x0000000115eaeec2: add    $0x8,%eax
  0x0000000115eaeec5: mov    %eax,0xe0(%rbx)
  0x0000000115eaeecb: and    $0x1ff8,%eax
  0x0000000115eaeed1: je     0x0000000115eaefe7
  0x0000000115eaeed7: jmpq   0x0000000115eaeef5
  0x0000000115eaeedc: mov    0x18(%rcx),%rcx
  0x0000000115eaeee0: mov    0xc(%rcx),%eax
  0x0000000115eaeee3: add    $0x8,%eax
  0x0000000115eaeee6: mov    %eax,0xc(%rcx)
  0x0000000115eaeee9: and    $0x1ff8,%eax
  0x0000000115eaeeef: je     0x0000000115eaefe7
  0x0000000115eaeef5: movzbl 0x0(%r13),%ebx
  0x0000000115eaeefa: movabs $0x10e101840,%r10
  0x0000000115eaef04: jmpq   *(%r10,%rbx,8)
  0x0000000115eaef08: callq  0x0000000115eaef12
  0x0000000115eaef0d: jmpq   0x0000000115eaef8d
  0x0000000115eaef12: lea    0x8(%rsp),%rax
  0x0000000115eaef17: mov    %r13,-0x38(%rbp)
  0x0000000115eaef1b: mov    %r15,%rdi
  0x0000000115eaef1e: mov    %rbp,0x1e8(%r15)
  0x0000000115eaef25: mov    %rax,0x1d8(%r15)
  0x0000000115eaef2c: test   $0xf,%esp
  0x0000000115eaef32: je     0x0000000115eaef4a
  0x0000000115eaef38: sub    $0x8,%rsp
  0x0000000115eaef3c: callq  0x000000010dae6f16
  0x0000000115eaef41: add    $0x8,%rsp
  0x0000000115eaef45: jmpq   0x0000000115eaef4f
  0x0000000115eaef4a: callq  0x000000010dae6f16
  0x0000000115eaef4f: movabs $0x0,%r10
  0x0000000115eaef59: mov    %r10,0x1d8(%r15)
  0x0000000115eaef60: movabs $0x0,%r10
  0x0000000115eaef6a: mov    %r10,0x1e8(%r15)
  0x0000000115eaef71: cmpq   $0x0,0x8(%r15)
  0x0000000115eaef79: je     0x0000000115eaef84
  0x0000000115eaef7f: jmpq   0x0000000115e916e0
  0x0000000115eaef84: mov    -0x38(%rbp),%r13
  0x0000000115eaef88: mov    -0x30(%rbp),%r14
  0x0000000115eaef8c: retq   
  0x0000000115eaef8d: movzbl 0x0(%r13),%ebx
  0x0000000115eaef92: push   %rax
  0x0000000115eaef93: push   %rbx
  0x0000000115eaef94: mov    -0x18(%rbp),%rbx
  0x0000000115eaef98: mov    0x10(%rbx),%rax
  0x0000000115eaef9c: test   %rax,%rax
  0x0000000115eaef9f: je     0x0000000115eaefdc
  0x0000000115eaefa5: mov    %r13,%rsi
  0x0000000115eaefa8: mov    %rbx,%rdi
  0x0000000115eaefab: test   $0xf,%esp
  0x0000000115eaefb1: je     0x0000000115eaefc9
  0x0000000115eaefb7: sub    $0x8,%rsp
  0x0000000115eaefbb: callq  0x000000010dae706c
  0x0000000115eaefc0: add    $0x8,%rsp
  0x0000000115eaefc4: jmpq   0x0000000115eaefce
  0x0000000115eaefc9: callq  0x000000010dae706c
  0x0000000115eaefce: mov    0x10(%rbx),%rbx
  0x0000000115eaefd2: add    $0x100,%rbx
  0x0000000115eaefd9: add    %rbx,%rax
  0x0000000115eaefdc: mov    %rax,-0x20(%rbp)
  0x0000000115eaefe0: pop    %rbx
  0x0000000115eaefe1: pop    %rax
  0x0000000115eaefe2: jmpq   0x0000000115eaeef5
  0x0000000115eaefe7: neg    %rdx
  0x0000000115eaefea: add    %r13,%rdx
  0x0000000115eaefed: callq  0x0000000115eaeff7
  0x0000000115eaeff2: jmpq   0x0000000115eaf075
  0x0000000115eaeff7: mov    %rdx,%rsi
  0x0000000115eaeffa: lea    0x8(%rsp),%rax
  0x0000000115eaefff: mov    %r13,-0x38(%rbp)
  0x0000000115eaf003: mov    %r15,%rdi
  0x0000000115eaf006: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf00d: mov    %rax,0x1d8(%r15)
  0x0000000115eaf014: test   $0xf,%esp
  0x0000000115eaf01a: je     0x0000000115eaf032
  0x0000000115eaf020: sub    $0x8,%rsp
  0x0000000115eaf024: callq  0x000000010dae7476
  0x0000000115eaf029: add    $0x8,%rsp
  0x0000000115eaf02d: jmpq   0x0000000115eaf037
  0x0000000115eaf032: callq  0x000000010dae7476
  0x0000000115eaf037: movabs $0x0,%r10
  0x0000000115eaf041: mov    %r10,0x1d8(%r15)
  0x0000000115eaf048: movabs $0x0,%r10
  0x0000000115eaf052: mov    %r10,0x1e8(%r15)
  0x0000000115eaf059: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf061: je     0x0000000115eaf06c
  0x0000000115eaf067: jmpq   0x0000000115e916e0
  0x0000000115eaf06c: mov    -0x38(%rbp),%r13
  0x0000000115eaf070: mov    -0x30(%rbp),%r14
  0x0000000115eaf074: retq   
  0x0000000115eaf075: movzbl 0x0(%r13),%ebx
  0x0000000115eaf07a: test   %rax,%rax
  0x0000000115eaf07d: je     0x0000000115eaeef5
  0x0000000115eaf083: mov    0x48(%rax),%ecx
  0x0000000115eaf086: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eaf089: je     0x0000000115eaeef5
  0x0000000115eaf08f: mov    %rax,%r13
  0x0000000115eaf092: callq  0x0000000115eaf09c
  0x0000000115eaf097: jmpq   0x0000000115eaf117
  0x0000000115eaf09c: lea    0x8(%rsp),%rax
  0x0000000115eaf0a1: mov    %r13,-0x38(%rbp)
  0x0000000115eaf0a5: mov    %r15,%rdi
  0x0000000115eaf0a8: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf0af: mov    %rax,0x1d8(%r15)
  0x0000000115eaf0b6: test   $0xf,%esp
  0x0000000115eaf0bc: je     0x0000000115eaf0d4
  0x0000000115eaf0c2: sub    $0x8,%rsp
  0x0000000115eaf0c6: callq  0x000000010dce4396
  0x0000000115eaf0cb: add    $0x8,%rsp
  0x0000000115eaf0cf: jmpq   0x0000000115eaf0d9
  0x0000000115eaf0d4: callq  0x000000010dce4396
  0x0000000115eaf0d9: movabs $0x0,%r10
  0x0000000115eaf0e3: mov    %r10,0x1d8(%r15)
  0x0000000115eaf0ea: movabs $0x0,%r10
  0x0000000115eaf0f4: mov    %r10,0x1e8(%r15)
  0x0000000115eaf0fb: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf103: je     0x0000000115eaf10e
  0x0000000115eaf109: jmpq   0x0000000115e916e0
  0x0000000115eaf10e: mov    -0x38(%rbp),%r13
  0x0000000115eaf112: mov    -0x30(%rbp),%r14
  0x0000000115eaf116: retq   
  0x0000000115eaf117: mov    %rax,%rsi
  0x0000000115eaf11a: mov    -0x8(%rbp),%rdx
  0x0000000115eaf11e: leaveq 
  0x0000000115eaf11f: pop    %rcx
  0x0000000115eaf120: mov    %rdx,%rsp
  0x0000000115eaf123: and    $0xfffffffffffffff0,%rsp
  0x0000000115eaf127: push   %rcx
  0x0000000115eaf128: jmpq   *0x88(%r13)
  0x0000000115eaf12f: mov    -0x20(%rbp),%rax
  0x0000000115eaf133: test   %rax,%rax
  0x0000000115eaf136: je     0x0000000115eaf14e
  0x0000000115eaf13c: addq   $0x1,0x18(%rax)
  0x0000000115eaf141: sbbq   $0x0,0x18(%rax)
  0x0000000115eaf146: add    $0x20,%rax
  0x0000000115eaf14a: mov    %rax,-0x20(%rbp)
  0x0000000115eaf14e: movzbl 0x3(%r13),%ebx
  0x0000000115eaf153: add    $0x3,%r13
  0x0000000115eaf157: movabs $0x10e101840,%r10
  0x0000000115eaf161: jmpq   *(%r10,%rbx,8)
  0x0000000115eaf165: data32 xchg %ax,%ax
  0x0000000115eaf168: add    %al,(%rax)
  0x0000000115eaf16a: add    %al,(%rax)
  0x0000000115eaf16c: add    %al,(%rax)
  0x0000000115eaf16e: add    %al,(%rax)
  0x0000000115eaf170: add    %al,(%rax)
  0x0000000115eaf172: add    %al,(%rax)
  0x0000000115eaf174: add    %al,(%rax)
  0x0000000115eaf176: add    %al,(%rax)
  0x0000000115eaf178: add    %al,(%rax)
  0x0000000115eaf17a: add    %al,(%rax)
  0x0000000115eaf17c: add    %al,(%rax)
  0x0000000115eaf17e: add    %al,(%rax)

----------------------------------------------------------------------
ifgt  157 ifgt  [0x0000000115eaf1a0, 0x0000000115eaf560]  960 bytes

  0x0000000115eaf1a0: mov    (%rsp),%eax
  0x0000000115eaf1a3: add    $0x8,%rsp
  0x0000000115eaf1a7: test   %eax,%eax
  0x0000000115eaf1a9: jle    0x0000000115eaf50f
  0x0000000115eaf1af: mov    -0x18(%rbp),%rcx
  0x0000000115eaf1b3: mov    -0x20(%rbp),%rax
  0x0000000115eaf1b7: test   %rax,%rax
  0x0000000115eaf1ba: je     0x0000000115eaf1d8
  0x0000000115eaf1c0: mov    0x8(%rax),%rbx
  0x0000000115eaf1c4: add    $0x1,%rbx
  0x0000000115eaf1c8: sbb    $0x0,%rbx
  0x0000000115eaf1cc: mov    %rbx,0x8(%rax)
  0x0000000115eaf1d0: add    0x10(%rax),%rax
  0x0000000115eaf1d4: mov    %rax,-0x20(%rbp)
  0x0000000115eaf1d8: movswl 0x1(%r13),%edx
  0x0000000115eaf1dd: bswap  %edx
  0x0000000115eaf1df: sar    $0x10,%edx
  0x0000000115eaf1e2: movslq %edx,%rdx
  0x0000000115eaf1e5: add    %rdx,%r13
  0x0000000115eaf1e8: test   %edx,%edx
  0x0000000115eaf1ea: jns    0x0000000115eaf2d5
  0x0000000115eaf1f0: mov    0x18(%rcx),%rax
  0x0000000115eaf1f4: test   %rax,%rax
  0x0000000115eaf1f7: jne    0x0000000115eaf293
  0x0000000115eaf1fd: push   %rdx
  0x0000000115eaf1fe: push   %rcx
  0x0000000115eaf1ff: callq  0x0000000115eaf209
  0x0000000115eaf204: jmpq   0x0000000115eaf287
  0x0000000115eaf209: mov    %rcx,%rsi
  0x0000000115eaf20c: lea    0x8(%rsp),%rax
  0x0000000115eaf211: mov    %r13,-0x38(%rbp)
  0x0000000115eaf215: mov    %r15,%rdi
  0x0000000115eaf218: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf21f: mov    %rax,0x1d8(%r15)
  0x0000000115eaf226: test   $0xf,%esp
  0x0000000115eaf22c: je     0x0000000115eaf244
  0x0000000115eaf232: sub    $0x8,%rsp
  0x0000000115eaf236: callq  0x000000010dae6d98
  0x0000000115eaf23b: add    $0x8,%rsp
  0x0000000115eaf23f: jmpq   0x0000000115eaf249
  0x0000000115eaf244: callq  0x000000010dae6d98
  0x0000000115eaf249: movabs $0x0,%r10
  0x0000000115eaf253: mov    %r10,0x1d8(%r15)
  0x0000000115eaf25a: movabs $0x0,%r10
  0x0000000115eaf264: mov    %r10,0x1e8(%r15)
  0x0000000115eaf26b: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf273: je     0x0000000115eaf27e
  0x0000000115eaf279: jmpq   0x0000000115e916e0
  0x0000000115eaf27e: mov    -0x38(%rbp),%r13
  0x0000000115eaf282: mov    -0x30(%rbp),%r14
  0x0000000115eaf286: retq   
  0x0000000115eaf287: pop    %rcx
  0x0000000115eaf288: pop    %rdx
  0x0000000115eaf289: mov    0x18(%rcx),%rax
  0x0000000115eaf28d: je     0x0000000115eaf2d5
  0x0000000115eaf293: mov    0x10(%rcx),%rbx
  0x0000000115eaf297: test   %rbx,%rbx
  0x0000000115eaf29a: je     0x0000000115eaf2bc
  0x0000000115eaf29c: mov    0xe0(%rbx),%eax
  0x0000000115eaf2a2: add    $0x8,%eax
  0x0000000115eaf2a5: mov    %eax,0xe0(%rbx)
  0x0000000115eaf2ab: and    $0x1ff8,%eax
  0x0000000115eaf2b1: je     0x0000000115eaf3c7
  0x0000000115eaf2b7: jmpq   0x0000000115eaf2d5
  0x0000000115eaf2bc: mov    0x18(%rcx),%rcx
  0x0000000115eaf2c0: mov    0xc(%rcx),%eax
  0x0000000115eaf2c3: add    $0x8,%eax
  0x0000000115eaf2c6: mov    %eax,0xc(%rcx)
  0x0000000115eaf2c9: and    $0x1ff8,%eax
  0x0000000115eaf2cf: je     0x0000000115eaf3c7
  0x0000000115eaf2d5: movzbl 0x0(%r13),%ebx
  0x0000000115eaf2da: movabs $0x10e101840,%r10
  0x0000000115eaf2e4: jmpq   *(%r10,%rbx,8)
  0x0000000115eaf2e8: callq  0x0000000115eaf2f2
  0x0000000115eaf2ed: jmpq   0x0000000115eaf36d
  0x0000000115eaf2f2: lea    0x8(%rsp),%rax
  0x0000000115eaf2f7: mov    %r13,-0x38(%rbp)
  0x0000000115eaf2fb: mov    %r15,%rdi
  0x0000000115eaf2fe: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf305: mov    %rax,0x1d8(%r15)
  0x0000000115eaf30c: test   $0xf,%esp
  0x0000000115eaf312: je     0x0000000115eaf32a
  0x0000000115eaf318: sub    $0x8,%rsp
  0x0000000115eaf31c: callq  0x000000010dae6f16
  0x0000000115eaf321: add    $0x8,%rsp
  0x0000000115eaf325: jmpq   0x0000000115eaf32f
  0x0000000115eaf32a: callq  0x000000010dae6f16
  0x0000000115eaf32f: movabs $0x0,%r10
  0x0000000115eaf339: mov    %r10,0x1d8(%r15)
  0x0000000115eaf340: movabs $0x0,%r10
  0x0000000115eaf34a: mov    %r10,0x1e8(%r15)
  0x0000000115eaf351: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf359: je     0x0000000115eaf364
  0x0000000115eaf35f: jmpq   0x0000000115e916e0
  0x0000000115eaf364: mov    -0x38(%rbp),%r13
  0x0000000115eaf368: mov    -0x30(%rbp),%r14
  0x0000000115eaf36c: retq   
  0x0000000115eaf36d: movzbl 0x0(%r13),%ebx
  0x0000000115eaf372: push   %rax
  0x0000000115eaf373: push   %rbx
  0x0000000115eaf374: mov    -0x18(%rbp),%rbx
  0x0000000115eaf378: mov    0x10(%rbx),%rax
  0x0000000115eaf37c: test   %rax,%rax
  0x0000000115eaf37f: je     0x0000000115eaf3bc
  0x0000000115eaf385: mov    %r13,%rsi
  0x0000000115eaf388: mov    %rbx,%rdi
  0x0000000115eaf38b: test   $0xf,%esp
  0x0000000115eaf391: je     0x0000000115eaf3a9
  0x0000000115eaf397: sub    $0x8,%rsp
  0x0000000115eaf39b: callq  0x000000010dae706c
  0x0000000115eaf3a0: add    $0x8,%rsp
  0x0000000115eaf3a4: jmpq   0x0000000115eaf3ae
  0x0000000115eaf3a9: callq  0x000000010dae706c
  0x0000000115eaf3ae: mov    0x10(%rbx),%rbx
  0x0000000115eaf3b2: add    $0x100,%rbx
  0x0000000115eaf3b9: add    %rbx,%rax
  0x0000000115eaf3bc: mov    %rax,-0x20(%rbp)
  0x0000000115eaf3c0: pop    %rbx
  0x0000000115eaf3c1: pop    %rax
  0x0000000115eaf3c2: jmpq   0x0000000115eaf2d5
  0x0000000115eaf3c7: neg    %rdx
  0x0000000115eaf3ca: add    %r13,%rdx
  0x0000000115eaf3cd: callq  0x0000000115eaf3d7
  0x0000000115eaf3d2: jmpq   0x0000000115eaf455
  0x0000000115eaf3d7: mov    %rdx,%rsi
  0x0000000115eaf3da: lea    0x8(%rsp),%rax
  0x0000000115eaf3df: mov    %r13,-0x38(%rbp)
  0x0000000115eaf3e3: mov    %r15,%rdi
  0x0000000115eaf3e6: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf3ed: mov    %rax,0x1d8(%r15)
  0x0000000115eaf3f4: test   $0xf,%esp
  0x0000000115eaf3fa: je     0x0000000115eaf412
  0x0000000115eaf400: sub    $0x8,%rsp
  0x0000000115eaf404: callq  0x000000010dae7476
  0x0000000115eaf409: add    $0x8,%rsp
  0x0000000115eaf40d: jmpq   0x0000000115eaf417
  0x0000000115eaf412: callq  0x000000010dae7476
  0x0000000115eaf417: movabs $0x0,%r10
  0x0000000115eaf421: mov    %r10,0x1d8(%r15)
  0x0000000115eaf428: movabs $0x0,%r10
  0x0000000115eaf432: mov    %r10,0x1e8(%r15)
  0x0000000115eaf439: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf441: je     0x0000000115eaf44c
  0x0000000115eaf447: jmpq   0x0000000115e916e0
  0x0000000115eaf44c: mov    -0x38(%rbp),%r13
  0x0000000115eaf450: mov    -0x30(%rbp),%r14
  0x0000000115eaf454: retq   
  0x0000000115eaf455: movzbl 0x0(%r13),%ebx
  0x0000000115eaf45a: test   %rax,%rax
  0x0000000115eaf45d: je     0x0000000115eaf2d5
  0x0000000115eaf463: mov    0x48(%rax),%ecx
  0x0000000115eaf466: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eaf469: je     0x0000000115eaf2d5
  0x0000000115eaf46f: mov    %rax,%r13
  0x0000000115eaf472: callq  0x0000000115eaf47c
  0x0000000115eaf477: jmpq   0x0000000115eaf4f7
  0x0000000115eaf47c: lea    0x8(%rsp),%rax
  0x0000000115eaf481: mov    %r13,-0x38(%rbp)
  0x0000000115eaf485: mov    %r15,%rdi
  0x0000000115eaf488: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf48f: mov    %rax,0x1d8(%r15)
  0x0000000115eaf496: test   $0xf,%esp
  0x0000000115eaf49c: je     0x0000000115eaf4b4
  0x0000000115eaf4a2: sub    $0x8,%rsp
  0x0000000115eaf4a6: callq  0x000000010dce4396
  0x0000000115eaf4ab: add    $0x8,%rsp
  0x0000000115eaf4af: jmpq   0x0000000115eaf4b9
  0x0000000115eaf4b4: callq  0x000000010dce4396
  0x0000000115eaf4b9: movabs $0x0,%r10
  0x0000000115eaf4c3: mov    %r10,0x1d8(%r15)
  0x0000000115eaf4ca: movabs $0x0,%r10
  0x0000000115eaf4d4: mov    %r10,0x1e8(%r15)
  0x0000000115eaf4db: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf4e3: je     0x0000000115eaf4ee
  0x0000000115eaf4e9: jmpq   0x0000000115e916e0
  0x0000000115eaf4ee: mov    -0x38(%rbp),%r13
  0x0000000115eaf4f2: mov    -0x30(%rbp),%r14
  0x0000000115eaf4f6: retq   
  0x0000000115eaf4f7: mov    %rax,%rsi
  0x0000000115eaf4fa: mov    -0x8(%rbp),%rdx
  0x0000000115eaf4fe: leaveq 
  0x0000000115eaf4ff: pop    %rcx
  0x0000000115eaf500: mov    %rdx,%rsp
  0x0000000115eaf503: and    $0xfffffffffffffff0,%rsp
  0x0000000115eaf507: push   %rcx
  0x0000000115eaf508: jmpq   *0x88(%r13)
  0x0000000115eaf50f: mov    -0x20(%rbp),%rax
  0x0000000115eaf513: test   %rax,%rax
  0x0000000115eaf516: je     0x0000000115eaf52e
  0x0000000115eaf51c: addq   $0x1,0x18(%rax)
  0x0000000115eaf521: sbbq   $0x0,0x18(%rax)
  0x0000000115eaf526: add    $0x20,%rax
  0x0000000115eaf52a: mov    %rax,-0x20(%rbp)
  0x0000000115eaf52e: movzbl 0x3(%r13),%ebx
  0x0000000115eaf533: add    $0x3,%r13
  0x0000000115eaf537: movabs $0x10e101840,%r10
  0x0000000115eaf541: jmpq   *(%r10,%rbx,8)
  0x0000000115eaf545: data32 xchg %ax,%ax
  0x0000000115eaf548: add    %al,(%rax)
  0x0000000115eaf54a: add    %al,(%rax)
  0x0000000115eaf54c: add    %al,(%rax)
  0x0000000115eaf54e: add    %al,(%rax)
  0x0000000115eaf550: add    %al,(%rax)
  0x0000000115eaf552: add    %al,(%rax)
  0x0000000115eaf554: add    %al,(%rax)
  0x0000000115eaf556: add    %al,(%rax)
  0x0000000115eaf558: add    %al,(%rax)
  0x0000000115eaf55a: add    %al,(%rax)
  0x0000000115eaf55c: add    %al,(%rax)
  0x0000000115eaf55e: add    %al,(%rax)

----------------------------------------------------------------------
ifle  158 ifle  [0x0000000115eaf580, 0x0000000115eaf940]  960 bytes

  0x0000000115eaf580: mov    (%rsp),%eax
  0x0000000115eaf583: add    $0x8,%rsp
  0x0000000115eaf587: test   %eax,%eax
  0x0000000115eaf589: jg     0x0000000115eaf8ef
  0x0000000115eaf58f: mov    -0x18(%rbp),%rcx
  0x0000000115eaf593: mov    -0x20(%rbp),%rax
  0x0000000115eaf597: test   %rax,%rax
  0x0000000115eaf59a: je     0x0000000115eaf5b8
  0x0000000115eaf5a0: mov    0x8(%rax),%rbx
  0x0000000115eaf5a4: add    $0x1,%rbx
  0x0000000115eaf5a8: sbb    $0x0,%rbx
  0x0000000115eaf5ac: mov    %rbx,0x8(%rax)
  0x0000000115eaf5b0: add    0x10(%rax),%rax
  0x0000000115eaf5b4: mov    %rax,-0x20(%rbp)
  0x0000000115eaf5b8: movswl 0x1(%r13),%edx
  0x0000000115eaf5bd: bswap  %edx
  0x0000000115eaf5bf: sar    $0x10,%edx
  0x0000000115eaf5c2: movslq %edx,%rdx
  0x0000000115eaf5c5: add    %rdx,%r13
  0x0000000115eaf5c8: test   %edx,%edx
  0x0000000115eaf5ca: jns    0x0000000115eaf6b5
  0x0000000115eaf5d0: mov    0x18(%rcx),%rax
  0x0000000115eaf5d4: test   %rax,%rax
  0x0000000115eaf5d7: jne    0x0000000115eaf673
  0x0000000115eaf5dd: push   %rdx
  0x0000000115eaf5de: push   %rcx
  0x0000000115eaf5df: callq  0x0000000115eaf5e9
  0x0000000115eaf5e4: jmpq   0x0000000115eaf667
  0x0000000115eaf5e9: mov    %rcx,%rsi
  0x0000000115eaf5ec: lea    0x8(%rsp),%rax
  0x0000000115eaf5f1: mov    %r13,-0x38(%rbp)
  0x0000000115eaf5f5: mov    %r15,%rdi
  0x0000000115eaf5f8: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf5ff: mov    %rax,0x1d8(%r15)
  0x0000000115eaf606: test   $0xf,%esp
  0x0000000115eaf60c: je     0x0000000115eaf624
  0x0000000115eaf612: sub    $0x8,%rsp
  0x0000000115eaf616: callq  0x000000010dae6d98
  0x0000000115eaf61b: add    $0x8,%rsp
  0x0000000115eaf61f: jmpq   0x0000000115eaf629
  0x0000000115eaf624: callq  0x000000010dae6d98
  0x0000000115eaf629: movabs $0x0,%r10
  0x0000000115eaf633: mov    %r10,0x1d8(%r15)
  0x0000000115eaf63a: movabs $0x0,%r10
  0x0000000115eaf644: mov    %r10,0x1e8(%r15)
  0x0000000115eaf64b: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf653: je     0x0000000115eaf65e
  0x0000000115eaf659: jmpq   0x0000000115e916e0
  0x0000000115eaf65e: mov    -0x38(%rbp),%r13
  0x0000000115eaf662: mov    -0x30(%rbp),%r14
  0x0000000115eaf666: retq   
  0x0000000115eaf667: pop    %rcx
  0x0000000115eaf668: pop    %rdx
  0x0000000115eaf669: mov    0x18(%rcx),%rax
  0x0000000115eaf66d: je     0x0000000115eaf6b5
  0x0000000115eaf673: mov    0x10(%rcx),%rbx
  0x0000000115eaf677: test   %rbx,%rbx
  0x0000000115eaf67a: je     0x0000000115eaf69c
  0x0000000115eaf67c: mov    0xe0(%rbx),%eax
  0x0000000115eaf682: add    $0x8,%eax
  0x0000000115eaf685: mov    %eax,0xe0(%rbx)
  0x0000000115eaf68b: and    $0x1ff8,%eax
  0x0000000115eaf691: je     0x0000000115eaf7a7
  0x0000000115eaf697: jmpq   0x0000000115eaf6b5
  0x0000000115eaf69c: mov    0x18(%rcx),%rcx
  0x0000000115eaf6a0: mov    0xc(%rcx),%eax
  0x0000000115eaf6a3: add    $0x8,%eax
  0x0000000115eaf6a6: mov    %eax,0xc(%rcx)
  0x0000000115eaf6a9: and    $0x1ff8,%eax
  0x0000000115eaf6af: je     0x0000000115eaf7a7
  0x0000000115eaf6b5: movzbl 0x0(%r13),%ebx
  0x0000000115eaf6ba: movabs $0x10e101840,%r10
  0x0000000115eaf6c4: jmpq   *(%r10,%rbx,8)
  0x0000000115eaf6c8: callq  0x0000000115eaf6d2
  0x0000000115eaf6cd: jmpq   0x0000000115eaf74d
  0x0000000115eaf6d2: lea    0x8(%rsp),%rax
  0x0000000115eaf6d7: mov    %r13,-0x38(%rbp)
  0x0000000115eaf6db: mov    %r15,%rdi
  0x0000000115eaf6de: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf6e5: mov    %rax,0x1d8(%r15)
  0x0000000115eaf6ec: test   $0xf,%esp
  0x0000000115eaf6f2: je     0x0000000115eaf70a
  0x0000000115eaf6f8: sub    $0x8,%rsp
  0x0000000115eaf6fc: callq  0x000000010dae6f16
  0x0000000115eaf701: add    $0x8,%rsp
  0x0000000115eaf705: jmpq   0x0000000115eaf70f
  0x0000000115eaf70a: callq  0x000000010dae6f16
  0x0000000115eaf70f: movabs $0x0,%r10
  0x0000000115eaf719: mov    %r10,0x1d8(%r15)
  0x0000000115eaf720: movabs $0x0,%r10
  0x0000000115eaf72a: mov    %r10,0x1e8(%r15)
  0x0000000115eaf731: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf739: je     0x0000000115eaf744
  0x0000000115eaf73f: jmpq   0x0000000115e916e0
  0x0000000115eaf744: mov    -0x38(%rbp),%r13
  0x0000000115eaf748: mov    -0x30(%rbp),%r14
  0x0000000115eaf74c: retq   
  0x0000000115eaf74d: movzbl 0x0(%r13),%ebx
  0x0000000115eaf752: push   %rax
  0x0000000115eaf753: push   %rbx
  0x0000000115eaf754: mov    -0x18(%rbp),%rbx
  0x0000000115eaf758: mov    0x10(%rbx),%rax
  0x0000000115eaf75c: test   %rax,%rax
  0x0000000115eaf75f: je     0x0000000115eaf79c
  0x0000000115eaf765: mov    %r13,%rsi
  0x0000000115eaf768: mov    %rbx,%rdi
  0x0000000115eaf76b: test   $0xf,%esp
  0x0000000115eaf771: je     0x0000000115eaf789
  0x0000000115eaf777: sub    $0x8,%rsp
  0x0000000115eaf77b: callq  0x000000010dae706c
  0x0000000115eaf780: add    $0x8,%rsp
  0x0000000115eaf784: jmpq   0x0000000115eaf78e
  0x0000000115eaf789: callq  0x000000010dae706c
  0x0000000115eaf78e: mov    0x10(%rbx),%rbx
  0x0000000115eaf792: add    $0x100,%rbx
  0x0000000115eaf799: add    %rbx,%rax
  0x0000000115eaf79c: mov    %rax,-0x20(%rbp)
  0x0000000115eaf7a0: pop    %rbx
  0x0000000115eaf7a1: pop    %rax
  0x0000000115eaf7a2: jmpq   0x0000000115eaf6b5
  0x0000000115eaf7a7: neg    %rdx
  0x0000000115eaf7aa: add    %r13,%rdx
  0x0000000115eaf7ad: callq  0x0000000115eaf7b7
  0x0000000115eaf7b2: jmpq   0x0000000115eaf835
  0x0000000115eaf7b7: mov    %rdx,%rsi
  0x0000000115eaf7ba: lea    0x8(%rsp),%rax
  0x0000000115eaf7bf: mov    %r13,-0x38(%rbp)
  0x0000000115eaf7c3: mov    %r15,%rdi
  0x0000000115eaf7c6: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf7cd: mov    %rax,0x1d8(%r15)
  0x0000000115eaf7d4: test   $0xf,%esp
  0x0000000115eaf7da: je     0x0000000115eaf7f2
  0x0000000115eaf7e0: sub    $0x8,%rsp
  0x0000000115eaf7e4: callq  0x000000010dae7476
  0x0000000115eaf7e9: add    $0x8,%rsp
  0x0000000115eaf7ed: jmpq   0x0000000115eaf7f7
  0x0000000115eaf7f2: callq  0x000000010dae7476
  0x0000000115eaf7f7: movabs $0x0,%r10
  0x0000000115eaf801: mov    %r10,0x1d8(%r15)
  0x0000000115eaf808: movabs $0x0,%r10
  0x0000000115eaf812: mov    %r10,0x1e8(%r15)
  0x0000000115eaf819: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf821: je     0x0000000115eaf82c
  0x0000000115eaf827: jmpq   0x0000000115e916e0
  0x0000000115eaf82c: mov    -0x38(%rbp),%r13
  0x0000000115eaf830: mov    -0x30(%rbp),%r14
  0x0000000115eaf834: retq   
  0x0000000115eaf835: movzbl 0x0(%r13),%ebx
  0x0000000115eaf83a: test   %rax,%rax
  0x0000000115eaf83d: je     0x0000000115eaf6b5
  0x0000000115eaf843: mov    0x48(%rax),%ecx
  0x0000000115eaf846: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eaf849: je     0x0000000115eaf6b5
  0x0000000115eaf84f: mov    %rax,%r13
  0x0000000115eaf852: callq  0x0000000115eaf85c
  0x0000000115eaf857: jmpq   0x0000000115eaf8d7
  0x0000000115eaf85c: lea    0x8(%rsp),%rax
  0x0000000115eaf861: mov    %r13,-0x38(%rbp)
  0x0000000115eaf865: mov    %r15,%rdi
  0x0000000115eaf868: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf86f: mov    %rax,0x1d8(%r15)
  0x0000000115eaf876: test   $0xf,%esp
  0x0000000115eaf87c: je     0x0000000115eaf894
  0x0000000115eaf882: sub    $0x8,%rsp
  0x0000000115eaf886: callq  0x000000010dce4396
  0x0000000115eaf88b: add    $0x8,%rsp
  0x0000000115eaf88f: jmpq   0x0000000115eaf899
  0x0000000115eaf894: callq  0x000000010dce4396
  0x0000000115eaf899: movabs $0x0,%r10
  0x0000000115eaf8a3: mov    %r10,0x1d8(%r15)
  0x0000000115eaf8aa: movabs $0x0,%r10
  0x0000000115eaf8b4: mov    %r10,0x1e8(%r15)
  0x0000000115eaf8bb: cmpq   $0x0,0x8(%r15)
  0x0000000115eaf8c3: je     0x0000000115eaf8ce
  0x0000000115eaf8c9: jmpq   0x0000000115e916e0
  0x0000000115eaf8ce: mov    -0x38(%rbp),%r13
  0x0000000115eaf8d2: mov    -0x30(%rbp),%r14
  0x0000000115eaf8d6: retq   
  0x0000000115eaf8d7: mov    %rax,%rsi
  0x0000000115eaf8da: mov    -0x8(%rbp),%rdx
  0x0000000115eaf8de: leaveq 
  0x0000000115eaf8df: pop    %rcx
  0x0000000115eaf8e0: mov    %rdx,%rsp
  0x0000000115eaf8e3: and    $0xfffffffffffffff0,%rsp
  0x0000000115eaf8e7: push   %rcx
  0x0000000115eaf8e8: jmpq   *0x88(%r13)
  0x0000000115eaf8ef: mov    -0x20(%rbp),%rax
  0x0000000115eaf8f3: test   %rax,%rax
  0x0000000115eaf8f6: je     0x0000000115eaf90e
  0x0000000115eaf8fc: addq   $0x1,0x18(%rax)
  0x0000000115eaf901: sbbq   $0x0,0x18(%rax)
  0x0000000115eaf906: add    $0x20,%rax
  0x0000000115eaf90a: mov    %rax,-0x20(%rbp)
  0x0000000115eaf90e: movzbl 0x3(%r13),%ebx
  0x0000000115eaf913: add    $0x3,%r13
  0x0000000115eaf917: movabs $0x10e101840,%r10
  0x0000000115eaf921: jmpq   *(%r10,%rbx,8)
  0x0000000115eaf925: data32 xchg %ax,%ax
  0x0000000115eaf928: add    %al,(%rax)
  0x0000000115eaf92a: add    %al,(%rax)
  0x0000000115eaf92c: add    %al,(%rax)
  0x0000000115eaf92e: add    %al,(%rax)
  0x0000000115eaf930: add    %al,(%rax)
  0x0000000115eaf932: add    %al,(%rax)
  0x0000000115eaf934: add    %al,(%rax)
  0x0000000115eaf936: add    %al,(%rax)
  0x0000000115eaf938: add    %al,(%rax)
  0x0000000115eaf93a: add    %al,(%rax)
  0x0000000115eaf93c: add    %al,(%rax)
  0x0000000115eaf93e: add    %al,(%rax)

----------------------------------------------------------------------
if_icmpeq  159 if_icmpeq  [0x0000000115eaf960, 0x0000000115eafd20]  960 bytes

  0x0000000115eaf960: mov    (%rsp),%eax
  0x0000000115eaf963: add    $0x8,%rsp
  0x0000000115eaf967: mov    (%rsp),%edx
  0x0000000115eaf96a: add    $0x8,%rsp
  0x0000000115eaf96e: cmp    %eax,%edx
  0x0000000115eaf970: jne    0x0000000115eafcd6
  0x0000000115eaf976: mov    -0x18(%rbp),%rcx
  0x0000000115eaf97a: mov    -0x20(%rbp),%rax
  0x0000000115eaf97e: test   %rax,%rax
  0x0000000115eaf981: je     0x0000000115eaf99f
  0x0000000115eaf987: mov    0x8(%rax),%rbx
  0x0000000115eaf98b: add    $0x1,%rbx
  0x0000000115eaf98f: sbb    $0x0,%rbx
  0x0000000115eaf993: mov    %rbx,0x8(%rax)
  0x0000000115eaf997: add    0x10(%rax),%rax
  0x0000000115eaf99b: mov    %rax,-0x20(%rbp)
  0x0000000115eaf99f: movswl 0x1(%r13),%edx
  0x0000000115eaf9a4: bswap  %edx
  0x0000000115eaf9a6: sar    $0x10,%edx
  0x0000000115eaf9a9: movslq %edx,%rdx
  0x0000000115eaf9ac: add    %rdx,%r13
  0x0000000115eaf9af: test   %edx,%edx
  0x0000000115eaf9b1: jns    0x0000000115eafa9c
  0x0000000115eaf9b7: mov    0x18(%rcx),%rax
  0x0000000115eaf9bb: test   %rax,%rax
  0x0000000115eaf9be: jne    0x0000000115eafa5a
  0x0000000115eaf9c4: push   %rdx
  0x0000000115eaf9c5: push   %rcx
  0x0000000115eaf9c6: callq  0x0000000115eaf9d0
  0x0000000115eaf9cb: jmpq   0x0000000115eafa4e
  0x0000000115eaf9d0: mov    %rcx,%rsi
  0x0000000115eaf9d3: lea    0x8(%rsp),%rax
  0x0000000115eaf9d8: mov    %r13,-0x38(%rbp)
  0x0000000115eaf9dc: mov    %r15,%rdi
  0x0000000115eaf9df: mov    %rbp,0x1e8(%r15)
  0x0000000115eaf9e6: mov    %rax,0x1d8(%r15)
  0x0000000115eaf9ed: test   $0xf,%esp
  0x0000000115eaf9f3: je     0x0000000115eafa0b
  0x0000000115eaf9f9: sub    $0x8,%rsp
  0x0000000115eaf9fd: callq  0x000000010dae6d98
  0x0000000115eafa02: add    $0x8,%rsp
  0x0000000115eafa06: jmpq   0x0000000115eafa10
  0x0000000115eafa0b: callq  0x000000010dae6d98
  0x0000000115eafa10: movabs $0x0,%r10
  0x0000000115eafa1a: mov    %r10,0x1d8(%r15)
  0x0000000115eafa21: movabs $0x0,%r10
  0x0000000115eafa2b: mov    %r10,0x1e8(%r15)
  0x0000000115eafa32: cmpq   $0x0,0x8(%r15)
  0x0000000115eafa3a: je     0x0000000115eafa45
  0x0000000115eafa40: jmpq   0x0000000115e916e0
  0x0000000115eafa45: mov    -0x38(%rbp),%r13
  0x0000000115eafa49: mov    -0x30(%rbp),%r14
  0x0000000115eafa4d: retq   
  0x0000000115eafa4e: pop    %rcx
  0x0000000115eafa4f: pop    %rdx
  0x0000000115eafa50: mov    0x18(%rcx),%rax
  0x0000000115eafa54: je     0x0000000115eafa9c
  0x0000000115eafa5a: mov    0x10(%rcx),%rbx
  0x0000000115eafa5e: test   %rbx,%rbx
  0x0000000115eafa61: je     0x0000000115eafa83
  0x0000000115eafa63: mov    0xe0(%rbx),%eax
  0x0000000115eafa69: add    $0x8,%eax
  0x0000000115eafa6c: mov    %eax,0xe0(%rbx)
  0x0000000115eafa72: and    $0x1ff8,%eax
  0x0000000115eafa78: je     0x0000000115eafb8e
  0x0000000115eafa7e: jmpq   0x0000000115eafa9c
  0x0000000115eafa83: mov    0x18(%rcx),%rcx
  0x0000000115eafa87: mov    0xc(%rcx),%eax
  0x0000000115eafa8a: add    $0x8,%eax
  0x0000000115eafa8d: mov    %eax,0xc(%rcx)
  0x0000000115eafa90: and    $0x1ff8,%eax
  0x0000000115eafa96: je     0x0000000115eafb8e
  0x0000000115eafa9c: movzbl 0x0(%r13),%ebx
  0x0000000115eafaa1: movabs $0x10e101840,%r10
  0x0000000115eafaab: jmpq   *(%r10,%rbx,8)
  0x0000000115eafaaf: callq  0x0000000115eafab9
  0x0000000115eafab4: jmpq   0x0000000115eafb34
  0x0000000115eafab9: lea    0x8(%rsp),%rax
  0x0000000115eafabe: mov    %r13,-0x38(%rbp)
  0x0000000115eafac2: mov    %r15,%rdi
  0x0000000115eafac5: mov    %rbp,0x1e8(%r15)
  0x0000000115eafacc: mov    %rax,0x1d8(%r15)
  0x0000000115eafad3: test   $0xf,%esp
  0x0000000115eafad9: je     0x0000000115eafaf1
  0x0000000115eafadf: sub    $0x8,%rsp
  0x0000000115eafae3: callq  0x000000010dae6f16
  0x0000000115eafae8: add    $0x8,%rsp
  0x0000000115eafaec: jmpq   0x0000000115eafaf6
  0x0000000115eafaf1: callq  0x000000010dae6f16
  0x0000000115eafaf6: movabs $0x0,%r10
  0x0000000115eafb00: mov    %r10,0x1d8(%r15)
  0x0000000115eafb07: movabs $0x0,%r10
  0x0000000115eafb11: mov    %r10,0x1e8(%r15)
  0x0000000115eafb18: cmpq   $0x0,0x8(%r15)
  0x0000000115eafb20: je     0x0000000115eafb2b
  0x0000000115eafb26: jmpq   0x0000000115e916e0
  0x0000000115eafb2b: mov    -0x38(%rbp),%r13
  0x0000000115eafb2f: mov    -0x30(%rbp),%r14
  0x0000000115eafb33: retq   
  0x0000000115eafb34: movzbl 0x0(%r13),%ebx
  0x0000000115eafb39: push   %rax
  0x0000000115eafb3a: push   %rbx
  0x0000000115eafb3b: mov    -0x18(%rbp),%rbx
  0x0000000115eafb3f: mov    0x10(%rbx),%rax
  0x0000000115eafb43: test   %rax,%rax
  0x0000000115eafb46: je     0x0000000115eafb83
  0x0000000115eafb4c: mov    %r13,%rsi
  0x0000000115eafb4f: mov    %rbx,%rdi
  0x0000000115eafb52: test   $0xf,%esp
  0x0000000115eafb58: je     0x0000000115eafb70
  0x0000000115eafb5e: sub    $0x8,%rsp
  0x0000000115eafb62: callq  0x000000010dae706c
  0x0000000115eafb67: add    $0x8,%rsp
  0x0000000115eafb6b: jmpq   0x0000000115eafb75
  0x0000000115eafb70: callq  0x000000010dae706c
  0x0000000115eafb75: mov    0x10(%rbx),%rbx
  0x0000000115eafb79: add    $0x100,%rbx
  0x0000000115eafb80: add    %rbx,%rax
  0x0000000115eafb83: mov    %rax,-0x20(%rbp)
  0x0000000115eafb87: pop    %rbx
  0x0000000115eafb88: pop    %rax
  0x0000000115eafb89: jmpq   0x0000000115eafa9c
  0x0000000115eafb8e: neg    %rdx
  0x0000000115eafb91: add    %r13,%rdx
  0x0000000115eafb94: callq  0x0000000115eafb9e
  0x0000000115eafb99: jmpq   0x0000000115eafc1c
  0x0000000115eafb9e: mov    %rdx,%rsi
  0x0000000115eafba1: lea    0x8(%rsp),%rax
  0x0000000115eafba6: mov    %r13,-0x38(%rbp)
  0x0000000115eafbaa: mov    %r15,%rdi
  0x0000000115eafbad: mov    %rbp,0x1e8(%r15)
  0x0000000115eafbb4: mov    %rax,0x1d8(%r15)
  0x0000000115eafbbb: test   $0xf,%esp
  0x0000000115eafbc1: je     0x0000000115eafbd9
  0x0000000115eafbc7: sub    $0x8,%rsp
  0x0000000115eafbcb: callq  0x000000010dae7476
  0x0000000115eafbd0: add    $0x8,%rsp
  0x0000000115eafbd4: jmpq   0x0000000115eafbde
  0x0000000115eafbd9: callq  0x000000010dae7476
  0x0000000115eafbde: movabs $0x0,%r10
  0x0000000115eafbe8: mov    %r10,0x1d8(%r15)
  0x0000000115eafbef: movabs $0x0,%r10
  0x0000000115eafbf9: mov    %r10,0x1e8(%r15)
  0x0000000115eafc00: cmpq   $0x0,0x8(%r15)
  0x0000000115eafc08: je     0x0000000115eafc13
  0x0000000115eafc0e: jmpq   0x0000000115e916e0
  0x0000000115eafc13: mov    -0x38(%rbp),%r13
  0x0000000115eafc17: mov    -0x30(%rbp),%r14
  0x0000000115eafc1b: retq   
  0x0000000115eafc1c: movzbl 0x0(%r13),%ebx
  0x0000000115eafc21: test   %rax,%rax
  0x0000000115eafc24: je     0x0000000115eafa9c
  0x0000000115eafc2a: mov    0x48(%rax),%ecx
  0x0000000115eafc2d: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eafc30: je     0x0000000115eafa9c
  0x0000000115eafc36: mov    %rax,%r13
  0x0000000115eafc39: callq  0x0000000115eafc43
  0x0000000115eafc3e: jmpq   0x0000000115eafcbe
  0x0000000115eafc43: lea    0x8(%rsp),%rax
  0x0000000115eafc48: mov    %r13,-0x38(%rbp)
  0x0000000115eafc4c: mov    %r15,%rdi
  0x0000000115eafc4f: mov    %rbp,0x1e8(%r15)
  0x0000000115eafc56: mov    %rax,0x1d8(%r15)
  0x0000000115eafc5d: test   $0xf,%esp
  0x0000000115eafc63: je     0x0000000115eafc7b
  0x0000000115eafc69: sub    $0x8,%rsp
  0x0000000115eafc6d: callq  0x000000010dce4396
  0x0000000115eafc72: add    $0x8,%rsp
  0x0000000115eafc76: jmpq   0x0000000115eafc80
  0x0000000115eafc7b: callq  0x000000010dce4396
  0x0000000115eafc80: movabs $0x0,%r10
  0x0000000115eafc8a: mov    %r10,0x1d8(%r15)
  0x0000000115eafc91: movabs $0x0,%r10
  0x0000000115eafc9b: mov    %r10,0x1e8(%r15)
  0x0000000115eafca2: cmpq   $0x0,0x8(%r15)
  0x0000000115eafcaa: je     0x0000000115eafcb5
  0x0000000115eafcb0: jmpq   0x0000000115e916e0
  0x0000000115eafcb5: mov    -0x38(%rbp),%r13
  0x0000000115eafcb9: mov    -0x30(%rbp),%r14
  0x0000000115eafcbd: retq   
  0x0000000115eafcbe: mov    %rax,%rsi
  0x0000000115eafcc1: mov    -0x8(%rbp),%rdx
  0x0000000115eafcc5: leaveq 
  0x0000000115eafcc6: pop    %rcx
  0x0000000115eafcc7: mov    %rdx,%rsp
  0x0000000115eafcca: and    $0xfffffffffffffff0,%rsp
  0x0000000115eafcce: push   %rcx
  0x0000000115eafccf: jmpq   *0x88(%r13)
  0x0000000115eafcd6: mov    -0x20(%rbp),%rax
  0x0000000115eafcda: test   %rax,%rax
  0x0000000115eafcdd: je     0x0000000115eafcf5
  0x0000000115eafce3: addq   $0x1,0x18(%rax)
  0x0000000115eafce8: sbbq   $0x0,0x18(%rax)
  0x0000000115eafced: add    $0x20,%rax
  0x0000000115eafcf1: mov    %rax,-0x20(%rbp)
  0x0000000115eafcf5: movzbl 0x3(%r13),%ebx
  0x0000000115eafcfa: add    $0x3,%r13
  0x0000000115eafcfe: movabs $0x10e101840,%r10
  0x0000000115eafd08: jmpq   *(%r10,%rbx,8)
  0x0000000115eafd0c: nopl   0x0(%rax)
  0x0000000115eafd10: add    %al,(%rax)
  0x0000000115eafd12: add    %al,(%rax)
  0x0000000115eafd14: add    %al,(%rax)
  0x0000000115eafd16: add    %al,(%rax)
  0x0000000115eafd18: add    %al,(%rax)
  0x0000000115eafd1a: add    %al,(%rax)
  0x0000000115eafd1c: add    %al,(%rax)
  0x0000000115eafd1e: add    %al,(%rax)

----------------------------------------------------------------------
if_icmpne  160 if_icmpne  [0x0000000115eafd40, 0x0000000115eb0100]  960 bytes

  0x0000000115eafd40: mov    (%rsp),%eax
  0x0000000115eafd43: add    $0x8,%rsp
  0x0000000115eafd47: mov    (%rsp),%edx
  0x0000000115eafd4a: add    $0x8,%rsp
  0x0000000115eafd4e: cmp    %eax,%edx
  0x0000000115eafd50: je     0x0000000115eb00b6
  0x0000000115eafd56: mov    -0x18(%rbp),%rcx
  0x0000000115eafd5a: mov    -0x20(%rbp),%rax
  0x0000000115eafd5e: test   %rax,%rax
  0x0000000115eafd61: je     0x0000000115eafd7f
  0x0000000115eafd67: mov    0x8(%rax),%rbx
  0x0000000115eafd6b: add    $0x1,%rbx
  0x0000000115eafd6f: sbb    $0x0,%rbx
  0x0000000115eafd73: mov    %rbx,0x8(%rax)
  0x0000000115eafd77: add    0x10(%rax),%rax
  0x0000000115eafd7b: mov    %rax,-0x20(%rbp)
  0x0000000115eafd7f: movswl 0x1(%r13),%edx
  0x0000000115eafd84: bswap  %edx
  0x0000000115eafd86: sar    $0x10,%edx
  0x0000000115eafd89: movslq %edx,%rdx
  0x0000000115eafd8c: add    %rdx,%r13
  0x0000000115eafd8f: test   %edx,%edx
  0x0000000115eafd91: jns    0x0000000115eafe7c
  0x0000000115eafd97: mov    0x18(%rcx),%rax
  0x0000000115eafd9b: test   %rax,%rax
  0x0000000115eafd9e: jne    0x0000000115eafe3a
  0x0000000115eafda4: push   %rdx
  0x0000000115eafda5: push   %rcx
  0x0000000115eafda6: callq  0x0000000115eafdb0
  0x0000000115eafdab: jmpq   0x0000000115eafe2e
  0x0000000115eafdb0: mov    %rcx,%rsi
  0x0000000115eafdb3: lea    0x8(%rsp),%rax
  0x0000000115eafdb8: mov    %r13,-0x38(%rbp)
  0x0000000115eafdbc: mov    %r15,%rdi
  0x0000000115eafdbf: mov    %rbp,0x1e8(%r15)
  0x0000000115eafdc6: mov    %rax,0x1d8(%r15)
  0x0000000115eafdcd: test   $0xf,%esp
  0x0000000115eafdd3: je     0x0000000115eafdeb
  0x0000000115eafdd9: sub    $0x8,%rsp
  0x0000000115eafddd: callq  0x000000010dae6d98
  0x0000000115eafde2: add    $0x8,%rsp
  0x0000000115eafde6: jmpq   0x0000000115eafdf0
  0x0000000115eafdeb: callq  0x000000010dae6d98
  0x0000000115eafdf0: movabs $0x0,%r10
  0x0000000115eafdfa: mov    %r10,0x1d8(%r15)
  0x0000000115eafe01: movabs $0x0,%r10
  0x0000000115eafe0b: mov    %r10,0x1e8(%r15)
  0x0000000115eafe12: cmpq   $0x0,0x8(%r15)
  0x0000000115eafe1a: je     0x0000000115eafe25
  0x0000000115eafe20: jmpq   0x0000000115e916e0
  0x0000000115eafe25: mov    -0x38(%rbp),%r13
  0x0000000115eafe29: mov    -0x30(%rbp),%r14
  0x0000000115eafe2d: retq   
  0x0000000115eafe2e: pop    %rcx
  0x0000000115eafe2f: pop    %rdx
  0x0000000115eafe30: mov    0x18(%rcx),%rax
  0x0000000115eafe34: je     0x0000000115eafe7c
  0x0000000115eafe3a: mov    0x10(%rcx),%rbx
  0x0000000115eafe3e: test   %rbx,%rbx
  0x0000000115eafe41: je     0x0000000115eafe63
  0x0000000115eafe43: mov    0xe0(%rbx),%eax
  0x0000000115eafe49: add    $0x8,%eax
  0x0000000115eafe4c: mov    %eax,0xe0(%rbx)
  0x0000000115eafe52: and    $0x1ff8,%eax
  0x0000000115eafe58: je     0x0000000115eaff6e
  0x0000000115eafe5e: jmpq   0x0000000115eafe7c
  0x0000000115eafe63: mov    0x18(%rcx),%rcx
  0x0000000115eafe67: mov    0xc(%rcx),%eax
  0x0000000115eafe6a: add    $0x8,%eax
  0x0000000115eafe6d: mov    %eax,0xc(%rcx)
  0x0000000115eafe70: and    $0x1ff8,%eax
  0x0000000115eafe76: je     0x0000000115eaff6e
  0x0000000115eafe7c: movzbl 0x0(%r13),%ebx
  0x0000000115eafe81: movabs $0x10e101840,%r10
  0x0000000115eafe8b: jmpq   *(%r10,%rbx,8)
  0x0000000115eafe8f: callq  0x0000000115eafe99
  0x0000000115eafe94: jmpq   0x0000000115eaff14
  0x0000000115eafe99: lea    0x8(%rsp),%rax
  0x0000000115eafe9e: mov    %r13,-0x38(%rbp)
  0x0000000115eafea2: mov    %r15,%rdi
  0x0000000115eafea5: mov    %rbp,0x1e8(%r15)
  0x0000000115eafeac: mov    %rax,0x1d8(%r15)
  0x0000000115eafeb3: test   $0xf,%esp
  0x0000000115eafeb9: je     0x0000000115eafed1
  0x0000000115eafebf: sub    $0x8,%rsp
  0x0000000115eafec3: callq  0x000000010dae6f16
  0x0000000115eafec8: add    $0x8,%rsp
  0x0000000115eafecc: jmpq   0x0000000115eafed6
  0x0000000115eafed1: callq  0x000000010dae6f16
  0x0000000115eafed6: movabs $0x0,%r10
  0x0000000115eafee0: mov    %r10,0x1d8(%r15)
  0x0000000115eafee7: movabs $0x0,%r10
  0x0000000115eafef1: mov    %r10,0x1e8(%r15)
  0x0000000115eafef8: cmpq   $0x0,0x8(%r15)
  0x0000000115eaff00: je     0x0000000115eaff0b
  0x0000000115eaff06: jmpq   0x0000000115e916e0
  0x0000000115eaff0b: mov    -0x38(%rbp),%r13
  0x0000000115eaff0f: mov    -0x30(%rbp),%r14
  0x0000000115eaff13: retq   
  0x0000000115eaff14: movzbl 0x0(%r13),%ebx
  0x0000000115eaff19: push   %rax
  0x0000000115eaff1a: push   %rbx
  0x0000000115eaff1b: mov    -0x18(%rbp),%rbx
  0x0000000115eaff1f: mov    0x10(%rbx),%rax
  0x0000000115eaff23: test   %rax,%rax
  0x0000000115eaff26: je     0x0000000115eaff63
  0x0000000115eaff2c: mov    %r13,%rsi
  0x0000000115eaff2f: mov    %rbx,%rdi
  0x0000000115eaff32: test   $0xf,%esp
  0x0000000115eaff38: je     0x0000000115eaff50
  0x0000000115eaff3e: sub    $0x8,%rsp
  0x0000000115eaff42: callq  0x000000010dae706c
  0x0000000115eaff47: add    $0x8,%rsp
  0x0000000115eaff4b: jmpq   0x0000000115eaff55
  0x0000000115eaff50: callq  0x000000010dae706c
  0x0000000115eaff55: mov    0x10(%rbx),%rbx
  0x0000000115eaff59: add    $0x100,%rbx
  0x0000000115eaff60: add    %rbx,%rax
  0x0000000115eaff63: mov    %rax,-0x20(%rbp)
  0x0000000115eaff67: pop    %rbx
  0x0000000115eaff68: pop    %rax
  0x0000000115eaff69: jmpq   0x0000000115eafe7c
  0x0000000115eaff6e: neg    %rdx
  0x0000000115eaff71: add    %r13,%rdx
  0x0000000115eaff74: callq  0x0000000115eaff7e
  0x0000000115eaff79: jmpq   0x0000000115eafffc
  0x0000000115eaff7e: mov    %rdx,%rsi
  0x0000000115eaff81: lea    0x8(%rsp),%rax
  0x0000000115eaff86: mov    %r13,-0x38(%rbp)
  0x0000000115eaff8a: mov    %r15,%rdi
  0x0000000115eaff8d: mov    %rbp,0x1e8(%r15)
  0x0000000115eaff94: mov    %rax,0x1d8(%r15)
  0x0000000115eaff9b: test   $0xf,%esp
  0x0000000115eaffa1: je     0x0000000115eaffb9
  0x0000000115eaffa7: sub    $0x8,%rsp
  0x0000000115eaffab: callq  0x000000010dae7476
  0x0000000115eaffb0: add    $0x8,%rsp
  0x0000000115eaffb4: jmpq   0x0000000115eaffbe
  0x0000000115eaffb9: callq  0x000000010dae7476
  0x0000000115eaffbe: movabs $0x0,%r10
  0x0000000115eaffc8: mov    %r10,0x1d8(%r15)
  0x0000000115eaffcf: movabs $0x0,%r10
  0x0000000115eaffd9: mov    %r10,0x1e8(%r15)
  0x0000000115eaffe0: cmpq   $0x0,0x8(%r15)
  0x0000000115eaffe8: je     0x0000000115eafff3
  0x0000000115eaffee: jmpq   0x0000000115e916e0
  0x0000000115eafff3: mov    -0x38(%rbp),%r13
  0x0000000115eafff7: mov    -0x30(%rbp),%r14
  0x0000000115eafffb: retq   
  0x0000000115eafffc: movzbl 0x0(%r13),%ebx
  0x0000000115eb0001: test   %rax,%rax
  0x0000000115eb0004: je     0x0000000115eafe7c
  0x0000000115eb000a: mov    0x48(%rax),%ecx
  0x0000000115eb000d: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb0010: je     0x0000000115eafe7c
  0x0000000115eb0016: mov    %rax,%r13
  0x0000000115eb0019: callq  0x0000000115eb0023
  0x0000000115eb001e: jmpq   0x0000000115eb009e
  0x0000000115eb0023: lea    0x8(%rsp),%rax
  0x0000000115eb0028: mov    %r13,-0x38(%rbp)
  0x0000000115eb002c: mov    %r15,%rdi
  0x0000000115eb002f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0036: mov    %rax,0x1d8(%r15)
  0x0000000115eb003d: test   $0xf,%esp
  0x0000000115eb0043: je     0x0000000115eb005b
  0x0000000115eb0049: sub    $0x8,%rsp
  0x0000000115eb004d: callq  0x000000010dce4396
  0x0000000115eb0052: add    $0x8,%rsp
  0x0000000115eb0056: jmpq   0x0000000115eb0060
  0x0000000115eb005b: callq  0x000000010dce4396
  0x0000000115eb0060: movabs $0x0,%r10
  0x0000000115eb006a: mov    %r10,0x1d8(%r15)
  0x0000000115eb0071: movabs $0x0,%r10
  0x0000000115eb007b: mov    %r10,0x1e8(%r15)
  0x0000000115eb0082: cmpq   $0x0,0x8(%r15)
  0x0000000115eb008a: je     0x0000000115eb0095
  0x0000000115eb0090: jmpq   0x0000000115e916e0
  0x0000000115eb0095: mov    -0x38(%rbp),%r13
  0x0000000115eb0099: mov    -0x30(%rbp),%r14
  0x0000000115eb009d: retq   
  0x0000000115eb009e: mov    %rax,%rsi
  0x0000000115eb00a1: mov    -0x8(%rbp),%rdx
  0x0000000115eb00a5: leaveq 
  0x0000000115eb00a6: pop    %rcx
  0x0000000115eb00a7: mov    %rdx,%rsp
  0x0000000115eb00aa: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb00ae: push   %rcx
  0x0000000115eb00af: jmpq   *0x88(%r13)
  0x0000000115eb00b6: mov    -0x20(%rbp),%rax
  0x0000000115eb00ba: test   %rax,%rax
  0x0000000115eb00bd: je     0x0000000115eb00d5
  0x0000000115eb00c3: addq   $0x1,0x18(%rax)
  0x0000000115eb00c8: sbbq   $0x0,0x18(%rax)
  0x0000000115eb00cd: add    $0x20,%rax
  0x0000000115eb00d1: mov    %rax,-0x20(%rbp)
  0x0000000115eb00d5: movzbl 0x3(%r13),%ebx
  0x0000000115eb00da: add    $0x3,%r13
  0x0000000115eb00de: movabs $0x10e101840,%r10
  0x0000000115eb00e8: jmpq   *(%r10,%rbx,8)
  0x0000000115eb00ec: nopl   0x0(%rax)
  0x0000000115eb00f0: add    %al,(%rax)
  0x0000000115eb00f2: add    %al,(%rax)
  0x0000000115eb00f4: add    %al,(%rax)
  0x0000000115eb00f6: add    %al,(%rax)
  0x0000000115eb00f8: add    %al,(%rax)
  0x0000000115eb00fa: add    %al,(%rax)
  0x0000000115eb00fc: add    %al,(%rax)
  0x0000000115eb00fe: add    %al,(%rax)

----------------------------------------------------------------------
if_icmplt  161 if_icmplt  [0x0000000115eb0120, 0x0000000115eb04e0]  960 bytes

  0x0000000115eb0120: mov    (%rsp),%eax
  0x0000000115eb0123: add    $0x8,%rsp
  0x0000000115eb0127: mov    (%rsp),%edx
  0x0000000115eb012a: add    $0x8,%rsp
  0x0000000115eb012e: cmp    %eax,%edx
  0x0000000115eb0130: jge    0x0000000115eb0496
  0x0000000115eb0136: mov    -0x18(%rbp),%rcx
  0x0000000115eb013a: mov    -0x20(%rbp),%rax
  0x0000000115eb013e: test   %rax,%rax
  0x0000000115eb0141: je     0x0000000115eb015f
  0x0000000115eb0147: mov    0x8(%rax),%rbx
  0x0000000115eb014b: add    $0x1,%rbx
  0x0000000115eb014f: sbb    $0x0,%rbx
  0x0000000115eb0153: mov    %rbx,0x8(%rax)
  0x0000000115eb0157: add    0x10(%rax),%rax
  0x0000000115eb015b: mov    %rax,-0x20(%rbp)
  0x0000000115eb015f: movswl 0x1(%r13),%edx
  0x0000000115eb0164: bswap  %edx
  0x0000000115eb0166: sar    $0x10,%edx
  0x0000000115eb0169: movslq %edx,%rdx
  0x0000000115eb016c: add    %rdx,%r13
  0x0000000115eb016f: test   %edx,%edx
  0x0000000115eb0171: jns    0x0000000115eb025c
  0x0000000115eb0177: mov    0x18(%rcx),%rax
  0x0000000115eb017b: test   %rax,%rax
  0x0000000115eb017e: jne    0x0000000115eb021a
  0x0000000115eb0184: push   %rdx
  0x0000000115eb0185: push   %rcx
  0x0000000115eb0186: callq  0x0000000115eb0190
  0x0000000115eb018b: jmpq   0x0000000115eb020e
  0x0000000115eb0190: mov    %rcx,%rsi
  0x0000000115eb0193: lea    0x8(%rsp),%rax
  0x0000000115eb0198: mov    %r13,-0x38(%rbp)
  0x0000000115eb019c: mov    %r15,%rdi
  0x0000000115eb019f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb01a6: mov    %rax,0x1d8(%r15)
  0x0000000115eb01ad: test   $0xf,%esp
  0x0000000115eb01b3: je     0x0000000115eb01cb
  0x0000000115eb01b9: sub    $0x8,%rsp
  0x0000000115eb01bd: callq  0x000000010dae6d98
  0x0000000115eb01c2: add    $0x8,%rsp
  0x0000000115eb01c6: jmpq   0x0000000115eb01d0
  0x0000000115eb01cb: callq  0x000000010dae6d98
  0x0000000115eb01d0: movabs $0x0,%r10
  0x0000000115eb01da: mov    %r10,0x1d8(%r15)
  0x0000000115eb01e1: movabs $0x0,%r10
  0x0000000115eb01eb: mov    %r10,0x1e8(%r15)
  0x0000000115eb01f2: cmpq   $0x0,0x8(%r15)
  0x0000000115eb01fa: je     0x0000000115eb0205
  0x0000000115eb0200: jmpq   0x0000000115e916e0
  0x0000000115eb0205: mov    -0x38(%rbp),%r13
  0x0000000115eb0209: mov    -0x30(%rbp),%r14
  0x0000000115eb020d: retq   
  0x0000000115eb020e: pop    %rcx
  0x0000000115eb020f: pop    %rdx
  0x0000000115eb0210: mov    0x18(%rcx),%rax
  0x0000000115eb0214: je     0x0000000115eb025c
  0x0000000115eb021a: mov    0x10(%rcx),%rbx
  0x0000000115eb021e: test   %rbx,%rbx
  0x0000000115eb0221: je     0x0000000115eb0243
  0x0000000115eb0223: mov    0xe0(%rbx),%eax
  0x0000000115eb0229: add    $0x8,%eax
  0x0000000115eb022c: mov    %eax,0xe0(%rbx)
  0x0000000115eb0232: and    $0x1ff8,%eax
  0x0000000115eb0238: je     0x0000000115eb034e
  0x0000000115eb023e: jmpq   0x0000000115eb025c
  0x0000000115eb0243: mov    0x18(%rcx),%rcx
  0x0000000115eb0247: mov    0xc(%rcx),%eax
  0x0000000115eb024a: add    $0x8,%eax
  0x0000000115eb024d: mov    %eax,0xc(%rcx)
  0x0000000115eb0250: and    $0x1ff8,%eax
  0x0000000115eb0256: je     0x0000000115eb034e
  0x0000000115eb025c: movzbl 0x0(%r13),%ebx
  0x0000000115eb0261: movabs $0x10e101840,%r10
  0x0000000115eb026b: jmpq   *(%r10,%rbx,8)
  0x0000000115eb026f: callq  0x0000000115eb0279
  0x0000000115eb0274: jmpq   0x0000000115eb02f4
  0x0000000115eb0279: lea    0x8(%rsp),%rax
  0x0000000115eb027e: mov    %r13,-0x38(%rbp)
  0x0000000115eb0282: mov    %r15,%rdi
  0x0000000115eb0285: mov    %rbp,0x1e8(%r15)
  0x0000000115eb028c: mov    %rax,0x1d8(%r15)
  0x0000000115eb0293: test   $0xf,%esp
  0x0000000115eb0299: je     0x0000000115eb02b1
  0x0000000115eb029f: sub    $0x8,%rsp
  0x0000000115eb02a3: callq  0x000000010dae6f16
  0x0000000115eb02a8: add    $0x8,%rsp
  0x0000000115eb02ac: jmpq   0x0000000115eb02b6
  0x0000000115eb02b1: callq  0x000000010dae6f16
  0x0000000115eb02b6: movabs $0x0,%r10
  0x0000000115eb02c0: mov    %r10,0x1d8(%r15)
  0x0000000115eb02c7: movabs $0x0,%r10
  0x0000000115eb02d1: mov    %r10,0x1e8(%r15)
  0x0000000115eb02d8: cmpq   $0x0,0x8(%r15)
  0x0000000115eb02e0: je     0x0000000115eb02eb
  0x0000000115eb02e6: jmpq   0x0000000115e916e0
  0x0000000115eb02eb: mov    -0x38(%rbp),%r13
  0x0000000115eb02ef: mov    -0x30(%rbp),%r14
  0x0000000115eb02f3: retq   
  0x0000000115eb02f4: movzbl 0x0(%r13),%ebx
  0x0000000115eb02f9: push   %rax
  0x0000000115eb02fa: push   %rbx
  0x0000000115eb02fb: mov    -0x18(%rbp),%rbx
  0x0000000115eb02ff: mov    0x10(%rbx),%rax
  0x0000000115eb0303: test   %rax,%rax
  0x0000000115eb0306: je     0x0000000115eb0343
  0x0000000115eb030c: mov    %r13,%rsi
  0x0000000115eb030f: mov    %rbx,%rdi
  0x0000000115eb0312: test   $0xf,%esp
  0x0000000115eb0318: je     0x0000000115eb0330
  0x0000000115eb031e: sub    $0x8,%rsp
  0x0000000115eb0322: callq  0x000000010dae706c
  0x0000000115eb0327: add    $0x8,%rsp
  0x0000000115eb032b: jmpq   0x0000000115eb0335
  0x0000000115eb0330: callq  0x000000010dae706c
  0x0000000115eb0335: mov    0x10(%rbx),%rbx
  0x0000000115eb0339: add    $0x100,%rbx
  0x0000000115eb0340: add    %rbx,%rax
  0x0000000115eb0343: mov    %rax,-0x20(%rbp)
  0x0000000115eb0347: pop    %rbx
  0x0000000115eb0348: pop    %rax
  0x0000000115eb0349: jmpq   0x0000000115eb025c
  0x0000000115eb034e: neg    %rdx
  0x0000000115eb0351: add    %r13,%rdx
  0x0000000115eb0354: callq  0x0000000115eb035e
  0x0000000115eb0359: jmpq   0x0000000115eb03dc
  0x0000000115eb035e: mov    %rdx,%rsi
  0x0000000115eb0361: lea    0x8(%rsp),%rax
  0x0000000115eb0366: mov    %r13,-0x38(%rbp)
  0x0000000115eb036a: mov    %r15,%rdi
  0x0000000115eb036d: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0374: mov    %rax,0x1d8(%r15)
  0x0000000115eb037b: test   $0xf,%esp
  0x0000000115eb0381: je     0x0000000115eb0399
  0x0000000115eb0387: sub    $0x8,%rsp
  0x0000000115eb038b: callq  0x000000010dae7476
  0x0000000115eb0390: add    $0x8,%rsp
  0x0000000115eb0394: jmpq   0x0000000115eb039e
  0x0000000115eb0399: callq  0x000000010dae7476
  0x0000000115eb039e: movabs $0x0,%r10
  0x0000000115eb03a8: mov    %r10,0x1d8(%r15)
  0x0000000115eb03af: movabs $0x0,%r10
  0x0000000115eb03b9: mov    %r10,0x1e8(%r15)
  0x0000000115eb03c0: cmpq   $0x0,0x8(%r15)
  0x0000000115eb03c8: je     0x0000000115eb03d3
  0x0000000115eb03ce: jmpq   0x0000000115e916e0
  0x0000000115eb03d3: mov    -0x38(%rbp),%r13
  0x0000000115eb03d7: mov    -0x30(%rbp),%r14
  0x0000000115eb03db: retq   
  0x0000000115eb03dc: movzbl 0x0(%r13),%ebx
  0x0000000115eb03e1: test   %rax,%rax
  0x0000000115eb03e4: je     0x0000000115eb025c
  0x0000000115eb03ea: mov    0x48(%rax),%ecx
  0x0000000115eb03ed: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb03f0: je     0x0000000115eb025c
  0x0000000115eb03f6: mov    %rax,%r13
  0x0000000115eb03f9: callq  0x0000000115eb0403
  0x0000000115eb03fe: jmpq   0x0000000115eb047e
  0x0000000115eb0403: lea    0x8(%rsp),%rax
  0x0000000115eb0408: mov    %r13,-0x38(%rbp)
  0x0000000115eb040c: mov    %r15,%rdi
  0x0000000115eb040f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0416: mov    %rax,0x1d8(%r15)
  0x0000000115eb041d: test   $0xf,%esp
  0x0000000115eb0423: je     0x0000000115eb043b
  0x0000000115eb0429: sub    $0x8,%rsp
  0x0000000115eb042d: callq  0x000000010dce4396
  0x0000000115eb0432: add    $0x8,%rsp
  0x0000000115eb0436: jmpq   0x0000000115eb0440
  0x0000000115eb043b: callq  0x000000010dce4396
  0x0000000115eb0440: movabs $0x0,%r10
  0x0000000115eb044a: mov    %r10,0x1d8(%r15)
  0x0000000115eb0451: movabs $0x0,%r10
  0x0000000115eb045b: mov    %r10,0x1e8(%r15)
  0x0000000115eb0462: cmpq   $0x0,0x8(%r15)
  0x0000000115eb046a: je     0x0000000115eb0475
  0x0000000115eb0470: jmpq   0x0000000115e916e0
  0x0000000115eb0475: mov    -0x38(%rbp),%r13
  0x0000000115eb0479: mov    -0x30(%rbp),%r14
  0x0000000115eb047d: retq   
  0x0000000115eb047e: mov    %rax,%rsi
  0x0000000115eb0481: mov    -0x8(%rbp),%rdx
  0x0000000115eb0485: leaveq 
  0x0000000115eb0486: pop    %rcx
  0x0000000115eb0487: mov    %rdx,%rsp
  0x0000000115eb048a: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb048e: push   %rcx
  0x0000000115eb048f: jmpq   *0x88(%r13)
  0x0000000115eb0496: mov    -0x20(%rbp),%rax
  0x0000000115eb049a: test   %rax,%rax
  0x0000000115eb049d: je     0x0000000115eb04b5
  0x0000000115eb04a3: addq   $0x1,0x18(%rax)
  0x0000000115eb04a8: sbbq   $0x0,0x18(%rax)
  0x0000000115eb04ad: add    $0x20,%rax
  0x0000000115eb04b1: mov    %rax,-0x20(%rbp)
  0x0000000115eb04b5: movzbl 0x3(%r13),%ebx
  0x0000000115eb04ba: add    $0x3,%r13
  0x0000000115eb04be: movabs $0x10e101840,%r10
  0x0000000115eb04c8: jmpq   *(%r10,%rbx,8)
  0x0000000115eb04cc: nopl   0x0(%rax)
  0x0000000115eb04d0: add    %al,(%rax)
  0x0000000115eb04d2: add    %al,(%rax)
  0x0000000115eb04d4: add    %al,(%rax)
  0x0000000115eb04d6: add    %al,(%rax)
  0x0000000115eb04d8: add    %al,(%rax)
  0x0000000115eb04da: add    %al,(%rax)
  0x0000000115eb04dc: add    %al,(%rax)
  0x0000000115eb04de: add    %al,(%rax)

----------------------------------------------------------------------
if_icmpge  162 if_icmpge  [0x0000000115eb0500, 0x0000000115eb08c0]  960 bytes

  0x0000000115eb0500: mov    (%rsp),%eax
  0x0000000115eb0503: add    $0x8,%rsp
  0x0000000115eb0507: mov    (%rsp),%edx
  0x0000000115eb050a: add    $0x8,%rsp
  0x0000000115eb050e: cmp    %eax,%edx
  0x0000000115eb0510: jl     0x0000000115eb0876
  0x0000000115eb0516: mov    -0x18(%rbp),%rcx
  0x0000000115eb051a: mov    -0x20(%rbp),%rax
  0x0000000115eb051e: test   %rax,%rax
  0x0000000115eb0521: je     0x0000000115eb053f
  0x0000000115eb0527: mov    0x8(%rax),%rbx
  0x0000000115eb052b: add    $0x1,%rbx
  0x0000000115eb052f: sbb    $0x0,%rbx
  0x0000000115eb0533: mov    %rbx,0x8(%rax)
  0x0000000115eb0537: add    0x10(%rax),%rax
  0x0000000115eb053b: mov    %rax,-0x20(%rbp)
  0x0000000115eb053f: movswl 0x1(%r13),%edx
  0x0000000115eb0544: bswap  %edx
  0x0000000115eb0546: sar    $0x10,%edx
  0x0000000115eb0549: movslq %edx,%rdx
  0x0000000115eb054c: add    %rdx,%r13
  0x0000000115eb054f: test   %edx,%edx
  0x0000000115eb0551: jns    0x0000000115eb063c
  0x0000000115eb0557: mov    0x18(%rcx),%rax
  0x0000000115eb055b: test   %rax,%rax
  0x0000000115eb055e: jne    0x0000000115eb05fa
  0x0000000115eb0564: push   %rdx
  0x0000000115eb0565: push   %rcx
  0x0000000115eb0566: callq  0x0000000115eb0570
  0x0000000115eb056b: jmpq   0x0000000115eb05ee
  0x0000000115eb0570: mov    %rcx,%rsi
  0x0000000115eb0573: lea    0x8(%rsp),%rax
  0x0000000115eb0578: mov    %r13,-0x38(%rbp)
  0x0000000115eb057c: mov    %r15,%rdi
  0x0000000115eb057f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0586: mov    %rax,0x1d8(%r15)
  0x0000000115eb058d: test   $0xf,%esp
  0x0000000115eb0593: je     0x0000000115eb05ab
  0x0000000115eb0599: sub    $0x8,%rsp
  0x0000000115eb059d: callq  0x000000010dae6d98
  0x0000000115eb05a2: add    $0x8,%rsp
  0x0000000115eb05a6: jmpq   0x0000000115eb05b0
  0x0000000115eb05ab: callq  0x000000010dae6d98
  0x0000000115eb05b0: movabs $0x0,%r10
  0x0000000115eb05ba: mov    %r10,0x1d8(%r15)
  0x0000000115eb05c1: movabs $0x0,%r10
  0x0000000115eb05cb: mov    %r10,0x1e8(%r15)
  0x0000000115eb05d2: cmpq   $0x0,0x8(%r15)
  0x0000000115eb05da: je     0x0000000115eb05e5
  0x0000000115eb05e0: jmpq   0x0000000115e916e0
  0x0000000115eb05e5: mov    -0x38(%rbp),%r13
  0x0000000115eb05e9: mov    -0x30(%rbp),%r14
  0x0000000115eb05ed: retq   
  0x0000000115eb05ee: pop    %rcx
  0x0000000115eb05ef: pop    %rdx
  0x0000000115eb05f0: mov    0x18(%rcx),%rax
  0x0000000115eb05f4: je     0x0000000115eb063c
  0x0000000115eb05fa: mov    0x10(%rcx),%rbx
  0x0000000115eb05fe: test   %rbx,%rbx
  0x0000000115eb0601: je     0x0000000115eb0623
  0x0000000115eb0603: mov    0xe0(%rbx),%eax
  0x0000000115eb0609: add    $0x8,%eax
  0x0000000115eb060c: mov    %eax,0xe0(%rbx)
  0x0000000115eb0612: and    $0x1ff8,%eax
  0x0000000115eb0618: je     0x0000000115eb072e
  0x0000000115eb061e: jmpq   0x0000000115eb063c
  0x0000000115eb0623: mov    0x18(%rcx),%rcx
  0x0000000115eb0627: mov    0xc(%rcx),%eax
  0x0000000115eb062a: add    $0x8,%eax
  0x0000000115eb062d: mov    %eax,0xc(%rcx)
  0x0000000115eb0630: and    $0x1ff8,%eax
  0x0000000115eb0636: je     0x0000000115eb072e
  0x0000000115eb063c: movzbl 0x0(%r13),%ebx
  0x0000000115eb0641: movabs $0x10e101840,%r10
  0x0000000115eb064b: jmpq   *(%r10,%rbx,8)
  0x0000000115eb064f: callq  0x0000000115eb0659
  0x0000000115eb0654: jmpq   0x0000000115eb06d4
  0x0000000115eb0659: lea    0x8(%rsp),%rax
  0x0000000115eb065e: mov    %r13,-0x38(%rbp)
  0x0000000115eb0662: mov    %r15,%rdi
  0x0000000115eb0665: mov    %rbp,0x1e8(%r15)
  0x0000000115eb066c: mov    %rax,0x1d8(%r15)
  0x0000000115eb0673: test   $0xf,%esp
  0x0000000115eb0679: je     0x0000000115eb0691
  0x0000000115eb067f: sub    $0x8,%rsp
  0x0000000115eb0683: callq  0x000000010dae6f16
  0x0000000115eb0688: add    $0x8,%rsp
  0x0000000115eb068c: jmpq   0x0000000115eb0696
  0x0000000115eb0691: callq  0x000000010dae6f16
  0x0000000115eb0696: movabs $0x0,%r10
  0x0000000115eb06a0: mov    %r10,0x1d8(%r15)
  0x0000000115eb06a7: movabs $0x0,%r10
  0x0000000115eb06b1: mov    %r10,0x1e8(%r15)
  0x0000000115eb06b8: cmpq   $0x0,0x8(%r15)
  0x0000000115eb06c0: je     0x0000000115eb06cb
  0x0000000115eb06c6: jmpq   0x0000000115e916e0
  0x0000000115eb06cb: mov    -0x38(%rbp),%r13
  0x0000000115eb06cf: mov    -0x30(%rbp),%r14
  0x0000000115eb06d3: retq   
  0x0000000115eb06d4: movzbl 0x0(%r13),%ebx
  0x0000000115eb06d9: push   %rax
  0x0000000115eb06da: push   %rbx
  0x0000000115eb06db: mov    -0x18(%rbp),%rbx
  0x0000000115eb06df: mov    0x10(%rbx),%rax
  0x0000000115eb06e3: test   %rax,%rax
  0x0000000115eb06e6: je     0x0000000115eb0723
  0x0000000115eb06ec: mov    %r13,%rsi
  0x0000000115eb06ef: mov    %rbx,%rdi
  0x0000000115eb06f2: test   $0xf,%esp
  0x0000000115eb06f8: je     0x0000000115eb0710
  0x0000000115eb06fe: sub    $0x8,%rsp
  0x0000000115eb0702: callq  0x000000010dae706c
  0x0000000115eb0707: add    $0x8,%rsp
  0x0000000115eb070b: jmpq   0x0000000115eb0715
  0x0000000115eb0710: callq  0x000000010dae706c
  0x0000000115eb0715: mov    0x10(%rbx),%rbx
  0x0000000115eb0719: add    $0x100,%rbx
  0x0000000115eb0720: add    %rbx,%rax
  0x0000000115eb0723: mov    %rax,-0x20(%rbp)
  0x0000000115eb0727: pop    %rbx
  0x0000000115eb0728: pop    %rax
  0x0000000115eb0729: jmpq   0x0000000115eb063c
  0x0000000115eb072e: neg    %rdx
  0x0000000115eb0731: add    %r13,%rdx
  0x0000000115eb0734: callq  0x0000000115eb073e
  0x0000000115eb0739: jmpq   0x0000000115eb07bc
  0x0000000115eb073e: mov    %rdx,%rsi
  0x0000000115eb0741: lea    0x8(%rsp),%rax
  0x0000000115eb0746: mov    %r13,-0x38(%rbp)
  0x0000000115eb074a: mov    %r15,%rdi
  0x0000000115eb074d: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0754: mov    %rax,0x1d8(%r15)
  0x0000000115eb075b: test   $0xf,%esp
  0x0000000115eb0761: je     0x0000000115eb0779
  0x0000000115eb0767: sub    $0x8,%rsp
  0x0000000115eb076b: callq  0x000000010dae7476
  0x0000000115eb0770: add    $0x8,%rsp
  0x0000000115eb0774: jmpq   0x0000000115eb077e
  0x0000000115eb0779: callq  0x000000010dae7476
  0x0000000115eb077e: movabs $0x0,%r10
  0x0000000115eb0788: mov    %r10,0x1d8(%r15)
  0x0000000115eb078f: movabs $0x0,%r10
  0x0000000115eb0799: mov    %r10,0x1e8(%r15)
  0x0000000115eb07a0: cmpq   $0x0,0x8(%r15)
  0x0000000115eb07a8: je     0x0000000115eb07b3
  0x0000000115eb07ae: jmpq   0x0000000115e916e0
  0x0000000115eb07b3: mov    -0x38(%rbp),%r13
  0x0000000115eb07b7: mov    -0x30(%rbp),%r14
  0x0000000115eb07bb: retq   
  0x0000000115eb07bc: movzbl 0x0(%r13),%ebx
  0x0000000115eb07c1: test   %rax,%rax
  0x0000000115eb07c4: je     0x0000000115eb063c
  0x0000000115eb07ca: mov    0x48(%rax),%ecx
  0x0000000115eb07cd: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb07d0: je     0x0000000115eb063c
  0x0000000115eb07d6: mov    %rax,%r13
  0x0000000115eb07d9: callq  0x0000000115eb07e3
  0x0000000115eb07de: jmpq   0x0000000115eb085e
  0x0000000115eb07e3: lea    0x8(%rsp),%rax
  0x0000000115eb07e8: mov    %r13,-0x38(%rbp)
  0x0000000115eb07ec: mov    %r15,%rdi
  0x0000000115eb07ef: mov    %rbp,0x1e8(%r15)
  0x0000000115eb07f6: mov    %rax,0x1d8(%r15)
  0x0000000115eb07fd: test   $0xf,%esp
  0x0000000115eb0803: je     0x0000000115eb081b
  0x0000000115eb0809: sub    $0x8,%rsp
  0x0000000115eb080d: callq  0x000000010dce4396
  0x0000000115eb0812: add    $0x8,%rsp
  0x0000000115eb0816: jmpq   0x0000000115eb0820
  0x0000000115eb081b: callq  0x000000010dce4396
  0x0000000115eb0820: movabs $0x0,%r10
  0x0000000115eb082a: mov    %r10,0x1d8(%r15)
  0x0000000115eb0831: movabs $0x0,%r10
  0x0000000115eb083b: mov    %r10,0x1e8(%r15)
  0x0000000115eb0842: cmpq   $0x0,0x8(%r15)
  0x0000000115eb084a: je     0x0000000115eb0855
  0x0000000115eb0850: jmpq   0x0000000115e916e0
  0x0000000115eb0855: mov    -0x38(%rbp),%r13
  0x0000000115eb0859: mov    -0x30(%rbp),%r14
  0x0000000115eb085d: retq   
  0x0000000115eb085e: mov    %rax,%rsi
  0x0000000115eb0861: mov    -0x8(%rbp),%rdx
  0x0000000115eb0865: leaveq 
  0x0000000115eb0866: pop    %rcx
  0x0000000115eb0867: mov    %rdx,%rsp
  0x0000000115eb086a: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb086e: push   %rcx
  0x0000000115eb086f: jmpq   *0x88(%r13)
  0x0000000115eb0876: mov    -0x20(%rbp),%rax
  0x0000000115eb087a: test   %rax,%rax
  0x0000000115eb087d: je     0x0000000115eb0895
  0x0000000115eb0883: addq   $0x1,0x18(%rax)
  0x0000000115eb0888: sbbq   $0x0,0x18(%rax)
  0x0000000115eb088d: add    $0x20,%rax
  0x0000000115eb0891: mov    %rax,-0x20(%rbp)
  0x0000000115eb0895: movzbl 0x3(%r13),%ebx
  0x0000000115eb089a: add    $0x3,%r13
  0x0000000115eb089e: movabs $0x10e101840,%r10
  0x0000000115eb08a8: jmpq   *(%r10,%rbx,8)
  0x0000000115eb08ac: nopl   0x0(%rax)
  0x0000000115eb08b0: add    %al,(%rax)
  0x0000000115eb08b2: add    %al,(%rax)
  0x0000000115eb08b4: add    %al,(%rax)
  0x0000000115eb08b6: add    %al,(%rax)
  0x0000000115eb08b8: add    %al,(%rax)
  0x0000000115eb08ba: add    %al,(%rax)
  0x0000000115eb08bc: add    %al,(%rax)
  0x0000000115eb08be: add    %al,(%rax)

----------------------------------------------------------------------
if_icmpgt  163 if_icmpgt  [0x0000000115eb08e0, 0x0000000115eb0ca0]  960 bytes

  0x0000000115eb08e0: mov    (%rsp),%eax
  0x0000000115eb08e3: add    $0x8,%rsp
  0x0000000115eb08e7: mov    (%rsp),%edx
  0x0000000115eb08ea: add    $0x8,%rsp
  0x0000000115eb08ee: cmp    %eax,%edx
  0x0000000115eb08f0: jle    0x0000000115eb0c56
  0x0000000115eb08f6: mov    -0x18(%rbp),%rcx
  0x0000000115eb08fa: mov    -0x20(%rbp),%rax
  0x0000000115eb08fe: test   %rax,%rax
  0x0000000115eb0901: je     0x0000000115eb091f
  0x0000000115eb0907: mov    0x8(%rax),%rbx
  0x0000000115eb090b: add    $0x1,%rbx
  0x0000000115eb090f: sbb    $0x0,%rbx
  0x0000000115eb0913: mov    %rbx,0x8(%rax)
  0x0000000115eb0917: add    0x10(%rax),%rax
  0x0000000115eb091b: mov    %rax,-0x20(%rbp)
  0x0000000115eb091f: movswl 0x1(%r13),%edx
  0x0000000115eb0924: bswap  %edx
  0x0000000115eb0926: sar    $0x10,%edx
  0x0000000115eb0929: movslq %edx,%rdx
  0x0000000115eb092c: add    %rdx,%r13
  0x0000000115eb092f: test   %edx,%edx
  0x0000000115eb0931: jns    0x0000000115eb0a1c
  0x0000000115eb0937: mov    0x18(%rcx),%rax
  0x0000000115eb093b: test   %rax,%rax
  0x0000000115eb093e: jne    0x0000000115eb09da
  0x0000000115eb0944: push   %rdx
  0x0000000115eb0945: push   %rcx
  0x0000000115eb0946: callq  0x0000000115eb0950
  0x0000000115eb094b: jmpq   0x0000000115eb09ce
  0x0000000115eb0950: mov    %rcx,%rsi
  0x0000000115eb0953: lea    0x8(%rsp),%rax
  0x0000000115eb0958: mov    %r13,-0x38(%rbp)
  0x0000000115eb095c: mov    %r15,%rdi
  0x0000000115eb095f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0966: mov    %rax,0x1d8(%r15)
  0x0000000115eb096d: test   $0xf,%esp
  0x0000000115eb0973: je     0x0000000115eb098b
  0x0000000115eb0979: sub    $0x8,%rsp
  0x0000000115eb097d: callq  0x000000010dae6d98
  0x0000000115eb0982: add    $0x8,%rsp
  0x0000000115eb0986: jmpq   0x0000000115eb0990
  0x0000000115eb098b: callq  0x000000010dae6d98
  0x0000000115eb0990: movabs $0x0,%r10
  0x0000000115eb099a: mov    %r10,0x1d8(%r15)
  0x0000000115eb09a1: movabs $0x0,%r10
  0x0000000115eb09ab: mov    %r10,0x1e8(%r15)
  0x0000000115eb09b2: cmpq   $0x0,0x8(%r15)
  0x0000000115eb09ba: je     0x0000000115eb09c5
  0x0000000115eb09c0: jmpq   0x0000000115e916e0
  0x0000000115eb09c5: mov    -0x38(%rbp),%r13
  0x0000000115eb09c9: mov    -0x30(%rbp),%r14
  0x0000000115eb09cd: retq   
  0x0000000115eb09ce: pop    %rcx
  0x0000000115eb09cf: pop    %rdx
  0x0000000115eb09d0: mov    0x18(%rcx),%rax
  0x0000000115eb09d4: je     0x0000000115eb0a1c
  0x0000000115eb09da: mov    0x10(%rcx),%rbx
  0x0000000115eb09de: test   %rbx,%rbx
  0x0000000115eb09e1: je     0x0000000115eb0a03
  0x0000000115eb09e3: mov    0xe0(%rbx),%eax
  0x0000000115eb09e9: add    $0x8,%eax
  0x0000000115eb09ec: mov    %eax,0xe0(%rbx)
  0x0000000115eb09f2: and    $0x1ff8,%eax
  0x0000000115eb09f8: je     0x0000000115eb0b0e
  0x0000000115eb09fe: jmpq   0x0000000115eb0a1c
  0x0000000115eb0a03: mov    0x18(%rcx),%rcx
  0x0000000115eb0a07: mov    0xc(%rcx),%eax
  0x0000000115eb0a0a: add    $0x8,%eax
  0x0000000115eb0a0d: mov    %eax,0xc(%rcx)
  0x0000000115eb0a10: and    $0x1ff8,%eax
  0x0000000115eb0a16: je     0x0000000115eb0b0e
  0x0000000115eb0a1c: movzbl 0x0(%r13),%ebx
  0x0000000115eb0a21: movabs $0x10e101840,%r10
  0x0000000115eb0a2b: jmpq   *(%r10,%rbx,8)
  0x0000000115eb0a2f: callq  0x0000000115eb0a39
  0x0000000115eb0a34: jmpq   0x0000000115eb0ab4
  0x0000000115eb0a39: lea    0x8(%rsp),%rax
  0x0000000115eb0a3e: mov    %r13,-0x38(%rbp)
  0x0000000115eb0a42: mov    %r15,%rdi
  0x0000000115eb0a45: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0a4c: mov    %rax,0x1d8(%r15)
  0x0000000115eb0a53: test   $0xf,%esp
  0x0000000115eb0a59: je     0x0000000115eb0a71
  0x0000000115eb0a5f: sub    $0x8,%rsp
  0x0000000115eb0a63: callq  0x000000010dae6f16
  0x0000000115eb0a68: add    $0x8,%rsp
  0x0000000115eb0a6c: jmpq   0x0000000115eb0a76
  0x0000000115eb0a71: callq  0x000000010dae6f16
  0x0000000115eb0a76: movabs $0x0,%r10
  0x0000000115eb0a80: mov    %r10,0x1d8(%r15)
  0x0000000115eb0a87: movabs $0x0,%r10
  0x0000000115eb0a91: mov    %r10,0x1e8(%r15)
  0x0000000115eb0a98: cmpq   $0x0,0x8(%r15)
  0x0000000115eb0aa0: je     0x0000000115eb0aab
  0x0000000115eb0aa6: jmpq   0x0000000115e916e0
  0x0000000115eb0aab: mov    -0x38(%rbp),%r13
  0x0000000115eb0aaf: mov    -0x30(%rbp),%r14
  0x0000000115eb0ab3: retq   
  0x0000000115eb0ab4: movzbl 0x0(%r13),%ebx
  0x0000000115eb0ab9: push   %rax
  0x0000000115eb0aba: push   %rbx
  0x0000000115eb0abb: mov    -0x18(%rbp),%rbx
  0x0000000115eb0abf: mov    0x10(%rbx),%rax
  0x0000000115eb0ac3: test   %rax,%rax
  0x0000000115eb0ac6: je     0x0000000115eb0b03
  0x0000000115eb0acc: mov    %r13,%rsi
  0x0000000115eb0acf: mov    %rbx,%rdi
  0x0000000115eb0ad2: test   $0xf,%esp
  0x0000000115eb0ad8: je     0x0000000115eb0af0
  0x0000000115eb0ade: sub    $0x8,%rsp
  0x0000000115eb0ae2: callq  0x000000010dae706c
  0x0000000115eb0ae7: add    $0x8,%rsp
  0x0000000115eb0aeb: jmpq   0x0000000115eb0af5
  0x0000000115eb0af0: callq  0x000000010dae706c
  0x0000000115eb0af5: mov    0x10(%rbx),%rbx
  0x0000000115eb0af9: add    $0x100,%rbx
  0x0000000115eb0b00: add    %rbx,%rax
  0x0000000115eb0b03: mov    %rax,-0x20(%rbp)
  0x0000000115eb0b07: pop    %rbx
  0x0000000115eb0b08: pop    %rax
  0x0000000115eb0b09: jmpq   0x0000000115eb0a1c
  0x0000000115eb0b0e: neg    %rdx
  0x0000000115eb0b11: add    %r13,%rdx
  0x0000000115eb0b14: callq  0x0000000115eb0b1e
  0x0000000115eb0b19: jmpq   0x0000000115eb0b9c
  0x0000000115eb0b1e: mov    %rdx,%rsi
  0x0000000115eb0b21: lea    0x8(%rsp),%rax
  0x0000000115eb0b26: mov    %r13,-0x38(%rbp)
  0x0000000115eb0b2a: mov    %r15,%rdi
  0x0000000115eb0b2d: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0b34: mov    %rax,0x1d8(%r15)
  0x0000000115eb0b3b: test   $0xf,%esp
  0x0000000115eb0b41: je     0x0000000115eb0b59
  0x0000000115eb0b47: sub    $0x8,%rsp
  0x0000000115eb0b4b: callq  0x000000010dae7476
  0x0000000115eb0b50: add    $0x8,%rsp
  0x0000000115eb0b54: jmpq   0x0000000115eb0b5e
  0x0000000115eb0b59: callq  0x000000010dae7476
  0x0000000115eb0b5e: movabs $0x0,%r10
  0x0000000115eb0b68: mov    %r10,0x1d8(%r15)
  0x0000000115eb0b6f: movabs $0x0,%r10
  0x0000000115eb0b79: mov    %r10,0x1e8(%r15)
  0x0000000115eb0b80: cmpq   $0x0,0x8(%r15)
  0x0000000115eb0b88: je     0x0000000115eb0b93
  0x0000000115eb0b8e: jmpq   0x0000000115e916e0
  0x0000000115eb0b93: mov    -0x38(%rbp),%r13
  0x0000000115eb0b97: mov    -0x30(%rbp),%r14
  0x0000000115eb0b9b: retq   
  0x0000000115eb0b9c: movzbl 0x0(%r13),%ebx
  0x0000000115eb0ba1: test   %rax,%rax
  0x0000000115eb0ba4: je     0x0000000115eb0a1c
  0x0000000115eb0baa: mov    0x48(%rax),%ecx
  0x0000000115eb0bad: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb0bb0: je     0x0000000115eb0a1c
  0x0000000115eb0bb6: mov    %rax,%r13
  0x0000000115eb0bb9: callq  0x0000000115eb0bc3
  0x0000000115eb0bbe: jmpq   0x0000000115eb0c3e
  0x0000000115eb0bc3: lea    0x8(%rsp),%rax
  0x0000000115eb0bc8: mov    %r13,-0x38(%rbp)
  0x0000000115eb0bcc: mov    %r15,%rdi
  0x0000000115eb0bcf: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0bd6: mov    %rax,0x1d8(%r15)
  0x0000000115eb0bdd: test   $0xf,%esp
  0x0000000115eb0be3: je     0x0000000115eb0bfb
  0x0000000115eb0be9: sub    $0x8,%rsp
  0x0000000115eb0bed: callq  0x000000010dce4396
  0x0000000115eb0bf2: add    $0x8,%rsp
  0x0000000115eb0bf6: jmpq   0x0000000115eb0c00
  0x0000000115eb0bfb: callq  0x000000010dce4396
  0x0000000115eb0c00: movabs $0x0,%r10
  0x0000000115eb0c0a: mov    %r10,0x1d8(%r15)
  0x0000000115eb0c11: movabs $0x0,%r10
  0x0000000115eb0c1b: mov    %r10,0x1e8(%r15)
  0x0000000115eb0c22: cmpq   $0x0,0x8(%r15)
  0x0000000115eb0c2a: je     0x0000000115eb0c35
  0x0000000115eb0c30: jmpq   0x0000000115e916e0
  0x0000000115eb0c35: mov    -0x38(%rbp),%r13
  0x0000000115eb0c39: mov    -0x30(%rbp),%r14
  0x0000000115eb0c3d: retq   
  0x0000000115eb0c3e: mov    %rax,%rsi
  0x0000000115eb0c41: mov    -0x8(%rbp),%rdx
  0x0000000115eb0c45: leaveq 
  0x0000000115eb0c46: pop    %rcx
  0x0000000115eb0c47: mov    %rdx,%rsp
  0x0000000115eb0c4a: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb0c4e: push   %rcx
  0x0000000115eb0c4f: jmpq   *0x88(%r13)
  0x0000000115eb0c56: mov    -0x20(%rbp),%rax
  0x0000000115eb0c5a: test   %rax,%rax
  0x0000000115eb0c5d: je     0x0000000115eb0c75
  0x0000000115eb0c63: addq   $0x1,0x18(%rax)
  0x0000000115eb0c68: sbbq   $0x0,0x18(%rax)
  0x0000000115eb0c6d: add    $0x20,%rax
  0x0000000115eb0c71: mov    %rax,-0x20(%rbp)
  0x0000000115eb0c75: movzbl 0x3(%r13),%ebx
  0x0000000115eb0c7a: add    $0x3,%r13
  0x0000000115eb0c7e: movabs $0x10e101840,%r10
  0x0000000115eb0c88: jmpq   *(%r10,%rbx,8)
  0x0000000115eb0c8c: nopl   0x0(%rax)
  0x0000000115eb0c90: add    %al,(%rax)
  0x0000000115eb0c92: add    %al,(%rax)
  0x0000000115eb0c94: add    %al,(%rax)
  0x0000000115eb0c96: add    %al,(%rax)
  0x0000000115eb0c98: add    %al,(%rax)
  0x0000000115eb0c9a: add    %al,(%rax)
  0x0000000115eb0c9c: add    %al,(%rax)
  0x0000000115eb0c9e: add    %al,(%rax)

----------------------------------------------------------------------
if_icmple  164 if_icmple  [0x0000000115eb0cc0, 0x0000000115eb1080]  960 bytes

  0x0000000115eb0cc0: mov    (%rsp),%eax
  0x0000000115eb0cc3: add    $0x8,%rsp
  0x0000000115eb0cc7: mov    (%rsp),%edx
  0x0000000115eb0cca: add    $0x8,%rsp
  0x0000000115eb0cce: cmp    %eax,%edx
  0x0000000115eb0cd0: jg     0x0000000115eb1036
  0x0000000115eb0cd6: mov    -0x18(%rbp),%rcx
  0x0000000115eb0cda: mov    -0x20(%rbp),%rax
  0x0000000115eb0cde: test   %rax,%rax
  0x0000000115eb0ce1: je     0x0000000115eb0cff
  0x0000000115eb0ce7: mov    0x8(%rax),%rbx
  0x0000000115eb0ceb: add    $0x1,%rbx
  0x0000000115eb0cef: sbb    $0x0,%rbx
  0x0000000115eb0cf3: mov    %rbx,0x8(%rax)
  0x0000000115eb0cf7: add    0x10(%rax),%rax
  0x0000000115eb0cfb: mov    %rax,-0x20(%rbp)
  0x0000000115eb0cff: movswl 0x1(%r13),%edx
  0x0000000115eb0d04: bswap  %edx
  0x0000000115eb0d06: sar    $0x10,%edx
  0x0000000115eb0d09: movslq %edx,%rdx
  0x0000000115eb0d0c: add    %rdx,%r13
  0x0000000115eb0d0f: test   %edx,%edx
  0x0000000115eb0d11: jns    0x0000000115eb0dfc
  0x0000000115eb0d17: mov    0x18(%rcx),%rax
  0x0000000115eb0d1b: test   %rax,%rax
  0x0000000115eb0d1e: jne    0x0000000115eb0dba
  0x0000000115eb0d24: push   %rdx
  0x0000000115eb0d25: push   %rcx
  0x0000000115eb0d26: callq  0x0000000115eb0d30
  0x0000000115eb0d2b: jmpq   0x0000000115eb0dae
  0x0000000115eb0d30: mov    %rcx,%rsi
  0x0000000115eb0d33: lea    0x8(%rsp),%rax
  0x0000000115eb0d38: mov    %r13,-0x38(%rbp)
  0x0000000115eb0d3c: mov    %r15,%rdi
  0x0000000115eb0d3f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0d46: mov    %rax,0x1d8(%r15)
  0x0000000115eb0d4d: test   $0xf,%esp
  0x0000000115eb0d53: je     0x0000000115eb0d6b
  0x0000000115eb0d59: sub    $0x8,%rsp
  0x0000000115eb0d5d: callq  0x000000010dae6d98
  0x0000000115eb0d62: add    $0x8,%rsp
  0x0000000115eb0d66: jmpq   0x0000000115eb0d70
  0x0000000115eb0d6b: callq  0x000000010dae6d98
  0x0000000115eb0d70: movabs $0x0,%r10
  0x0000000115eb0d7a: mov    %r10,0x1d8(%r15)
  0x0000000115eb0d81: movabs $0x0,%r10
  0x0000000115eb0d8b: mov    %r10,0x1e8(%r15)
  0x0000000115eb0d92: cmpq   $0x0,0x8(%r15)
  0x0000000115eb0d9a: je     0x0000000115eb0da5
  0x0000000115eb0da0: jmpq   0x0000000115e916e0
  0x0000000115eb0da5: mov    -0x38(%rbp),%r13
  0x0000000115eb0da9: mov    -0x30(%rbp),%r14
  0x0000000115eb0dad: retq   
  0x0000000115eb0dae: pop    %rcx
  0x0000000115eb0daf: pop    %rdx
  0x0000000115eb0db0: mov    0x18(%rcx),%rax
  0x0000000115eb0db4: je     0x0000000115eb0dfc
  0x0000000115eb0dba: mov    0x10(%rcx),%rbx
  0x0000000115eb0dbe: test   %rbx,%rbx
  0x0000000115eb0dc1: je     0x0000000115eb0de3
  0x0000000115eb0dc3: mov    0xe0(%rbx),%eax
  0x0000000115eb0dc9: add    $0x8,%eax
  0x0000000115eb0dcc: mov    %eax,0xe0(%rbx)
  0x0000000115eb0dd2: and    $0x1ff8,%eax
  0x0000000115eb0dd8: je     0x0000000115eb0eee
  0x0000000115eb0dde: jmpq   0x0000000115eb0dfc
  0x0000000115eb0de3: mov    0x18(%rcx),%rcx
  0x0000000115eb0de7: mov    0xc(%rcx),%eax
  0x0000000115eb0dea: add    $0x8,%eax
  0x0000000115eb0ded: mov    %eax,0xc(%rcx)
  0x0000000115eb0df0: and    $0x1ff8,%eax
  0x0000000115eb0df6: je     0x0000000115eb0eee
  0x0000000115eb0dfc: movzbl 0x0(%r13),%ebx
  0x0000000115eb0e01: movabs $0x10e101840,%r10
  0x0000000115eb0e0b: jmpq   *(%r10,%rbx,8)
  0x0000000115eb0e0f: callq  0x0000000115eb0e19
  0x0000000115eb0e14: jmpq   0x0000000115eb0e94
  0x0000000115eb0e19: lea    0x8(%rsp),%rax
  0x0000000115eb0e1e: mov    %r13,-0x38(%rbp)
  0x0000000115eb0e22: mov    %r15,%rdi
  0x0000000115eb0e25: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0e2c: mov    %rax,0x1d8(%r15)
  0x0000000115eb0e33: test   $0xf,%esp
  0x0000000115eb0e39: je     0x0000000115eb0e51
  0x0000000115eb0e3f: sub    $0x8,%rsp
  0x0000000115eb0e43: callq  0x000000010dae6f16
  0x0000000115eb0e48: add    $0x8,%rsp
  0x0000000115eb0e4c: jmpq   0x0000000115eb0e56
  0x0000000115eb0e51: callq  0x000000010dae6f16
  0x0000000115eb0e56: movabs $0x0,%r10
  0x0000000115eb0e60: mov    %r10,0x1d8(%r15)
  0x0000000115eb0e67: movabs $0x0,%r10
  0x0000000115eb0e71: mov    %r10,0x1e8(%r15)
  0x0000000115eb0e78: cmpq   $0x0,0x8(%r15)
  0x0000000115eb0e80: je     0x0000000115eb0e8b
  0x0000000115eb0e86: jmpq   0x0000000115e916e0
  0x0000000115eb0e8b: mov    -0x38(%rbp),%r13
  0x0000000115eb0e8f: mov    -0x30(%rbp),%r14
  0x0000000115eb0e93: retq   
  0x0000000115eb0e94: movzbl 0x0(%r13),%ebx
  0x0000000115eb0e99: push   %rax
  0x0000000115eb0e9a: push   %rbx
  0x0000000115eb0e9b: mov    -0x18(%rbp),%rbx
  0x0000000115eb0e9f: mov    0x10(%rbx),%rax
  0x0000000115eb0ea3: test   %rax,%rax
  0x0000000115eb0ea6: je     0x0000000115eb0ee3
  0x0000000115eb0eac: mov    %r13,%rsi
  0x0000000115eb0eaf: mov    %rbx,%rdi
  0x0000000115eb0eb2: test   $0xf,%esp
  0x0000000115eb0eb8: je     0x0000000115eb0ed0
  0x0000000115eb0ebe: sub    $0x8,%rsp
  0x0000000115eb0ec2: callq  0x000000010dae706c
  0x0000000115eb0ec7: add    $0x8,%rsp
  0x0000000115eb0ecb: jmpq   0x0000000115eb0ed5
  0x0000000115eb0ed0: callq  0x000000010dae706c
  0x0000000115eb0ed5: mov    0x10(%rbx),%rbx
  0x0000000115eb0ed9: add    $0x100,%rbx
  0x0000000115eb0ee0: add    %rbx,%rax
  0x0000000115eb0ee3: mov    %rax,-0x20(%rbp)
  0x0000000115eb0ee7: pop    %rbx
  0x0000000115eb0ee8: pop    %rax
  0x0000000115eb0ee9: jmpq   0x0000000115eb0dfc
  0x0000000115eb0eee: neg    %rdx
  0x0000000115eb0ef1: add    %r13,%rdx
  0x0000000115eb0ef4: callq  0x0000000115eb0efe
  0x0000000115eb0ef9: jmpq   0x0000000115eb0f7c
  0x0000000115eb0efe: mov    %rdx,%rsi
  0x0000000115eb0f01: lea    0x8(%rsp),%rax
  0x0000000115eb0f06: mov    %r13,-0x38(%rbp)
  0x0000000115eb0f0a: mov    %r15,%rdi
  0x0000000115eb0f0d: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0f14: mov    %rax,0x1d8(%r15)
  0x0000000115eb0f1b: test   $0xf,%esp
  0x0000000115eb0f21: je     0x0000000115eb0f39
  0x0000000115eb0f27: sub    $0x8,%rsp
  0x0000000115eb0f2b: callq  0x000000010dae7476
  0x0000000115eb0f30: add    $0x8,%rsp
  0x0000000115eb0f34: jmpq   0x0000000115eb0f3e
  0x0000000115eb0f39: callq  0x000000010dae7476
  0x0000000115eb0f3e: movabs $0x0,%r10
  0x0000000115eb0f48: mov    %r10,0x1d8(%r15)
  0x0000000115eb0f4f: movabs $0x0,%r10
  0x0000000115eb0f59: mov    %r10,0x1e8(%r15)
  0x0000000115eb0f60: cmpq   $0x0,0x8(%r15)
  0x0000000115eb0f68: je     0x0000000115eb0f73
  0x0000000115eb0f6e: jmpq   0x0000000115e916e0
  0x0000000115eb0f73: mov    -0x38(%rbp),%r13
  0x0000000115eb0f77: mov    -0x30(%rbp),%r14
  0x0000000115eb0f7b: retq   
  0x0000000115eb0f7c: movzbl 0x0(%r13),%ebx
  0x0000000115eb0f81: test   %rax,%rax
  0x0000000115eb0f84: je     0x0000000115eb0dfc
  0x0000000115eb0f8a: mov    0x48(%rax),%ecx
  0x0000000115eb0f8d: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb0f90: je     0x0000000115eb0dfc
  0x0000000115eb0f96: mov    %rax,%r13
  0x0000000115eb0f99: callq  0x0000000115eb0fa3
  0x0000000115eb0f9e: jmpq   0x0000000115eb101e
  0x0000000115eb0fa3: lea    0x8(%rsp),%rax
  0x0000000115eb0fa8: mov    %r13,-0x38(%rbp)
  0x0000000115eb0fac: mov    %r15,%rdi
  0x0000000115eb0faf: mov    %rbp,0x1e8(%r15)
  0x0000000115eb0fb6: mov    %rax,0x1d8(%r15)
  0x0000000115eb0fbd: test   $0xf,%esp
  0x0000000115eb0fc3: je     0x0000000115eb0fdb
  0x0000000115eb0fc9: sub    $0x8,%rsp
  0x0000000115eb0fcd: callq  0x000000010dce4396
  0x0000000115eb0fd2: add    $0x8,%rsp
  0x0000000115eb0fd6: jmpq   0x0000000115eb0fe0
  0x0000000115eb0fdb: callq  0x000000010dce4396
  0x0000000115eb0fe0: movabs $0x0,%r10
  0x0000000115eb0fea: mov    %r10,0x1d8(%r15)
  0x0000000115eb0ff1: movabs $0x0,%r10
  0x0000000115eb0ffb: mov    %r10,0x1e8(%r15)
  0x0000000115eb1002: cmpq   $0x0,0x8(%r15)
  0x0000000115eb100a: je     0x0000000115eb1015
  0x0000000115eb1010: jmpq   0x0000000115e916e0
  0x0000000115eb1015: mov    -0x38(%rbp),%r13
  0x0000000115eb1019: mov    -0x30(%rbp),%r14
  0x0000000115eb101d: retq   
  0x0000000115eb101e: mov    %rax,%rsi
  0x0000000115eb1021: mov    -0x8(%rbp),%rdx
  0x0000000115eb1025: leaveq 
  0x0000000115eb1026: pop    %rcx
  0x0000000115eb1027: mov    %rdx,%rsp
  0x0000000115eb102a: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb102e: push   %rcx
  0x0000000115eb102f: jmpq   *0x88(%r13)
  0x0000000115eb1036: mov    -0x20(%rbp),%rax
  0x0000000115eb103a: test   %rax,%rax
  0x0000000115eb103d: je     0x0000000115eb1055
  0x0000000115eb1043: addq   $0x1,0x18(%rax)
  0x0000000115eb1048: sbbq   $0x0,0x18(%rax)
  0x0000000115eb104d: add    $0x20,%rax
  0x0000000115eb1051: mov    %rax,-0x20(%rbp)
  0x0000000115eb1055: movzbl 0x3(%r13),%ebx
  0x0000000115eb105a: add    $0x3,%r13
  0x0000000115eb105e: movabs $0x10e101840,%r10
  0x0000000115eb1068: jmpq   *(%r10,%rbx,8)
  0x0000000115eb106c: nopl   0x0(%rax)
  0x0000000115eb1070: add    %al,(%rax)
  0x0000000115eb1072: add    %al,(%rax)
  0x0000000115eb1074: add    %al,(%rax)
  0x0000000115eb1076: add    %al,(%rax)
  0x0000000115eb1078: add    %al,(%rax)
  0x0000000115eb107a: add    %al,(%rax)
  0x0000000115eb107c: add    %al,(%rax)
  0x0000000115eb107e: add    %al,(%rax)

----------------------------------------------------------------------
if_acmpeq  165 if_acmpeq  [0x0000000115eb10a0, 0x0000000115eb1460]  960 bytes

  0x0000000115eb10a0: pop    %rax
  0x0000000115eb10a1: pop    %rdx
  0x0000000115eb10a2: cmp    %rax,%rdx
  0x0000000115eb10a5: jne    0x0000000115eb140b
  0x0000000115eb10ab: mov    -0x18(%rbp),%rcx
  0x0000000115eb10af: mov    -0x20(%rbp),%rax
  0x0000000115eb10b3: test   %rax,%rax
  0x0000000115eb10b6: je     0x0000000115eb10d4
  0x0000000115eb10bc: mov    0x8(%rax),%rbx
  0x0000000115eb10c0: add    $0x1,%rbx
  0x0000000115eb10c4: sbb    $0x0,%rbx
  0x0000000115eb10c8: mov    %rbx,0x8(%rax)
  0x0000000115eb10cc: add    0x10(%rax),%rax
  0x0000000115eb10d0: mov    %rax,-0x20(%rbp)
  0x0000000115eb10d4: movswl 0x1(%r13),%edx
  0x0000000115eb10d9: bswap  %edx
  0x0000000115eb10db: sar    $0x10,%edx
  0x0000000115eb10de: movslq %edx,%rdx
  0x0000000115eb10e1: add    %rdx,%r13
  0x0000000115eb10e4: test   %edx,%edx
  0x0000000115eb10e6: jns    0x0000000115eb11d1
  0x0000000115eb10ec: mov    0x18(%rcx),%rax
  0x0000000115eb10f0: test   %rax,%rax
  0x0000000115eb10f3: jne    0x0000000115eb118f
  0x0000000115eb10f9: push   %rdx
  0x0000000115eb10fa: push   %rcx
  0x0000000115eb10fb: callq  0x0000000115eb1105
  0x0000000115eb1100: jmpq   0x0000000115eb1183
  0x0000000115eb1105: mov    %rcx,%rsi
  0x0000000115eb1108: lea    0x8(%rsp),%rax
  0x0000000115eb110d: mov    %r13,-0x38(%rbp)
  0x0000000115eb1111: mov    %r15,%rdi
  0x0000000115eb1114: mov    %rbp,0x1e8(%r15)
  0x0000000115eb111b: mov    %rax,0x1d8(%r15)
  0x0000000115eb1122: test   $0xf,%esp
  0x0000000115eb1128: je     0x0000000115eb1140
  0x0000000115eb112e: sub    $0x8,%rsp
  0x0000000115eb1132: callq  0x000000010dae6d98
  0x0000000115eb1137: add    $0x8,%rsp
  0x0000000115eb113b: jmpq   0x0000000115eb1145
  0x0000000115eb1140: callq  0x000000010dae6d98
  0x0000000115eb1145: movabs $0x0,%r10
  0x0000000115eb114f: mov    %r10,0x1d8(%r15)
  0x0000000115eb1156: movabs $0x0,%r10
  0x0000000115eb1160: mov    %r10,0x1e8(%r15)
  0x0000000115eb1167: cmpq   $0x0,0x8(%r15)
  0x0000000115eb116f: je     0x0000000115eb117a
  0x0000000115eb1175: jmpq   0x0000000115e916e0
  0x0000000115eb117a: mov    -0x38(%rbp),%r13
  0x0000000115eb117e: mov    -0x30(%rbp),%r14
  0x0000000115eb1182: retq   
  0x0000000115eb1183: pop    %rcx
  0x0000000115eb1184: pop    %rdx
  0x0000000115eb1185: mov    0x18(%rcx),%rax
  0x0000000115eb1189: je     0x0000000115eb11d1
  0x0000000115eb118f: mov    0x10(%rcx),%rbx
  0x0000000115eb1193: test   %rbx,%rbx
  0x0000000115eb1196: je     0x0000000115eb11b8
  0x0000000115eb1198: mov    0xe0(%rbx),%eax
  0x0000000115eb119e: add    $0x8,%eax
  0x0000000115eb11a1: mov    %eax,0xe0(%rbx)
  0x0000000115eb11a7: and    $0x1ff8,%eax
  0x0000000115eb11ad: je     0x0000000115eb12c3
  0x0000000115eb11b3: jmpq   0x0000000115eb11d1
  0x0000000115eb11b8: mov    0x18(%rcx),%rcx
  0x0000000115eb11bc: mov    0xc(%rcx),%eax
  0x0000000115eb11bf: add    $0x8,%eax
  0x0000000115eb11c2: mov    %eax,0xc(%rcx)
  0x0000000115eb11c5: and    $0x1ff8,%eax
  0x0000000115eb11cb: je     0x0000000115eb12c3
  0x0000000115eb11d1: movzbl 0x0(%r13),%ebx
  0x0000000115eb11d6: movabs $0x10e101840,%r10
  0x0000000115eb11e0: jmpq   *(%r10,%rbx,8)
  0x0000000115eb11e4: callq  0x0000000115eb11ee
  0x0000000115eb11e9: jmpq   0x0000000115eb1269
  0x0000000115eb11ee: lea    0x8(%rsp),%rax
  0x0000000115eb11f3: mov    %r13,-0x38(%rbp)
  0x0000000115eb11f7: mov    %r15,%rdi
  0x0000000115eb11fa: mov    %rbp,0x1e8(%r15)
  0x0000000115eb1201: mov    %rax,0x1d8(%r15)
  0x0000000115eb1208: test   $0xf,%esp
  0x0000000115eb120e: je     0x0000000115eb1226
  0x0000000115eb1214: sub    $0x8,%rsp
  0x0000000115eb1218: callq  0x000000010dae6f16
  0x0000000115eb121d: add    $0x8,%rsp
  0x0000000115eb1221: jmpq   0x0000000115eb122b
  0x0000000115eb1226: callq  0x000000010dae6f16
  0x0000000115eb122b: movabs $0x0,%r10
  0x0000000115eb1235: mov    %r10,0x1d8(%r15)
  0x0000000115eb123c: movabs $0x0,%r10
  0x0000000115eb1246: mov    %r10,0x1e8(%r15)
  0x0000000115eb124d: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1255: je     0x0000000115eb1260
  0x0000000115eb125b: jmpq   0x0000000115e916e0
  0x0000000115eb1260: mov    -0x38(%rbp),%r13
  0x0000000115eb1264: mov    -0x30(%rbp),%r14
  0x0000000115eb1268: retq   
  0x0000000115eb1269: movzbl 0x0(%r13),%ebx
  0x0000000115eb126e: push   %rax
  0x0000000115eb126f: push   %rbx
  0x0000000115eb1270: mov    -0x18(%rbp),%rbx
  0x0000000115eb1274: mov    0x10(%rbx),%rax
  0x0000000115eb1278: test   %rax,%rax
  0x0000000115eb127b: je     0x0000000115eb12b8
  0x0000000115eb1281: mov    %r13,%rsi
  0x0000000115eb1284: mov    %rbx,%rdi
  0x0000000115eb1287: test   $0xf,%esp
  0x0000000115eb128d: je     0x0000000115eb12a5
  0x0000000115eb1293: sub    $0x8,%rsp
  0x0000000115eb1297: callq  0x000000010dae706c
  0x0000000115eb129c: add    $0x8,%rsp
  0x0000000115eb12a0: jmpq   0x0000000115eb12aa
  0x0000000115eb12a5: callq  0x000000010dae706c
  0x0000000115eb12aa: mov    0x10(%rbx),%rbx
  0x0000000115eb12ae: add    $0x100,%rbx
  0x0000000115eb12b5: add    %rbx,%rax
  0x0000000115eb12b8: mov    %rax,-0x20(%rbp)
  0x0000000115eb12bc: pop    %rbx
  0x0000000115eb12bd: pop    %rax
  0x0000000115eb12be: jmpq   0x0000000115eb11d1
  0x0000000115eb12c3: neg    %rdx
  0x0000000115eb12c6: add    %r13,%rdx
  0x0000000115eb12c9: callq  0x0000000115eb12d3
  0x0000000115eb12ce: jmpq   0x0000000115eb1351
  0x0000000115eb12d3: mov    %rdx,%rsi
  0x0000000115eb12d6: lea    0x8(%rsp),%rax
  0x0000000115eb12db: mov    %r13,-0x38(%rbp)
  0x0000000115eb12df: mov    %r15,%rdi
  0x0000000115eb12e2: mov    %rbp,0x1e8(%r15)
  0x0000000115eb12e9: mov    %rax,0x1d8(%r15)
  0x0000000115eb12f0: test   $0xf,%esp
  0x0000000115eb12f6: je     0x0000000115eb130e
  0x0000000115eb12fc: sub    $0x8,%rsp
  0x0000000115eb1300: callq  0x000000010dae7476
  0x0000000115eb1305: add    $0x8,%rsp
  0x0000000115eb1309: jmpq   0x0000000115eb1313
  0x0000000115eb130e: callq  0x000000010dae7476
  0x0000000115eb1313: movabs $0x0,%r10
  0x0000000115eb131d: mov    %r10,0x1d8(%r15)
  0x0000000115eb1324: movabs $0x0,%r10
  0x0000000115eb132e: mov    %r10,0x1e8(%r15)
  0x0000000115eb1335: cmpq   $0x0,0x8(%r15)
  0x0000000115eb133d: je     0x0000000115eb1348
  0x0000000115eb1343: jmpq   0x0000000115e916e0
  0x0000000115eb1348: mov    -0x38(%rbp),%r13
  0x0000000115eb134c: mov    -0x30(%rbp),%r14
  0x0000000115eb1350: retq   
  0x0000000115eb1351: movzbl 0x0(%r13),%ebx
  0x0000000115eb1356: test   %rax,%rax
  0x0000000115eb1359: je     0x0000000115eb11d1
  0x0000000115eb135f: mov    0x48(%rax),%ecx
  0x0000000115eb1362: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb1365: je     0x0000000115eb11d1
  0x0000000115eb136b: mov    %rax,%r13
  0x0000000115eb136e: callq  0x0000000115eb1378
  0x0000000115eb1373: jmpq   0x0000000115eb13f3
  0x0000000115eb1378: lea    0x8(%rsp),%rax
  0x0000000115eb137d: mov    %r13,-0x38(%rbp)
  0x0000000115eb1381: mov    %r15,%rdi
  0x0000000115eb1384: mov    %rbp,0x1e8(%r15)
  0x0000000115eb138b: mov    %rax,0x1d8(%r15)
  0x0000000115eb1392: test   $0xf,%esp
  0x0000000115eb1398: je     0x0000000115eb13b0
  0x0000000115eb139e: sub    $0x8,%rsp
  0x0000000115eb13a2: callq  0x000000010dce4396
  0x0000000115eb13a7: add    $0x8,%rsp
  0x0000000115eb13ab: jmpq   0x0000000115eb13b5
  0x0000000115eb13b0: callq  0x000000010dce4396
  0x0000000115eb13b5: movabs $0x0,%r10
  0x0000000115eb13bf: mov    %r10,0x1d8(%r15)
  0x0000000115eb13c6: movabs $0x0,%r10
  0x0000000115eb13d0: mov    %r10,0x1e8(%r15)
  0x0000000115eb13d7: cmpq   $0x0,0x8(%r15)
  0x0000000115eb13df: je     0x0000000115eb13ea
  0x0000000115eb13e5: jmpq   0x0000000115e916e0
  0x0000000115eb13ea: mov    -0x38(%rbp),%r13
  0x0000000115eb13ee: mov    -0x30(%rbp),%r14
  0x0000000115eb13f2: retq   
  0x0000000115eb13f3: mov    %rax,%rsi
  0x0000000115eb13f6: mov    -0x8(%rbp),%rdx
  0x0000000115eb13fa: leaveq 
  0x0000000115eb13fb: pop    %rcx
  0x0000000115eb13fc: mov    %rdx,%rsp
  0x0000000115eb13ff: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb1403: push   %rcx
  0x0000000115eb1404: jmpq   *0x88(%r13)
  0x0000000115eb140b: mov    -0x20(%rbp),%rax
  0x0000000115eb140f: test   %rax,%rax
  0x0000000115eb1412: je     0x0000000115eb142a
  0x0000000115eb1418: addq   $0x1,0x18(%rax)
  0x0000000115eb141d: sbbq   $0x0,0x18(%rax)
  0x0000000115eb1422: add    $0x20,%rax
  0x0000000115eb1426: mov    %rax,-0x20(%rbp)
  0x0000000115eb142a: movzbl 0x3(%r13),%ebx
  0x0000000115eb142f: add    $0x3,%r13
  0x0000000115eb1433: movabs $0x10e101840,%r10
  0x0000000115eb143d: jmpq   *(%r10,%rbx,8)
  0x0000000115eb1441: nopl   0x0(%rax)
  0x0000000115eb1448: add    %al,(%rax)
  0x0000000115eb144a: add    %al,(%rax)
  0x0000000115eb144c: add    %al,(%rax)
  0x0000000115eb144e: add    %al,(%rax)
  0x0000000115eb1450: add    %al,(%rax)
  0x0000000115eb1452: add    %al,(%rax)
  0x0000000115eb1454: add    %al,(%rax)
  0x0000000115eb1456: add    %al,(%rax)
  0x0000000115eb1458: add    %al,(%rax)
  0x0000000115eb145a: add    %al,(%rax)
  0x0000000115eb145c: add    %al,(%rax)
  0x0000000115eb145e: add    %al,(%rax)

----------------------------------------------------------------------
if_acmpne  166 if_acmpne  [0x0000000115eb1480, 0x0000000115eb1840]  960 bytes

  0x0000000115eb1480: pop    %rax
  0x0000000115eb1481: pop    %rdx
  0x0000000115eb1482: cmp    %rax,%rdx
  0x0000000115eb1485: je     0x0000000115eb17eb
  0x0000000115eb148b: mov    -0x18(%rbp),%rcx
  0x0000000115eb148f: mov    -0x20(%rbp),%rax
  0x0000000115eb1493: test   %rax,%rax
  0x0000000115eb1496: je     0x0000000115eb14b4
  0x0000000115eb149c: mov    0x8(%rax),%rbx
  0x0000000115eb14a0: add    $0x1,%rbx
  0x0000000115eb14a4: sbb    $0x0,%rbx
  0x0000000115eb14a8: mov    %rbx,0x8(%rax)
  0x0000000115eb14ac: add    0x10(%rax),%rax
  0x0000000115eb14b0: mov    %rax,-0x20(%rbp)
  0x0000000115eb14b4: movswl 0x1(%r13),%edx
  0x0000000115eb14b9: bswap  %edx
  0x0000000115eb14bb: sar    $0x10,%edx
  0x0000000115eb14be: movslq %edx,%rdx
  0x0000000115eb14c1: add    %rdx,%r13
  0x0000000115eb14c4: test   %edx,%edx
  0x0000000115eb14c6: jns    0x0000000115eb15b1
  0x0000000115eb14cc: mov    0x18(%rcx),%rax
  0x0000000115eb14d0: test   %rax,%rax
  0x0000000115eb14d3: jne    0x0000000115eb156f
  0x0000000115eb14d9: push   %rdx
  0x0000000115eb14da: push   %rcx
  0x0000000115eb14db: callq  0x0000000115eb14e5
  0x0000000115eb14e0: jmpq   0x0000000115eb1563
  0x0000000115eb14e5: mov    %rcx,%rsi
  0x0000000115eb14e8: lea    0x8(%rsp),%rax
  0x0000000115eb14ed: mov    %r13,-0x38(%rbp)
  0x0000000115eb14f1: mov    %r15,%rdi
  0x0000000115eb14f4: mov    %rbp,0x1e8(%r15)
  0x0000000115eb14fb: mov    %rax,0x1d8(%r15)
  0x0000000115eb1502: test   $0xf,%esp
  0x0000000115eb1508: je     0x0000000115eb1520
  0x0000000115eb150e: sub    $0x8,%rsp
  0x0000000115eb1512: callq  0x000000010dae6d98
  0x0000000115eb1517: add    $0x8,%rsp
  0x0000000115eb151b: jmpq   0x0000000115eb1525
  0x0000000115eb1520: callq  0x000000010dae6d98
  0x0000000115eb1525: movabs $0x0,%r10
  0x0000000115eb152f: mov    %r10,0x1d8(%r15)
  0x0000000115eb1536: movabs $0x0,%r10
  0x0000000115eb1540: mov    %r10,0x1e8(%r15)
  0x0000000115eb1547: cmpq   $0x0,0x8(%r15)
  0x0000000115eb154f: je     0x0000000115eb155a
  0x0000000115eb1555: jmpq   0x0000000115e916e0
  0x0000000115eb155a: mov    -0x38(%rbp),%r13
  0x0000000115eb155e: mov    -0x30(%rbp),%r14
  0x0000000115eb1562: retq   
  0x0000000115eb1563: pop    %rcx
  0x0000000115eb1564: pop    %rdx
  0x0000000115eb1565: mov    0x18(%rcx),%rax
  0x0000000115eb1569: je     0x0000000115eb15b1
  0x0000000115eb156f: mov    0x10(%rcx),%rbx
  0x0000000115eb1573: test   %rbx,%rbx
  0x0000000115eb1576: je     0x0000000115eb1598
  0x0000000115eb1578: mov    0xe0(%rbx),%eax
  0x0000000115eb157e: add    $0x8,%eax
  0x0000000115eb1581: mov    %eax,0xe0(%rbx)
  0x0000000115eb1587: and    $0x1ff8,%eax
  0x0000000115eb158d: je     0x0000000115eb16a3
  0x0000000115eb1593: jmpq   0x0000000115eb15b1
  0x0000000115eb1598: mov    0x18(%rcx),%rcx
  0x0000000115eb159c: mov    0xc(%rcx),%eax
  0x0000000115eb159f: add    $0x8,%eax
  0x0000000115eb15a2: mov    %eax,0xc(%rcx)
  0x0000000115eb15a5: and    $0x1ff8,%eax
  0x0000000115eb15ab: je     0x0000000115eb16a3
  0x0000000115eb15b1: movzbl 0x0(%r13),%ebx
  0x0000000115eb15b6: movabs $0x10e101840,%r10
  0x0000000115eb15c0: jmpq   *(%r10,%rbx,8)
  0x0000000115eb15c4: callq  0x0000000115eb15ce
  0x0000000115eb15c9: jmpq   0x0000000115eb1649
  0x0000000115eb15ce: lea    0x8(%rsp),%rax
  0x0000000115eb15d3: mov    %r13,-0x38(%rbp)
  0x0000000115eb15d7: mov    %r15,%rdi
  0x0000000115eb15da: mov    %rbp,0x1e8(%r15)
  0x0000000115eb15e1: mov    %rax,0x1d8(%r15)
  0x0000000115eb15e8: test   $0xf,%esp
  0x0000000115eb15ee: je     0x0000000115eb1606
  0x0000000115eb15f4: sub    $0x8,%rsp
  0x0000000115eb15f8: callq  0x000000010dae6f16
  0x0000000115eb15fd: add    $0x8,%rsp
  0x0000000115eb1601: jmpq   0x0000000115eb160b
  0x0000000115eb1606: callq  0x000000010dae6f16
  0x0000000115eb160b: movabs $0x0,%r10
  0x0000000115eb1615: mov    %r10,0x1d8(%r15)
  0x0000000115eb161c: movabs $0x0,%r10
  0x0000000115eb1626: mov    %r10,0x1e8(%r15)
  0x0000000115eb162d: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1635: je     0x0000000115eb1640
  0x0000000115eb163b: jmpq   0x0000000115e916e0
  0x0000000115eb1640: mov    -0x38(%rbp),%r13
  0x0000000115eb1644: mov    -0x30(%rbp),%r14
  0x0000000115eb1648: retq   
  0x0000000115eb1649: movzbl 0x0(%r13),%ebx
  0x0000000115eb164e: push   %rax
  0x0000000115eb164f: push   %rbx
  0x0000000115eb1650: mov    -0x18(%rbp),%rbx
  0x0000000115eb1654: mov    0x10(%rbx),%rax
  0x0000000115eb1658: test   %rax,%rax
  0x0000000115eb165b: je     0x0000000115eb1698
  0x0000000115eb1661: mov    %r13,%rsi
  0x0000000115eb1664: mov    %rbx,%rdi
  0x0000000115eb1667: test   $0xf,%esp
  0x0000000115eb166d: je     0x0000000115eb1685
  0x0000000115eb1673: sub    $0x8,%rsp
  0x0000000115eb1677: callq  0x000000010dae706c
  0x0000000115eb167c: add    $0x8,%rsp
  0x0000000115eb1680: jmpq   0x0000000115eb168a
  0x0000000115eb1685: callq  0x000000010dae706c
  0x0000000115eb168a: mov    0x10(%rbx),%rbx
  0x0000000115eb168e: add    $0x100,%rbx
  0x0000000115eb1695: add    %rbx,%rax
  0x0000000115eb1698: mov    %rax,-0x20(%rbp)
  0x0000000115eb169c: pop    %rbx
  0x0000000115eb169d: pop    %rax
  0x0000000115eb169e: jmpq   0x0000000115eb15b1
  0x0000000115eb16a3: neg    %rdx
  0x0000000115eb16a6: add    %r13,%rdx
  0x0000000115eb16a9: callq  0x0000000115eb16b3
  0x0000000115eb16ae: jmpq   0x0000000115eb1731
  0x0000000115eb16b3: mov    %rdx,%rsi
  0x0000000115eb16b6: lea    0x8(%rsp),%rax
  0x0000000115eb16bb: mov    %r13,-0x38(%rbp)
  0x0000000115eb16bf: mov    %r15,%rdi
  0x0000000115eb16c2: mov    %rbp,0x1e8(%r15)
  0x0000000115eb16c9: mov    %rax,0x1d8(%r15)
  0x0000000115eb16d0: test   $0xf,%esp
  0x0000000115eb16d6: je     0x0000000115eb16ee
  0x0000000115eb16dc: sub    $0x8,%rsp
  0x0000000115eb16e0: callq  0x000000010dae7476
  0x0000000115eb16e5: add    $0x8,%rsp
  0x0000000115eb16e9: jmpq   0x0000000115eb16f3
  0x0000000115eb16ee: callq  0x000000010dae7476
  0x0000000115eb16f3: movabs $0x0,%r10
  0x0000000115eb16fd: mov    %r10,0x1d8(%r15)
  0x0000000115eb1704: movabs $0x0,%r10
  0x0000000115eb170e: mov    %r10,0x1e8(%r15)
  0x0000000115eb1715: cmpq   $0x0,0x8(%r15)
  0x0000000115eb171d: je     0x0000000115eb1728
  0x0000000115eb1723: jmpq   0x0000000115e916e0
  0x0000000115eb1728: mov    -0x38(%rbp),%r13
  0x0000000115eb172c: mov    -0x30(%rbp),%r14
  0x0000000115eb1730: retq   
  0x0000000115eb1731: movzbl 0x0(%r13),%ebx
  0x0000000115eb1736: test   %rax,%rax
  0x0000000115eb1739: je     0x0000000115eb15b1
  0x0000000115eb173f: mov    0x48(%rax),%ecx
  0x0000000115eb1742: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb1745: je     0x0000000115eb15b1
  0x0000000115eb174b: mov    %rax,%r13
  0x0000000115eb174e: callq  0x0000000115eb1758
  0x0000000115eb1753: jmpq   0x0000000115eb17d3
  0x0000000115eb1758: lea    0x8(%rsp),%rax
  0x0000000115eb175d: mov    %r13,-0x38(%rbp)
  0x0000000115eb1761: mov    %r15,%rdi
  0x0000000115eb1764: mov    %rbp,0x1e8(%r15)
  0x0000000115eb176b: mov    %rax,0x1d8(%r15)
  0x0000000115eb1772: test   $0xf,%esp
  0x0000000115eb1778: je     0x0000000115eb1790
  0x0000000115eb177e: sub    $0x8,%rsp
  0x0000000115eb1782: callq  0x000000010dce4396
  0x0000000115eb1787: add    $0x8,%rsp
  0x0000000115eb178b: jmpq   0x0000000115eb1795
  0x0000000115eb1790: callq  0x000000010dce4396
  0x0000000115eb1795: movabs $0x0,%r10
  0x0000000115eb179f: mov    %r10,0x1d8(%r15)
  0x0000000115eb17a6: movabs $0x0,%r10
  0x0000000115eb17b0: mov    %r10,0x1e8(%r15)
  0x0000000115eb17b7: cmpq   $0x0,0x8(%r15)
  0x0000000115eb17bf: je     0x0000000115eb17ca
  0x0000000115eb17c5: jmpq   0x0000000115e916e0
  0x0000000115eb17ca: mov    -0x38(%rbp),%r13
  0x0000000115eb17ce: mov    -0x30(%rbp),%r14
  0x0000000115eb17d2: retq   
  0x0000000115eb17d3: mov    %rax,%rsi
  0x0000000115eb17d6: mov    -0x8(%rbp),%rdx
  0x0000000115eb17da: leaveq 
  0x0000000115eb17db: pop    %rcx
  0x0000000115eb17dc: mov    %rdx,%rsp
  0x0000000115eb17df: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb17e3: push   %rcx
  0x0000000115eb17e4: jmpq   *0x88(%r13)
  0x0000000115eb17eb: mov    -0x20(%rbp),%rax
  0x0000000115eb17ef: test   %rax,%rax
  0x0000000115eb17f2: je     0x0000000115eb180a
  0x0000000115eb17f8: addq   $0x1,0x18(%rax)
  0x0000000115eb17fd: sbbq   $0x0,0x18(%rax)
  0x0000000115eb1802: add    $0x20,%rax
  0x0000000115eb1806: mov    %rax,-0x20(%rbp)
  0x0000000115eb180a: movzbl 0x3(%r13),%ebx
  0x0000000115eb180f: add    $0x3,%r13
  0x0000000115eb1813: movabs $0x10e101840,%r10
  0x0000000115eb181d: jmpq   *(%r10,%rbx,8)
  0x0000000115eb1821: nopl   0x0(%rax)
  0x0000000115eb1828: add    %al,(%rax)
  0x0000000115eb182a: add    %al,(%rax)
  0x0000000115eb182c: add    %al,(%rax)
  0x0000000115eb182e: add    %al,(%rax)
  0x0000000115eb1830: add    %al,(%rax)
  0x0000000115eb1832: add    %al,(%rax)
  0x0000000115eb1834: add    %al,(%rax)
  0x0000000115eb1836: add    %al,(%rax)
  0x0000000115eb1838: add    %al,(%rax)
  0x0000000115eb183a: add    %al,(%rax)
  0x0000000115eb183c: add    %al,(%rax)
  0x0000000115eb183e: add    %al,(%rax)

----------------------------------------------------------------------
goto  167 goto  [0x0000000115eb1860, 0x0000000115eb1c00]  928 bytes

  0x0000000115eb1860: push   %rax
  0x0000000115eb1861: jmpq   0x0000000115eb1890
  0x0000000115eb1866: sub    $0x8,%rsp
  0x0000000115eb186a: vmovss %xmm0,(%rsp)
  0x0000000115eb186f: jmpq   0x0000000115eb1890
  0x0000000115eb1874: sub    $0x10,%rsp
  0x0000000115eb1878: vmovsd %xmm0,(%rsp)
  0x0000000115eb187d: jmpq   0x0000000115eb1890
  0x0000000115eb1882: sub    $0x10,%rsp
  0x0000000115eb1886: mov    %rax,(%rsp)
  0x0000000115eb188a: jmpq   0x0000000115eb1890
  0x0000000115eb188f: push   %rax
  0x0000000115eb1890: mov    -0x18(%rbp),%rcx
  0x0000000115eb1894: mov    -0x20(%rbp),%rax
  0x0000000115eb1898: test   %rax,%rax
  0x0000000115eb189b: je     0x0000000115eb18b9
  0x0000000115eb18a1: mov    0x8(%rax),%rbx
  0x0000000115eb18a5: add    $0x1,%rbx
  0x0000000115eb18a9: sbb    $0x0,%rbx
  0x0000000115eb18ad: mov    %rbx,0x8(%rax)
  0x0000000115eb18b1: add    0x10(%rax),%rax
  0x0000000115eb18b5: mov    %rax,-0x20(%rbp)
  0x0000000115eb18b9: movswl 0x1(%r13),%edx
  0x0000000115eb18be: bswap  %edx
  0x0000000115eb18c0: sar    $0x10,%edx
  0x0000000115eb18c3: movslq %edx,%rdx
  0x0000000115eb18c6: add    %rdx,%r13
  0x0000000115eb18c9: test   %edx,%edx
  0x0000000115eb18cb: jns    0x0000000115eb19b6
  0x0000000115eb18d1: mov    0x18(%rcx),%rax
  0x0000000115eb18d5: test   %rax,%rax
  0x0000000115eb18d8: jne    0x0000000115eb1974
  0x0000000115eb18de: push   %rdx
  0x0000000115eb18df: push   %rcx
  0x0000000115eb18e0: callq  0x0000000115eb18ea
  0x0000000115eb18e5: jmpq   0x0000000115eb1968
  0x0000000115eb18ea: mov    %rcx,%rsi
  0x0000000115eb18ed: lea    0x8(%rsp),%rax
  0x0000000115eb18f2: mov    %r13,-0x38(%rbp)
  0x0000000115eb18f6: mov    %r15,%rdi
  0x0000000115eb18f9: mov    %rbp,0x1e8(%r15)
  0x0000000115eb1900: mov    %rax,0x1d8(%r15)
  0x0000000115eb1907: test   $0xf,%esp
  0x0000000115eb190d: je     0x0000000115eb1925
  0x0000000115eb1913: sub    $0x8,%rsp
  0x0000000115eb1917: callq  0x000000010dae6d98
  0x0000000115eb191c: add    $0x8,%rsp
  0x0000000115eb1920: jmpq   0x0000000115eb192a
  0x0000000115eb1925: callq  0x000000010dae6d98
  0x0000000115eb192a: movabs $0x0,%r10
  0x0000000115eb1934: mov    %r10,0x1d8(%r15)
  0x0000000115eb193b: movabs $0x0,%r10
  0x0000000115eb1945: mov    %r10,0x1e8(%r15)
  0x0000000115eb194c: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1954: je     0x0000000115eb195f
  0x0000000115eb195a: jmpq   0x0000000115e916e0
  0x0000000115eb195f: mov    -0x38(%rbp),%r13
  0x0000000115eb1963: mov    -0x30(%rbp),%r14
  0x0000000115eb1967: retq   
  0x0000000115eb1968: pop    %rcx
  0x0000000115eb1969: pop    %rdx
  0x0000000115eb196a: mov    0x18(%rcx),%rax
  0x0000000115eb196e: je     0x0000000115eb19b6
  0x0000000115eb1974: mov    0x10(%rcx),%rbx
  0x0000000115eb1978: test   %rbx,%rbx
  0x0000000115eb197b: je     0x0000000115eb199d
  0x0000000115eb197d: mov    0xe0(%rbx),%eax
  0x0000000115eb1983: add    $0x8,%eax
  0x0000000115eb1986: mov    %eax,0xe0(%rbx)
  0x0000000115eb198c: and    $0x1ff8,%eax
  0x0000000115eb1992: je     0x0000000115eb1aa8
  0x0000000115eb1998: jmpq   0x0000000115eb19b6
  0x0000000115eb199d: mov    0x18(%rcx),%rcx
  0x0000000115eb19a1: mov    0xc(%rcx),%eax
  0x0000000115eb19a4: add    $0x8,%eax
  0x0000000115eb19a7: mov    %eax,0xc(%rcx)
  0x0000000115eb19aa: and    $0x1ff8,%eax
  0x0000000115eb19b0: je     0x0000000115eb1aa8
  0x0000000115eb19b6: movzbl 0x0(%r13),%ebx
  0x0000000115eb19bb: movabs $0x10e101840,%r10
  0x0000000115eb19c5: jmpq   *(%r10,%rbx,8)
  0x0000000115eb19c9: callq  0x0000000115eb19d3
  0x0000000115eb19ce: jmpq   0x0000000115eb1a4e
  0x0000000115eb19d3: lea    0x8(%rsp),%rax
  0x0000000115eb19d8: mov    %r13,-0x38(%rbp)
  0x0000000115eb19dc: mov    %r15,%rdi
  0x0000000115eb19df: mov    %rbp,0x1e8(%r15)
  0x0000000115eb19e6: mov    %rax,0x1d8(%r15)
  0x0000000115eb19ed: test   $0xf,%esp
  0x0000000115eb19f3: je     0x0000000115eb1a0b
  0x0000000115eb19f9: sub    $0x8,%rsp
  0x0000000115eb19fd: callq  0x000000010dae6f16
  0x0000000115eb1a02: add    $0x8,%rsp
  0x0000000115eb1a06: jmpq   0x0000000115eb1a10
  0x0000000115eb1a0b: callq  0x000000010dae6f16
  0x0000000115eb1a10: movabs $0x0,%r10
  0x0000000115eb1a1a: mov    %r10,0x1d8(%r15)
  0x0000000115eb1a21: movabs $0x0,%r10
  0x0000000115eb1a2b: mov    %r10,0x1e8(%r15)
  0x0000000115eb1a32: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1a3a: je     0x0000000115eb1a45
  0x0000000115eb1a40: jmpq   0x0000000115e916e0
  0x0000000115eb1a45: mov    -0x38(%rbp),%r13
  0x0000000115eb1a49: mov    -0x30(%rbp),%r14
  0x0000000115eb1a4d: retq   
  0x0000000115eb1a4e: movzbl 0x0(%r13),%ebx
  0x0000000115eb1a53: push   %rax
  0x0000000115eb1a54: push   %rbx
  0x0000000115eb1a55: mov    -0x18(%rbp),%rbx
  0x0000000115eb1a59: mov    0x10(%rbx),%rax
  0x0000000115eb1a5d: test   %rax,%rax
  0x0000000115eb1a60: je     0x0000000115eb1a9d
  0x0000000115eb1a66: mov    %r13,%rsi
  0x0000000115eb1a69: mov    %rbx,%rdi
  0x0000000115eb1a6c: test   $0xf,%esp
  0x0000000115eb1a72: je     0x0000000115eb1a8a
  0x0000000115eb1a78: sub    $0x8,%rsp
  0x0000000115eb1a7c: callq  0x000000010dae706c
  0x0000000115eb1a81: add    $0x8,%rsp
  0x0000000115eb1a85: jmpq   0x0000000115eb1a8f
  0x0000000115eb1a8a: callq  0x000000010dae706c
  0x0000000115eb1a8f: mov    0x10(%rbx),%rbx
  0x0000000115eb1a93: add    $0x100,%rbx
  0x0000000115eb1a9a: add    %rbx,%rax
  0x0000000115eb1a9d: mov    %rax,-0x20(%rbp)
  0x0000000115eb1aa1: pop    %rbx
  0x0000000115eb1aa2: pop    %rax
  0x0000000115eb1aa3: jmpq   0x0000000115eb19b6
  0x0000000115eb1aa8: neg    %rdx
  0x0000000115eb1aab: add    %r13,%rdx
  0x0000000115eb1aae: callq  0x0000000115eb1ab8
  0x0000000115eb1ab3: jmpq   0x0000000115eb1b36
  0x0000000115eb1ab8: mov    %rdx,%rsi
  0x0000000115eb1abb: lea    0x8(%rsp),%rax
  0x0000000115eb1ac0: mov    %r13,-0x38(%rbp)
  0x0000000115eb1ac4: mov    %r15,%rdi
  0x0000000115eb1ac7: mov    %rbp,0x1e8(%r15)
  0x0000000115eb1ace: mov    %rax,0x1d8(%r15)
  0x0000000115eb1ad5: test   $0xf,%esp
  0x0000000115eb1adb: je     0x0000000115eb1af3
  0x0000000115eb1ae1: sub    $0x8,%rsp
  0x0000000115eb1ae5: callq  0x000000010dae7476
  0x0000000115eb1aea: add    $0x8,%rsp
  0x0000000115eb1aee: jmpq   0x0000000115eb1af8
  0x0000000115eb1af3: callq  0x000000010dae7476
  0x0000000115eb1af8: movabs $0x0,%r10
  0x0000000115eb1b02: mov    %r10,0x1d8(%r15)
  0x0000000115eb1b09: movabs $0x0,%r10
  0x0000000115eb1b13: mov    %r10,0x1e8(%r15)
  0x0000000115eb1b1a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1b22: je     0x0000000115eb1b2d
  0x0000000115eb1b28: jmpq   0x0000000115e916e0
  0x0000000115eb1b2d: mov    -0x38(%rbp),%r13
  0x0000000115eb1b31: mov    -0x30(%rbp),%r14
  0x0000000115eb1b35: retq   
  0x0000000115eb1b36: movzbl 0x0(%r13),%ebx
  0x0000000115eb1b3b: test   %rax,%rax
  0x0000000115eb1b3e: je     0x0000000115eb19b6
  0x0000000115eb1b44: mov    0x48(%rax),%ecx
  0x0000000115eb1b47: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb1b4a: je     0x0000000115eb19b6
  0x0000000115eb1b50: mov    %rax,%r13
  0x0000000115eb1b53: callq  0x0000000115eb1b5d
  0x0000000115eb1b58: jmpq   0x0000000115eb1bd8
  0x0000000115eb1b5d: lea    0x8(%rsp),%rax
  0x0000000115eb1b62: mov    %r13,-0x38(%rbp)
  0x0000000115eb1b66: mov    %r15,%rdi
  0x0000000115eb1b69: mov    %rbp,0x1e8(%r15)
  0x0000000115eb1b70: mov    %rax,0x1d8(%r15)
  0x0000000115eb1b77: test   $0xf,%esp
  0x0000000115eb1b7d: je     0x0000000115eb1b95
  0x0000000115eb1b83: sub    $0x8,%rsp
  0x0000000115eb1b87: callq  0x000000010dce4396
  0x0000000115eb1b8c: add    $0x8,%rsp
  0x0000000115eb1b90: jmpq   0x0000000115eb1b9a
  0x0000000115eb1b95: callq  0x000000010dce4396
  0x0000000115eb1b9a: movabs $0x0,%r10
  0x0000000115eb1ba4: mov    %r10,0x1d8(%r15)
  0x0000000115eb1bab: movabs $0x0,%r10
  0x0000000115eb1bb5: mov    %r10,0x1e8(%r15)
  0x0000000115eb1bbc: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1bc4: je     0x0000000115eb1bcf
  0x0000000115eb1bca: jmpq   0x0000000115e916e0
  0x0000000115eb1bcf: mov    -0x38(%rbp),%r13
  0x0000000115eb1bd3: mov    -0x30(%rbp),%r14
  0x0000000115eb1bd7: retq   
  0x0000000115eb1bd8: mov    %rax,%rsi
  0x0000000115eb1bdb: mov    -0x8(%rbp),%rdx
  0x0000000115eb1bdf: leaveq 
  0x0000000115eb1be0: pop    %rcx
  0x0000000115eb1be1: mov    %rdx,%rsp
  0x0000000115eb1be4: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb1be8: push   %rcx
  0x0000000115eb1be9: jmpq   *0x88(%r13)
  0x0000000115eb1bf0: add    %al,(%rax)
  0x0000000115eb1bf2: add    %al,(%rax)
  0x0000000115eb1bf4: add    %al,(%rax)
  0x0000000115eb1bf6: add    %al,(%rax)
  0x0000000115eb1bf8: add    %al,(%rax)
  0x0000000115eb1bfa: add    %al,(%rax)
  0x0000000115eb1bfc: add    %al,(%rax)
  0x0000000115eb1bfe: add    %al,(%rax)

----------------------------------------------------------------------
jsr  168 jsr  [0x0000000115eb1c20, 0x0000000115eb1cc0]  160 bytes

  0x0000000115eb1c20: push   %rax
  0x0000000115eb1c21: jmpq   0x0000000115eb1c50
  0x0000000115eb1c26: sub    $0x8,%rsp
  0x0000000115eb1c2a: vmovss %xmm0,(%rsp)
  0x0000000115eb1c2f: jmpq   0x0000000115eb1c50
  0x0000000115eb1c34: sub    $0x10,%rsp
  0x0000000115eb1c38: vmovsd %xmm0,(%rsp)
  0x0000000115eb1c3d: jmpq   0x0000000115eb1c50
  0x0000000115eb1c42: sub    $0x10,%rsp
  0x0000000115eb1c46: mov    %rax,(%rsp)
  0x0000000115eb1c4a: jmpq   0x0000000115eb1c50
  0x0000000115eb1c4f: push   %rax
  0x0000000115eb1c50: mov    -0x18(%rbp),%rcx
  0x0000000115eb1c54: mov    -0x20(%rbp),%rax
  0x0000000115eb1c58: test   %rax,%rax
  0x0000000115eb1c5b: je     0x0000000115eb1c79
  0x0000000115eb1c61: mov    0x8(%rax),%rbx
  0x0000000115eb1c65: add    $0x1,%rbx
  0x0000000115eb1c69: sbb    $0x0,%rbx
  0x0000000115eb1c6d: mov    %rbx,0x8(%rax)
  0x0000000115eb1c71: add    0x10(%rax),%rax
  0x0000000115eb1c75: mov    %rax,-0x20(%rbp)
  0x0000000115eb1c79: movswl 0x1(%r13),%edx
  0x0000000115eb1c7e: bswap  %edx
  0x0000000115eb1c80: sar    $0x10,%edx
  0x0000000115eb1c83: movslq %edx,%rdx
  0x0000000115eb1c86: movzbl 0x0(%r13,%rdx,1),%ebx
  0x0000000115eb1c8c: lea    -0x2d(%r13),%rax
  0x0000000115eb1c90: sub    0x8(%rcx),%rax
  0x0000000115eb1c94: add    %rdx,%r13
  0x0000000115eb1c97: push   %rax
  0x0000000115eb1c98: movabs $0x10e101840,%r10
  0x0000000115eb1ca2: jmpq   *(%r10,%rbx,8)
  0x0000000115eb1ca6: xchg   %ax,%ax
  0x0000000115eb1ca8: add    %al,(%rax)
  0x0000000115eb1caa: add    %al,(%rax)
  0x0000000115eb1cac: add    %al,(%rax)
  0x0000000115eb1cae: add    %al,(%rax)
  0x0000000115eb1cb0: add    %al,(%rax)
  0x0000000115eb1cb2: add    %al,(%rax)
  0x0000000115eb1cb4: add    %al,(%rax)
  0x0000000115eb1cb6: add    %al,(%rax)
  0x0000000115eb1cb8: add    %al,(%rax)
  0x0000000115eb1cba: add    %al,(%rax)
  0x0000000115eb1cbc: add    %al,(%rax)
  0x0000000115eb1cbe: add    %al,(%rax)

----------------------------------------------------------------------
ret  169 ret  [0x0000000115eb1ce0, 0x0000000115eb1f40]  608 bytes

  0x0000000115eb1ce0: push   %rax
  0x0000000115eb1ce1: jmpq   0x0000000115eb1d10
  0x0000000115eb1ce6: sub    $0x8,%rsp
  0x0000000115eb1cea: vmovss %xmm0,(%rsp)
  0x0000000115eb1cef: jmpq   0x0000000115eb1d10
  0x0000000115eb1cf4: sub    $0x10,%rsp
  0x0000000115eb1cf8: vmovsd %xmm0,(%rsp)
  0x0000000115eb1cfd: jmpq   0x0000000115eb1d10
  0x0000000115eb1d02: sub    $0x10,%rsp
  0x0000000115eb1d06: mov    %rax,(%rsp)
  0x0000000115eb1d0a: jmpq   0x0000000115eb1d10
  0x0000000115eb1d0f: push   %rax
  0x0000000115eb1d10: movzbl 0x1(%r13),%ebx
  0x0000000115eb1d15: neg    %rbx
  0x0000000115eb1d18: movslq (%r14,%rbx,8),%rbx
  0x0000000115eb1d1c: mov    -0x20(%rbp),%rcx
  0x0000000115eb1d20: test   %rcx,%rcx
  0x0000000115eb1d23: je     0x0000000115eb1dff
  0x0000000115eb1d29: addq   $0x1,0x8(%rcx)
  0x0000000115eb1d2e: sbbq   $0x0,0x8(%rcx)
  0x0000000115eb1d33: cmp    0x10(%rcx),%rbx
  0x0000000115eb1d37: jne    0x0000000115eb1d54
  0x0000000115eb1d3d: addq   $0x1,0x18(%rcx)
  0x0000000115eb1d42: sbbq   $0x0,0x18(%rcx)
  0x0000000115eb1d47: add    0x20(%rcx),%rcx
  0x0000000115eb1d4b: mov    %rcx,-0x20(%rbp)
  0x0000000115eb1d4f: jmpq   0x0000000115eb1dff
  0x0000000115eb1d54: cmp    0x28(%rcx),%rbx
  0x0000000115eb1d58: jne    0x0000000115eb1d75
  0x0000000115eb1d5e: addq   $0x1,0x30(%rcx)
  0x0000000115eb1d63: sbbq   $0x0,0x30(%rcx)
  0x0000000115eb1d68: add    0x38(%rcx),%rcx
  0x0000000115eb1d6c: mov    %rcx,-0x20(%rbp)
  0x0000000115eb1d70: jmpq   0x0000000115eb1dff
  0x0000000115eb1d75: push   %rbx
  0x0000000115eb1d76: callq  0x0000000115eb1d80
  0x0000000115eb1d7b: jmpq   0x0000000115eb1dfe
  0x0000000115eb1d80: mov    %rbx,%rsi
  0x0000000115eb1d83: lea    0x8(%rsp),%rax
  0x0000000115eb1d88: mov    %r13,-0x38(%rbp)
  0x0000000115eb1d8c: mov    %r15,%rdi
  0x0000000115eb1d8f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb1d96: mov    %rax,0x1d8(%r15)
  0x0000000115eb1d9d: test   $0xf,%esp
  0x0000000115eb1da3: je     0x0000000115eb1dbb
  0x0000000115eb1da9: sub    $0x8,%rsp
  0x0000000115eb1dad: callq  0x000000010dae6df4
  0x0000000115eb1db2: add    $0x8,%rsp
  0x0000000115eb1db6: jmpq   0x0000000115eb1dc0
  0x0000000115eb1dbb: callq  0x000000010dae6df4
  0x0000000115eb1dc0: movabs $0x0,%r10
  0x0000000115eb1dca: mov    %r10,0x1d8(%r15)
  0x0000000115eb1dd1: movabs $0x0,%r10
  0x0000000115eb1ddb: mov    %r10,0x1e8(%r15)
  0x0000000115eb1de2: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1dea: je     0x0000000115eb1df5
  0x0000000115eb1df0: jmpq   0x0000000115e916e0
  0x0000000115eb1df5: mov    -0x38(%rbp),%r13
  0x0000000115eb1df9: mov    -0x30(%rbp),%r14
  0x0000000115eb1dfd: retq   
  0x0000000115eb1dfe: pop    %rbx
  0x0000000115eb1dff: mov    -0x18(%rbp),%rax
  0x0000000115eb1e03: mov    0x8(%rax),%r13
  0x0000000115eb1e07: lea    0x30(%r13,%rbx,1),%r13
  0x0000000115eb1e0c: movzbl 0x0(%r13),%ebx
  0x0000000115eb1e11: movabs $0x10e101840,%r10
  0x0000000115eb1e1b: jmpq   *(%r10,%rbx,8)
  0x0000000115eb1e1f: movzwl 0x2(%r13),%ebx
  0x0000000115eb1e24: bswap  %ebx
  0x0000000115eb1e26: shr    $0x10,%ebx
  0x0000000115eb1e29: neg    %rbx
  0x0000000115eb1e2c: mov    (%r14,%rbx,8),%rbx
  0x0000000115eb1e30: mov    -0x20(%rbp),%rcx
  0x0000000115eb1e34: test   %rcx,%rcx
  0x0000000115eb1e37: je     0x0000000115eb1f13
  0x0000000115eb1e3d: addq   $0x1,0x8(%rcx)
  0x0000000115eb1e42: sbbq   $0x0,0x8(%rcx)
  0x0000000115eb1e47: cmp    0x10(%rcx),%rbx
  0x0000000115eb1e4b: jne    0x0000000115eb1e68
  0x0000000115eb1e51: addq   $0x1,0x18(%rcx)
  0x0000000115eb1e56: sbbq   $0x0,0x18(%rcx)
  0x0000000115eb1e5b: add    0x20(%rcx),%rcx
  0x0000000115eb1e5f: mov    %rcx,-0x20(%rbp)
  0x0000000115eb1e63: jmpq   0x0000000115eb1f13
  0x0000000115eb1e68: cmp    0x28(%rcx),%rbx
  0x0000000115eb1e6c: jne    0x0000000115eb1e89
  0x0000000115eb1e72: addq   $0x1,0x30(%rcx)
  0x0000000115eb1e77: sbbq   $0x0,0x30(%rcx)
  0x0000000115eb1e7c: add    0x38(%rcx),%rcx
  0x0000000115eb1e80: mov    %rcx,-0x20(%rbp)
  0x0000000115eb1e84: jmpq   0x0000000115eb1f13
  0x0000000115eb1e89: push   %rbx
  0x0000000115eb1e8a: callq  0x0000000115eb1e94
  0x0000000115eb1e8f: jmpq   0x0000000115eb1f12
  0x0000000115eb1e94: mov    %rbx,%rsi
  0x0000000115eb1e97: lea    0x8(%rsp),%rax
  0x0000000115eb1e9c: mov    %r13,-0x38(%rbp)
  0x0000000115eb1ea0: mov    %r15,%rdi
  0x0000000115eb1ea3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb1eaa: mov    %rax,0x1d8(%r15)
  0x0000000115eb1eb1: test   $0xf,%esp
  0x0000000115eb1eb7: je     0x0000000115eb1ecf
  0x0000000115eb1ebd: sub    $0x8,%rsp
  0x0000000115eb1ec1: callq  0x000000010dae6df4
  0x0000000115eb1ec6: add    $0x8,%rsp
  0x0000000115eb1eca: jmpq   0x0000000115eb1ed4
  0x0000000115eb1ecf: callq  0x000000010dae6df4
  0x0000000115eb1ed4: movabs $0x0,%r10
  0x0000000115eb1ede: mov    %r10,0x1d8(%r15)
  0x0000000115eb1ee5: movabs $0x0,%r10
  0x0000000115eb1eef: mov    %r10,0x1e8(%r15)
  0x0000000115eb1ef6: cmpq   $0x0,0x8(%r15)
  0x0000000115eb1efe: je     0x0000000115eb1f09
  0x0000000115eb1f04: jmpq   0x0000000115e916e0
  0x0000000115eb1f09: mov    -0x38(%rbp),%r13
  0x0000000115eb1f0d: mov    -0x30(%rbp),%r14
  0x0000000115eb1f11: retq   
  0x0000000115eb1f12: pop    %rbx
  0x0000000115eb1f13: mov    -0x18(%rbp),%rax
  0x0000000115eb1f17: mov    0x8(%rax),%r13
  0x0000000115eb1f1b: lea    0x30(%r13,%rbx,1),%r13
  0x0000000115eb1f20: movzbl 0x0(%r13),%ebx
  0x0000000115eb1f25: movabs $0x10e101840,%r10
  0x0000000115eb1f2f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb1f33: nopl   0x0(%rax,%rax,1)
  0x0000000115eb1f38: add    %al,(%rax)
  0x0000000115eb1f3a: add    %al,(%rax)
  0x0000000115eb1f3c: add    %al,(%rax)
  0x0000000115eb1f3e: add    %al,(%rax)

----------------------------------------------------------------------
tableswitch  170 tableswitch  [0x0000000115eb1f60, 0x0000000115eb2000]  160 bytes

  0x0000000115eb1f60: mov    (%rsp),%eax
  0x0000000115eb1f63: add    $0x8,%rsp
  0x0000000115eb1f67: lea    0x4(%r13),%rbx
  0x0000000115eb1f6b: and    $0xfffffffffffffffc,%rbx
  0x0000000115eb1f6f: mov    0x4(%rbx),%ecx
  0x0000000115eb1f72: mov    0x8(%rbx),%edx
  0x0000000115eb1f75: bswap  %ecx
  0x0000000115eb1f77: bswap  %edx
  0x0000000115eb1f79: cmp    %ecx,%eax
  0x0000000115eb1f7b: jl     0x0000000115eb1fd8
  0x0000000115eb1f81: cmp    %edx,%eax
  0x0000000115eb1f83: jg     0x0000000115eb1fd8
  0x0000000115eb1f89: sub    %ecx,%eax
  0x0000000115eb1f8b: mov    0xc(%rbx,%rax,4),%edx
  0x0000000115eb1f8f: mov    -0x20(%rbp),%rbx
  0x0000000115eb1f93: test   %rbx,%rbx
  0x0000000115eb1f96: je     0x0000000115eb1fbc
  0x0000000115eb1f9c: mov    $0x10,%ecx
  0x0000000115eb1fa1: imul   %rcx,%rax
  0x0000000115eb1fa5: add    $0x20,%rax
  0x0000000115eb1fa9: addq   $0x1,(%rbx,%rax,1)
  0x0000000115eb1fae: sbbq   $0x0,(%rbx,%rax,1)
  0x0000000115eb1fb3: add    0x8(%rbx,%rax,1),%rbx
  0x0000000115eb1fb8: mov    %rbx,-0x20(%rbp)
  0x0000000115eb1fbc: bswap  %edx
  0x0000000115eb1fbe: movslq %edx,%rdx
  0x0000000115eb1fc1: movzbl 0x0(%r13,%rdx,1),%ebx
  0x0000000115eb1fc7: add    %rdx,%r13
  0x0000000115eb1fca: movabs $0x10e101840,%r10
  0x0000000115eb1fd4: jmpq   *(%r10,%rbx,8)
  0x0000000115eb1fd8: mov    -0x20(%rbp),%rax
  0x0000000115eb1fdc: test   %rax,%rax
  0x0000000115eb1fdf: je     0x0000000115eb1ff7
  0x0000000115eb1fe5: addq   $0x1,0x10(%rax)
  0x0000000115eb1fea: sbbq   $0x0,0x10(%rax)
  0x0000000115eb1fef: add    0x18(%rax),%rax
  0x0000000115eb1ff3: mov    %rax,-0x20(%rbp)
  0x0000000115eb1ff7: mov    (%rbx),%edx
  0x0000000115eb1ff9: jmp    0x0000000115eb1fbc
  0x0000000115eb1ffb: nopl   0x0(%rax,%rax,1)

----------------------------------------------------------------------
lookupswitch  171 lookupswitch  [0x0000000115eb2020, 0x0000000115eb20a0]  128 bytes

  0x0000000115eb2020: mov    (%rsp),%eax
  0x0000000115eb2023: add    $0x8,%rsp
  0x0000000115eb2027: mov    %rsp,-0x28(%rsp)
  0x0000000115eb202c: sub    $0x80,%rsp
  0x0000000115eb2033: mov    %rax,0x78(%rsp)
  0x0000000115eb2038: mov    %rcx,0x70(%rsp)
  0x0000000115eb203d: mov    %rdx,0x68(%rsp)
  0x0000000115eb2042: mov    %rbx,0x60(%rsp)
  0x0000000115eb2047: mov    %rbp,0x50(%rsp)
  0x0000000115eb204c: mov    %rsi,0x48(%rsp)
  0x0000000115eb2051: mov    %rdi,0x40(%rsp)
  0x0000000115eb2056: mov    %r8,0x38(%rsp)
  0x0000000115eb205b: mov    %r9,0x30(%rsp)
  0x0000000115eb2060: mov    %r10,0x28(%rsp)
  0x0000000115eb2065: mov    %r11,0x20(%rsp)
  0x0000000115eb206a: mov    %r12,0x18(%rsp)
  0x0000000115eb206f: mov    %r13,0x10(%rsp)
  0x0000000115eb2074: mov    %r14,0x8(%rsp)
  0x0000000115eb2079: mov    %r15,(%rsp)
  0x0000000115eb207d: movabs $0x10de19843,%rdi
  0x0000000115eb2087: movabs $0x115eb2027,%rsi
  0x0000000115eb2091: mov    %rsp,%rdx
  0x0000000115eb2094: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb2098: callq  0x000000010dc0341e
  0x0000000115eb209d: hlt    
  0x0000000115eb209e: xchg   %ax,%ax

----------------------------------------------------------------------
ireturn  172 ireturn  [0x0000000115eb20c0, 0x0000000115eb24a0]  992 bytes

  0x0000000115eb20c0: mov    (%rsp),%eax
  0x0000000115eb20c3: add    $0x8,%rsp
  0x0000000115eb20c7: mov    -0x18(%rbp),%rcx
  0x0000000115eb20cb: mov    0x8(%rcx),%rcx
  0x0000000115eb20cf: movzbl 0x1e(%rcx),%ecx
  0x0000000115eb20d3: cmp    $0xa,%ecx
  0x0000000115eb20d6: je     0x0000000115eb2112
  0x0000000115eb20dc: cmp    $0x4,%ecx
  0x0000000115eb20df: jne    0x0000000115eb20ed
  0x0000000115eb20e5: and    $0x1,%eax
  0x0000000115eb20e8: jmpq   0x0000000115eb2112
  0x0000000115eb20ed: cmp    $0x8,%ecx
  0x0000000115eb20f0: jne    0x0000000115eb20fe
  0x0000000115eb20f6: movsbl %al,%eax
  0x0000000115eb20f9: jmpq   0x0000000115eb2112
  0x0000000115eb20fe: cmp    $0x5,%ecx
  0x0000000115eb2101: jne    0x0000000115eb210f
  0x0000000115eb2107: movzwl %ax,%eax
  0x0000000115eb210a: jmpq   0x0000000115eb2112
  0x0000000115eb210f: movswl %ax,%eax
  0x0000000115eb2112: mov    0x295(%r15),%dl
  0x0000000115eb2119: movb   $0x0,0x295(%r15)
  0x0000000115eb2121: mov    -0x18(%rbp),%rbx
  0x0000000115eb2125: mov    0x20(%rbx),%ecx
  0x0000000115eb2128: test   $0x20,%ecx
  0x0000000115eb212e: je     0x0000000115eb2321
  0x0000000115eb2134: test   $0xff,%dl
  0x0000000115eb2137: jne    0x0000000115eb2441
  0x0000000115eb213d: push   %rax
  0x0000000115eb213e: lea    -0x50(%rbp),%rsi
  0x0000000115eb2142: mov    0x8(%rsi),%rax
  0x0000000115eb2146: test   %rax,%rax
  0x0000000115eb2149: jne    0x0000000115eb2252
  0x0000000115eb214f: mov    (%rsp),%eax
  0x0000000115eb2152: add    $0x8,%rsp
  0x0000000115eb2156: callq  0x0000000115eb2160
  0x0000000115eb215b: jmpq   0x0000000115eb21db
  0x0000000115eb2160: lea    0x8(%rsp),%rax
  0x0000000115eb2165: mov    %r13,-0x38(%rbp)
  0x0000000115eb2169: mov    %r15,%rdi
  0x0000000115eb216c: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2173: mov    %rax,0x1d8(%r15)
  0x0000000115eb217a: test   $0xf,%esp
  0x0000000115eb2180: je     0x0000000115eb2198
  0x0000000115eb2186: sub    $0x8,%rsp
  0x0000000115eb218a: callq  0x000000010dae850c
  0x0000000115eb218f: add    $0x8,%rsp
  0x0000000115eb2193: jmpq   0x0000000115eb219d
  0x0000000115eb2198: callq  0x000000010dae850c
  0x0000000115eb219d: movabs $0x0,%r10
  0x0000000115eb21a7: mov    %r10,0x1d8(%r15)
  0x0000000115eb21ae: movabs $0x0,%r10
  0x0000000115eb21b8: mov    %r10,0x1e8(%r15)
  0x0000000115eb21bf: cmpq   $0x0,0x8(%r15)
  0x0000000115eb21c7: je     0x0000000115eb21d2
  0x0000000115eb21cd: jmpq   0x0000000115e916e0
  0x0000000115eb21d2: mov    -0x38(%rbp),%r13
  0x0000000115eb21d6: mov    -0x30(%rbp),%r14
  0x0000000115eb21da: retq   
  0x0000000115eb21db: mov    %rsp,-0x28(%rsp)
  0x0000000115eb21e0: sub    $0x80,%rsp
  0x0000000115eb21e7: mov    %rax,0x78(%rsp)
  0x0000000115eb21ec: mov    %rcx,0x70(%rsp)
  0x0000000115eb21f1: mov    %rdx,0x68(%rsp)
  0x0000000115eb21f6: mov    %rbx,0x60(%rsp)
  0x0000000115eb21fb: mov    %rbp,0x50(%rsp)
  0x0000000115eb2200: mov    %rsi,0x48(%rsp)
  0x0000000115eb2205: mov    %rdi,0x40(%rsp)
  0x0000000115eb220a: mov    %r8,0x38(%rsp)
  0x0000000115eb220f: mov    %r9,0x30(%rsp)
  0x0000000115eb2214: mov    %r10,0x28(%rsp)
  0x0000000115eb2219: mov    %r11,0x20(%rsp)
  0x0000000115eb221e: mov    %r12,0x18(%rsp)
  0x0000000115eb2223: mov    %r13,0x10(%rsp)
  0x0000000115eb2228: mov    %r14,0x8(%rsp)
  0x0000000115eb222d: mov    %r15,(%rsp)
  0x0000000115eb2231: movabs $0x10ddd8000,%rdi
  0x0000000115eb223b: movabs $0x115eb21db,%rsi
  0x0000000115eb2245: mov    %rsp,%rdx
  0x0000000115eb2248: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb224c: callq  0x000000010dc0341e
  0x0000000115eb2251: hlt    
  0x0000000115eb2252: mov    %r13,-0x38(%rbp)
  0x0000000115eb2256: lea    (%rsi),%rax
  0x0000000115eb2259: mov    0x8(%rsi),%rcx
  0x0000000115eb225d: movq   $0x0,0x8(%rsi)
  0x0000000115eb2265: mov    (%rcx),%rdx
  0x0000000115eb2268: and    $0x7,%rdx
  0x0000000115eb226c: cmp    $0x5,%rdx
  0x0000000115eb2270: je     0x0000000115eb2316
  0x0000000115eb2276: mov    (%rax),%rdx
  0x0000000115eb2279: test   %rdx,%rdx
  0x0000000115eb227c: je     0x0000000115eb2316
  0x0000000115eb2282: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb2287: je     0x0000000115eb2316
  0x0000000115eb228d: mov    %rcx,0x8(%rsi)
  0x0000000115eb2291: callq  0x0000000115eb229b
  0x0000000115eb2296: jmpq   0x0000000115eb2316
  0x0000000115eb229b: lea    0x8(%rsp),%rax
  0x0000000115eb22a0: mov    %r13,-0x38(%rbp)
  0x0000000115eb22a4: mov    %r15,%rdi
  0x0000000115eb22a7: mov    %rbp,0x1e8(%r15)
  0x0000000115eb22ae: mov    %rax,0x1d8(%r15)
  0x0000000115eb22b5: test   $0xf,%esp
  0x0000000115eb22bb: je     0x0000000115eb22d3
  0x0000000115eb22c1: sub    $0x8,%rsp
  0x0000000115eb22c5: callq  0x000000010dae8608
  0x0000000115eb22ca: add    $0x8,%rsp
  0x0000000115eb22ce: jmpq   0x0000000115eb22d8
  0x0000000115eb22d3: callq  0x000000010dae8608
  0x0000000115eb22d8: movabs $0x0,%r10
  0x0000000115eb22e2: mov    %r10,0x1d8(%r15)
  0x0000000115eb22e9: movabs $0x0,%r10
  0x0000000115eb22f3: mov    %r10,0x1e8(%r15)
  0x0000000115eb22fa: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2302: je     0x0000000115eb230d
  0x0000000115eb2308: jmpq   0x0000000115e916e0
  0x0000000115eb230d: mov    -0x38(%rbp),%r13
  0x0000000115eb2311: mov    -0x30(%rbp),%r14
  0x0000000115eb2315: retq   
  0x0000000115eb2316: mov    -0x38(%rbp),%r13
  0x0000000115eb231a: mov    (%rsp),%eax
  0x0000000115eb231d: add    $0x8,%rsp
  0x0000000115eb2321: mov    -0x40(%rbp),%rsi
  0x0000000115eb2325: lea    -0x40(%rbp),%rbx
  0x0000000115eb2329: jmpq   0x0000000115eb243c
  0x0000000115eb232e: callq  0x0000000115eb2338
  0x0000000115eb2333: jmpq   0x0000000115eb23b3
  0x0000000115eb2338: lea    0x8(%rsp),%rax
  0x0000000115eb233d: mov    %r13,-0x38(%rbp)
  0x0000000115eb2341: mov    %r15,%rdi
  0x0000000115eb2344: mov    %rbp,0x1e8(%r15)
  0x0000000115eb234b: mov    %rax,0x1d8(%r15)
  0x0000000115eb2352: test   $0xf,%esp
  0x0000000115eb2358: je     0x0000000115eb2370
  0x0000000115eb235e: sub    $0x8,%rsp
  0x0000000115eb2362: callq  0x000000010dae850c
  0x0000000115eb2367: add    $0x8,%rsp
  0x0000000115eb236b: jmpq   0x0000000115eb2375
  0x0000000115eb2370: callq  0x000000010dae850c
  0x0000000115eb2375: movabs $0x0,%r10
  0x0000000115eb237f: mov    %r10,0x1d8(%r15)
  0x0000000115eb2386: movabs $0x0,%r10
  0x0000000115eb2390: mov    %r10,0x1e8(%r15)
  0x0000000115eb2397: cmpq   $0x0,0x8(%r15)
  0x0000000115eb239f: je     0x0000000115eb23aa
  0x0000000115eb23a5: jmpq   0x0000000115e916e0
  0x0000000115eb23aa: mov    -0x38(%rbp),%r13
  0x0000000115eb23ae: mov    -0x30(%rbp),%r14
  0x0000000115eb23b2: retq   
  0x0000000115eb23b3: mov    %rsp,-0x28(%rsp)
  0x0000000115eb23b8: sub    $0x80,%rsp
  0x0000000115eb23bf: mov    %rax,0x78(%rsp)
  0x0000000115eb23c4: mov    %rcx,0x70(%rsp)
  0x0000000115eb23c9: mov    %rdx,0x68(%rsp)
  0x0000000115eb23ce: mov    %rbx,0x60(%rsp)
  0x0000000115eb23d3: mov    %rbp,0x50(%rsp)
  0x0000000115eb23d8: mov    %rsi,0x48(%rsp)
  0x0000000115eb23dd: mov    %rdi,0x40(%rsp)
  0x0000000115eb23e2: mov    %r8,0x38(%rsp)
  0x0000000115eb23e7: mov    %r9,0x30(%rsp)
  0x0000000115eb23ec: mov    %r10,0x28(%rsp)
  0x0000000115eb23f1: mov    %r11,0x20(%rsp)
  0x0000000115eb23f6: mov    %r12,0x18(%rsp)
  0x0000000115eb23fb: mov    %r13,0x10(%rsp)
  0x0000000115eb2400: mov    %r14,0x8(%rsp)
  0x0000000115eb2405: mov    %r15,(%rsp)
  0x0000000115eb2409: movabs $0x10ddd8000,%rdi
  0x0000000115eb2413: movabs $0x115eb23b3,%rsi
  0x0000000115eb241d: mov    %rsp,%rdx
  0x0000000115eb2420: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb2424: callq  0x000000010dc0341e
  0x0000000115eb2429: hlt    
  0x0000000115eb242a: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb2432: jne    0x0000000115eb232e
  0x0000000115eb2438: add    $0x10,%rsi
  0x0000000115eb243c: cmp    %rbx,%rsi
  0x0000000115eb243f: jne    0x0000000115eb242a
  0x0000000115eb2441: cmpb   $0x0,-0x7dcb17e(%rip)        # 0x000000010e0e72ca
  0x0000000115eb2448: je     0x0000000115eb2480
  0x0000000115eb244e: push   %rax
  0x0000000115eb244f: mov    -0x18(%rbp),%rsi
  0x0000000115eb2453: mov    %r15,%rdi
  0x0000000115eb2456: test   $0xf,%esp
  0x0000000115eb245c: je     0x0000000115eb2474
  0x0000000115eb2462: sub    $0x8,%rsp
  0x0000000115eb2466: callq  0x000000010dce7696
  0x0000000115eb246b: add    $0x8,%rsp
  0x0000000115eb246f: jmpq   0x0000000115eb2479
  0x0000000115eb2474: callq  0x000000010dce7696
  0x0000000115eb2479: mov    (%rsp),%eax
  0x0000000115eb247c: add    $0x8,%rsp
  0x0000000115eb2480: mov    -0x8(%rbp),%rbx
  0x0000000115eb2484: leaveq 
  0x0000000115eb2485: pop    %r13
  0x0000000115eb2487: mov    %rbx,%rsp
  0x0000000115eb248a: jmpq   *%r13
  0x0000000115eb248d: data32 xchg %ax,%ax
  0x0000000115eb2490: add    %al,(%rax)
  0x0000000115eb2492: add    %al,(%rax)
  0x0000000115eb2494: add    %al,(%rax)
  0x0000000115eb2496: add    %al,(%rax)
  0x0000000115eb2498: add    %al,(%rax)
  0x0000000115eb249a: add    %al,(%rax)
  0x0000000115eb249c: add    %al,(%rax)
  0x0000000115eb249e: add    %al,(%rax)

----------------------------------------------------------------------
lreturn  173 lreturn  [0x0000000115eb24c0, 0x0000000115eb2860]  928 bytes

  0x0000000115eb24c0: mov    (%rsp),%rax
  0x0000000115eb24c4: add    $0x10,%rsp
  0x0000000115eb24c8: mov    0x295(%r15),%dl
  0x0000000115eb24cf: movb   $0x0,0x295(%r15)
  0x0000000115eb24d7: mov    -0x18(%rbp),%rbx
  0x0000000115eb24db: mov    0x20(%rbx),%ecx
  0x0000000115eb24de: test   $0x20,%ecx
  0x0000000115eb24e4: je     0x0000000115eb26e0
  0x0000000115eb24ea: test   $0xff,%dl
  0x0000000115eb24ed: jne    0x0000000115eb2800
  0x0000000115eb24f3: sub    $0x10,%rsp
  0x0000000115eb24f7: mov    %rax,(%rsp)
  0x0000000115eb24fb: lea    -0x50(%rbp),%rsi
  0x0000000115eb24ff: mov    0x8(%rsi),%rax
  0x0000000115eb2503: test   %rax,%rax
  0x0000000115eb2506: jne    0x0000000115eb2610
  0x0000000115eb250c: mov    (%rsp),%rax
  0x0000000115eb2510: add    $0x10,%rsp
  0x0000000115eb2514: callq  0x0000000115eb251e
  0x0000000115eb2519: jmpq   0x0000000115eb2599
  0x0000000115eb251e: lea    0x8(%rsp),%rax
  0x0000000115eb2523: mov    %r13,-0x38(%rbp)
  0x0000000115eb2527: mov    %r15,%rdi
  0x0000000115eb252a: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2531: mov    %rax,0x1d8(%r15)
  0x0000000115eb2538: test   $0xf,%esp
  0x0000000115eb253e: je     0x0000000115eb2556
  0x0000000115eb2544: sub    $0x8,%rsp
  0x0000000115eb2548: callq  0x000000010dae850c
  0x0000000115eb254d: add    $0x8,%rsp
  0x0000000115eb2551: jmpq   0x0000000115eb255b
  0x0000000115eb2556: callq  0x000000010dae850c
  0x0000000115eb255b: movabs $0x0,%r10
  0x0000000115eb2565: mov    %r10,0x1d8(%r15)
  0x0000000115eb256c: movabs $0x0,%r10
  0x0000000115eb2576: mov    %r10,0x1e8(%r15)
  0x0000000115eb257d: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2585: je     0x0000000115eb2590
  0x0000000115eb258b: jmpq   0x0000000115e916e0
  0x0000000115eb2590: mov    -0x38(%rbp),%r13
  0x0000000115eb2594: mov    -0x30(%rbp),%r14
  0x0000000115eb2598: retq   
  0x0000000115eb2599: mov    %rsp,-0x28(%rsp)
  0x0000000115eb259e: sub    $0x80,%rsp
  0x0000000115eb25a5: mov    %rax,0x78(%rsp)
  0x0000000115eb25aa: mov    %rcx,0x70(%rsp)
  0x0000000115eb25af: mov    %rdx,0x68(%rsp)
  0x0000000115eb25b4: mov    %rbx,0x60(%rsp)
  0x0000000115eb25b9: mov    %rbp,0x50(%rsp)
  0x0000000115eb25be: mov    %rsi,0x48(%rsp)
  0x0000000115eb25c3: mov    %rdi,0x40(%rsp)
  0x0000000115eb25c8: mov    %r8,0x38(%rsp)
  0x0000000115eb25cd: mov    %r9,0x30(%rsp)
  0x0000000115eb25d2: mov    %r10,0x28(%rsp)
  0x0000000115eb25d7: mov    %r11,0x20(%rsp)
  0x0000000115eb25dc: mov    %r12,0x18(%rsp)
  0x0000000115eb25e1: mov    %r13,0x10(%rsp)
  0x0000000115eb25e6: mov    %r14,0x8(%rsp)
  0x0000000115eb25eb: mov    %r15,(%rsp)
  0x0000000115eb25ef: movabs $0x10ddd8000,%rdi
  0x0000000115eb25f9: movabs $0x115eb2599,%rsi
  0x0000000115eb2603: mov    %rsp,%rdx
  0x0000000115eb2606: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb260a: callq  0x000000010dc0341e
  0x0000000115eb260f: hlt    
  0x0000000115eb2610: mov    %r13,-0x38(%rbp)
  0x0000000115eb2614: lea    (%rsi),%rax
  0x0000000115eb2617: mov    0x8(%rsi),%rcx
  0x0000000115eb261b: movq   $0x0,0x8(%rsi)
  0x0000000115eb2623: mov    (%rcx),%rdx
  0x0000000115eb2626: and    $0x7,%rdx
  0x0000000115eb262a: cmp    $0x5,%rdx
  0x0000000115eb262e: je     0x0000000115eb26d4
  0x0000000115eb2634: mov    (%rax),%rdx
  0x0000000115eb2637: test   %rdx,%rdx
  0x0000000115eb263a: je     0x0000000115eb26d4
  0x0000000115eb2640: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb2645: je     0x0000000115eb26d4
  0x0000000115eb264b: mov    %rcx,0x8(%rsi)
  0x0000000115eb264f: callq  0x0000000115eb2659
  0x0000000115eb2654: jmpq   0x0000000115eb26d4
  0x0000000115eb2659: lea    0x8(%rsp),%rax
  0x0000000115eb265e: mov    %r13,-0x38(%rbp)
  0x0000000115eb2662: mov    %r15,%rdi
  0x0000000115eb2665: mov    %rbp,0x1e8(%r15)
  0x0000000115eb266c: mov    %rax,0x1d8(%r15)
  0x0000000115eb2673: test   $0xf,%esp
  0x0000000115eb2679: je     0x0000000115eb2691
  0x0000000115eb267f: sub    $0x8,%rsp
  0x0000000115eb2683: callq  0x000000010dae8608
  0x0000000115eb2688: add    $0x8,%rsp
  0x0000000115eb268c: jmpq   0x0000000115eb2696
  0x0000000115eb2691: callq  0x000000010dae8608
  0x0000000115eb2696: movabs $0x0,%r10
  0x0000000115eb26a0: mov    %r10,0x1d8(%r15)
  0x0000000115eb26a7: movabs $0x0,%r10
  0x0000000115eb26b1: mov    %r10,0x1e8(%r15)
  0x0000000115eb26b8: cmpq   $0x0,0x8(%r15)
  0x0000000115eb26c0: je     0x0000000115eb26cb
  0x0000000115eb26c6: jmpq   0x0000000115e916e0
  0x0000000115eb26cb: mov    -0x38(%rbp),%r13
  0x0000000115eb26cf: mov    -0x30(%rbp),%r14
  0x0000000115eb26d3: retq   
  0x0000000115eb26d4: mov    -0x38(%rbp),%r13
  0x0000000115eb26d8: mov    (%rsp),%rax
  0x0000000115eb26dc: add    $0x10,%rsp
  0x0000000115eb26e0: mov    -0x40(%rbp),%rsi
  0x0000000115eb26e4: lea    -0x40(%rbp),%rbx
  0x0000000115eb26e8: jmpq   0x0000000115eb27fb
  0x0000000115eb26ed: callq  0x0000000115eb26f7
  0x0000000115eb26f2: jmpq   0x0000000115eb2772
  0x0000000115eb26f7: lea    0x8(%rsp),%rax
  0x0000000115eb26fc: mov    %r13,-0x38(%rbp)
  0x0000000115eb2700: mov    %r15,%rdi
  0x0000000115eb2703: mov    %rbp,0x1e8(%r15)
  0x0000000115eb270a: mov    %rax,0x1d8(%r15)
  0x0000000115eb2711: test   $0xf,%esp
  0x0000000115eb2717: je     0x0000000115eb272f
  0x0000000115eb271d: sub    $0x8,%rsp
  0x0000000115eb2721: callq  0x000000010dae850c
  0x0000000115eb2726: add    $0x8,%rsp
  0x0000000115eb272a: jmpq   0x0000000115eb2734
  0x0000000115eb272f: callq  0x000000010dae850c
  0x0000000115eb2734: movabs $0x0,%r10
  0x0000000115eb273e: mov    %r10,0x1d8(%r15)
  0x0000000115eb2745: movabs $0x0,%r10
  0x0000000115eb274f: mov    %r10,0x1e8(%r15)
  0x0000000115eb2756: cmpq   $0x0,0x8(%r15)
  0x0000000115eb275e: je     0x0000000115eb2769
  0x0000000115eb2764: jmpq   0x0000000115e916e0
  0x0000000115eb2769: mov    -0x38(%rbp),%r13
  0x0000000115eb276d: mov    -0x30(%rbp),%r14
  0x0000000115eb2771: retq   
  0x0000000115eb2772: mov    %rsp,-0x28(%rsp)
  0x0000000115eb2777: sub    $0x80,%rsp
  0x0000000115eb277e: mov    %rax,0x78(%rsp)
  0x0000000115eb2783: mov    %rcx,0x70(%rsp)
  0x0000000115eb2788: mov    %rdx,0x68(%rsp)
  0x0000000115eb278d: mov    %rbx,0x60(%rsp)
  0x0000000115eb2792: mov    %rbp,0x50(%rsp)
  0x0000000115eb2797: mov    %rsi,0x48(%rsp)
  0x0000000115eb279c: mov    %rdi,0x40(%rsp)
  0x0000000115eb27a1: mov    %r8,0x38(%rsp)
  0x0000000115eb27a6: mov    %r9,0x30(%rsp)
  0x0000000115eb27ab: mov    %r10,0x28(%rsp)
  0x0000000115eb27b0: mov    %r11,0x20(%rsp)
  0x0000000115eb27b5: mov    %r12,0x18(%rsp)
  0x0000000115eb27ba: mov    %r13,0x10(%rsp)
  0x0000000115eb27bf: mov    %r14,0x8(%rsp)
  0x0000000115eb27c4: mov    %r15,(%rsp)
  0x0000000115eb27c8: movabs $0x10ddd8000,%rdi
  0x0000000115eb27d2: movabs $0x115eb2772,%rsi
  0x0000000115eb27dc: mov    %rsp,%rdx
  0x0000000115eb27df: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb27e3: callq  0x000000010dc0341e
  0x0000000115eb27e8: hlt    
  0x0000000115eb27e9: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb27f1: jne    0x0000000115eb26ed
  0x0000000115eb27f7: add    $0x10,%rsi
  0x0000000115eb27fb: cmp    %rbx,%rsi
  0x0000000115eb27fe: jne    0x0000000115eb27e9
  0x0000000115eb2800: cmpb   $0x0,-0x7dcb53d(%rip)        # 0x000000010e0e72ca
  0x0000000115eb2807: je     0x0000000115eb2847
  0x0000000115eb280d: sub    $0x10,%rsp
  0x0000000115eb2811: mov    %rax,(%rsp)
  0x0000000115eb2815: mov    -0x18(%rbp),%rsi
  0x0000000115eb2819: mov    %r15,%rdi
  0x0000000115eb281c: test   $0xf,%esp
  0x0000000115eb2822: je     0x0000000115eb283a
  0x0000000115eb2828: sub    $0x8,%rsp
  0x0000000115eb282c: callq  0x000000010dce7696
  0x0000000115eb2831: add    $0x8,%rsp
  0x0000000115eb2835: jmpq   0x0000000115eb283f
  0x0000000115eb283a: callq  0x000000010dce7696
  0x0000000115eb283f: mov    (%rsp),%rax
  0x0000000115eb2843: add    $0x10,%rsp
  0x0000000115eb2847: mov    -0x8(%rbp),%rbx
  0x0000000115eb284b: leaveq 
  0x0000000115eb284c: pop    %r13
  0x0000000115eb284e: mov    %rbx,%rsp
  0x0000000115eb2851: jmpq   *%r13
  0x0000000115eb2854: nopl   0x0(%rax)
  0x0000000115eb2858: add    %al,(%rax)
  0x0000000115eb285a: add    %al,(%rax)
  0x0000000115eb285c: add    %al,(%rax)
  0x0000000115eb285e: add    %al,(%rax)

----------------------------------------------------------------------
freturn  174 freturn  [0x0000000115eb2880, 0x0000000115eb2c20]  928 bytes

  0x0000000115eb2880: vmovss (%rsp),%xmm0
  0x0000000115eb2885: add    $0x8,%rsp
  0x0000000115eb2889: mov    0x295(%r15),%dl
  0x0000000115eb2890: movb   $0x0,0x295(%r15)
  0x0000000115eb2898: mov    -0x18(%rbp),%rbx
  0x0000000115eb289c: mov    0x20(%rbx),%ecx
  0x0000000115eb289f: test   $0x20,%ecx
  0x0000000115eb28a5: je     0x0000000115eb2aa4
  0x0000000115eb28ab: test   $0xff,%dl
  0x0000000115eb28ae: jne    0x0000000115eb2bc4
  0x0000000115eb28b4: sub    $0x8,%rsp
  0x0000000115eb28b8: vmovss %xmm0,(%rsp)
  0x0000000115eb28bd: lea    -0x50(%rbp),%rsi
  0x0000000115eb28c1: mov    0x8(%rsi),%rax
  0x0000000115eb28c5: test   %rax,%rax
  0x0000000115eb28c8: jne    0x0000000115eb29d3
  0x0000000115eb28ce: vmovss (%rsp),%xmm0
  0x0000000115eb28d3: add    $0x8,%rsp
  0x0000000115eb28d7: callq  0x0000000115eb28e1
  0x0000000115eb28dc: jmpq   0x0000000115eb295c
  0x0000000115eb28e1: lea    0x8(%rsp),%rax
  0x0000000115eb28e6: mov    %r13,-0x38(%rbp)
  0x0000000115eb28ea: mov    %r15,%rdi
  0x0000000115eb28ed: mov    %rbp,0x1e8(%r15)
  0x0000000115eb28f4: mov    %rax,0x1d8(%r15)
  0x0000000115eb28fb: test   $0xf,%esp
  0x0000000115eb2901: je     0x0000000115eb2919
  0x0000000115eb2907: sub    $0x8,%rsp
  0x0000000115eb290b: callq  0x000000010dae850c
  0x0000000115eb2910: add    $0x8,%rsp
  0x0000000115eb2914: jmpq   0x0000000115eb291e
  0x0000000115eb2919: callq  0x000000010dae850c
  0x0000000115eb291e: movabs $0x0,%r10
  0x0000000115eb2928: mov    %r10,0x1d8(%r15)
  0x0000000115eb292f: movabs $0x0,%r10
  0x0000000115eb2939: mov    %r10,0x1e8(%r15)
  0x0000000115eb2940: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2948: je     0x0000000115eb2953
  0x0000000115eb294e: jmpq   0x0000000115e916e0
  0x0000000115eb2953: mov    -0x38(%rbp),%r13
  0x0000000115eb2957: mov    -0x30(%rbp),%r14
  0x0000000115eb295b: retq   
  0x0000000115eb295c: mov    %rsp,-0x28(%rsp)
  0x0000000115eb2961: sub    $0x80,%rsp
  0x0000000115eb2968: mov    %rax,0x78(%rsp)
  0x0000000115eb296d: mov    %rcx,0x70(%rsp)
  0x0000000115eb2972: mov    %rdx,0x68(%rsp)
  0x0000000115eb2977: mov    %rbx,0x60(%rsp)
  0x0000000115eb297c: mov    %rbp,0x50(%rsp)
  0x0000000115eb2981: mov    %rsi,0x48(%rsp)
  0x0000000115eb2986: mov    %rdi,0x40(%rsp)
  0x0000000115eb298b: mov    %r8,0x38(%rsp)
  0x0000000115eb2990: mov    %r9,0x30(%rsp)
  0x0000000115eb2995: mov    %r10,0x28(%rsp)
  0x0000000115eb299a: mov    %r11,0x20(%rsp)
  0x0000000115eb299f: mov    %r12,0x18(%rsp)
  0x0000000115eb29a4: mov    %r13,0x10(%rsp)
  0x0000000115eb29a9: mov    %r14,0x8(%rsp)
  0x0000000115eb29ae: mov    %r15,(%rsp)
  0x0000000115eb29b2: movabs $0x10ddd8000,%rdi
  0x0000000115eb29bc: movabs $0x115eb295c,%rsi
  0x0000000115eb29c6: mov    %rsp,%rdx
  0x0000000115eb29c9: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb29cd: callq  0x000000010dc0341e
  0x0000000115eb29d2: hlt    
  0x0000000115eb29d3: mov    %r13,-0x38(%rbp)
  0x0000000115eb29d7: lea    (%rsi),%rax
  0x0000000115eb29da: mov    0x8(%rsi),%rcx
  0x0000000115eb29de: movq   $0x0,0x8(%rsi)
  0x0000000115eb29e6: mov    (%rcx),%rdx
  0x0000000115eb29e9: and    $0x7,%rdx
  0x0000000115eb29ed: cmp    $0x5,%rdx
  0x0000000115eb29f1: je     0x0000000115eb2a97
  0x0000000115eb29f7: mov    (%rax),%rdx
  0x0000000115eb29fa: test   %rdx,%rdx
  0x0000000115eb29fd: je     0x0000000115eb2a97
  0x0000000115eb2a03: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb2a08: je     0x0000000115eb2a97
  0x0000000115eb2a0e: mov    %rcx,0x8(%rsi)
  0x0000000115eb2a12: callq  0x0000000115eb2a1c
  0x0000000115eb2a17: jmpq   0x0000000115eb2a97
  0x0000000115eb2a1c: lea    0x8(%rsp),%rax
  0x0000000115eb2a21: mov    %r13,-0x38(%rbp)
  0x0000000115eb2a25: mov    %r15,%rdi
  0x0000000115eb2a28: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2a2f: mov    %rax,0x1d8(%r15)
  0x0000000115eb2a36: test   $0xf,%esp
  0x0000000115eb2a3c: je     0x0000000115eb2a54
  0x0000000115eb2a42: sub    $0x8,%rsp
  0x0000000115eb2a46: callq  0x000000010dae8608
  0x0000000115eb2a4b: add    $0x8,%rsp
  0x0000000115eb2a4f: jmpq   0x0000000115eb2a59
  0x0000000115eb2a54: callq  0x000000010dae8608
  0x0000000115eb2a59: movabs $0x0,%r10
  0x0000000115eb2a63: mov    %r10,0x1d8(%r15)
  0x0000000115eb2a6a: movabs $0x0,%r10
  0x0000000115eb2a74: mov    %r10,0x1e8(%r15)
  0x0000000115eb2a7b: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2a83: je     0x0000000115eb2a8e
  0x0000000115eb2a89: jmpq   0x0000000115e916e0
  0x0000000115eb2a8e: mov    -0x38(%rbp),%r13
  0x0000000115eb2a92: mov    -0x30(%rbp),%r14
  0x0000000115eb2a96: retq   
  0x0000000115eb2a97: mov    -0x38(%rbp),%r13
  0x0000000115eb2a9b: vmovss (%rsp),%xmm0
  0x0000000115eb2aa0: add    $0x8,%rsp
  0x0000000115eb2aa4: mov    -0x40(%rbp),%rsi
  0x0000000115eb2aa8: lea    -0x40(%rbp),%rbx
  0x0000000115eb2aac: jmpq   0x0000000115eb2bbf
  0x0000000115eb2ab1: callq  0x0000000115eb2abb
  0x0000000115eb2ab6: jmpq   0x0000000115eb2b36
  0x0000000115eb2abb: lea    0x8(%rsp),%rax
  0x0000000115eb2ac0: mov    %r13,-0x38(%rbp)
  0x0000000115eb2ac4: mov    %r15,%rdi
  0x0000000115eb2ac7: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2ace: mov    %rax,0x1d8(%r15)
  0x0000000115eb2ad5: test   $0xf,%esp
  0x0000000115eb2adb: je     0x0000000115eb2af3
  0x0000000115eb2ae1: sub    $0x8,%rsp
  0x0000000115eb2ae5: callq  0x000000010dae850c
  0x0000000115eb2aea: add    $0x8,%rsp
  0x0000000115eb2aee: jmpq   0x0000000115eb2af8
  0x0000000115eb2af3: callq  0x000000010dae850c
  0x0000000115eb2af8: movabs $0x0,%r10
  0x0000000115eb2b02: mov    %r10,0x1d8(%r15)
  0x0000000115eb2b09: movabs $0x0,%r10
  0x0000000115eb2b13: mov    %r10,0x1e8(%r15)
  0x0000000115eb2b1a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2b22: je     0x0000000115eb2b2d
  0x0000000115eb2b28: jmpq   0x0000000115e916e0
  0x0000000115eb2b2d: mov    -0x38(%rbp),%r13
  0x0000000115eb2b31: mov    -0x30(%rbp),%r14
  0x0000000115eb2b35: retq   
  0x0000000115eb2b36: mov    %rsp,-0x28(%rsp)
  0x0000000115eb2b3b: sub    $0x80,%rsp
  0x0000000115eb2b42: mov    %rax,0x78(%rsp)
  0x0000000115eb2b47: mov    %rcx,0x70(%rsp)
  0x0000000115eb2b4c: mov    %rdx,0x68(%rsp)
  0x0000000115eb2b51: mov    %rbx,0x60(%rsp)
  0x0000000115eb2b56: mov    %rbp,0x50(%rsp)
  0x0000000115eb2b5b: mov    %rsi,0x48(%rsp)
  0x0000000115eb2b60: mov    %rdi,0x40(%rsp)
  0x0000000115eb2b65: mov    %r8,0x38(%rsp)
  0x0000000115eb2b6a: mov    %r9,0x30(%rsp)
  0x0000000115eb2b6f: mov    %r10,0x28(%rsp)
  0x0000000115eb2b74: mov    %r11,0x20(%rsp)
  0x0000000115eb2b79: mov    %r12,0x18(%rsp)
  0x0000000115eb2b7e: mov    %r13,0x10(%rsp)
  0x0000000115eb2b83: mov    %r14,0x8(%rsp)
  0x0000000115eb2b88: mov    %r15,(%rsp)
  0x0000000115eb2b8c: movabs $0x10ddd8000,%rdi
  0x0000000115eb2b96: movabs $0x115eb2b36,%rsi
  0x0000000115eb2ba0: mov    %rsp,%rdx
  0x0000000115eb2ba3: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb2ba7: callq  0x000000010dc0341e
  0x0000000115eb2bac: hlt    
  0x0000000115eb2bad: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb2bb5: jne    0x0000000115eb2ab1
  0x0000000115eb2bbb: add    $0x10,%rsi
  0x0000000115eb2bbf: cmp    %rbx,%rsi
  0x0000000115eb2bc2: jne    0x0000000115eb2bad
  0x0000000115eb2bc4: cmpb   $0x0,-0x7dcb901(%rip)        # 0x000000010e0e72ca
  0x0000000115eb2bcb: je     0x0000000115eb2c0d
  0x0000000115eb2bd1: sub    $0x8,%rsp
  0x0000000115eb2bd5: vmovss %xmm0,(%rsp)
  0x0000000115eb2bda: mov    -0x18(%rbp),%rsi
  0x0000000115eb2bde: mov    %r15,%rdi
  0x0000000115eb2be1: test   $0xf,%esp
  0x0000000115eb2be7: je     0x0000000115eb2bff
  0x0000000115eb2bed: sub    $0x8,%rsp
  0x0000000115eb2bf1: callq  0x000000010dce7696
  0x0000000115eb2bf6: add    $0x8,%rsp
  0x0000000115eb2bfa: jmpq   0x0000000115eb2c04
  0x0000000115eb2bff: callq  0x000000010dce7696
  0x0000000115eb2c04: vmovss (%rsp),%xmm0
  0x0000000115eb2c09: add    $0x8,%rsp
  0x0000000115eb2c0d: mov    -0x8(%rbp),%rbx
  0x0000000115eb2c11: leaveq 
  0x0000000115eb2c12: pop    %r13
  0x0000000115eb2c14: mov    %rbx,%rsp
  0x0000000115eb2c17: jmpq   *%r13
  0x0000000115eb2c1a: nopw   0x0(%rax,%rax,1)

----------------------------------------------------------------------
dreturn  175 dreturn  [0x0000000115eb2c40, 0x0000000115eb2fe0]  928 bytes

  0x0000000115eb2c40: vmovsd (%rsp),%xmm0
  0x0000000115eb2c45: add    $0x10,%rsp
  0x0000000115eb2c49: mov    0x295(%r15),%dl
  0x0000000115eb2c50: movb   $0x0,0x295(%r15)
  0x0000000115eb2c58: mov    -0x18(%rbp),%rbx
  0x0000000115eb2c5c: mov    0x20(%rbx),%ecx
  0x0000000115eb2c5f: test   $0x20,%ecx
  0x0000000115eb2c65: je     0x0000000115eb2e64
  0x0000000115eb2c6b: test   $0xff,%dl
  0x0000000115eb2c6e: jne    0x0000000115eb2f84
  0x0000000115eb2c74: sub    $0x10,%rsp
  0x0000000115eb2c78: vmovsd %xmm0,(%rsp)
  0x0000000115eb2c7d: lea    -0x50(%rbp),%rsi
  0x0000000115eb2c81: mov    0x8(%rsi),%rax
  0x0000000115eb2c85: test   %rax,%rax
  0x0000000115eb2c88: jne    0x0000000115eb2d93
  0x0000000115eb2c8e: vmovsd (%rsp),%xmm0
  0x0000000115eb2c93: add    $0x10,%rsp
  0x0000000115eb2c97: callq  0x0000000115eb2ca1
  0x0000000115eb2c9c: jmpq   0x0000000115eb2d1c
  0x0000000115eb2ca1: lea    0x8(%rsp),%rax
  0x0000000115eb2ca6: mov    %r13,-0x38(%rbp)
  0x0000000115eb2caa: mov    %r15,%rdi
  0x0000000115eb2cad: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2cb4: mov    %rax,0x1d8(%r15)
  0x0000000115eb2cbb: test   $0xf,%esp
  0x0000000115eb2cc1: je     0x0000000115eb2cd9
  0x0000000115eb2cc7: sub    $0x8,%rsp
  0x0000000115eb2ccb: callq  0x000000010dae850c
  0x0000000115eb2cd0: add    $0x8,%rsp
  0x0000000115eb2cd4: jmpq   0x0000000115eb2cde
  0x0000000115eb2cd9: callq  0x000000010dae850c
  0x0000000115eb2cde: movabs $0x0,%r10
  0x0000000115eb2ce8: mov    %r10,0x1d8(%r15)
  0x0000000115eb2cef: movabs $0x0,%r10
  0x0000000115eb2cf9: mov    %r10,0x1e8(%r15)
  0x0000000115eb2d00: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2d08: je     0x0000000115eb2d13
  0x0000000115eb2d0e: jmpq   0x0000000115e916e0
  0x0000000115eb2d13: mov    -0x38(%rbp),%r13
  0x0000000115eb2d17: mov    -0x30(%rbp),%r14
  0x0000000115eb2d1b: retq   
  0x0000000115eb2d1c: mov    %rsp,-0x28(%rsp)
  0x0000000115eb2d21: sub    $0x80,%rsp
  0x0000000115eb2d28: mov    %rax,0x78(%rsp)
  0x0000000115eb2d2d: mov    %rcx,0x70(%rsp)
  0x0000000115eb2d32: mov    %rdx,0x68(%rsp)
  0x0000000115eb2d37: mov    %rbx,0x60(%rsp)
  0x0000000115eb2d3c: mov    %rbp,0x50(%rsp)
  0x0000000115eb2d41: mov    %rsi,0x48(%rsp)
  0x0000000115eb2d46: mov    %rdi,0x40(%rsp)
  0x0000000115eb2d4b: mov    %r8,0x38(%rsp)
  0x0000000115eb2d50: mov    %r9,0x30(%rsp)
  0x0000000115eb2d55: mov    %r10,0x28(%rsp)
  0x0000000115eb2d5a: mov    %r11,0x20(%rsp)
  0x0000000115eb2d5f: mov    %r12,0x18(%rsp)
  0x0000000115eb2d64: mov    %r13,0x10(%rsp)
  0x0000000115eb2d69: mov    %r14,0x8(%rsp)
  0x0000000115eb2d6e: mov    %r15,(%rsp)
  0x0000000115eb2d72: movabs $0x10ddd8000,%rdi
  0x0000000115eb2d7c: movabs $0x115eb2d1c,%rsi
  0x0000000115eb2d86: mov    %rsp,%rdx
  0x0000000115eb2d89: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb2d8d: callq  0x000000010dc0341e
  0x0000000115eb2d92: hlt    
  0x0000000115eb2d93: mov    %r13,-0x38(%rbp)
  0x0000000115eb2d97: lea    (%rsi),%rax
  0x0000000115eb2d9a: mov    0x8(%rsi),%rcx
  0x0000000115eb2d9e: movq   $0x0,0x8(%rsi)
  0x0000000115eb2da6: mov    (%rcx),%rdx
  0x0000000115eb2da9: and    $0x7,%rdx
  0x0000000115eb2dad: cmp    $0x5,%rdx
  0x0000000115eb2db1: je     0x0000000115eb2e57
  0x0000000115eb2db7: mov    (%rax),%rdx
  0x0000000115eb2dba: test   %rdx,%rdx
  0x0000000115eb2dbd: je     0x0000000115eb2e57
  0x0000000115eb2dc3: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb2dc8: je     0x0000000115eb2e57
  0x0000000115eb2dce: mov    %rcx,0x8(%rsi)
  0x0000000115eb2dd2: callq  0x0000000115eb2ddc
  0x0000000115eb2dd7: jmpq   0x0000000115eb2e57
  0x0000000115eb2ddc: lea    0x8(%rsp),%rax
  0x0000000115eb2de1: mov    %r13,-0x38(%rbp)
  0x0000000115eb2de5: mov    %r15,%rdi
  0x0000000115eb2de8: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2def: mov    %rax,0x1d8(%r15)
  0x0000000115eb2df6: test   $0xf,%esp
  0x0000000115eb2dfc: je     0x0000000115eb2e14
  0x0000000115eb2e02: sub    $0x8,%rsp
  0x0000000115eb2e06: callq  0x000000010dae8608
  0x0000000115eb2e0b: add    $0x8,%rsp
  0x0000000115eb2e0f: jmpq   0x0000000115eb2e19
  0x0000000115eb2e14: callq  0x000000010dae8608
  0x0000000115eb2e19: movabs $0x0,%r10
  0x0000000115eb2e23: mov    %r10,0x1d8(%r15)
  0x0000000115eb2e2a: movabs $0x0,%r10
  0x0000000115eb2e34: mov    %r10,0x1e8(%r15)
  0x0000000115eb2e3b: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2e43: je     0x0000000115eb2e4e
  0x0000000115eb2e49: jmpq   0x0000000115e916e0
  0x0000000115eb2e4e: mov    -0x38(%rbp),%r13
  0x0000000115eb2e52: mov    -0x30(%rbp),%r14
  0x0000000115eb2e56: retq   
  0x0000000115eb2e57: mov    -0x38(%rbp),%r13
  0x0000000115eb2e5b: vmovsd (%rsp),%xmm0
  0x0000000115eb2e60: add    $0x10,%rsp
  0x0000000115eb2e64: mov    -0x40(%rbp),%rsi
  0x0000000115eb2e68: lea    -0x40(%rbp),%rbx
  0x0000000115eb2e6c: jmpq   0x0000000115eb2f7f
  0x0000000115eb2e71: callq  0x0000000115eb2e7b
  0x0000000115eb2e76: jmpq   0x0000000115eb2ef6
  0x0000000115eb2e7b: lea    0x8(%rsp),%rax
  0x0000000115eb2e80: mov    %r13,-0x38(%rbp)
  0x0000000115eb2e84: mov    %r15,%rdi
  0x0000000115eb2e87: mov    %rbp,0x1e8(%r15)
  0x0000000115eb2e8e: mov    %rax,0x1d8(%r15)
  0x0000000115eb2e95: test   $0xf,%esp
  0x0000000115eb2e9b: je     0x0000000115eb2eb3
  0x0000000115eb2ea1: sub    $0x8,%rsp
  0x0000000115eb2ea5: callq  0x000000010dae850c
  0x0000000115eb2eaa: add    $0x8,%rsp
  0x0000000115eb2eae: jmpq   0x0000000115eb2eb8
  0x0000000115eb2eb3: callq  0x000000010dae850c
  0x0000000115eb2eb8: movabs $0x0,%r10
  0x0000000115eb2ec2: mov    %r10,0x1d8(%r15)
  0x0000000115eb2ec9: movabs $0x0,%r10
  0x0000000115eb2ed3: mov    %r10,0x1e8(%r15)
  0x0000000115eb2eda: cmpq   $0x0,0x8(%r15)
  0x0000000115eb2ee2: je     0x0000000115eb2eed
  0x0000000115eb2ee8: jmpq   0x0000000115e916e0
  0x0000000115eb2eed: mov    -0x38(%rbp),%r13
  0x0000000115eb2ef1: mov    -0x30(%rbp),%r14
  0x0000000115eb2ef5: retq   
  0x0000000115eb2ef6: mov    %rsp,-0x28(%rsp)
  0x0000000115eb2efb: sub    $0x80,%rsp
  0x0000000115eb2f02: mov    %rax,0x78(%rsp)
  0x0000000115eb2f07: mov    %rcx,0x70(%rsp)
  0x0000000115eb2f0c: mov    %rdx,0x68(%rsp)
  0x0000000115eb2f11: mov    %rbx,0x60(%rsp)
  0x0000000115eb2f16: mov    %rbp,0x50(%rsp)
  0x0000000115eb2f1b: mov    %rsi,0x48(%rsp)
  0x0000000115eb2f20: mov    %rdi,0x40(%rsp)
  0x0000000115eb2f25: mov    %r8,0x38(%rsp)
  0x0000000115eb2f2a: mov    %r9,0x30(%rsp)
  0x0000000115eb2f2f: mov    %r10,0x28(%rsp)
  0x0000000115eb2f34: mov    %r11,0x20(%rsp)
  0x0000000115eb2f39: mov    %r12,0x18(%rsp)
  0x0000000115eb2f3e: mov    %r13,0x10(%rsp)
  0x0000000115eb2f43: mov    %r14,0x8(%rsp)
  0x0000000115eb2f48: mov    %r15,(%rsp)
  0x0000000115eb2f4c: movabs $0x10ddd8000,%rdi
  0x0000000115eb2f56: movabs $0x115eb2ef6,%rsi
  0x0000000115eb2f60: mov    %rsp,%rdx
  0x0000000115eb2f63: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb2f67: callq  0x000000010dc0341e
  0x0000000115eb2f6c: hlt    
  0x0000000115eb2f6d: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb2f75: jne    0x0000000115eb2e71
  0x0000000115eb2f7b: add    $0x10,%rsi
  0x0000000115eb2f7f: cmp    %rbx,%rsi
  0x0000000115eb2f82: jne    0x0000000115eb2f6d
  0x0000000115eb2f84: cmpb   $0x0,-0x7dcbcc1(%rip)        # 0x000000010e0e72ca
  0x0000000115eb2f8b: je     0x0000000115eb2fcd
  0x0000000115eb2f91: sub    $0x10,%rsp
  0x0000000115eb2f95: vmovsd %xmm0,(%rsp)
  0x0000000115eb2f9a: mov    -0x18(%rbp),%rsi
  0x0000000115eb2f9e: mov    %r15,%rdi
  0x0000000115eb2fa1: test   $0xf,%esp
  0x0000000115eb2fa7: je     0x0000000115eb2fbf
  0x0000000115eb2fad: sub    $0x8,%rsp
  0x0000000115eb2fb1: callq  0x000000010dce7696
  0x0000000115eb2fb6: add    $0x8,%rsp
  0x0000000115eb2fba: jmpq   0x0000000115eb2fc4
  0x0000000115eb2fbf: callq  0x000000010dce7696
  0x0000000115eb2fc4: vmovsd (%rsp),%xmm0
  0x0000000115eb2fc9: add    $0x10,%rsp
  0x0000000115eb2fcd: mov    -0x8(%rbp),%rbx
  0x0000000115eb2fd1: leaveq 
  0x0000000115eb2fd2: pop    %r13
  0x0000000115eb2fd4: mov    %rbx,%rsp
  0x0000000115eb2fd7: jmpq   *%r13
  0x0000000115eb2fda: nopw   0x0(%rax,%rax,1)

----------------------------------------------------------------------
areturn  176 areturn  [0x0000000115eb3000, 0x0000000115eb3380]  896 bytes

  0x0000000115eb3000: pop    %rax
  0x0000000115eb3001: mov    0x295(%r15),%dl
  0x0000000115eb3008: movb   $0x0,0x295(%r15)
  0x0000000115eb3010: mov    -0x18(%rbp),%rbx
  0x0000000115eb3014: mov    0x20(%rbx),%ecx
  0x0000000115eb3017: test   $0x20,%ecx
  0x0000000115eb301d: je     0x0000000115eb3204
  0x0000000115eb3023: test   $0xff,%dl
  0x0000000115eb3026: jne    0x0000000115eb3324
  0x0000000115eb302c: push   %rax
  0x0000000115eb302d: lea    -0x50(%rbp),%rsi
  0x0000000115eb3031: mov    0x8(%rsi),%rax
  0x0000000115eb3035: test   %rax,%rax
  0x0000000115eb3038: jne    0x0000000115eb313b
  0x0000000115eb303e: pop    %rax
  0x0000000115eb303f: callq  0x0000000115eb3049
  0x0000000115eb3044: jmpq   0x0000000115eb30c4
  0x0000000115eb3049: lea    0x8(%rsp),%rax
  0x0000000115eb304e: mov    %r13,-0x38(%rbp)
  0x0000000115eb3052: mov    %r15,%rdi
  0x0000000115eb3055: mov    %rbp,0x1e8(%r15)
  0x0000000115eb305c: mov    %rax,0x1d8(%r15)
  0x0000000115eb3063: test   $0xf,%esp
  0x0000000115eb3069: je     0x0000000115eb3081
  0x0000000115eb306f: sub    $0x8,%rsp
  0x0000000115eb3073: callq  0x000000010dae850c
  0x0000000115eb3078: add    $0x8,%rsp
  0x0000000115eb307c: jmpq   0x0000000115eb3086
  0x0000000115eb3081: callq  0x000000010dae850c
  0x0000000115eb3086: movabs $0x0,%r10
  0x0000000115eb3090: mov    %r10,0x1d8(%r15)
  0x0000000115eb3097: movabs $0x0,%r10
  0x0000000115eb30a1: mov    %r10,0x1e8(%r15)
  0x0000000115eb30a8: cmpq   $0x0,0x8(%r15)
  0x0000000115eb30b0: je     0x0000000115eb30bb
  0x0000000115eb30b6: jmpq   0x0000000115e916e0
  0x0000000115eb30bb: mov    -0x38(%rbp),%r13
  0x0000000115eb30bf: mov    -0x30(%rbp),%r14
  0x0000000115eb30c3: retq   
  0x0000000115eb30c4: mov    %rsp,-0x28(%rsp)
  0x0000000115eb30c9: sub    $0x80,%rsp
  0x0000000115eb30d0: mov    %rax,0x78(%rsp)
  0x0000000115eb30d5: mov    %rcx,0x70(%rsp)
  0x0000000115eb30da: mov    %rdx,0x68(%rsp)
  0x0000000115eb30df: mov    %rbx,0x60(%rsp)
  0x0000000115eb30e4: mov    %rbp,0x50(%rsp)
  0x0000000115eb30e9: mov    %rsi,0x48(%rsp)
  0x0000000115eb30ee: mov    %rdi,0x40(%rsp)
  0x0000000115eb30f3: mov    %r8,0x38(%rsp)
  0x0000000115eb30f8: mov    %r9,0x30(%rsp)
  0x0000000115eb30fd: mov    %r10,0x28(%rsp)
  0x0000000115eb3102: mov    %r11,0x20(%rsp)
  0x0000000115eb3107: mov    %r12,0x18(%rsp)
  0x0000000115eb310c: mov    %r13,0x10(%rsp)
  0x0000000115eb3111: mov    %r14,0x8(%rsp)
  0x0000000115eb3116: mov    %r15,(%rsp)
  0x0000000115eb311a: movabs $0x10ddd8000,%rdi
  0x0000000115eb3124: movabs $0x115eb30c4,%rsi
  0x0000000115eb312e: mov    %rsp,%rdx
  0x0000000115eb3131: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb3135: callq  0x000000010dc0341e
  0x0000000115eb313a: hlt    
  0x0000000115eb313b: mov    %r13,-0x38(%rbp)
  0x0000000115eb313f: lea    (%rsi),%rax
  0x0000000115eb3142: mov    0x8(%rsi),%rcx
  0x0000000115eb3146: movq   $0x0,0x8(%rsi)
  0x0000000115eb314e: mov    (%rcx),%rdx
  0x0000000115eb3151: and    $0x7,%rdx
  0x0000000115eb3155: cmp    $0x5,%rdx
  0x0000000115eb3159: je     0x0000000115eb31ff
  0x0000000115eb315f: mov    (%rax),%rdx
  0x0000000115eb3162: test   %rdx,%rdx
  0x0000000115eb3165: je     0x0000000115eb31ff
  0x0000000115eb316b: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb3170: je     0x0000000115eb31ff
  0x0000000115eb3176: mov    %rcx,0x8(%rsi)
  0x0000000115eb317a: callq  0x0000000115eb3184
  0x0000000115eb317f: jmpq   0x0000000115eb31ff
  0x0000000115eb3184: lea    0x8(%rsp),%rax
  0x0000000115eb3189: mov    %r13,-0x38(%rbp)
  0x0000000115eb318d: mov    %r15,%rdi
  0x0000000115eb3190: mov    %rbp,0x1e8(%r15)
  0x0000000115eb3197: mov    %rax,0x1d8(%r15)
  0x0000000115eb319e: test   $0xf,%esp
  0x0000000115eb31a4: je     0x0000000115eb31bc
  0x0000000115eb31aa: sub    $0x8,%rsp
  0x0000000115eb31ae: callq  0x000000010dae8608
  0x0000000115eb31b3: add    $0x8,%rsp
  0x0000000115eb31b7: jmpq   0x0000000115eb31c1
  0x0000000115eb31bc: callq  0x000000010dae8608
  0x0000000115eb31c1: movabs $0x0,%r10
  0x0000000115eb31cb: mov    %r10,0x1d8(%r15)
  0x0000000115eb31d2: movabs $0x0,%r10
  0x0000000115eb31dc: mov    %r10,0x1e8(%r15)
  0x0000000115eb31e3: cmpq   $0x0,0x8(%r15)
  0x0000000115eb31eb: je     0x0000000115eb31f6
  0x0000000115eb31f1: jmpq   0x0000000115e916e0
  0x0000000115eb31f6: mov    -0x38(%rbp),%r13
  0x0000000115eb31fa: mov    -0x30(%rbp),%r14
  0x0000000115eb31fe: retq   
  0x0000000115eb31ff: mov    -0x38(%rbp),%r13
  0x0000000115eb3203: pop    %rax
  0x0000000115eb3204: mov    -0x40(%rbp),%rsi
  0x0000000115eb3208: lea    -0x40(%rbp),%rbx
  0x0000000115eb320c: jmpq   0x0000000115eb331f
  0x0000000115eb3211: callq  0x0000000115eb321b
  0x0000000115eb3216: jmpq   0x0000000115eb3296
  0x0000000115eb321b: lea    0x8(%rsp),%rax
  0x0000000115eb3220: mov    %r13,-0x38(%rbp)
  0x0000000115eb3224: mov    %r15,%rdi
  0x0000000115eb3227: mov    %rbp,0x1e8(%r15)
  0x0000000115eb322e: mov    %rax,0x1d8(%r15)
  0x0000000115eb3235: test   $0xf,%esp
  0x0000000115eb323b: je     0x0000000115eb3253
  0x0000000115eb3241: sub    $0x8,%rsp
  0x0000000115eb3245: callq  0x000000010dae850c
  0x0000000115eb324a: add    $0x8,%rsp
  0x0000000115eb324e: jmpq   0x0000000115eb3258
  0x0000000115eb3253: callq  0x000000010dae850c
  0x0000000115eb3258: movabs $0x0,%r10
  0x0000000115eb3262: mov    %r10,0x1d8(%r15)
  0x0000000115eb3269: movabs $0x0,%r10
  0x0000000115eb3273: mov    %r10,0x1e8(%r15)
  0x0000000115eb327a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb3282: je     0x0000000115eb328d
  0x0000000115eb3288: jmpq   0x0000000115e916e0
  0x0000000115eb328d: mov    -0x38(%rbp),%r13
  0x0000000115eb3291: mov    -0x30(%rbp),%r14
  0x0000000115eb3295: retq   
  0x0000000115eb3296: mov    %rsp,-0x28(%rsp)
  0x0000000115eb329b: sub    $0x80,%rsp
  0x0000000115eb32a2: mov    %rax,0x78(%rsp)
  0x0000000115eb32a7: mov    %rcx,0x70(%rsp)
  0x0000000115eb32ac: mov    %rdx,0x68(%rsp)
  0x0000000115eb32b1: mov    %rbx,0x60(%rsp)
  0x0000000115eb32b6: mov    %rbp,0x50(%rsp)
  0x0000000115eb32bb: mov    %rsi,0x48(%rsp)
  0x0000000115eb32c0: mov    %rdi,0x40(%rsp)
  0x0000000115eb32c5: mov    %r8,0x38(%rsp)
  0x0000000115eb32ca: mov    %r9,0x30(%rsp)
  0x0000000115eb32cf: mov    %r10,0x28(%rsp)
  0x0000000115eb32d4: mov    %r11,0x20(%rsp)
  0x0000000115eb32d9: mov    %r12,0x18(%rsp)
  0x0000000115eb32de: mov    %r13,0x10(%rsp)
  0x0000000115eb32e3: mov    %r14,0x8(%rsp)
  0x0000000115eb32e8: mov    %r15,(%rsp)
  0x0000000115eb32ec: movabs $0x10ddd8000,%rdi
  0x0000000115eb32f6: movabs $0x115eb3296,%rsi
  0x0000000115eb3300: mov    %rsp,%rdx
  0x0000000115eb3303: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb3307: callq  0x000000010dc0341e
  0x0000000115eb330c: hlt    
  0x0000000115eb330d: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb3315: jne    0x0000000115eb3211
  0x0000000115eb331b: add    $0x10,%rsi
  0x0000000115eb331f: cmp    %rbx,%rsi
  0x0000000115eb3322: jne    0x0000000115eb330d
  0x0000000115eb3324: cmpb   $0x0,-0x7dcc061(%rip)        # 0x000000010e0e72ca
  0x0000000115eb332b: je     0x0000000115eb335d
  0x0000000115eb3331: push   %rax
  0x0000000115eb3332: mov    -0x18(%rbp),%rsi
  0x0000000115eb3336: mov    %r15,%rdi
  0x0000000115eb3339: test   $0xf,%esp
  0x0000000115eb333f: je     0x0000000115eb3357
  0x0000000115eb3345: sub    $0x8,%rsp
  0x0000000115eb3349: callq  0x000000010dce7696
  0x0000000115eb334e: add    $0x8,%rsp
  0x0000000115eb3352: jmpq   0x0000000115eb335c
  0x0000000115eb3357: callq  0x000000010dce7696
  0x0000000115eb335c: pop    %rax
  0x0000000115eb335d: mov    -0x8(%rbp),%rbx
  0x0000000115eb3361: leaveq 
  0x0000000115eb3362: pop    %r13
  0x0000000115eb3364: mov    %rbx,%rsp
  0x0000000115eb3367: jmpq   *%r13
  0x0000000115eb336a: nopw   0x0(%rax,%rax,1)
  0x0000000115eb3370: add    %al,(%rax)
  0x0000000115eb3372: add    %al,(%rax)
  0x0000000115eb3374: add    %al,(%rax)
  0x0000000115eb3376: add    %al,(%rax)
  0x0000000115eb3378: add    %al,(%rax)
  0x0000000115eb337a: add    %al,(%rax)
  0x0000000115eb337c: add    %al,(%rax)
  0x0000000115eb337e: add    %al,(%rax)

----------------------------------------------------------------------
return  177 return  [0x0000000115eb33a0, 0x0000000115eb3740]  928 bytes

  0x0000000115eb33a0: push   %rax
  0x0000000115eb33a1: jmpq   0x0000000115eb33d0
  0x0000000115eb33a6: sub    $0x8,%rsp
  0x0000000115eb33aa: vmovss %xmm0,(%rsp)
  0x0000000115eb33af: jmpq   0x0000000115eb33d0
  0x0000000115eb33b4: sub    $0x10,%rsp
  0x0000000115eb33b8: vmovsd %xmm0,(%rsp)
  0x0000000115eb33bd: jmpq   0x0000000115eb33d0
  0x0000000115eb33c2: sub    $0x10,%rsp
  0x0000000115eb33c6: mov    %rax,(%rsp)
  0x0000000115eb33ca: jmpq   0x0000000115eb33d0
  0x0000000115eb33cf: push   %rax
  0x0000000115eb33d0: mov    0x295(%r15),%dl
  0x0000000115eb33d7: movb   $0x0,0x295(%r15)
  0x0000000115eb33df: mov    -0x18(%rbp),%rbx
  0x0000000115eb33e3: mov    0x20(%rbx),%ecx
  0x0000000115eb33e6: test   $0x20,%ecx
  0x0000000115eb33ec: je     0x0000000115eb35d0
  0x0000000115eb33f2: test   $0xff,%dl
  0x0000000115eb33f5: jne    0x0000000115eb36f0
  0x0000000115eb33fb: lea    -0x50(%rbp),%rsi
  0x0000000115eb33ff: mov    0x8(%rsi),%rax
  0x0000000115eb3403: test   %rax,%rax
  0x0000000115eb3406: jne    0x0000000115eb3508
  0x0000000115eb340c: callq  0x0000000115eb3416
  0x0000000115eb3411: jmpq   0x0000000115eb3491
  0x0000000115eb3416: lea    0x8(%rsp),%rax
  0x0000000115eb341b: mov    %r13,-0x38(%rbp)
  0x0000000115eb341f: mov    %r15,%rdi
  0x0000000115eb3422: mov    %rbp,0x1e8(%r15)
  0x0000000115eb3429: mov    %rax,0x1d8(%r15)
  0x0000000115eb3430: test   $0xf,%esp
  0x0000000115eb3436: je     0x0000000115eb344e
  0x0000000115eb343c: sub    $0x8,%rsp
  0x0000000115eb3440: callq  0x000000010dae850c
  0x0000000115eb3445: add    $0x8,%rsp
  0x0000000115eb3449: jmpq   0x0000000115eb3453
  0x0000000115eb344e: callq  0x000000010dae850c
  0x0000000115eb3453: movabs $0x0,%r10
  0x0000000115eb345d: mov    %r10,0x1d8(%r15)
  0x0000000115eb3464: movabs $0x0,%r10
  0x0000000115eb346e: mov    %r10,0x1e8(%r15)
  0x0000000115eb3475: cmpq   $0x0,0x8(%r15)
  0x0000000115eb347d: je     0x0000000115eb3488
  0x0000000115eb3483: jmpq   0x0000000115e916e0
  0x0000000115eb3488: mov    -0x38(%rbp),%r13
  0x0000000115eb348c: mov    -0x30(%rbp),%r14
  0x0000000115eb3490: retq   
  0x0000000115eb3491: mov    %rsp,-0x28(%rsp)
  0x0000000115eb3496: sub    $0x80,%rsp
  0x0000000115eb349d: mov    %rax,0x78(%rsp)
  0x0000000115eb34a2: mov    %rcx,0x70(%rsp)
  0x0000000115eb34a7: mov    %rdx,0x68(%rsp)
  0x0000000115eb34ac: mov    %rbx,0x60(%rsp)
  0x0000000115eb34b1: mov    %rbp,0x50(%rsp)
  0x0000000115eb34b6: mov    %rsi,0x48(%rsp)
  0x0000000115eb34bb: mov    %rdi,0x40(%rsp)
  0x0000000115eb34c0: mov    %r8,0x38(%rsp)
  0x0000000115eb34c5: mov    %r9,0x30(%rsp)
  0x0000000115eb34ca: mov    %r10,0x28(%rsp)
  0x0000000115eb34cf: mov    %r11,0x20(%rsp)
  0x0000000115eb34d4: mov    %r12,0x18(%rsp)
  0x0000000115eb34d9: mov    %r13,0x10(%rsp)
  0x0000000115eb34de: mov    %r14,0x8(%rsp)
  0x0000000115eb34e3: mov    %r15,(%rsp)
  0x0000000115eb34e7: movabs $0x10ddd8000,%rdi
  0x0000000115eb34f1: movabs $0x115eb3491,%rsi
  0x0000000115eb34fb: mov    %rsp,%rdx
  0x0000000115eb34fe: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb3502: callq  0x000000010dc0341e
  0x0000000115eb3507: hlt    
  0x0000000115eb3508: mov    %r13,-0x38(%rbp)
  0x0000000115eb350c: lea    (%rsi),%rax
  0x0000000115eb350f: mov    0x8(%rsi),%rcx
  0x0000000115eb3513: movq   $0x0,0x8(%rsi)
  0x0000000115eb351b: mov    (%rcx),%rdx
  0x0000000115eb351e: and    $0x7,%rdx
  0x0000000115eb3522: cmp    $0x5,%rdx
  0x0000000115eb3526: je     0x0000000115eb35cc
  0x0000000115eb352c: mov    (%rax),%rdx
  0x0000000115eb352f: test   %rdx,%rdx
  0x0000000115eb3532: je     0x0000000115eb35cc
  0x0000000115eb3538: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb353d: je     0x0000000115eb35cc
  0x0000000115eb3543: mov    %rcx,0x8(%rsi)
  0x0000000115eb3547: callq  0x0000000115eb3551
  0x0000000115eb354c: jmpq   0x0000000115eb35cc
  0x0000000115eb3551: lea    0x8(%rsp),%rax
  0x0000000115eb3556: mov    %r13,-0x38(%rbp)
  0x0000000115eb355a: mov    %r15,%rdi
  0x0000000115eb355d: mov    %rbp,0x1e8(%r15)
  0x0000000115eb3564: mov    %rax,0x1d8(%r15)
  0x0000000115eb356b: test   $0xf,%esp
  0x0000000115eb3571: je     0x0000000115eb3589
  0x0000000115eb3577: sub    $0x8,%rsp
  0x0000000115eb357b: callq  0x000000010dae8608
  0x0000000115eb3580: add    $0x8,%rsp
  0x0000000115eb3584: jmpq   0x0000000115eb358e
  0x0000000115eb3589: callq  0x000000010dae8608
  0x0000000115eb358e: movabs $0x0,%r10
  0x0000000115eb3598: mov    %r10,0x1d8(%r15)
  0x0000000115eb359f: movabs $0x0,%r10
  0x0000000115eb35a9: mov    %r10,0x1e8(%r15)
  0x0000000115eb35b0: cmpq   $0x0,0x8(%r15)
  0x0000000115eb35b8: je     0x0000000115eb35c3
  0x0000000115eb35be: jmpq   0x0000000115e916e0
  0x0000000115eb35c3: mov    -0x38(%rbp),%r13
  0x0000000115eb35c7: mov    -0x30(%rbp),%r14
  0x0000000115eb35cb: retq   
  0x0000000115eb35cc: mov    -0x38(%rbp),%r13
  0x0000000115eb35d0: mov    -0x40(%rbp),%rsi
  0x0000000115eb35d4: lea    -0x40(%rbp),%rbx
  0x0000000115eb35d8: jmpq   0x0000000115eb36eb
  0x0000000115eb35dd: callq  0x0000000115eb35e7
  0x0000000115eb35e2: jmpq   0x0000000115eb3662
  0x0000000115eb35e7: lea    0x8(%rsp),%rax
  0x0000000115eb35ec: mov    %r13,-0x38(%rbp)
  0x0000000115eb35f0: mov    %r15,%rdi
  0x0000000115eb35f3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb35fa: mov    %rax,0x1d8(%r15)
  0x0000000115eb3601: test   $0xf,%esp
  0x0000000115eb3607: je     0x0000000115eb361f
  0x0000000115eb360d: sub    $0x8,%rsp
  0x0000000115eb3611: callq  0x000000010dae850c
  0x0000000115eb3616: add    $0x8,%rsp
  0x0000000115eb361a: jmpq   0x0000000115eb3624
  0x0000000115eb361f: callq  0x000000010dae850c
  0x0000000115eb3624: movabs $0x0,%r10
  0x0000000115eb362e: mov    %r10,0x1d8(%r15)
  0x0000000115eb3635: movabs $0x0,%r10
  0x0000000115eb363f: mov    %r10,0x1e8(%r15)
  0x0000000115eb3646: cmpq   $0x0,0x8(%r15)
  0x0000000115eb364e: je     0x0000000115eb3659
  0x0000000115eb3654: jmpq   0x0000000115e916e0
  0x0000000115eb3659: mov    -0x38(%rbp),%r13
  0x0000000115eb365d: mov    -0x30(%rbp),%r14
  0x0000000115eb3661: retq   
  0x0000000115eb3662: mov    %rsp,-0x28(%rsp)
  0x0000000115eb3667: sub    $0x80,%rsp
  0x0000000115eb366e: mov    %rax,0x78(%rsp)
  0x0000000115eb3673: mov    %rcx,0x70(%rsp)
  0x0000000115eb3678: mov    %rdx,0x68(%rsp)
  0x0000000115eb367d: mov    %rbx,0x60(%rsp)
  0x0000000115eb3682: mov    %rbp,0x50(%rsp)
  0x0000000115eb3687: mov    %rsi,0x48(%rsp)
  0x0000000115eb368c: mov    %rdi,0x40(%rsp)
  0x0000000115eb3691: mov    %r8,0x38(%rsp)
  0x0000000115eb3696: mov    %r9,0x30(%rsp)
  0x0000000115eb369b: mov    %r10,0x28(%rsp)
  0x0000000115eb36a0: mov    %r11,0x20(%rsp)
  0x0000000115eb36a5: mov    %r12,0x18(%rsp)
  0x0000000115eb36aa: mov    %r13,0x10(%rsp)
  0x0000000115eb36af: mov    %r14,0x8(%rsp)
  0x0000000115eb36b4: mov    %r15,(%rsp)
  0x0000000115eb36b8: movabs $0x10ddd8000,%rdi
  0x0000000115eb36c2: movabs $0x115eb3662,%rsi
  0x0000000115eb36cc: mov    %rsp,%rdx
  0x0000000115eb36cf: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb36d3: callq  0x000000010dc0341e
  0x0000000115eb36d8: hlt    
  0x0000000115eb36d9: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb36e1: jne    0x0000000115eb35dd
  0x0000000115eb36e7: add    $0x10,%rsi
  0x0000000115eb36eb: cmp    %rbx,%rsi
  0x0000000115eb36ee: jne    0x0000000115eb36d9
  0x0000000115eb36f0: cmpb   $0x0,-0x7dcc42d(%rip)        # 0x000000010e0e72ca
  0x0000000115eb36f7: je     0x0000000115eb3727
  0x0000000115eb36fd: mov    -0x18(%rbp),%rsi
  0x0000000115eb3701: mov    %r15,%rdi
  0x0000000115eb3704: test   $0xf,%esp
  0x0000000115eb370a: je     0x0000000115eb3722
  0x0000000115eb3710: sub    $0x8,%rsp
  0x0000000115eb3714: callq  0x000000010dce7696
  0x0000000115eb3719: add    $0x8,%rsp
  0x0000000115eb371d: jmpq   0x0000000115eb3727
  0x0000000115eb3722: callq  0x000000010dce7696
  0x0000000115eb3727: mov    -0x8(%rbp),%rbx
  0x0000000115eb372b: leaveq 
  0x0000000115eb372c: pop    %r13
  0x0000000115eb372e: mov    %rbx,%rsp
  0x0000000115eb3731: jmpq   *%r13
  0x0000000115eb3734: nopl   0x0(%rax)
  0x0000000115eb3738: add    %al,(%rax)
  0x0000000115eb373a: add    %al,(%rax)
  0x0000000115eb373c: add    %al,(%rax)
  0x0000000115eb373e: add    %al,(%rax)

----------------------------------------------------------------------
getstatic  178 getstatic  [0x0000000115eb3760, 0x0000000115eb3940]  480 bytes

  0x0000000115eb3760: push   %rax
  0x0000000115eb3761: jmpq   0x0000000115eb3790
  0x0000000115eb3766: sub    $0x8,%rsp
  0x0000000115eb376a: vmovss %xmm0,(%rsp)
  0x0000000115eb376f: jmpq   0x0000000115eb3790
  0x0000000115eb3774: sub    $0x10,%rsp
  0x0000000115eb3778: vmovsd %xmm0,(%rsp)
  0x0000000115eb377d: jmpq   0x0000000115eb3790
  0x0000000115eb3782: sub    $0x10,%rsp
  0x0000000115eb3786: mov    %rax,(%rsp)
  0x0000000115eb378a: jmpq   0x0000000115eb3790
  0x0000000115eb378f: push   %rax
  0x0000000115eb3790: movzwl 0x1(%r13),%edx
  0x0000000115eb3795: mov    -0x28(%rbp),%rcx
  0x0000000115eb3799: shl    $0x2,%edx
  0x0000000115eb379c: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb37a0: shr    $0x10,%ebx
  0x0000000115eb37a3: and    $0xff,%ebx
  0x0000000115eb37a9: cmp    $0xb2,%ebx
  0x0000000115eb37af: je     0x0000000115eb384e
  0x0000000115eb37b5: mov    $0xb2,%ebx
  0x0000000115eb37ba: callq  0x0000000115eb37c4
  0x0000000115eb37bf: jmpq   0x0000000115eb3842
  0x0000000115eb37c4: mov    %rbx,%rsi
  0x0000000115eb37c7: lea    0x8(%rsp),%rax
  0x0000000115eb37cc: mov    %r13,-0x38(%rbp)
  0x0000000115eb37d0: mov    %r15,%rdi
  0x0000000115eb37d3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb37da: mov    %rax,0x1d8(%r15)
  0x0000000115eb37e1: test   $0xf,%esp
  0x0000000115eb37e7: je     0x0000000115eb37ff
  0x0000000115eb37ed: sub    $0x8,%rsp
  0x0000000115eb37f1: callq  0x000000010dae87aa
  0x0000000115eb37f6: add    $0x8,%rsp
  0x0000000115eb37fa: jmpq   0x0000000115eb3804
  0x0000000115eb37ff: callq  0x000000010dae87aa
  0x0000000115eb3804: movabs $0x0,%r10
  0x0000000115eb380e: mov    %r10,0x1d8(%r15)
  0x0000000115eb3815: movabs $0x0,%r10
  0x0000000115eb381f: mov    %r10,0x1e8(%r15)
  0x0000000115eb3826: cmpq   $0x0,0x8(%r15)
  0x0000000115eb382e: je     0x0000000115eb3839
  0x0000000115eb3834: jmpq   0x0000000115e916e0
  0x0000000115eb3839: mov    -0x38(%rbp),%r13
  0x0000000115eb383d: mov    -0x30(%rbp),%r14
  0x0000000115eb3841: retq   
  0x0000000115eb3842: movzwl 0x1(%r13),%edx
  0x0000000115eb3847: mov    -0x28(%rbp),%rcx
  0x0000000115eb384b: shl    $0x2,%edx
  0x0000000115eb384e: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb3853: mov    0x28(%rcx,%rdx,8),%eax
  0x0000000115eb3857: mov    0x18(%rcx,%rdx,8),%rcx
  0x0000000115eb385c: mov    0x68(%rcx),%rcx
  0x0000000115eb3860: shr    $0x1c,%eax
  0x0000000115eb3863: and    $0xf,%eax
  0x0000000115eb3866: jne    0x0000000115eb3876
  0x0000000115eb386c: movsbl (%rcx,%rbx,1),%eax
  0x0000000115eb3870: push   %rax
  0x0000000115eb3871: jmpq   0x0000000115eb391b
  0x0000000115eb3876: cmp    $0x1,%eax
  0x0000000115eb3879: jne    0x0000000115eb3889
  0x0000000115eb387f: movsbl (%rcx,%rbx,1),%eax
  0x0000000115eb3883: push   %rax
  0x0000000115eb3884: jmpq   0x0000000115eb391b
  0x0000000115eb3889: cmp    $0x8,%eax
  0x0000000115eb388c: jne    0x0000000115eb389f
  0x0000000115eb3892: mov    (%rcx,%rbx,1),%eax
  0x0000000115eb3895: shl    $0x3,%rax
  0x0000000115eb3899: push   %rax
  0x0000000115eb389a: jmpq   0x0000000115eb391b
  0x0000000115eb389f: cmp    $0x4,%eax
  0x0000000115eb38a2: jne    0x0000000115eb38b1
  0x0000000115eb38a8: mov    (%rcx,%rbx,1),%eax
  0x0000000115eb38ab: push   %rax
  0x0000000115eb38ac: jmpq   0x0000000115eb391b
  0x0000000115eb38b1: cmp    $0x2,%eax
  0x0000000115eb38b4: jne    0x0000000115eb38c4
  0x0000000115eb38ba: movzwl (%rcx,%rbx,1),%eax
  0x0000000115eb38be: push   %rax
  0x0000000115eb38bf: jmpq   0x0000000115eb391b
  0x0000000115eb38c4: cmp    $0x3,%eax
  0x0000000115eb38c7: jne    0x0000000115eb38d7
  0x0000000115eb38cd: movswl (%rcx,%rbx,1),%eax
  0x0000000115eb38d1: push   %rax
  0x0000000115eb38d2: jmpq   0x0000000115eb391b
  0x0000000115eb38d7: cmp    $0x5,%eax
  0x0000000115eb38da: jne    0x0000000115eb38f1
  0x0000000115eb38e0: mov    (%rcx,%rbx,1),%rax
  0x0000000115eb38e4: sub    $0x10,%rsp
  0x0000000115eb38e8: mov    %rax,(%rsp)
  0x0000000115eb38ec: jmpq   0x0000000115eb391b
  0x0000000115eb38f1: cmp    $0x6,%eax
  0x0000000115eb38f4: jne    0x0000000115eb390d
  0x0000000115eb38fa: vmovss (%rcx,%rbx,1),%xmm0
  0x0000000115eb38ff: sub    $0x8,%rsp
  0x0000000115eb3903: vmovss %xmm0,(%rsp)
  0x0000000115eb3908: jmpq   0x0000000115eb391b
  0x0000000115eb390d: vmovsd (%rcx,%rbx,1),%xmm0
  0x0000000115eb3912: sub    $0x10,%rsp
  0x0000000115eb3916: vmovsd %xmm0,(%rsp)
  0x0000000115eb391b: movzbl 0x3(%r13),%ebx
  0x0000000115eb3920: add    $0x3,%r13
  0x0000000115eb3924: movabs $0x10e101840,%r10
  0x0000000115eb392e: jmpq   *(%r10,%rbx,8)
  0x0000000115eb3932: nopw   0x0(%rax,%rax,1)
  0x0000000115eb3938: add    %al,(%rax)
  0x0000000115eb393a: add    %al,(%rax)
  0x0000000115eb393c: add    %al,(%rax)
  0x0000000115eb393e: add    %al,(%rax)

----------------------------------------------------------------------
putstatic  179 putstatic  [0x0000000115eb3960, 0x0000000115eb3b80]  544 bytes

  0x0000000115eb3960: push   %rax
  0x0000000115eb3961: jmpq   0x0000000115eb3990
  0x0000000115eb3966: sub    $0x8,%rsp
  0x0000000115eb396a: vmovss %xmm0,(%rsp)
  0x0000000115eb396f: jmpq   0x0000000115eb3990
  0x0000000115eb3974: sub    $0x10,%rsp
  0x0000000115eb3978: vmovsd %xmm0,(%rsp)
  0x0000000115eb397d: jmpq   0x0000000115eb3990
  0x0000000115eb3982: sub    $0x10,%rsp
  0x0000000115eb3986: mov    %rax,(%rsp)
  0x0000000115eb398a: jmpq   0x0000000115eb3990
  0x0000000115eb398f: push   %rax
  0x0000000115eb3990: movzwl 0x1(%r13),%edx
  0x0000000115eb3995: mov    -0x28(%rbp),%rcx
  0x0000000115eb3999: shl    $0x2,%edx
  0x0000000115eb399c: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb39a0: shr    $0x18,%ebx
  0x0000000115eb39a3: and    $0xff,%ebx
  0x0000000115eb39a9: cmp    $0xb3,%ebx
  0x0000000115eb39af: je     0x0000000115eb3a4e
  0x0000000115eb39b5: mov    $0xb3,%ebx
  0x0000000115eb39ba: callq  0x0000000115eb39c4
  0x0000000115eb39bf: jmpq   0x0000000115eb3a42
  0x0000000115eb39c4: mov    %rbx,%rsi
  0x0000000115eb39c7: lea    0x8(%rsp),%rax
  0x0000000115eb39cc: mov    %r13,-0x38(%rbp)
  0x0000000115eb39d0: mov    %r15,%rdi
  0x0000000115eb39d3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb39da: mov    %rax,0x1d8(%r15)
  0x0000000115eb39e1: test   $0xf,%esp
  0x0000000115eb39e7: je     0x0000000115eb39ff
  0x0000000115eb39ed: sub    $0x8,%rsp
  0x0000000115eb39f1: callq  0x000000010dae87aa
  0x0000000115eb39f6: add    $0x8,%rsp
  0x0000000115eb39fa: jmpq   0x0000000115eb3a04
  0x0000000115eb39ff: callq  0x000000010dae87aa
  0x0000000115eb3a04: movabs $0x0,%r10
  0x0000000115eb3a0e: mov    %r10,0x1d8(%r15)
  0x0000000115eb3a15: movabs $0x0,%r10
  0x0000000115eb3a1f: mov    %r10,0x1e8(%r15)
  0x0000000115eb3a26: cmpq   $0x0,0x8(%r15)
  0x0000000115eb3a2e: je     0x0000000115eb3a39
  0x0000000115eb3a34: jmpq   0x0000000115e916e0
  0x0000000115eb3a39: mov    -0x38(%rbp),%r13
  0x0000000115eb3a3d: mov    -0x30(%rbp),%r14
  0x0000000115eb3a41: retq   
  0x0000000115eb3a42: movzwl 0x1(%r13),%edx
  0x0000000115eb3a47: mov    -0x28(%rbp),%rcx
  0x0000000115eb3a4b: shl    $0x2,%edx
  0x0000000115eb3a4e: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb3a53: mov    0x28(%rcx,%rdx,8),%eax
  0x0000000115eb3a57: mov    0x18(%rcx,%rdx,8),%rcx
  0x0000000115eb3a5c: mov    0x68(%rcx),%rcx
  0x0000000115eb3a60: mov    %eax,%edx
  0x0000000115eb3a62: shr    $0x15,%edx
  0x0000000115eb3a65: and    $0x1,%edx
  0x0000000115eb3a68: shr    $0x1c,%eax
  0x0000000115eb3a6b: and    $0xf,%eax
  0x0000000115eb3a6e: jne    0x0000000115eb3a83
  0x0000000115eb3a74: mov    (%rsp),%eax
  0x0000000115eb3a77: add    $0x8,%rsp
  0x0000000115eb3a7b: mov    %al,(%rcx,%rbx,1)
  0x0000000115eb3a7e: jmpq   0x0000000115eb3b55
  0x0000000115eb3a83: cmp    $0x1,%eax
  0x0000000115eb3a86: jne    0x0000000115eb3a9e
  0x0000000115eb3a8c: mov    (%rsp),%eax
  0x0000000115eb3a8f: add    $0x8,%rsp
  0x0000000115eb3a93: and    $0x1,%eax
  0x0000000115eb3a96: mov    %al,(%rcx,%rbx,1)
  0x0000000115eb3a99: jmpq   0x0000000115eb3b55
  0x0000000115eb3a9e: cmp    $0x8,%eax
  0x0000000115eb3aa1: jne    0x0000000115eb3ac7
  0x0000000115eb3aa7: pop    %rax
  0x0000000115eb3aa8: shr    $0x3,%rax
  0x0000000115eb3aac: mov    %eax,(%rcx,%rbx,1)
  0x0000000115eb3aaf: shr    $0x9,%rcx
  0x0000000115eb3ab3: movabs $0x10b562000,%r10
  0x0000000115eb3abd: movb   $0x0,(%r10,%rcx,1)
  0x0000000115eb3ac2: jmpq   0x0000000115eb3b55
  0x0000000115eb3ac7: cmp    $0x4,%eax
  0x0000000115eb3aca: jne    0x0000000115eb3adf
  0x0000000115eb3ad0: mov    (%rsp),%eax
  0x0000000115eb3ad3: add    $0x8,%rsp
  0x0000000115eb3ad7: mov    %eax,(%rcx,%rbx,1)
  0x0000000115eb3ada: jmpq   0x0000000115eb3b55
  0x0000000115eb3adf: cmp    $0x2,%eax
  0x0000000115eb3ae2: jne    0x0000000115eb3af8
  0x0000000115eb3ae8: mov    (%rsp),%eax
  0x0000000115eb3aeb: add    $0x8,%rsp
  0x0000000115eb3aef: mov    %ax,(%rcx,%rbx,1)
  0x0000000115eb3af3: jmpq   0x0000000115eb3b55
  0x0000000115eb3af8: cmp    $0x3,%eax
  0x0000000115eb3afb: jne    0x0000000115eb3b11
  0x0000000115eb3b01: mov    (%rsp),%eax
  0x0000000115eb3b04: add    $0x8,%rsp
  0x0000000115eb3b08: mov    %ax,(%rcx,%rbx,1)
  0x0000000115eb3b0c: jmpq   0x0000000115eb3b55
  0x0000000115eb3b11: cmp    $0x5,%eax
  0x0000000115eb3b14: jne    0x0000000115eb3b2b
  0x0000000115eb3b1a: mov    (%rsp),%rax
  0x0000000115eb3b1e: add    $0x10,%rsp
  0x0000000115eb3b22: mov    %rax,(%rcx,%rbx,1)
  0x0000000115eb3b26: jmpq   0x0000000115eb3b55
  0x0000000115eb3b2b: cmp    $0x6,%eax
  0x0000000115eb3b2e: jne    0x0000000115eb3b47
  0x0000000115eb3b34: vmovss (%rsp),%xmm0
  0x0000000115eb3b39: add    $0x8,%rsp
  0x0000000115eb3b3d: vmovss %xmm0,(%rcx,%rbx,1)
  0x0000000115eb3b42: jmpq   0x0000000115eb3b55
  0x0000000115eb3b47: vmovsd (%rsp),%xmm0
  0x0000000115eb3b4c: add    $0x10,%rsp
  0x0000000115eb3b50: vmovsd %xmm0,(%rcx,%rbx,1)
  0x0000000115eb3b55: test   %edx,%edx
  0x0000000115eb3b57: je     0x0000000115eb3b62
  0x0000000115eb3b5d: lock addl $0x0,(%rsp)
  0x0000000115eb3b62: movzbl 0x3(%r13),%ebx
  0x0000000115eb3b67: add    $0x3,%r13
  0x0000000115eb3b6b: movabs $0x10e101840,%r10
  0x0000000115eb3b75: jmpq   *(%r10,%rbx,8)
  0x0000000115eb3b79: nopl   0x0(%rax)

----------------------------------------------------------------------
getfield  180 getfield  [0x0000000115eb3ba0, 0x0000000115eb3dc0]  544 bytes

  0x0000000115eb3ba0: push   %rax
  0x0000000115eb3ba1: jmpq   0x0000000115eb3bd0
  0x0000000115eb3ba6: sub    $0x8,%rsp
  0x0000000115eb3baa: vmovss %xmm0,(%rsp)
  0x0000000115eb3baf: jmpq   0x0000000115eb3bd0
  0x0000000115eb3bb4: sub    $0x10,%rsp
  0x0000000115eb3bb8: vmovsd %xmm0,(%rsp)
  0x0000000115eb3bbd: jmpq   0x0000000115eb3bd0
  0x0000000115eb3bc2: sub    $0x10,%rsp
  0x0000000115eb3bc6: mov    %rax,(%rsp)
  0x0000000115eb3bca: jmpq   0x0000000115eb3bd0
  0x0000000115eb3bcf: push   %rax
  0x0000000115eb3bd0: movzwl 0x1(%r13),%edx
  0x0000000115eb3bd5: mov    -0x28(%rbp),%rcx
  0x0000000115eb3bd9: shl    $0x2,%edx
  0x0000000115eb3bdc: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb3be0: shr    $0x10,%ebx
  0x0000000115eb3be3: and    $0xff,%ebx
  0x0000000115eb3be9: cmp    $0xb4,%ebx
  0x0000000115eb3bef: je     0x0000000115eb3c8e
  0x0000000115eb3bf5: mov    $0xb4,%ebx
  0x0000000115eb3bfa: callq  0x0000000115eb3c04
  0x0000000115eb3bff: jmpq   0x0000000115eb3c82
  0x0000000115eb3c04: mov    %rbx,%rsi
  0x0000000115eb3c07: lea    0x8(%rsp),%rax
  0x0000000115eb3c0c: mov    %r13,-0x38(%rbp)
  0x0000000115eb3c10: mov    %r15,%rdi
  0x0000000115eb3c13: mov    %rbp,0x1e8(%r15)
  0x0000000115eb3c1a: mov    %rax,0x1d8(%r15)
  0x0000000115eb3c21: test   $0xf,%esp
  0x0000000115eb3c27: je     0x0000000115eb3c3f
  0x0000000115eb3c2d: sub    $0x8,%rsp
  0x0000000115eb3c31: callq  0x000000010dae87aa
  0x0000000115eb3c36: add    $0x8,%rsp
  0x0000000115eb3c3a: jmpq   0x0000000115eb3c44
  0x0000000115eb3c3f: callq  0x000000010dae87aa
  0x0000000115eb3c44: movabs $0x0,%r10
  0x0000000115eb3c4e: mov    %r10,0x1d8(%r15)
  0x0000000115eb3c55: movabs $0x0,%r10
  0x0000000115eb3c5f: mov    %r10,0x1e8(%r15)
  0x0000000115eb3c66: cmpq   $0x0,0x8(%r15)
  0x0000000115eb3c6e: je     0x0000000115eb3c79
  0x0000000115eb3c74: jmpq   0x0000000115e916e0
  0x0000000115eb3c79: mov    -0x38(%rbp),%r13
  0x0000000115eb3c7d: mov    -0x30(%rbp),%r14
  0x0000000115eb3c81: retq   
  0x0000000115eb3c82: movzwl 0x1(%r13),%edx
  0x0000000115eb3c87: mov    -0x28(%rbp),%rcx
  0x0000000115eb3c8b: shl    $0x2,%edx
  0x0000000115eb3c8e: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb3c93: mov    0x28(%rcx,%rdx,8),%eax
  0x0000000115eb3c97: pop    %rcx
  0x0000000115eb3c98: cmp    (%rcx),%rax
  0x0000000115eb3c9b: shr    $0x1c,%eax
  0x0000000115eb3c9e: and    $0xf,%eax
  0x0000000115eb3ca1: jne    0x0000000115eb3cba
  0x0000000115eb3ca7: movsbl (%rcx,%rbx,1),%eax
  0x0000000115eb3cab: push   %rax
  0x0000000115eb3cac: mov    $0xcc,%ecx
  0x0000000115eb3cb1: mov    %cl,0x0(%r13)
  0x0000000115eb3cb5: jmpq   0x0000000115eb3da7
  0x0000000115eb3cba: cmp    $0x1,%eax
  0x0000000115eb3cbd: jne    0x0000000115eb3cd6
  0x0000000115eb3cc3: movsbl (%rcx,%rbx,1),%eax
  0x0000000115eb3cc7: push   %rax
  0x0000000115eb3cc8: mov    $0xcc,%ecx
  0x0000000115eb3ccd: mov    %cl,0x0(%r13)
  0x0000000115eb3cd1: jmpq   0x0000000115eb3da7
  0x0000000115eb3cd6: cmp    $0x8,%eax
  0x0000000115eb3cd9: jne    0x0000000115eb3cf5
  0x0000000115eb3cdf: mov    (%rcx,%rbx,1),%eax
  0x0000000115eb3ce2: shl    $0x3,%rax
  0x0000000115eb3ce6: push   %rax
  0x0000000115eb3ce7: mov    $0xcb,%ecx
  0x0000000115eb3cec: mov    %cl,0x0(%r13)
  0x0000000115eb3cf0: jmpq   0x0000000115eb3da7
  0x0000000115eb3cf5: cmp    $0x4,%eax
  0x0000000115eb3cf8: jne    0x0000000115eb3d10
  0x0000000115eb3cfe: mov    (%rcx,%rbx,1),%eax
  0x0000000115eb3d01: push   %rax
  0x0000000115eb3d02: mov    $0xd0,%ecx
  0x0000000115eb3d07: mov    %cl,0x0(%r13)
  0x0000000115eb3d0b: jmpq   0x0000000115eb3da7
  0x0000000115eb3d10: cmp    $0x2,%eax
  0x0000000115eb3d13: jne    0x0000000115eb3d2c
  0x0000000115eb3d19: movzwl (%rcx,%rbx,1),%eax
  0x0000000115eb3d1d: push   %rax
  0x0000000115eb3d1e: mov    $0xcd,%ecx
  0x0000000115eb3d23: mov    %cl,0x0(%r13)
  0x0000000115eb3d27: jmpq   0x0000000115eb3da7
  0x0000000115eb3d2c: cmp    $0x3,%eax
  0x0000000115eb3d2f: jne    0x0000000115eb3d48
  0x0000000115eb3d35: movswl (%rcx,%rbx,1),%eax
  0x0000000115eb3d39: push   %rax
  0x0000000115eb3d3a: mov    $0xd2,%ecx
  0x0000000115eb3d3f: mov    %cl,0x0(%r13)
  0x0000000115eb3d43: jmpq   0x0000000115eb3da7
  0x0000000115eb3d48: cmp    $0x5,%eax
  0x0000000115eb3d4b: jne    0x0000000115eb3d6b
  0x0000000115eb3d51: mov    (%rcx,%rbx,1),%rax
  0x0000000115eb3d55: sub    $0x10,%rsp
  0x0000000115eb3d59: mov    %rax,(%rsp)
  0x0000000115eb3d5d: mov    $0xd1,%ecx
  0x0000000115eb3d62: mov    %cl,0x0(%r13)
  0x0000000115eb3d66: jmpq   0x0000000115eb3da7
  0x0000000115eb3d6b: cmp    $0x6,%eax
  0x0000000115eb3d6e: jne    0x0000000115eb3d90
  0x0000000115eb3d74: vmovss (%rcx,%rbx,1),%xmm0
  0x0000000115eb3d79: sub    $0x8,%rsp
  0x0000000115eb3d7d: vmovss %xmm0,(%rsp)
  0x0000000115eb3d82: mov    $0xcf,%ecx
  0x0000000115eb3d87: mov    %cl,0x0(%r13)
  0x0000000115eb3d8b: jmpq   0x0000000115eb3da7
  0x0000000115eb3d90: vmovsd (%rcx,%rbx,1),%xmm0
  0x0000000115eb3d95: sub    $0x10,%rsp
  0x0000000115eb3d99: vmovsd %xmm0,(%rsp)
  0x0000000115eb3d9e: mov    $0xce,%ecx
  0x0000000115eb3da3: mov    %cl,0x0(%r13)
  0x0000000115eb3da7: movzbl 0x3(%r13),%ebx
  0x0000000115eb3dac: add    $0x3,%r13
  0x0000000115eb3db0: movabs $0x10e101840,%r10
  0x0000000115eb3dba: jmpq   *(%r10,%rbx,8)
  0x0000000115eb3dbe: xchg   %ax,%ax

----------------------------------------------------------------------
putfield  181 putfield  [0x0000000115eb3de0, 0x0000000115eb41a0]  960 bytes

  0x0000000115eb3de0: push   %rax
  0x0000000115eb3de1: jmpq   0x0000000115eb3e10
  0x0000000115eb3de6: sub    $0x8,%rsp
  0x0000000115eb3dea: vmovss %xmm0,(%rsp)
  0x0000000115eb3def: jmpq   0x0000000115eb3e10
  0x0000000115eb3df4: sub    $0x10,%rsp
  0x0000000115eb3df8: vmovsd %xmm0,(%rsp)
  0x0000000115eb3dfd: jmpq   0x0000000115eb3e10
  0x0000000115eb3e02: sub    $0x10,%rsp
  0x0000000115eb3e06: mov    %rax,(%rsp)
  0x0000000115eb3e0a: jmpq   0x0000000115eb3e10
  0x0000000115eb3e0f: push   %rax
  0x0000000115eb3e10: movzwl 0x1(%r13),%edx
  0x0000000115eb3e15: mov    -0x28(%rbp),%rcx
  0x0000000115eb3e19: shl    $0x2,%edx
  0x0000000115eb3e1c: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb3e20: shr    $0x18,%ebx
  0x0000000115eb3e23: and    $0xff,%ebx
  0x0000000115eb3e29: cmp    $0xb5,%ebx
  0x0000000115eb3e2f: je     0x0000000115eb3ece
  0x0000000115eb3e35: mov    $0xb5,%ebx
  0x0000000115eb3e3a: callq  0x0000000115eb3e44
  0x0000000115eb3e3f: jmpq   0x0000000115eb3ec2
  0x0000000115eb3e44: mov    %rbx,%rsi
  0x0000000115eb3e47: lea    0x8(%rsp),%rax
  0x0000000115eb3e4c: mov    %r13,-0x38(%rbp)
  0x0000000115eb3e50: mov    %r15,%rdi
  0x0000000115eb3e53: mov    %rbp,0x1e8(%r15)
  0x0000000115eb3e5a: mov    %rax,0x1d8(%r15)
  0x0000000115eb3e61: test   $0xf,%esp
  0x0000000115eb3e67: je     0x0000000115eb3e7f
  0x0000000115eb3e6d: sub    $0x8,%rsp
  0x0000000115eb3e71: callq  0x000000010dae87aa
  0x0000000115eb3e76: add    $0x8,%rsp
  0x0000000115eb3e7a: jmpq   0x0000000115eb3e84
  0x0000000115eb3e7f: callq  0x000000010dae87aa
  0x0000000115eb3e84: movabs $0x0,%r10
  0x0000000115eb3e8e: mov    %r10,0x1d8(%r15)
  0x0000000115eb3e95: movabs $0x0,%r10
  0x0000000115eb3e9f: mov    %r10,0x1e8(%r15)
  0x0000000115eb3ea6: cmpq   $0x0,0x8(%r15)
  0x0000000115eb3eae: je     0x0000000115eb3eb9
  0x0000000115eb3eb4: jmpq   0x0000000115e916e0
  0x0000000115eb3eb9: mov    -0x38(%rbp),%r13
  0x0000000115eb3ebd: mov    -0x30(%rbp),%r14
  0x0000000115eb3ec1: retq   
  0x0000000115eb3ec2: movzwl 0x1(%r13),%edx
  0x0000000115eb3ec7: mov    -0x28(%rbp),%rcx
  0x0000000115eb3ecb: shl    $0x2,%edx
  0x0000000115eb3ece: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb3ed3: mov    0x28(%rcx,%rdx,8),%eax
  0x0000000115eb3ed7: mov    %eax,%edx
  0x0000000115eb3ed9: shr    $0x15,%edx
  0x0000000115eb3edc: and    $0x1,%edx
  0x0000000115eb3edf: shr    $0x1c,%eax
  0x0000000115eb3ee2: and    $0xf,%eax
  0x0000000115eb3ee5: jne    0x0000000115eb3f29
  0x0000000115eb3eeb: mov    (%rsp),%eax
  0x0000000115eb3eee: add    $0x8,%rsp
  0x0000000115eb3ef2: pop    %rcx
  0x0000000115eb3ef3: cmp    (%rcx),%rax
  0x0000000115eb3ef6: mov    %al,(%rcx,%rbx,1)
  0x0000000115eb3ef9: movzwl 0x1(%r13),%ecx
  0x0000000115eb3efe: mov    -0x28(%rbp),%rbx
  0x0000000115eb3f02: shl    $0x2,%ecx
  0x0000000115eb3f05: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb3f09: shr    $0x18,%ebx
  0x0000000115eb3f0c: and    $0xff,%ebx
  0x0000000115eb3f12: mov    $0xd4,%ecx
  0x0000000115eb3f17: cmp    $0x0,%ebx
  0x0000000115eb3f1a: je     0x0000000115eb3f24
  0x0000000115eb3f20: mov    %cl,0x0(%r13)
  0x0000000115eb3f24: jmpq   0x0000000115eb4173
  0x0000000115eb3f29: cmp    $0x1,%eax
  0x0000000115eb3f2c: jne    0x0000000115eb3f73
  0x0000000115eb3f32: mov    (%rsp),%eax
  0x0000000115eb3f35: add    $0x8,%rsp
  0x0000000115eb3f39: pop    %rcx
  0x0000000115eb3f3a: cmp    (%rcx),%rax
  0x0000000115eb3f3d: and    $0x1,%eax
  0x0000000115eb3f40: mov    %al,(%rcx,%rbx,1)
  0x0000000115eb3f43: movzwl 0x1(%r13),%ecx
  0x0000000115eb3f48: mov    -0x28(%rbp),%rbx
  0x0000000115eb3f4c: shl    $0x2,%ecx
  0x0000000115eb3f4f: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb3f53: shr    $0x18,%ebx
  0x0000000115eb3f56: and    $0xff,%ebx
  0x0000000115eb3f5c: mov    $0xd5,%ecx
  0x0000000115eb3f61: cmp    $0x0,%ebx
  0x0000000115eb3f64: je     0x0000000115eb3f6e
  0x0000000115eb3f6a: mov    %cl,0x0(%r13)
  0x0000000115eb3f6e: jmpq   0x0000000115eb4173
  0x0000000115eb3f73: cmp    $0x8,%eax
  0x0000000115eb3f76: jne    0x0000000115eb3fcb
  0x0000000115eb3f7c: pop    %rax
  0x0000000115eb3f7d: pop    %rcx
  0x0000000115eb3f7e: cmp    (%rcx),%rax
  0x0000000115eb3f81: shr    $0x3,%rax
  0x0000000115eb3f85: mov    %eax,(%rcx,%rbx,1)
  0x0000000115eb3f88: shr    $0x9,%rcx
  0x0000000115eb3f8c: movabs $0x10b562000,%r10
  0x0000000115eb3f96: movb   $0x0,(%r10,%rcx,1)
  0x0000000115eb3f9b: movzwl 0x1(%r13),%ecx
  0x0000000115eb3fa0: mov    -0x28(%rbp),%rbx
  0x0000000115eb3fa4: shl    $0x2,%ecx
  0x0000000115eb3fa7: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb3fab: shr    $0x18,%ebx
  0x0000000115eb3fae: and    $0xff,%ebx
  0x0000000115eb3fb4: mov    $0xd3,%ecx
  0x0000000115eb3fb9: cmp    $0x0,%ebx
  0x0000000115eb3fbc: je     0x0000000115eb3fc6
  0x0000000115eb3fc2: mov    %cl,0x0(%r13)
  0x0000000115eb3fc6: jmpq   0x0000000115eb4173
  0x0000000115eb3fcb: cmp    $0x4,%eax
  0x0000000115eb3fce: jne    0x0000000115eb4012
  0x0000000115eb3fd4: mov    (%rsp),%eax
  0x0000000115eb3fd7: add    $0x8,%rsp
  0x0000000115eb3fdb: pop    %rcx
  0x0000000115eb3fdc: cmp    (%rcx),%rax
  0x0000000115eb3fdf: mov    %eax,(%rcx,%rbx,1)
  0x0000000115eb3fe2: movzwl 0x1(%r13),%ecx
  0x0000000115eb3fe7: mov    -0x28(%rbp),%rbx
  0x0000000115eb3feb: shl    $0x2,%ecx
  0x0000000115eb3fee: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb3ff2: shr    $0x18,%ebx
  0x0000000115eb3ff5: and    $0xff,%ebx
  0x0000000115eb3ffb: mov    $0xd9,%ecx
  0x0000000115eb4000: cmp    $0x0,%ebx
  0x0000000115eb4003: je     0x0000000115eb400d
  0x0000000115eb4009: mov    %cl,0x0(%r13)
  0x0000000115eb400d: jmpq   0x0000000115eb4173
  0x0000000115eb4012: cmp    $0x2,%eax
  0x0000000115eb4015: jne    0x0000000115eb405a
  0x0000000115eb401b: mov    (%rsp),%eax
  0x0000000115eb401e: add    $0x8,%rsp
  0x0000000115eb4022: pop    %rcx
  0x0000000115eb4023: cmp    (%rcx),%rax
  0x0000000115eb4026: mov    %ax,(%rcx,%rbx,1)
  0x0000000115eb402a: movzwl 0x1(%r13),%ecx
  0x0000000115eb402f: mov    -0x28(%rbp),%rbx
  0x0000000115eb4033: shl    $0x2,%ecx
  0x0000000115eb4036: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb403a: shr    $0x18,%ebx
  0x0000000115eb403d: and    $0xff,%ebx
  0x0000000115eb4043: mov    $0xd6,%ecx
  0x0000000115eb4048: cmp    $0x0,%ebx
  0x0000000115eb404b: je     0x0000000115eb4055
  0x0000000115eb4051: mov    %cl,0x0(%r13)
  0x0000000115eb4055: jmpq   0x0000000115eb4173
  0x0000000115eb405a: cmp    $0x3,%eax
  0x0000000115eb405d: jne    0x0000000115eb40a2
  0x0000000115eb4063: mov    (%rsp),%eax
  0x0000000115eb4066: add    $0x8,%rsp
  0x0000000115eb406a: pop    %rcx
  0x0000000115eb406b: cmp    (%rcx),%rax
  0x0000000115eb406e: mov    %ax,(%rcx,%rbx,1)
  0x0000000115eb4072: movzwl 0x1(%r13),%ecx
  0x0000000115eb4077: mov    -0x28(%rbp),%rbx
  0x0000000115eb407b: shl    $0x2,%ecx
  0x0000000115eb407e: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb4082: shr    $0x18,%ebx
  0x0000000115eb4085: and    $0xff,%ebx
  0x0000000115eb408b: mov    $0xdb,%ecx
  0x0000000115eb4090: cmp    $0x0,%ebx
  0x0000000115eb4093: je     0x0000000115eb409d
  0x0000000115eb4099: mov    %cl,0x0(%r13)
  0x0000000115eb409d: jmpq   0x0000000115eb4173
  0x0000000115eb40a2: cmp    $0x5,%eax
  0x0000000115eb40a5: jne    0x0000000115eb40eb
  0x0000000115eb40ab: mov    (%rsp),%rax
  0x0000000115eb40af: add    $0x10,%rsp
  0x0000000115eb40b3: pop    %rcx
  0x0000000115eb40b4: cmp    (%rcx),%rax
  0x0000000115eb40b7: mov    %rax,(%rcx,%rbx,1)
  0x0000000115eb40bb: movzwl 0x1(%r13),%ecx
  0x0000000115eb40c0: mov    -0x28(%rbp),%rbx
  0x0000000115eb40c4: shl    $0x2,%ecx
  0x0000000115eb40c7: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb40cb: shr    $0x18,%ebx
  0x0000000115eb40ce: and    $0xff,%ebx
  0x0000000115eb40d4: mov    $0xda,%ecx
  0x0000000115eb40d9: cmp    $0x0,%ebx
  0x0000000115eb40dc: je     0x0000000115eb40e6
  0x0000000115eb40e2: mov    %cl,0x0(%r13)
  0x0000000115eb40e6: jmpq   0x0000000115eb4173
  0x0000000115eb40eb: cmp    $0x6,%eax
  0x0000000115eb40ee: jne    0x0000000115eb4136
  0x0000000115eb40f4: vmovss (%rsp),%xmm0
  0x0000000115eb40f9: add    $0x8,%rsp
  0x0000000115eb40fd: pop    %rcx
  0x0000000115eb40fe: cmp    (%rcx),%rax
  0x0000000115eb4101: vmovss %xmm0,(%rcx,%rbx,1)
  0x0000000115eb4106: movzwl 0x1(%r13),%ecx
  0x0000000115eb410b: mov    -0x28(%rbp),%rbx
  0x0000000115eb410f: shl    $0x2,%ecx
  0x0000000115eb4112: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb4116: shr    $0x18,%ebx
  0x0000000115eb4119: and    $0xff,%ebx
  0x0000000115eb411f: mov    $0xd8,%ecx
  0x0000000115eb4124: cmp    $0x0,%ebx
  0x0000000115eb4127: je     0x0000000115eb4131
  0x0000000115eb412d: mov    %cl,0x0(%r13)
  0x0000000115eb4131: jmpq   0x0000000115eb4173
  0x0000000115eb4136: vmovsd (%rsp),%xmm0
  0x0000000115eb413b: add    $0x10,%rsp
  0x0000000115eb413f: pop    %rcx
  0x0000000115eb4140: cmp    (%rcx),%rax
  0x0000000115eb4143: vmovsd %xmm0,(%rcx,%rbx,1)
  0x0000000115eb4148: movzwl 0x1(%r13),%ecx
  0x0000000115eb414d: mov    -0x28(%rbp),%rbx
  0x0000000115eb4151: shl    $0x2,%ecx
  0x0000000115eb4154: mov    0x10(%rbx,%rcx,8),%ebx
  0x0000000115eb4158: shr    $0x18,%ebx
  0x0000000115eb415b: and    $0xff,%ebx
  0x0000000115eb4161: mov    $0xd7,%ecx
  0x0000000115eb4166: cmp    $0x0,%ebx
  0x0000000115eb4169: je     0x0000000115eb4173
  0x0000000115eb416f: mov    %cl,0x0(%r13)
  0x0000000115eb4173: test   %edx,%edx
  0x0000000115eb4175: je     0x0000000115eb4180
  0x0000000115eb417b: lock addl $0x0,(%rsp)
  0x0000000115eb4180: movzbl 0x3(%r13),%ebx
  0x0000000115eb4185: add    $0x3,%r13
  0x0000000115eb4189: movabs $0x10e101840,%r10
  0x0000000115eb4193: jmpq   *(%r10,%rbx,8)
  0x0000000115eb4197: nop
  0x0000000115eb4198: add    %al,(%rax)
  0x0000000115eb419a: add    %al,(%rax)
  0x0000000115eb419c: add    %al,(%rax)
  0x0000000115eb419e: add    %al,(%rax)

----------------------------------------------------------------------
invokevirtual  182 invokevirtual  [0x0000000115eb41c0, 0x0000000115eb4660]  1184 bytes

  0x0000000115eb41c0: push   %rax
  0x0000000115eb41c1: jmpq   0x0000000115eb41f0
  0x0000000115eb41c6: sub    $0x8,%rsp
  0x0000000115eb41ca: vmovss %xmm0,(%rsp)
  0x0000000115eb41cf: jmpq   0x0000000115eb41f0
  0x0000000115eb41d4: sub    $0x10,%rsp
  0x0000000115eb41d8: vmovsd %xmm0,(%rsp)
  0x0000000115eb41dd: jmpq   0x0000000115eb41f0
  0x0000000115eb41e2: sub    $0x10,%rsp
  0x0000000115eb41e6: mov    %rax,(%rsp)
  0x0000000115eb41ea: jmpq   0x0000000115eb41f0
  0x0000000115eb41ef: push   %rax
  0x0000000115eb41f0: mov    %r13,-0x38(%rbp)
  0x0000000115eb41f4: movzwl 0x1(%r13),%edx
  0x0000000115eb41f9: mov    -0x28(%rbp),%rcx
  0x0000000115eb41fd: shl    $0x2,%edx
  0x0000000115eb4200: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb4204: shr    $0x18,%ebx
  0x0000000115eb4207: and    $0xff,%ebx
  0x0000000115eb420d: cmp    $0xb6,%ebx
  0x0000000115eb4213: je     0x0000000115eb42b2
  0x0000000115eb4219: mov    $0xb6,%ebx
  0x0000000115eb421e: callq  0x0000000115eb4228
  0x0000000115eb4223: jmpq   0x0000000115eb42a6
  0x0000000115eb4228: mov    %rbx,%rsi
  0x0000000115eb422b: lea    0x8(%rsp),%rax
  0x0000000115eb4230: mov    %r13,-0x38(%rbp)
  0x0000000115eb4234: mov    %r15,%rdi
  0x0000000115eb4237: mov    %rbp,0x1e8(%r15)
  0x0000000115eb423e: mov    %rax,0x1d8(%r15)
  0x0000000115eb4245: test   $0xf,%esp
  0x0000000115eb424b: je     0x0000000115eb4263
  0x0000000115eb4251: sub    $0x8,%rsp
  0x0000000115eb4255: callq  0x000000010dae7a90
  0x0000000115eb425a: add    $0x8,%rsp
  0x0000000115eb425e: jmpq   0x0000000115eb4268
  0x0000000115eb4263: callq  0x000000010dae7a90
  0x0000000115eb4268: movabs $0x0,%r10
  0x0000000115eb4272: mov    %r10,0x1d8(%r15)
  0x0000000115eb4279: movabs $0x0,%r10
  0x0000000115eb4283: mov    %r10,0x1e8(%r15)
  0x0000000115eb428a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb4292: je     0x0000000115eb429d
  0x0000000115eb4298: jmpq   0x0000000115e916e0
  0x0000000115eb429d: mov    -0x38(%rbp),%r13
  0x0000000115eb42a1: mov    -0x30(%rbp),%r14
  0x0000000115eb42a5: retq   
  0x0000000115eb42a6: movzwl 0x1(%r13),%edx
  0x0000000115eb42ab: mov    -0x28(%rbp),%rcx
  0x0000000115eb42af: shl    $0x2,%edx
  0x0000000115eb42b2: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb42b7: mov    0x28(%rcx,%rdx,8),%edx
  0x0000000115eb42bb: mov    %edx,%ecx
  0x0000000115eb42bd: and    $0xff,%ecx
  0x0000000115eb42c3: mov    -0x8(%rsp,%rcx,8),%rcx
  0x0000000115eb42c8: mov    %edx,%r13d
  0x0000000115eb42cb: shr    $0x1c,%edx
  0x0000000115eb42ce: movabs $0x10e0f2700,%r10
  0x0000000115eb42d8: mov    (%r10,%rdx,8),%rdx
  0x0000000115eb42dc: push   %rdx
  0x0000000115eb42dd: mov    %r13d,%edx
  0x0000000115eb42e0: mov    -0x38(%rbp),%r13
  0x0000000115eb42e4: mov    %edx,%eax
  0x0000000115eb42e6: and    $0x100000,%eax
  0x0000000115eb42ec: je     0x0000000115eb445c
  0x0000000115eb42f2: cmp    (%rcx),%rax
  0x0000000115eb42f5: mov    -0x20(%rbp),%rax
  0x0000000115eb42f9: test   %rax,%rax
  0x0000000115eb42fc: je     0x0000000115eb4314
  0x0000000115eb4302: addq   $0x1,0x8(%rax)
  0x0000000115eb4307: sbbq   $0x0,0x8(%rax)
  0x0000000115eb430c: add    $0x30,%rax
  0x0000000115eb4310: mov    %rax,-0x20(%rbp)
  0x0000000115eb4314: mov    -0x20(%rbp),%rax
  0x0000000115eb4318: test   %rax,%rax
  0x0000000115eb431b: je     0x0000000115eb4450
  0x0000000115eb4321: cmpb   $0xb,-0x30(%rax)
  0x0000000115eb4325: jne    0x0000000115eb4450
  0x0000000115eb432b: add    $0x8,%rax
  0x0000000115eb432f: mov    -0x8(%rax),%r13
  0x0000000115eb4333: sub    $0x0,%r13d
  0x0000000115eb4337: cmp    $0x2,%r13d
  0x0000000115eb433b: jl     0x0000000115eb4445
  0x0000000115eb4341: mov    0x8(%rbx),%r13
  0x0000000115eb4345: movzwl 0x2c(%r13),%r13d
  0x0000000115eb434a: sub    (%rax),%r13
  0x0000000115eb434d: sub    $0x1,%r13d
  0x0000000115eb4351: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4356: test   %r13,%r13
  0x0000000115eb4359: jne    0x0000000115eb4365
  0x0000000115eb435b: orq    $0x1,0x8(%rax)
  0x0000000115eb4363: jmp    0x0000000115eb43b2
  0x0000000115eb4365: mov    0x8(%r13),%r13d
  0x0000000115eb4369: shl    $0x3,%r13
  0x0000000115eb436d: xor    0x8(%rax),%r13
  0x0000000115eb4371: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4378: je     0x0000000115eb43b2
  0x0000000115eb437a: test   $0x2,%r13
  0x0000000115eb4381: jne    0x0000000115eb43b2
  0x0000000115eb4383: cmpq   $0x0,0x8(%rax)
  0x0000000115eb438b: je     0x0000000115eb43ae
  0x0000000115eb438d: cmpq   $0x1,0x8(%rax)
  0x0000000115eb4395: je     0x0000000115eb43ae
  0x0000000115eb4397: xor    0x8(%rax),%r13
  0x0000000115eb439b: test   $0xfffffffffffffffc,%r13
  0x0000000115eb43a2: je     0x0000000115eb43b2
  0x0000000115eb43a4: orq    $0x2,0x8(%rax)
  0x0000000115eb43ac: jmp    0x0000000115eb43b2
  0x0000000115eb43ae: mov    %r13,0x8(%rax)
  0x0000000115eb43b2: add    $0x10,%rax
  0x0000000115eb43b6: mov    -0x18(%rax),%r13
  0x0000000115eb43ba: sub    $0x2,%r13d
  0x0000000115eb43be: cmp    $0x2,%r13d
  0x0000000115eb43c2: jl     0x0000000115eb4445
  0x0000000115eb43c8: mov    0x8(%rbx),%r13
  0x0000000115eb43cc: movzwl 0x2c(%r13),%r13d
  0x0000000115eb43d1: sub    (%rax),%r13
  0x0000000115eb43d4: sub    $0x1,%r13d
  0x0000000115eb43d8: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb43dd: test   %r13,%r13
  0x0000000115eb43e0: jne    0x0000000115eb43ec
  0x0000000115eb43e2: orq    $0x1,0x8(%rax)
  0x0000000115eb43ea: jmp    0x0000000115eb4439
  0x0000000115eb43ec: mov    0x8(%r13),%r13d
  0x0000000115eb43f0: shl    $0x3,%r13
  0x0000000115eb43f4: xor    0x8(%rax),%r13
  0x0000000115eb43f8: test   $0xfffffffffffffffc,%r13
  0x0000000115eb43ff: je     0x0000000115eb4439
  0x0000000115eb4401: test   $0x2,%r13
  0x0000000115eb4408: jne    0x0000000115eb4439
  0x0000000115eb440a: cmpq   $0x0,0x8(%rax)
  0x0000000115eb4412: je     0x0000000115eb4435
  0x0000000115eb4414: cmpq   $0x1,0x8(%rax)
  0x0000000115eb441c: je     0x0000000115eb4435
  0x0000000115eb441e: xor    0x8(%rax),%r13
  0x0000000115eb4422: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4429: je     0x0000000115eb4439
  0x0000000115eb442b: orq    $0x2,0x8(%rax)
  0x0000000115eb4433: jmp    0x0000000115eb4439
  0x0000000115eb4435: mov    %r13,0x8(%rax)
  0x0000000115eb4439: add    $0x10,%rax
  0x0000000115eb443d: mov    -0x28(%rax),%r13
  0x0000000115eb4441: sub    $0x4,%r13d
  0x0000000115eb4445: shl    $0x3,%r13d
  0x0000000115eb4449: add    %r13,%rax
  0x0000000115eb444c: mov    %rax,-0x20(%rbp)
  0x0000000115eb4450: lea    0x8(%rsp),%r13
  0x0000000115eb4455: mov    %r13,-0x10(%rbp)
  0x0000000115eb4459: jmpq   *0x50(%rbx)
  0x0000000115eb445c: mov    0x8(%rcx),%eax
  0x0000000115eb445f: shl    $0x3,%rax
  0x0000000115eb4463: mov    -0x20(%rbp),%r14
  0x0000000115eb4467: test   %r14,%r14
  0x0000000115eb446a: je     0x0000000115eb4505
  0x0000000115eb4470: mov    0x10(%r14),%rdx
  0x0000000115eb4474: cmp    %rax,%rdx
  0x0000000115eb4477: jne    0x0000000115eb448c
  0x0000000115eb447d: addq   $0x1,0x18(%r14)
  0x0000000115eb4482: sbbq   $0x0,0x18(%r14)
  0x0000000115eb4487: jmpq   0x0000000115eb44fd
  0x0000000115eb448c: test   %rdx,%rdx
  0x0000000115eb448f: je     0x0000000115eb44d7
  0x0000000115eb4495: mov    0x20(%r14),%rdx
  0x0000000115eb4499: cmp    %rax,%rdx
  0x0000000115eb449c: jne    0x0000000115eb44b1
  0x0000000115eb44a2: addq   $0x1,0x28(%r14)
  0x0000000115eb44a7: sbbq   $0x0,0x28(%r14)
  0x0000000115eb44ac: jmpq   0x0000000115eb44fd
  0x0000000115eb44b1: test   %rdx,%rdx
  0x0000000115eb44b4: je     0x0000000115eb44c5
  0x0000000115eb44b6: addq   $0x1,0x8(%r14)
  0x0000000115eb44bb: sbbq   $0x0,0x8(%r14)
  0x0000000115eb44c0: jmpq   0x0000000115eb44fd
  0x0000000115eb44c5: mov    %rax,0x20(%r14)
  0x0000000115eb44c9: mov    $0x1,%edx
  0x0000000115eb44ce: mov    %rdx,0x28(%r14)
  0x0000000115eb44d2: jmpq   0x0000000115eb44fd
  0x0000000115eb44d7: cmp    0x20(%r14),%rax
  0x0000000115eb44db: jne    0x0000000115eb44f0
  0x0000000115eb44e1: addq   $0x1,0x28(%r14)
  0x0000000115eb44e6: sbbq   $0x0,0x28(%r14)
  0x0000000115eb44eb: jmpq   0x0000000115eb44fd
  0x0000000115eb44f0: mov    %rax,0x10(%r14)
  0x0000000115eb44f4: mov    $0x1,%edx
  0x0000000115eb44f9: mov    %rdx,0x18(%r14)
  0x0000000115eb44fd: add    $0x30,%r14
  0x0000000115eb4501: mov    %r14,-0x20(%rbp)
  0x0000000115eb4505: mov    0x1b8(%rax,%rbx,8),%rbx
  0x0000000115eb450d: mov    -0x20(%rbp),%rdx
  0x0000000115eb4511: test   %rdx,%rdx
  0x0000000115eb4514: je     0x0000000115eb4649
  0x0000000115eb451a: cmpb   $0xb,-0x30(%rdx)
  0x0000000115eb451e: jne    0x0000000115eb4649
  0x0000000115eb4524: add    $0x8,%rdx
  0x0000000115eb4528: mov    -0x8(%rdx),%r13
  0x0000000115eb452c: sub    $0x0,%r13d
  0x0000000115eb4530: cmp    $0x2,%r13d
  0x0000000115eb4534: jl     0x0000000115eb463e
  0x0000000115eb453a: mov    0x8(%rbx),%r13
  0x0000000115eb453e: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4543: sub    (%rdx),%r13
  0x0000000115eb4546: sub    $0x1,%r13d
  0x0000000115eb454a: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb454f: test   %r13,%r13
  0x0000000115eb4552: jne    0x0000000115eb455e
  0x0000000115eb4554: orq    $0x1,0x8(%rdx)
  0x0000000115eb455c: jmp    0x0000000115eb45ab
  0x0000000115eb455e: mov    0x8(%r13),%r13d
  0x0000000115eb4562: shl    $0x3,%r13
  0x0000000115eb4566: xor    0x8(%rdx),%r13
  0x0000000115eb456a: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4571: je     0x0000000115eb45ab
  0x0000000115eb4573: test   $0x2,%r13
  0x0000000115eb457a: jne    0x0000000115eb45ab
  0x0000000115eb457c: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb4584: je     0x0000000115eb45a7
  0x0000000115eb4586: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb458e: je     0x0000000115eb45a7
  0x0000000115eb4590: xor    0x8(%rdx),%r13
  0x0000000115eb4594: test   $0xfffffffffffffffc,%r13
  0x0000000115eb459b: je     0x0000000115eb45ab
  0x0000000115eb459d: orq    $0x2,0x8(%rdx)
  0x0000000115eb45a5: jmp    0x0000000115eb45ab
  0x0000000115eb45a7: mov    %r13,0x8(%rdx)
  0x0000000115eb45ab: add    $0x10,%rdx
  0x0000000115eb45af: mov    -0x18(%rdx),%r13
  0x0000000115eb45b3: sub    $0x2,%r13d
  0x0000000115eb45b7: cmp    $0x2,%r13d
  0x0000000115eb45bb: jl     0x0000000115eb463e
  0x0000000115eb45c1: mov    0x8(%rbx),%r13
  0x0000000115eb45c5: movzwl 0x2c(%r13),%r13d
  0x0000000115eb45ca: sub    (%rdx),%r13
  0x0000000115eb45cd: sub    $0x1,%r13d
  0x0000000115eb45d1: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb45d6: test   %r13,%r13
  0x0000000115eb45d9: jne    0x0000000115eb45e5
  0x0000000115eb45db: orq    $0x1,0x8(%rdx)
  0x0000000115eb45e3: jmp    0x0000000115eb4632
  0x0000000115eb45e5: mov    0x8(%r13),%r13d
  0x0000000115eb45e9: shl    $0x3,%r13
  0x0000000115eb45ed: xor    0x8(%rdx),%r13
  0x0000000115eb45f1: test   $0xfffffffffffffffc,%r13
  0x0000000115eb45f8: je     0x0000000115eb4632
  0x0000000115eb45fa: test   $0x2,%r13
  0x0000000115eb4601: jne    0x0000000115eb4632
  0x0000000115eb4603: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb460b: je     0x0000000115eb462e
  0x0000000115eb460d: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb4615: je     0x0000000115eb462e
  0x0000000115eb4617: xor    0x8(%rdx),%r13
  0x0000000115eb461b: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4622: je     0x0000000115eb4632
  0x0000000115eb4624: orq    $0x2,0x8(%rdx)
  0x0000000115eb462c: jmp    0x0000000115eb4632
  0x0000000115eb462e: mov    %r13,0x8(%rdx)
  0x0000000115eb4632: add    $0x10,%rdx
  0x0000000115eb4636: mov    -0x28(%rdx),%r13
  0x0000000115eb463a: sub    $0x4,%r13d
  0x0000000115eb463e: shl    $0x3,%r13d
  0x0000000115eb4642: add    %r13,%rdx
  0x0000000115eb4645: mov    %rdx,-0x20(%rbp)
  0x0000000115eb4649: lea    0x8(%rsp),%r13
  0x0000000115eb464e: mov    %r13,-0x10(%rbp)
  0x0000000115eb4652: jmpq   *0x50(%rbx)
  0x0000000115eb4655: data32 xchg %ax,%ax
  0x0000000115eb4658: add    %al,(%rax)
  0x0000000115eb465a: add    %al,(%rax)
  0x0000000115eb465c: add    %al,(%rax)
  0x0000000115eb465e: add    %al,(%rax)

----------------------------------------------------------------------
invokespecial  183 invokespecial  [0x0000000115eb4680, 0x0000000115eb4920]  672 bytes

  0x0000000115eb4680: push   %rax
  0x0000000115eb4681: jmpq   0x0000000115eb46b0
  0x0000000115eb4686: sub    $0x8,%rsp
  0x0000000115eb468a: vmovss %xmm0,(%rsp)
  0x0000000115eb468f: jmpq   0x0000000115eb46b0
  0x0000000115eb4694: sub    $0x10,%rsp
  0x0000000115eb4698: vmovsd %xmm0,(%rsp)
  0x0000000115eb469d: jmpq   0x0000000115eb46b0
  0x0000000115eb46a2: sub    $0x10,%rsp
  0x0000000115eb46a6: mov    %rax,(%rsp)
  0x0000000115eb46aa: jmpq   0x0000000115eb46b0
  0x0000000115eb46af: push   %rax
  0x0000000115eb46b0: mov    %r13,-0x38(%rbp)
  0x0000000115eb46b4: movzwl 0x1(%r13),%edx
  0x0000000115eb46b9: mov    -0x28(%rbp),%rcx
  0x0000000115eb46bd: shl    $0x2,%edx
  0x0000000115eb46c0: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb46c4: shr    $0x10,%ebx
  0x0000000115eb46c7: and    $0xff,%ebx
  0x0000000115eb46cd: cmp    $0xb7,%ebx
  0x0000000115eb46d3: je     0x0000000115eb4772
  0x0000000115eb46d9: mov    $0xb7,%ebx
  0x0000000115eb46de: callq  0x0000000115eb46e8
  0x0000000115eb46e3: jmpq   0x0000000115eb4766
  0x0000000115eb46e8: mov    %rbx,%rsi
  0x0000000115eb46eb: lea    0x8(%rsp),%rax
  0x0000000115eb46f0: mov    %r13,-0x38(%rbp)
  0x0000000115eb46f4: mov    %r15,%rdi
  0x0000000115eb46f7: mov    %rbp,0x1e8(%r15)
  0x0000000115eb46fe: mov    %rax,0x1d8(%r15)
  0x0000000115eb4705: test   $0xf,%esp
  0x0000000115eb470b: je     0x0000000115eb4723
  0x0000000115eb4711: sub    $0x8,%rsp
  0x0000000115eb4715: callq  0x000000010dae7a90
  0x0000000115eb471a: add    $0x8,%rsp
  0x0000000115eb471e: jmpq   0x0000000115eb4728
  0x0000000115eb4723: callq  0x000000010dae7a90
  0x0000000115eb4728: movabs $0x0,%r10
  0x0000000115eb4732: mov    %r10,0x1d8(%r15)
  0x0000000115eb4739: movabs $0x0,%r10
  0x0000000115eb4743: mov    %r10,0x1e8(%r15)
  0x0000000115eb474a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb4752: je     0x0000000115eb475d
  0x0000000115eb4758: jmpq   0x0000000115e916e0
  0x0000000115eb475d: mov    -0x38(%rbp),%r13
  0x0000000115eb4761: mov    -0x30(%rbp),%r14
  0x0000000115eb4765: retq   
  0x0000000115eb4766: movzwl 0x1(%r13),%edx
  0x0000000115eb476b: mov    -0x28(%rbp),%rcx
  0x0000000115eb476f: shl    $0x2,%edx
  0x0000000115eb4772: mov    0x18(%rcx,%rdx,8),%rbx
  0x0000000115eb4777: mov    0x28(%rcx,%rdx,8),%edx
  0x0000000115eb477b: mov    %edx,%ecx
  0x0000000115eb477d: and    $0xff,%ecx
  0x0000000115eb4783: mov    -0x8(%rsp,%rcx,8),%rcx
  0x0000000115eb4788: shr    $0x1c,%edx
  0x0000000115eb478b: movabs $0x10e0f2700,%r10
  0x0000000115eb4795: mov    (%r10,%rdx,8),%rdx
  0x0000000115eb4799: push   %rdx
  0x0000000115eb479a: cmp    (%rcx),%rax
  0x0000000115eb479d: mov    -0x20(%rbp),%rax
  0x0000000115eb47a1: test   %rax,%rax
  0x0000000115eb47a4: je     0x0000000115eb47bc
  0x0000000115eb47aa: addq   $0x1,0x8(%rax)
  0x0000000115eb47af: sbbq   $0x0,0x8(%rax)
  0x0000000115eb47b4: add    $0x10,%rax
  0x0000000115eb47b8: mov    %rax,-0x20(%rbp)
  0x0000000115eb47bc: mov    -0x20(%rbp),%rax
  0x0000000115eb47c0: test   %rax,%rax
  0x0000000115eb47c3: je     0x0000000115eb48f8
  0x0000000115eb47c9: cmpb   $0xa,-0x10(%rax)
  0x0000000115eb47cd: jne    0x0000000115eb48f8
  0x0000000115eb47d3: add    $0x8,%rax
  0x0000000115eb47d7: mov    -0x8(%rax),%r13
  0x0000000115eb47db: sub    $0x0,%r13d
  0x0000000115eb47df: cmp    $0x2,%r13d
  0x0000000115eb47e3: jl     0x0000000115eb48ed
  0x0000000115eb47e9: mov    0x8(%rbx),%r13
  0x0000000115eb47ed: movzwl 0x2c(%r13),%r13d
  0x0000000115eb47f2: sub    (%rax),%r13
  0x0000000115eb47f5: sub    $0x1,%r13d
  0x0000000115eb47f9: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb47fe: test   %r13,%r13
  0x0000000115eb4801: jne    0x0000000115eb480d
  0x0000000115eb4803: orq    $0x1,0x8(%rax)
  0x0000000115eb480b: jmp    0x0000000115eb485a
  0x0000000115eb480d: mov    0x8(%r13),%r13d
  0x0000000115eb4811: shl    $0x3,%r13
  0x0000000115eb4815: xor    0x8(%rax),%r13
  0x0000000115eb4819: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4820: je     0x0000000115eb485a
  0x0000000115eb4822: test   $0x2,%r13
  0x0000000115eb4829: jne    0x0000000115eb485a
  0x0000000115eb482b: cmpq   $0x0,0x8(%rax)
  0x0000000115eb4833: je     0x0000000115eb4856
  0x0000000115eb4835: cmpq   $0x1,0x8(%rax)
  0x0000000115eb483d: je     0x0000000115eb4856
  0x0000000115eb483f: xor    0x8(%rax),%r13
  0x0000000115eb4843: test   $0xfffffffffffffffc,%r13
  0x0000000115eb484a: je     0x0000000115eb485a
  0x0000000115eb484c: orq    $0x2,0x8(%rax)
  0x0000000115eb4854: jmp    0x0000000115eb485a
  0x0000000115eb4856: mov    %r13,0x8(%rax)
  0x0000000115eb485a: add    $0x10,%rax
  0x0000000115eb485e: mov    -0x18(%rax),%r13
  0x0000000115eb4862: sub    $0x2,%r13d
  0x0000000115eb4866: cmp    $0x2,%r13d
  0x0000000115eb486a: jl     0x0000000115eb48ed
  0x0000000115eb4870: mov    0x8(%rbx),%r13
  0x0000000115eb4874: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4879: sub    (%rax),%r13
  0x0000000115eb487c: sub    $0x1,%r13d
  0x0000000115eb4880: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4885: test   %r13,%r13
  0x0000000115eb4888: jne    0x0000000115eb4894
  0x0000000115eb488a: orq    $0x1,0x8(%rax)
  0x0000000115eb4892: jmp    0x0000000115eb48e1
  0x0000000115eb4894: mov    0x8(%r13),%r13d
  0x0000000115eb4898: shl    $0x3,%r13
  0x0000000115eb489c: xor    0x8(%rax),%r13
  0x0000000115eb48a0: test   $0xfffffffffffffffc,%r13
  0x0000000115eb48a7: je     0x0000000115eb48e1
  0x0000000115eb48a9: test   $0x2,%r13
  0x0000000115eb48b0: jne    0x0000000115eb48e1
  0x0000000115eb48b2: cmpq   $0x0,0x8(%rax)
  0x0000000115eb48ba: je     0x0000000115eb48dd
  0x0000000115eb48bc: cmpq   $0x1,0x8(%rax)
  0x0000000115eb48c4: je     0x0000000115eb48dd
  0x0000000115eb48c6: xor    0x8(%rax),%r13
  0x0000000115eb48ca: test   $0xfffffffffffffffc,%r13
  0x0000000115eb48d1: je     0x0000000115eb48e1
  0x0000000115eb48d3: orq    $0x2,0x8(%rax)
  0x0000000115eb48db: jmp    0x0000000115eb48e1
  0x0000000115eb48dd: mov    %r13,0x8(%rax)
  0x0000000115eb48e1: add    $0x10,%rax
  0x0000000115eb48e5: mov    -0x28(%rax),%r13
  0x0000000115eb48e9: sub    $0x4,%r13d
  0x0000000115eb48ed: shl    $0x3,%r13d
  0x0000000115eb48f1: add    %r13,%rax
  0x0000000115eb48f4: mov    %rax,-0x20(%rbp)
  0x0000000115eb48f8: lea    0x8(%rsp),%r13
  0x0000000115eb48fd: mov    %r13,-0x10(%rbp)
  0x0000000115eb4901: jmpq   *0x50(%rbx)
  0x0000000115eb4904: nopl   0x0(%rax)
  0x0000000115eb4908: add    %al,(%rax)
  0x0000000115eb490a: add    %al,(%rax)
  0x0000000115eb490c: add    %al,(%rax)
  0x0000000115eb490e: add    %al,(%rax)
  0x0000000115eb4910: add    %al,(%rax)
  0x0000000115eb4912: add    %al,(%rax)
  0x0000000115eb4914: add    %al,(%rax)
  0x0000000115eb4916: add    %al,(%rax)
  0x0000000115eb4918: add    %al,(%rax)
  0x0000000115eb491a: add    %al,(%rax)
  0x0000000115eb491c: add    %al,(%rax)
  0x0000000115eb491e: add    %al,(%rax)

----------------------------------------------------------------------
invokestatic  184 invokestatic  [0x0000000115eb4940, 0x0000000115eb4bc0]  640 bytes

  0x0000000115eb4940: push   %rax
  0x0000000115eb4941: jmpq   0x0000000115eb4970
  0x0000000115eb4946: sub    $0x8,%rsp
  0x0000000115eb494a: vmovss %xmm0,(%rsp)
  0x0000000115eb494f: jmpq   0x0000000115eb4970
  0x0000000115eb4954: sub    $0x10,%rsp
  0x0000000115eb4958: vmovsd %xmm0,(%rsp)
  0x0000000115eb495d: jmpq   0x0000000115eb4970
  0x0000000115eb4962: sub    $0x10,%rsp
  0x0000000115eb4966: mov    %rax,(%rsp)
  0x0000000115eb496a: jmpq   0x0000000115eb4970
  0x0000000115eb496f: push   %rax
  0x0000000115eb4970: mov    %r13,-0x38(%rbp)
  0x0000000115eb4974: movzwl 0x1(%r13),%edx
  0x0000000115eb4979: mov    -0x28(%rbp),%rcx
  0x0000000115eb497d: shl    $0x2,%edx
  0x0000000115eb4980: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb4984: shr    $0x10,%ebx
  0x0000000115eb4987: and    $0xff,%ebx
  0x0000000115eb498d: cmp    $0xb8,%ebx
  0x0000000115eb4993: je     0x0000000115eb4a32
  0x0000000115eb4999: mov    $0xb8,%ebx
  0x0000000115eb499e: callq  0x0000000115eb49a8
  0x0000000115eb49a3: jmpq   0x0000000115eb4a26
  0x0000000115eb49a8: mov    %rbx,%rsi
  0x0000000115eb49ab: lea    0x8(%rsp),%rax
  0x0000000115eb49b0: mov    %r13,-0x38(%rbp)
  0x0000000115eb49b4: mov    %r15,%rdi
  0x0000000115eb49b7: mov    %rbp,0x1e8(%r15)
  0x0000000115eb49be: mov    %rax,0x1d8(%r15)
  0x0000000115eb49c5: test   $0xf,%esp
  0x0000000115eb49cb: je     0x0000000115eb49e3
  0x0000000115eb49d1: sub    $0x8,%rsp
  0x0000000115eb49d5: callq  0x000000010dae7a90
  0x0000000115eb49da: add    $0x8,%rsp
  0x0000000115eb49de: jmpq   0x0000000115eb49e8
  0x0000000115eb49e3: callq  0x000000010dae7a90
  0x0000000115eb49e8: movabs $0x0,%r10
  0x0000000115eb49f2: mov    %r10,0x1d8(%r15)
  0x0000000115eb49f9: movabs $0x0,%r10
  0x0000000115eb4a03: mov    %r10,0x1e8(%r15)
  0x0000000115eb4a0a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb4a12: je     0x0000000115eb4a1d
  0x0000000115eb4a18: jmpq   0x0000000115e916e0
  0x0000000115eb4a1d: mov    -0x38(%rbp),%r13
  0x0000000115eb4a21: mov    -0x30(%rbp),%r14
  0x0000000115eb4a25: retq   
  0x0000000115eb4a26: movzwl 0x1(%r13),%edx
  0x0000000115eb4a2b: mov    -0x28(%rbp),%rcx
  0x0000000115eb4a2f: shl    $0x2,%edx
  0x0000000115eb4a32: mov    0x18(%rcx,%rdx,8),%rbx
  0x0000000115eb4a37: mov    0x28(%rcx,%rdx,8),%edx
  0x0000000115eb4a3b: shr    $0x1c,%edx
  0x0000000115eb4a3e: movabs $0x10e0f2700,%r10
  0x0000000115eb4a48: mov    (%r10,%rdx,8),%rdx
  0x0000000115eb4a4c: push   %rdx
  0x0000000115eb4a4d: mov    -0x20(%rbp),%rax
  0x0000000115eb4a51: test   %rax,%rax
  0x0000000115eb4a54: je     0x0000000115eb4a6c
  0x0000000115eb4a5a: addq   $0x1,0x8(%rax)
  0x0000000115eb4a5f: sbbq   $0x0,0x8(%rax)
  0x0000000115eb4a64: add    $0x10,%rax
  0x0000000115eb4a68: mov    %rax,-0x20(%rbp)
  0x0000000115eb4a6c: mov    -0x20(%rbp),%rax
  0x0000000115eb4a70: test   %rax,%rax
  0x0000000115eb4a73: je     0x0000000115eb4ba8
  0x0000000115eb4a79: cmpb   $0xa,-0x10(%rax)
  0x0000000115eb4a7d: jne    0x0000000115eb4ba8
  0x0000000115eb4a83: add    $0x8,%rax
  0x0000000115eb4a87: mov    -0x8(%rax),%r13
  0x0000000115eb4a8b: sub    $0x0,%r13d
  0x0000000115eb4a8f: cmp    $0x2,%r13d
  0x0000000115eb4a93: jl     0x0000000115eb4b9d
  0x0000000115eb4a99: mov    0x8(%rbx),%r13
  0x0000000115eb4a9d: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4aa2: sub    (%rax),%r13
  0x0000000115eb4aa5: sub    $0x1,%r13d
  0x0000000115eb4aa9: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4aae: test   %r13,%r13
  0x0000000115eb4ab1: jne    0x0000000115eb4abd
  0x0000000115eb4ab3: orq    $0x1,0x8(%rax)
  0x0000000115eb4abb: jmp    0x0000000115eb4b0a
  0x0000000115eb4abd: mov    0x8(%r13),%r13d
  0x0000000115eb4ac1: shl    $0x3,%r13
  0x0000000115eb4ac5: xor    0x8(%rax),%r13
  0x0000000115eb4ac9: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4ad0: je     0x0000000115eb4b0a
  0x0000000115eb4ad2: test   $0x2,%r13
  0x0000000115eb4ad9: jne    0x0000000115eb4b0a
  0x0000000115eb4adb: cmpq   $0x0,0x8(%rax)
  0x0000000115eb4ae3: je     0x0000000115eb4b06
  0x0000000115eb4ae5: cmpq   $0x1,0x8(%rax)
  0x0000000115eb4aed: je     0x0000000115eb4b06
  0x0000000115eb4aef: xor    0x8(%rax),%r13
  0x0000000115eb4af3: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4afa: je     0x0000000115eb4b0a
  0x0000000115eb4afc: orq    $0x2,0x8(%rax)
  0x0000000115eb4b04: jmp    0x0000000115eb4b0a
  0x0000000115eb4b06: mov    %r13,0x8(%rax)
  0x0000000115eb4b0a: add    $0x10,%rax
  0x0000000115eb4b0e: mov    -0x18(%rax),%r13
  0x0000000115eb4b12: sub    $0x2,%r13d
  0x0000000115eb4b16: cmp    $0x2,%r13d
  0x0000000115eb4b1a: jl     0x0000000115eb4b9d
  0x0000000115eb4b20: mov    0x8(%rbx),%r13
  0x0000000115eb4b24: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4b29: sub    (%rax),%r13
  0x0000000115eb4b2c: sub    $0x1,%r13d
  0x0000000115eb4b30: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4b35: test   %r13,%r13
  0x0000000115eb4b38: jne    0x0000000115eb4b44
  0x0000000115eb4b3a: orq    $0x1,0x8(%rax)
  0x0000000115eb4b42: jmp    0x0000000115eb4b91
  0x0000000115eb4b44: mov    0x8(%r13),%r13d
  0x0000000115eb4b48: shl    $0x3,%r13
  0x0000000115eb4b4c: xor    0x8(%rax),%r13
  0x0000000115eb4b50: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4b57: je     0x0000000115eb4b91
  0x0000000115eb4b59: test   $0x2,%r13
  0x0000000115eb4b60: jne    0x0000000115eb4b91
  0x0000000115eb4b62: cmpq   $0x0,0x8(%rax)
  0x0000000115eb4b6a: je     0x0000000115eb4b8d
  0x0000000115eb4b6c: cmpq   $0x1,0x8(%rax)
  0x0000000115eb4b74: je     0x0000000115eb4b8d
  0x0000000115eb4b76: xor    0x8(%rax),%r13
  0x0000000115eb4b7a: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4b81: je     0x0000000115eb4b91
  0x0000000115eb4b83: orq    $0x2,0x8(%rax)
  0x0000000115eb4b8b: jmp    0x0000000115eb4b91
  0x0000000115eb4b8d: mov    %r13,0x8(%rax)
  0x0000000115eb4b91: add    $0x10,%rax
  0x0000000115eb4b95: mov    -0x28(%rax),%r13
  0x0000000115eb4b99: sub    $0x4,%r13d
  0x0000000115eb4b9d: shl    $0x3,%r13d
  0x0000000115eb4ba1: add    %r13,%rax
  0x0000000115eb4ba4: mov    %rax,-0x20(%rbp)
  0x0000000115eb4ba8: lea    0x8(%rsp),%r13
  0x0000000115eb4bad: mov    %r13,-0x10(%rbp)
  0x0000000115eb4bb1: jmpq   *0x50(%rbx)
  0x0000000115eb4bb4: nopl   0x0(%rax)
  0x0000000115eb4bb8: add    %al,(%rax)
  0x0000000115eb4bba: add    %al,(%rax)
  0x0000000115eb4bbc: add    %al,(%rax)
  0x0000000115eb4bbe: add    %al,(%rax)

----------------------------------------------------------------------
invokeinterface  185 invokeinterface  [0x0000000115eb4be0, 0x0000000115eb5560]  2432 bytes

  0x0000000115eb4be0: push   %rax
  0x0000000115eb4be1: jmpq   0x0000000115eb4c10
  0x0000000115eb4be6: sub    $0x8,%rsp
  0x0000000115eb4bea: vmovss %xmm0,(%rsp)
  0x0000000115eb4bef: jmpq   0x0000000115eb4c10
  0x0000000115eb4bf4: sub    $0x10,%rsp
  0x0000000115eb4bf8: vmovsd %xmm0,(%rsp)
  0x0000000115eb4bfd: jmpq   0x0000000115eb4c10
  0x0000000115eb4c02: sub    $0x10,%rsp
  0x0000000115eb4c06: mov    %rax,(%rsp)
  0x0000000115eb4c0a: jmpq   0x0000000115eb4c10
  0x0000000115eb4c0f: push   %rax
  0x0000000115eb4c10: mov    %r13,-0x38(%rbp)
  0x0000000115eb4c14: movzwl 0x1(%r13),%edx
  0x0000000115eb4c19: mov    -0x28(%rbp),%rcx
  0x0000000115eb4c1d: shl    $0x2,%edx
  0x0000000115eb4c20: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb4c24: shr    $0x10,%ebx
  0x0000000115eb4c27: and    $0xff,%ebx
  0x0000000115eb4c2d: cmp    $0xb9,%ebx
  0x0000000115eb4c33: je     0x0000000115eb4cd2
  0x0000000115eb4c39: mov    $0xb9,%ebx
  0x0000000115eb4c3e: callq  0x0000000115eb4c48
  0x0000000115eb4c43: jmpq   0x0000000115eb4cc6
  0x0000000115eb4c48: mov    %rbx,%rsi
  0x0000000115eb4c4b: lea    0x8(%rsp),%rax
  0x0000000115eb4c50: mov    %r13,-0x38(%rbp)
  0x0000000115eb4c54: mov    %r15,%rdi
  0x0000000115eb4c57: mov    %rbp,0x1e8(%r15)
  0x0000000115eb4c5e: mov    %rax,0x1d8(%r15)
  0x0000000115eb4c65: test   $0xf,%esp
  0x0000000115eb4c6b: je     0x0000000115eb4c83
  0x0000000115eb4c71: sub    $0x8,%rsp
  0x0000000115eb4c75: callq  0x000000010dae7a90
  0x0000000115eb4c7a: add    $0x8,%rsp
  0x0000000115eb4c7e: jmpq   0x0000000115eb4c88
  0x0000000115eb4c83: callq  0x000000010dae7a90
  0x0000000115eb4c88: movabs $0x0,%r10
  0x0000000115eb4c92: mov    %r10,0x1d8(%r15)
  0x0000000115eb4c99: movabs $0x0,%r10
  0x0000000115eb4ca3: mov    %r10,0x1e8(%r15)
  0x0000000115eb4caa: cmpq   $0x0,0x8(%r15)
  0x0000000115eb4cb2: je     0x0000000115eb4cbd
  0x0000000115eb4cb8: jmpq   0x0000000115e916e0
  0x0000000115eb4cbd: mov    -0x38(%rbp),%r13
  0x0000000115eb4cc1: mov    -0x30(%rbp),%r14
  0x0000000115eb4cc5: retq   
  0x0000000115eb4cc6: movzwl 0x1(%r13),%edx
  0x0000000115eb4ccb: mov    -0x28(%rbp),%rcx
  0x0000000115eb4ccf: shl    $0x2,%edx
  0x0000000115eb4cd2: mov    0x18(%rcx,%rdx,8),%rax
  0x0000000115eb4cd7: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb4cdc: mov    0x28(%rcx,%rdx,8),%edx
  0x0000000115eb4ce0: mov    %edx,%ecx
  0x0000000115eb4ce2: and    $0xff,%ecx
  0x0000000115eb4ce8: mov    -0x8(%rsp,%rcx,8),%rcx
  0x0000000115eb4ced: mov    %edx,%r13d
  0x0000000115eb4cf0: shr    $0x1c,%edx
  0x0000000115eb4cf3: movabs $0x10e0f2750,%r10
  0x0000000115eb4cfd: mov    (%r10,%rdx,8),%rdx
  0x0000000115eb4d01: push   %rdx
  0x0000000115eb4d02: mov    %r13d,%edx
  0x0000000115eb4d05: mov    -0x38(%rbp),%r13
  0x0000000115eb4d09: mov    %edx,%r14d
  0x0000000115eb4d0c: and    $0x800000,%r14d
  0x0000000115eb4d13: je     0x0000000115eb508a
  0x0000000115eb4d19: mov    %edx,%eax
  0x0000000115eb4d1b: and    $0x100000,%eax
  0x0000000115eb4d21: je     0x0000000115eb4e91
  0x0000000115eb4d27: cmp    (%rcx),%rax
  0x0000000115eb4d2a: mov    -0x20(%rbp),%rax
  0x0000000115eb4d2e: test   %rax,%rax
  0x0000000115eb4d31: je     0x0000000115eb4d49
  0x0000000115eb4d37: addq   $0x1,0x8(%rax)
  0x0000000115eb4d3c: sbbq   $0x0,0x8(%rax)
  0x0000000115eb4d41: add    $0x30,%rax
  0x0000000115eb4d45: mov    %rax,-0x20(%rbp)
  0x0000000115eb4d49: mov    -0x20(%rbp),%rax
  0x0000000115eb4d4d: test   %rax,%rax
  0x0000000115eb4d50: je     0x0000000115eb4e85
  0x0000000115eb4d56: cmpb   $0xb,-0x30(%rax)
  0x0000000115eb4d5a: jne    0x0000000115eb4e85
  0x0000000115eb4d60: add    $0x8,%rax
  0x0000000115eb4d64: mov    -0x8(%rax),%r13
  0x0000000115eb4d68: sub    $0x0,%r13d
  0x0000000115eb4d6c: cmp    $0x2,%r13d
  0x0000000115eb4d70: jl     0x0000000115eb4e7a
  0x0000000115eb4d76: mov    0x8(%rbx),%r13
  0x0000000115eb4d7a: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4d7f: sub    (%rax),%r13
  0x0000000115eb4d82: sub    $0x1,%r13d
  0x0000000115eb4d86: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4d8b: test   %r13,%r13
  0x0000000115eb4d8e: jne    0x0000000115eb4d9a
  0x0000000115eb4d90: orq    $0x1,0x8(%rax)
  0x0000000115eb4d98: jmp    0x0000000115eb4de7
  0x0000000115eb4d9a: mov    0x8(%r13),%r13d
  0x0000000115eb4d9e: shl    $0x3,%r13
  0x0000000115eb4da2: xor    0x8(%rax),%r13
  0x0000000115eb4da6: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4dad: je     0x0000000115eb4de7
  0x0000000115eb4daf: test   $0x2,%r13
  0x0000000115eb4db6: jne    0x0000000115eb4de7
  0x0000000115eb4db8: cmpq   $0x0,0x8(%rax)
  0x0000000115eb4dc0: je     0x0000000115eb4de3
  0x0000000115eb4dc2: cmpq   $0x1,0x8(%rax)
  0x0000000115eb4dca: je     0x0000000115eb4de3
  0x0000000115eb4dcc: xor    0x8(%rax),%r13
  0x0000000115eb4dd0: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4dd7: je     0x0000000115eb4de7
  0x0000000115eb4dd9: orq    $0x2,0x8(%rax)
  0x0000000115eb4de1: jmp    0x0000000115eb4de7
  0x0000000115eb4de3: mov    %r13,0x8(%rax)
  0x0000000115eb4de7: add    $0x10,%rax
  0x0000000115eb4deb: mov    -0x18(%rax),%r13
  0x0000000115eb4def: sub    $0x2,%r13d
  0x0000000115eb4df3: cmp    $0x2,%r13d
  0x0000000115eb4df7: jl     0x0000000115eb4e7a
  0x0000000115eb4dfd: mov    0x8(%rbx),%r13
  0x0000000115eb4e01: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4e06: sub    (%rax),%r13
  0x0000000115eb4e09: sub    $0x1,%r13d
  0x0000000115eb4e0d: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4e12: test   %r13,%r13
  0x0000000115eb4e15: jne    0x0000000115eb4e21
  0x0000000115eb4e17: orq    $0x1,0x8(%rax)
  0x0000000115eb4e1f: jmp    0x0000000115eb4e6e
  0x0000000115eb4e21: mov    0x8(%r13),%r13d
  0x0000000115eb4e25: shl    $0x3,%r13
  0x0000000115eb4e29: xor    0x8(%rax),%r13
  0x0000000115eb4e2d: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4e34: je     0x0000000115eb4e6e
  0x0000000115eb4e36: test   $0x2,%r13
  0x0000000115eb4e3d: jne    0x0000000115eb4e6e
  0x0000000115eb4e3f: cmpq   $0x0,0x8(%rax)
  0x0000000115eb4e47: je     0x0000000115eb4e6a
  0x0000000115eb4e49: cmpq   $0x1,0x8(%rax)
  0x0000000115eb4e51: je     0x0000000115eb4e6a
  0x0000000115eb4e53: xor    0x8(%rax),%r13
  0x0000000115eb4e57: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4e5e: je     0x0000000115eb4e6e
  0x0000000115eb4e60: orq    $0x2,0x8(%rax)
  0x0000000115eb4e68: jmp    0x0000000115eb4e6e
  0x0000000115eb4e6a: mov    %r13,0x8(%rax)
  0x0000000115eb4e6e: add    $0x10,%rax
  0x0000000115eb4e72: mov    -0x28(%rax),%r13
  0x0000000115eb4e76: sub    $0x4,%r13d
  0x0000000115eb4e7a: shl    $0x3,%r13d
  0x0000000115eb4e7e: add    %r13,%rax
  0x0000000115eb4e81: mov    %rax,-0x20(%rbp)
  0x0000000115eb4e85: lea    0x8(%rsp),%r13
  0x0000000115eb4e8a: mov    %r13,-0x10(%rbp)
  0x0000000115eb4e8e: jmpq   *0x50(%rbx)
  0x0000000115eb4e91: mov    0x8(%rcx),%eax
  0x0000000115eb4e94: shl    $0x3,%rax
  0x0000000115eb4e98: mov    -0x20(%rbp),%r14
  0x0000000115eb4e9c: test   %r14,%r14
  0x0000000115eb4e9f: je     0x0000000115eb4f3a
  0x0000000115eb4ea5: mov    0x10(%r14),%rdx
  0x0000000115eb4ea9: cmp    %rax,%rdx
  0x0000000115eb4eac: jne    0x0000000115eb4ec1
  0x0000000115eb4eb2: addq   $0x1,0x18(%r14)
  0x0000000115eb4eb7: sbbq   $0x0,0x18(%r14)
  0x0000000115eb4ebc: jmpq   0x0000000115eb4f32
  0x0000000115eb4ec1: test   %rdx,%rdx
  0x0000000115eb4ec4: je     0x0000000115eb4f0c
  0x0000000115eb4eca: mov    0x20(%r14),%rdx
  0x0000000115eb4ece: cmp    %rax,%rdx
  0x0000000115eb4ed1: jne    0x0000000115eb4ee6
  0x0000000115eb4ed7: addq   $0x1,0x28(%r14)
  0x0000000115eb4edc: sbbq   $0x0,0x28(%r14)
  0x0000000115eb4ee1: jmpq   0x0000000115eb4f32
  0x0000000115eb4ee6: test   %rdx,%rdx
  0x0000000115eb4ee9: je     0x0000000115eb4efa
  0x0000000115eb4eeb: addq   $0x1,0x8(%r14)
  0x0000000115eb4ef0: sbbq   $0x0,0x8(%r14)
  0x0000000115eb4ef5: jmpq   0x0000000115eb4f32
  0x0000000115eb4efa: mov    %rax,0x20(%r14)
  0x0000000115eb4efe: mov    $0x1,%edx
  0x0000000115eb4f03: mov    %rdx,0x28(%r14)
  0x0000000115eb4f07: jmpq   0x0000000115eb4f32
  0x0000000115eb4f0c: cmp    0x20(%r14),%rax
  0x0000000115eb4f10: jne    0x0000000115eb4f25
  0x0000000115eb4f16: addq   $0x1,0x28(%r14)
  0x0000000115eb4f1b: sbbq   $0x0,0x28(%r14)
  0x0000000115eb4f20: jmpq   0x0000000115eb4f32
  0x0000000115eb4f25: mov    %rax,0x10(%r14)
  0x0000000115eb4f29: mov    $0x1,%edx
  0x0000000115eb4f2e: mov    %rdx,0x18(%r14)
  0x0000000115eb4f32: add    $0x30,%r14
  0x0000000115eb4f36: mov    %r14,-0x20(%rbp)
  0x0000000115eb4f3a: mov    0x1b8(%rax,%rbx,8),%rbx
  0x0000000115eb4f42: mov    -0x20(%rbp),%rdx
  0x0000000115eb4f46: test   %rdx,%rdx
  0x0000000115eb4f49: je     0x0000000115eb507e
  0x0000000115eb4f4f: cmpb   $0xb,-0x30(%rdx)
  0x0000000115eb4f53: jne    0x0000000115eb507e
  0x0000000115eb4f59: add    $0x8,%rdx
  0x0000000115eb4f5d: mov    -0x8(%rdx),%r13
  0x0000000115eb4f61: sub    $0x0,%r13d
  0x0000000115eb4f65: cmp    $0x2,%r13d
  0x0000000115eb4f69: jl     0x0000000115eb5073
  0x0000000115eb4f6f: mov    0x8(%rbx),%r13
  0x0000000115eb4f73: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4f78: sub    (%rdx),%r13
  0x0000000115eb4f7b: sub    $0x1,%r13d
  0x0000000115eb4f7f: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb4f84: test   %r13,%r13
  0x0000000115eb4f87: jne    0x0000000115eb4f93
  0x0000000115eb4f89: orq    $0x1,0x8(%rdx)
  0x0000000115eb4f91: jmp    0x0000000115eb4fe0
  0x0000000115eb4f93: mov    0x8(%r13),%r13d
  0x0000000115eb4f97: shl    $0x3,%r13
  0x0000000115eb4f9b: xor    0x8(%rdx),%r13
  0x0000000115eb4f9f: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4fa6: je     0x0000000115eb4fe0
  0x0000000115eb4fa8: test   $0x2,%r13
  0x0000000115eb4faf: jne    0x0000000115eb4fe0
  0x0000000115eb4fb1: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb4fb9: je     0x0000000115eb4fdc
  0x0000000115eb4fbb: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb4fc3: je     0x0000000115eb4fdc
  0x0000000115eb4fc5: xor    0x8(%rdx),%r13
  0x0000000115eb4fc9: test   $0xfffffffffffffffc,%r13
  0x0000000115eb4fd0: je     0x0000000115eb4fe0
  0x0000000115eb4fd2: orq    $0x2,0x8(%rdx)
  0x0000000115eb4fda: jmp    0x0000000115eb4fe0
  0x0000000115eb4fdc: mov    %r13,0x8(%rdx)
  0x0000000115eb4fe0: add    $0x10,%rdx
  0x0000000115eb4fe4: mov    -0x18(%rdx),%r13
  0x0000000115eb4fe8: sub    $0x2,%r13d
  0x0000000115eb4fec: cmp    $0x2,%r13d
  0x0000000115eb4ff0: jl     0x0000000115eb5073
  0x0000000115eb4ff6: mov    0x8(%rbx),%r13
  0x0000000115eb4ffa: movzwl 0x2c(%r13),%r13d
  0x0000000115eb4fff: sub    (%rdx),%r13
  0x0000000115eb5002: sub    $0x1,%r13d
  0x0000000115eb5006: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb500b: test   %r13,%r13
  0x0000000115eb500e: jne    0x0000000115eb501a
  0x0000000115eb5010: orq    $0x1,0x8(%rdx)
  0x0000000115eb5018: jmp    0x0000000115eb5067
  0x0000000115eb501a: mov    0x8(%r13),%r13d
  0x0000000115eb501e: shl    $0x3,%r13
  0x0000000115eb5022: xor    0x8(%rdx),%r13
  0x0000000115eb5026: test   $0xfffffffffffffffc,%r13
  0x0000000115eb502d: je     0x0000000115eb5067
  0x0000000115eb502f: test   $0x2,%r13
  0x0000000115eb5036: jne    0x0000000115eb5067
  0x0000000115eb5038: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb5040: je     0x0000000115eb5063
  0x0000000115eb5042: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb504a: je     0x0000000115eb5063
  0x0000000115eb504c: xor    0x8(%rdx),%r13
  0x0000000115eb5050: test   $0xfffffffffffffffc,%r13
  0x0000000115eb5057: je     0x0000000115eb5067
  0x0000000115eb5059: orq    $0x2,0x8(%rdx)
  0x0000000115eb5061: jmp    0x0000000115eb5067
  0x0000000115eb5063: mov    %r13,0x8(%rdx)
  0x0000000115eb5067: add    $0x10,%rdx
  0x0000000115eb506b: mov    -0x28(%rdx),%r13
  0x0000000115eb506f: sub    $0x4,%r13d
  0x0000000115eb5073: shl    $0x3,%r13d
  0x0000000115eb5077: add    %r13,%rdx
  0x0000000115eb507a: mov    %rdx,-0x20(%rbp)
  0x0000000115eb507e: lea    0x8(%rsp),%r13
  0x0000000115eb5083: mov    %r13,-0x10(%rbp)
  0x0000000115eb5087: jmpq   *0x50(%rbx)
  0x0000000115eb508a: mov    -0x30(%rbp),%r14
  0x0000000115eb508e: mov    0x8(%rcx),%edx
  0x0000000115eb5091: shl    $0x3,%rdx
  0x0000000115eb5095: mov    -0x20(%rbp),%r13
  0x0000000115eb5099: test   %r13,%r13
  0x0000000115eb509c: je     0x0000000115eb5139
  0x0000000115eb50a2: mov    0x10(%r13),%r14
  0x0000000115eb50a6: cmp    %rdx,%r14
  0x0000000115eb50a9: jne    0x0000000115eb50be
  0x0000000115eb50af: addq   $0x1,0x18(%r13)
  0x0000000115eb50b4: sbbq   $0x0,0x18(%r13)
  0x0000000115eb50b9: jmpq   0x0000000115eb5131
  0x0000000115eb50be: test   %r14,%r14
  0x0000000115eb50c1: je     0x0000000115eb510a
  0x0000000115eb50c7: mov    0x20(%r13),%r14
  0x0000000115eb50cb: cmp    %rdx,%r14
  0x0000000115eb50ce: jne    0x0000000115eb50e3
  0x0000000115eb50d4: addq   $0x1,0x28(%r13)
  0x0000000115eb50d9: sbbq   $0x0,0x28(%r13)
  0x0000000115eb50de: jmpq   0x0000000115eb5131
  0x0000000115eb50e3: test   %r14,%r14
  0x0000000115eb50e6: je     0x0000000115eb50f7
  0x0000000115eb50e8: addq   $0x1,0x8(%r13)
  0x0000000115eb50ed: sbbq   $0x0,0x8(%r13)
  0x0000000115eb50f2: jmpq   0x0000000115eb5131
  0x0000000115eb50f7: mov    %rdx,0x20(%r13)
  0x0000000115eb50fb: mov    $0x1,%r14d
  0x0000000115eb5101: mov    %r14,0x28(%r13)
  0x0000000115eb5105: jmpq   0x0000000115eb5131
  0x0000000115eb510a: cmp    0x20(%r13),%rdx
  0x0000000115eb510e: jne    0x0000000115eb5123
  0x0000000115eb5114: addq   $0x1,0x28(%r13)
  0x0000000115eb5119: sbbq   $0x0,0x28(%r13)
  0x0000000115eb511e: jmpq   0x0000000115eb5131
  0x0000000115eb5123: mov    %rdx,0x10(%r13)
  0x0000000115eb5127: mov    $0x1,%r14d
  0x0000000115eb512d: mov    %r14,0x18(%r13)
  0x0000000115eb5131: add    $0x30,%r13
  0x0000000115eb5135: mov    %r13,-0x20(%rbp)
  0x0000000115eb5139: mov    0x120(%rdx),%r13d
  0x0000000115eb5140: lea    0x1b8(%rdx,%r13,8),%r13
  0x0000000115eb5148: lea    (%rdx,%rbx,8),%rdx
  0x0000000115eb514c: mov    0x0(%r13),%rbx
  0x0000000115eb5150: cmp    %rbx,%rax
  0x0000000115eb5153: je     0x0000000115eb516b
  0x0000000115eb5155: test   %rbx,%rbx
  0x0000000115eb5158: je     0x0000000115eb5440
  0x0000000115eb515e: add    $0x10,%r13
  0x0000000115eb5162: mov    0x0(%r13),%rbx
  0x0000000115eb5166: cmp    %rbx,%rax
  0x0000000115eb5169: jne    0x0000000115eb5155
  0x0000000115eb516b: mov    0x8(%r13),%r13d
  0x0000000115eb516f: mov    (%rdx,%r13,1),%rbx
  0x0000000115eb5173: test   %rbx,%rbx
  0x0000000115eb5176: je     0x0000000115eb533b
  0x0000000115eb517c: mov    -0x20(%rbp),%rdx
  0x0000000115eb5180: test   %rdx,%rdx
  0x0000000115eb5183: je     0x0000000115eb52b8
  0x0000000115eb5189: cmpb   $0xb,-0x30(%rdx)
  0x0000000115eb518d: jne    0x0000000115eb52b8
  0x0000000115eb5193: add    $0x8,%rdx
  0x0000000115eb5197: mov    -0x8(%rdx),%r13
  0x0000000115eb519b: sub    $0x0,%r13d
  0x0000000115eb519f: cmp    $0x2,%r13d
  0x0000000115eb51a3: jl     0x0000000115eb52ad
  0x0000000115eb51a9: mov    0x8(%rbx),%r13
  0x0000000115eb51ad: movzwl 0x2c(%r13),%r13d
  0x0000000115eb51b2: sub    (%rdx),%r13
  0x0000000115eb51b5: sub    $0x1,%r13d
  0x0000000115eb51b9: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb51be: test   %r13,%r13
  0x0000000115eb51c1: jne    0x0000000115eb51cd
  0x0000000115eb51c3: orq    $0x1,0x8(%rdx)
  0x0000000115eb51cb: jmp    0x0000000115eb521a
  0x0000000115eb51cd: mov    0x8(%r13),%r13d
  0x0000000115eb51d1: shl    $0x3,%r13
  0x0000000115eb51d5: xor    0x8(%rdx),%r13
  0x0000000115eb51d9: test   $0xfffffffffffffffc,%r13
  0x0000000115eb51e0: je     0x0000000115eb521a
  0x0000000115eb51e2: test   $0x2,%r13
  0x0000000115eb51e9: jne    0x0000000115eb521a
  0x0000000115eb51eb: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb51f3: je     0x0000000115eb5216
  0x0000000115eb51f5: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb51fd: je     0x0000000115eb5216
  0x0000000115eb51ff: xor    0x8(%rdx),%r13
  0x0000000115eb5203: test   $0xfffffffffffffffc,%r13
  0x0000000115eb520a: je     0x0000000115eb521a
  0x0000000115eb520c: orq    $0x2,0x8(%rdx)
  0x0000000115eb5214: jmp    0x0000000115eb521a
  0x0000000115eb5216: mov    %r13,0x8(%rdx)
  0x0000000115eb521a: add    $0x10,%rdx
  0x0000000115eb521e: mov    -0x18(%rdx),%r13
  0x0000000115eb5222: sub    $0x2,%r13d
  0x0000000115eb5226: cmp    $0x2,%r13d
  0x0000000115eb522a: jl     0x0000000115eb52ad
  0x0000000115eb5230: mov    0x8(%rbx),%r13
  0x0000000115eb5234: movzwl 0x2c(%r13),%r13d
  0x0000000115eb5239: sub    (%rdx),%r13
  0x0000000115eb523c: sub    $0x1,%r13d
  0x0000000115eb5240: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb5245: test   %r13,%r13
  0x0000000115eb5248: jne    0x0000000115eb5254
  0x0000000115eb524a: orq    $0x1,0x8(%rdx)
  0x0000000115eb5252: jmp    0x0000000115eb52a1
  0x0000000115eb5254: mov    0x8(%r13),%r13d
  0x0000000115eb5258: shl    $0x3,%r13
  0x0000000115eb525c: xor    0x8(%rdx),%r13
  0x0000000115eb5260: test   $0xfffffffffffffffc,%r13
  0x0000000115eb5267: je     0x0000000115eb52a1
  0x0000000115eb5269: test   $0x2,%r13
  0x0000000115eb5270: jne    0x0000000115eb52a1
  0x0000000115eb5272: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb527a: je     0x0000000115eb529d
  0x0000000115eb527c: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb5284: je     0x0000000115eb529d
  0x0000000115eb5286: xor    0x8(%rdx),%r13
  0x0000000115eb528a: test   $0xfffffffffffffffc,%r13
  0x0000000115eb5291: je     0x0000000115eb52a1
  0x0000000115eb5293: orq    $0x2,0x8(%rdx)
  0x0000000115eb529b: jmp    0x0000000115eb52a1
  0x0000000115eb529d: mov    %r13,0x8(%rdx)
  0x0000000115eb52a1: add    $0x10,%rdx
  0x0000000115eb52a5: mov    -0x28(%rdx),%r13
  0x0000000115eb52a9: sub    $0x4,%r13d
  0x0000000115eb52ad: shl    $0x3,%r13d
  0x0000000115eb52b1: add    %r13,%rdx
  0x0000000115eb52b4: mov    %rdx,-0x20(%rbp)
  0x0000000115eb52b8: lea    0x8(%rsp),%r13
  0x0000000115eb52bd: mov    %r13,-0x10(%rbp)
  0x0000000115eb52c1: jmpq   *0x50(%rbx)
  0x0000000115eb52c4: mov    %rsp,-0x28(%rsp)
  0x0000000115eb52c9: sub    $0x80,%rsp
  0x0000000115eb52d0: mov    %rax,0x78(%rsp)
  0x0000000115eb52d5: mov    %rcx,0x70(%rsp)
  0x0000000115eb52da: mov    %rdx,0x68(%rsp)
  0x0000000115eb52df: mov    %rbx,0x60(%rsp)
  0x0000000115eb52e4: mov    %rbp,0x50(%rsp)
  0x0000000115eb52e9: mov    %rsi,0x48(%rsp)
  0x0000000115eb52ee: mov    %rdi,0x40(%rsp)
  0x0000000115eb52f3: mov    %r8,0x38(%rsp)
  0x0000000115eb52f8: mov    %r9,0x30(%rsp)
  0x0000000115eb52fd: mov    %r10,0x28(%rsp)
  0x0000000115eb5302: mov    %r11,0x20(%rsp)
  0x0000000115eb5307: mov    %r12,0x18(%rsp)
  0x0000000115eb530c: mov    %r13,0x10(%rsp)
  0x0000000115eb5311: mov    %r14,0x8(%rsp)
  0x0000000115eb5316: mov    %r15,(%rsp)
  0x0000000115eb531a: movabs $0x10ddd8000,%rdi
  0x0000000115eb5324: movabs $0x115eb52c4,%rsi
  0x0000000115eb532e: mov    %rsp,%rdx
  0x0000000115eb5331: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb5335: callq  0x000000010dc0341e
  0x0000000115eb533a: hlt    
  0x0000000115eb533b: pop    %rbx
  0x0000000115eb533c: mov    -0x38(%rbp),%r13
  0x0000000115eb5340: mov    -0x30(%rbp),%r14
  0x0000000115eb5344: callq  0x0000000115eb534e
  0x0000000115eb5349: jmpq   0x0000000115eb53c9
  0x0000000115eb534e: lea    0x8(%rsp),%rax
  0x0000000115eb5353: mov    %r13,-0x38(%rbp)
  0x0000000115eb5357: mov    %r15,%rdi
  0x0000000115eb535a: mov    %rbp,0x1e8(%r15)
  0x0000000115eb5361: mov    %rax,0x1d8(%r15)
  0x0000000115eb5368: test   $0xf,%esp
  0x0000000115eb536e: je     0x0000000115eb5386
  0x0000000115eb5374: sub    $0x8,%rsp
  0x0000000115eb5378: callq  0x000000010dae85b4
  0x0000000115eb537d: add    $0x8,%rsp
  0x0000000115eb5381: jmpq   0x0000000115eb538b
  0x0000000115eb5386: callq  0x000000010dae85b4
  0x0000000115eb538b: movabs $0x0,%r10
  0x0000000115eb5395: mov    %r10,0x1d8(%r15)
  0x0000000115eb539c: movabs $0x0,%r10
  0x0000000115eb53a6: mov    %r10,0x1e8(%r15)
  0x0000000115eb53ad: cmpq   $0x0,0x8(%r15)
  0x0000000115eb53b5: je     0x0000000115eb53c0
  0x0000000115eb53bb: jmpq   0x0000000115e916e0
  0x0000000115eb53c0: mov    -0x38(%rbp),%r13
  0x0000000115eb53c4: mov    -0x30(%rbp),%r14
  0x0000000115eb53c8: retq   
  0x0000000115eb53c9: mov    %rsp,-0x28(%rsp)
  0x0000000115eb53ce: sub    $0x80,%rsp
  0x0000000115eb53d5: mov    %rax,0x78(%rsp)
  0x0000000115eb53da: mov    %rcx,0x70(%rsp)
  0x0000000115eb53df: mov    %rdx,0x68(%rsp)
  0x0000000115eb53e4: mov    %rbx,0x60(%rsp)
  0x0000000115eb53e9: mov    %rbp,0x50(%rsp)
  0x0000000115eb53ee: mov    %rsi,0x48(%rsp)
  0x0000000115eb53f3: mov    %rdi,0x40(%rsp)
  0x0000000115eb53f8: mov    %r8,0x38(%rsp)
  0x0000000115eb53fd: mov    %r9,0x30(%rsp)
  0x0000000115eb5402: mov    %r10,0x28(%rsp)
  0x0000000115eb5407: mov    %r11,0x20(%rsp)
  0x0000000115eb540c: mov    %r12,0x18(%rsp)
  0x0000000115eb5411: mov    %r13,0x10(%rsp)
  0x0000000115eb5416: mov    %r14,0x8(%rsp)
  0x0000000115eb541b: mov    %r15,(%rsp)
  0x0000000115eb541f: movabs $0x10ddd8000,%rdi
  0x0000000115eb5429: movabs $0x115eb53c9,%rsi
  0x0000000115eb5433: mov    %rsp,%rdx
  0x0000000115eb5436: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb543a: callq  0x000000010dc0341e
  0x0000000115eb543f: hlt    
  0x0000000115eb5440: pop    %rbx
  0x0000000115eb5441: mov    -0x38(%rbp),%r13
  0x0000000115eb5445: mov    -0x30(%rbp),%r14
  0x0000000115eb5449: callq  0x0000000115eb5453
  0x0000000115eb544e: jmpq   0x0000000115eb54ce
  0x0000000115eb5453: lea    0x8(%rsp),%rax
  0x0000000115eb5458: mov    %r13,-0x38(%rbp)
  0x0000000115eb545c: mov    %r15,%rdi
  0x0000000115eb545f: mov    %rbp,0x1e8(%r15)
  0x0000000115eb5466: mov    %rax,0x1d8(%r15)
  0x0000000115eb546d: test   $0xf,%esp
  0x0000000115eb5473: je     0x0000000115eb548b
  0x0000000115eb5479: sub    $0x8,%rsp
  0x0000000115eb547d: callq  0x000000010dae8560
  0x0000000115eb5482: add    $0x8,%rsp
  0x0000000115eb5486: jmpq   0x0000000115eb5490
  0x0000000115eb548b: callq  0x000000010dae8560
  0x0000000115eb5490: movabs $0x0,%r10
  0x0000000115eb549a: mov    %r10,0x1d8(%r15)
  0x0000000115eb54a1: movabs $0x0,%r10
  0x0000000115eb54ab: mov    %r10,0x1e8(%r15)
  0x0000000115eb54b2: cmpq   $0x0,0x8(%r15)
  0x0000000115eb54ba: je     0x0000000115eb54c5
  0x0000000115eb54c0: jmpq   0x0000000115e916e0
  0x0000000115eb54c5: mov    -0x38(%rbp),%r13
  0x0000000115eb54c9: mov    -0x30(%rbp),%r14
  0x0000000115eb54cd: retq   
  0x0000000115eb54ce: mov    %rsp,-0x28(%rsp)
  0x0000000115eb54d3: sub    $0x80,%rsp
  0x0000000115eb54da: mov    %rax,0x78(%rsp)
  0x0000000115eb54df: mov    %rcx,0x70(%rsp)
  0x0000000115eb54e4: mov    %rdx,0x68(%rsp)
  0x0000000115eb54e9: mov    %rbx,0x60(%rsp)
  0x0000000115eb54ee: mov    %rbp,0x50(%rsp)
  0x0000000115eb54f3: mov    %rsi,0x48(%rsp)
  0x0000000115eb54f8: mov    %rdi,0x40(%rsp)
  0x0000000115eb54fd: mov    %r8,0x38(%rsp)
  0x0000000115eb5502: mov    %r9,0x30(%rsp)
  0x0000000115eb5507: mov    %r10,0x28(%rsp)
  0x0000000115eb550c: mov    %r11,0x20(%rsp)
  0x0000000115eb5511: mov    %r12,0x18(%rsp)
  0x0000000115eb5516: mov    %r13,0x10(%rsp)
  0x0000000115eb551b: mov    %r14,0x8(%rsp)
  0x0000000115eb5520: mov    %r15,(%rsp)
  0x0000000115eb5524: movabs $0x10ddd8000,%rdi
  0x0000000115eb552e: movabs $0x115eb54ce,%rsi
  0x0000000115eb5538: mov    %rsp,%rdx
  0x0000000115eb553b: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb553f: callq  0x000000010dc0341e
  0x0000000115eb5544: hlt    
  0x0000000115eb5545: data32 xchg %ax,%ax
  0x0000000115eb5548: add    %al,(%rax)
  0x0000000115eb554a: add    %al,(%rax)
  0x0000000115eb554c: add    %al,(%rax)
  0x0000000115eb554e: add    %al,(%rax)
  0x0000000115eb5550: add    %al,(%rax)
  0x0000000115eb5552: add    %al,(%rax)
  0x0000000115eb5554: add    %al,(%rax)
  0x0000000115eb5556: add    %al,(%rax)
  0x0000000115eb5558: add    %al,(%rax)
  0x0000000115eb555a: add    %al,(%rax)
  0x0000000115eb555c: add    %al,(%rax)
  0x0000000115eb555e: add    %al,(%rax)

----------------------------------------------------------------------
invokedynamic  186 invokedynamic  [0x0000000115eb5580, 0x0000000115eb5840]  704 bytes

  0x0000000115eb5580: push   %rax
  0x0000000115eb5581: jmpq   0x0000000115eb55b0
  0x0000000115eb5586: sub    $0x8,%rsp
  0x0000000115eb558a: vmovss %xmm0,(%rsp)
  0x0000000115eb558f: jmpq   0x0000000115eb55b0
  0x0000000115eb5594: sub    $0x10,%rsp
  0x0000000115eb5598: vmovsd %xmm0,(%rsp)
  0x0000000115eb559d: jmpq   0x0000000115eb55b0
  0x0000000115eb55a2: sub    $0x10,%rsp
  0x0000000115eb55a6: mov    %rax,(%rsp)
  0x0000000115eb55aa: jmpq   0x0000000115eb55b0
  0x0000000115eb55af: push   %rax
  0x0000000115eb55b0: mov    %r13,-0x38(%rbp)
  0x0000000115eb55b4: mov    0x1(%r13),%edx
  0x0000000115eb55b8: not    %edx
  0x0000000115eb55ba: mov    -0x28(%rbp),%rcx
  0x0000000115eb55be: shl    $0x2,%edx
  0x0000000115eb55c1: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb55c5: shr    $0x10,%ebx
  0x0000000115eb55c8: and    $0xff,%ebx
  0x0000000115eb55ce: cmp    $0xba,%ebx
  0x0000000115eb55d4: je     0x0000000115eb5674
  0x0000000115eb55da: mov    $0xba,%ebx
  0x0000000115eb55df: callq  0x0000000115eb55e9
  0x0000000115eb55e4: jmpq   0x0000000115eb5667
  0x0000000115eb55e9: mov    %rbx,%rsi
  0x0000000115eb55ec: lea    0x8(%rsp),%rax
  0x0000000115eb55f1: mov    %r13,-0x38(%rbp)
  0x0000000115eb55f5: mov    %r15,%rdi
  0x0000000115eb55f8: mov    %rbp,0x1e8(%r15)
  0x0000000115eb55ff: mov    %rax,0x1d8(%r15)
  0x0000000115eb5606: test   $0xf,%esp
  0x0000000115eb560c: je     0x0000000115eb5624
  0x0000000115eb5612: sub    $0x8,%rsp
  0x0000000115eb5616: callq  0x000000010dae74ee
  0x0000000115eb561b: add    $0x8,%rsp
  0x0000000115eb561f: jmpq   0x0000000115eb5629
  0x0000000115eb5624: callq  0x000000010dae74ee
  0x0000000115eb5629: movabs $0x0,%r10
  0x0000000115eb5633: mov    %r10,0x1d8(%r15)
  0x0000000115eb563a: movabs $0x0,%r10
  0x0000000115eb5644: mov    %r10,0x1e8(%r15)
  0x0000000115eb564b: cmpq   $0x0,0x8(%r15)
  0x0000000115eb5653: je     0x0000000115eb565e
  0x0000000115eb5659: jmpq   0x0000000115e916e0
  0x0000000115eb565e: mov    -0x38(%rbp),%r13
  0x0000000115eb5662: mov    -0x30(%rbp),%r14
  0x0000000115eb5666: retq   
  0x0000000115eb5667: mov    0x1(%r13),%edx
  0x0000000115eb566b: not    %edx
  0x0000000115eb566d: mov    -0x28(%rbp),%rcx
  0x0000000115eb5671: shl    $0x2,%edx
  0x0000000115eb5674: mov    0x18(%rcx,%rdx,8),%rbx
  0x0000000115eb5679: mov    0x20(%rcx,%rdx,8),%rax
  0x0000000115eb567e: mov    0x28(%rcx,%rdx,8),%edx
  0x0000000115eb5682: test   $0x1000000,%edx
  0x0000000115eb5688: je     0x0000000115eb56b4
  0x0000000115eb568e: push   %rbx
  0x0000000115eb568f: mov    %rax,%rbx
  0x0000000115eb5692: shl    $0x2,%ebx
  0x0000000115eb5695: mov    -0x18(%rbp),%rax
  0x0000000115eb5699: mov    0x8(%rax),%rax
  0x0000000115eb569d: mov    0x8(%rax),%rax
  0x0000000115eb56a1: mov    0x28(%rax),%rax
  0x0000000115eb56a5: mov    (%rax),%rax
  0x0000000115eb56a8: add    %rbx,%rax
  0x0000000115eb56ab: mov    0x10(%rax),%eax
  0x0000000115eb56ae: shl    $0x3,%rax
  0x0000000115eb56b2: pop    %rbx
  0x0000000115eb56b3: push   %rax
  0x0000000115eb56b4: shr    $0x1c,%edx
  0x0000000115eb56b7: movabs $0x10e0f27a0,%r10
  0x0000000115eb56c1: mov    (%r10,%rdx,8),%rdx
  0x0000000115eb56c5: push   %rdx
  0x0000000115eb56c6: mov    -0x20(%rbp),%r13
  0x0000000115eb56ca: test   %r13,%r13
  0x0000000115eb56cd: je     0x0000000115eb56e5
  0x0000000115eb56d3: addq   $0x1,0x8(%r13)
  0x0000000115eb56d8: sbbq   $0x0,0x8(%r13)
  0x0000000115eb56dd: add    $0x10,%r13
  0x0000000115eb56e1: mov    %r13,-0x20(%rbp)
  0x0000000115eb56e5: mov    -0x20(%rbp),%rdx
  0x0000000115eb56e9: test   %rdx,%rdx
  0x0000000115eb56ec: je     0x0000000115eb5821
  0x0000000115eb56f2: cmpb   $0xa,-0x10(%rdx)
  0x0000000115eb56f6: jne    0x0000000115eb5821
  0x0000000115eb56fc: add    $0x8,%rdx
  0x0000000115eb5700: mov    -0x8(%rdx),%r13
  0x0000000115eb5704: sub    $0x0,%r13d
  0x0000000115eb5708: cmp    $0x2,%r13d
  0x0000000115eb570c: jl     0x0000000115eb5816
  0x0000000115eb5712: mov    0x8(%rbx),%r13
  0x0000000115eb5716: movzwl 0x2c(%r13),%r13d
  0x0000000115eb571b: sub    (%rdx),%r13
  0x0000000115eb571e: sub    $0x1,%r13d
  0x0000000115eb5722: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb5727: test   %r13,%r13
  0x0000000115eb572a: jne    0x0000000115eb5736
  0x0000000115eb572c: orq    $0x1,0x8(%rdx)
  0x0000000115eb5734: jmp    0x0000000115eb5783
  0x0000000115eb5736: mov    0x8(%r13),%r13d
  0x0000000115eb573a: shl    $0x3,%r13
  0x0000000115eb573e: xor    0x8(%rdx),%r13
  0x0000000115eb5742: test   $0xfffffffffffffffc,%r13
  0x0000000115eb5749: je     0x0000000115eb5783
  0x0000000115eb574b: test   $0x2,%r13
  0x0000000115eb5752: jne    0x0000000115eb5783
  0x0000000115eb5754: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb575c: je     0x0000000115eb577f
  0x0000000115eb575e: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb5766: je     0x0000000115eb577f
  0x0000000115eb5768: xor    0x8(%rdx),%r13
  0x0000000115eb576c: test   $0xfffffffffffffffc,%r13
  0x0000000115eb5773: je     0x0000000115eb5783
  0x0000000115eb5775: orq    $0x2,0x8(%rdx)
  0x0000000115eb577d: jmp    0x0000000115eb5783
  0x0000000115eb577f: mov    %r13,0x8(%rdx)
  0x0000000115eb5783: add    $0x10,%rdx
  0x0000000115eb5787: mov    -0x18(%rdx),%r13
  0x0000000115eb578b: sub    $0x2,%r13d
  0x0000000115eb578f: cmp    $0x2,%r13d
  0x0000000115eb5793: jl     0x0000000115eb5816
  0x0000000115eb5799: mov    0x8(%rbx),%r13
  0x0000000115eb579d: movzwl 0x2c(%r13),%r13d
  0x0000000115eb57a2: sub    (%rdx),%r13
  0x0000000115eb57a5: sub    $0x1,%r13d
  0x0000000115eb57a9: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb57ae: test   %r13,%r13
  0x0000000115eb57b1: jne    0x0000000115eb57bd
  0x0000000115eb57b3: orq    $0x1,0x8(%rdx)
  0x0000000115eb57bb: jmp    0x0000000115eb580a
  0x0000000115eb57bd: mov    0x8(%r13),%r13d
  0x0000000115eb57c1: shl    $0x3,%r13
  0x0000000115eb57c5: xor    0x8(%rdx),%r13
  0x0000000115eb57c9: test   $0xfffffffffffffffc,%r13
  0x0000000115eb57d0: je     0x0000000115eb580a
  0x0000000115eb57d2: test   $0x2,%r13
  0x0000000115eb57d9: jne    0x0000000115eb580a
  0x0000000115eb57db: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb57e3: je     0x0000000115eb5806
  0x0000000115eb57e5: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb57ed: je     0x0000000115eb5806
  0x0000000115eb57ef: xor    0x8(%rdx),%r13
  0x0000000115eb57f3: test   $0xfffffffffffffffc,%r13
  0x0000000115eb57fa: je     0x0000000115eb580a
  0x0000000115eb57fc: orq    $0x2,0x8(%rdx)
  0x0000000115eb5804: jmp    0x0000000115eb580a
  0x0000000115eb5806: mov    %r13,0x8(%rdx)
  0x0000000115eb580a: add    $0x10,%rdx
  0x0000000115eb580e: mov    -0x28(%rdx),%r13
  0x0000000115eb5812: sub    $0x4,%r13d
  0x0000000115eb5816: shl    $0x3,%r13d
  0x0000000115eb581a: add    %r13,%rdx
  0x0000000115eb581d: mov    %rdx,-0x20(%rbp)
  0x0000000115eb5821: lea    0x8(%rsp),%r13
  0x0000000115eb5826: mov    %r13,-0x10(%rbp)
  0x0000000115eb582a: jmpq   *0x50(%rbx)
  0x0000000115eb582d: data32 xchg %ax,%ax
  0x0000000115eb5830: add    %al,(%rax)
  0x0000000115eb5832: add    %al,(%rax)
  0x0000000115eb5834: add    %al,(%rax)
  0x0000000115eb5836: add    %al,(%rax)
  0x0000000115eb5838: add    %al,(%rax)
  0x0000000115eb583a: add    %al,(%rax)
  0x0000000115eb583c: add    %al,(%rax)
  0x0000000115eb583e: add    %al,(%rax)

----------------------------------------------------------------------
new  187 new  [0x0000000115eb5860, 0x0000000115eb5a60]  512 bytes

  0x0000000115eb5860: push   %rax
  0x0000000115eb5861: jmpq   0x0000000115eb5890
  0x0000000115eb5866: sub    $0x8,%rsp
  0x0000000115eb586a: vmovss %xmm0,(%rsp)
  0x0000000115eb586f: jmpq   0x0000000115eb5890
  0x0000000115eb5874: sub    $0x10,%rsp
  0x0000000115eb5878: vmovsd %xmm0,(%rsp)
  0x0000000115eb587d: jmpq   0x0000000115eb5890
  0x0000000115eb5882: sub    $0x10,%rsp
  0x0000000115eb5886: mov    %rax,(%rsp)
  0x0000000115eb588a: jmpq   0x0000000115eb5890
  0x0000000115eb588f: push   %rax
  0x0000000115eb5890: movzwl 0x1(%r13),%edx
  0x0000000115eb5895: bswap  %edx
  0x0000000115eb5897: shr    $0x10,%edx
  0x0000000115eb589a: mov    -0x18(%rbp),%rsi
  0x0000000115eb589e: mov    0x8(%rsi),%rsi
  0x0000000115eb58a2: mov    0x8(%rsi),%rsi
  0x0000000115eb58a6: mov    0x8(%rsi),%rax
  0x0000000115eb58aa: cmpb   $0x7,0x4(%rax,%rdx,1)
  0x0000000115eb58af: jne    0x0000000115eb598a
  0x0000000115eb58b5: mov    0x50(%rsi,%rdx,8),%rsi
  0x0000000115eb58ba: cmpb   $0x4,0x172(%rsi)
  0x0000000115eb58c1: jne    0x0000000115eb598a
  0x0000000115eb58c7: mov    0x8(%rsi),%edx
  0x0000000115eb58ca: test   $0x1,%edx
  0x0000000115eb58d0: jne    0x0000000115eb598a
  0x0000000115eb58d6: mov    0x60(%r15),%rax
  0x0000000115eb58da: lea    (%rax,%rdx,1),%rbx
  0x0000000115eb58de: cmp    0x70(%r15),%rbx
  0x0000000115eb58e2: ja     0x0000000115eb58f1
  0x0000000115eb58e8: mov    %rbx,0x60(%r15)
  0x0000000115eb58ec: jmpq   0x0000000115eb5923
  0x0000000115eb58f1: movabs $0x7fdaa4e03c68,%r10
  0x0000000115eb58fb: movabs $0x7fdaa4e03c40,%r11
  0x0000000115eb5905: mov    (%r10),%rax
  0x0000000115eb5908: lea    (%rax,%rdx,1),%rbx
  0x0000000115eb590c: cmp    (%r11),%rbx
  0x0000000115eb590f: ja     0x0000000115eb598a
  0x0000000115eb5915: lock cmpxchg %rbx,(%r10)
  0x0000000115eb591a: jne    0x0000000115eb5908
  0x0000000115eb591c: add    %rdx,0xb8(%r15)
  0x0000000115eb5923: sub    $0x10,%edx
  0x0000000115eb5926: je     0x0000000115eb593a
  0x0000000115eb592c: xor    %ecx,%ecx
  0x0000000115eb592e: shr    $0x3,%edx
  0x0000000115eb5931: mov    %rcx,0x8(%rax,%rdx,8)
  0x0000000115eb5936: dec    %edx
  0x0000000115eb5938: jne    0x0000000115eb5931
  0x0000000115eb593a: mov    0xa8(%rsi),%r10
  0x0000000115eb5941: mov    %r10,(%rax)
  0x0000000115eb5944: xor    %ecx,%ecx
  0x0000000115eb5946: mov    %ecx,0xc(%rax)
  0x0000000115eb5949: shr    $0x3,%rsi
  0x0000000115eb594d: mov    %esi,0x8(%rax)
  0x0000000115eb5950: cmpb   $0x0,-0x7dce68c(%rip)        # 0x000000010e0e72cb
  0x0000000115eb5957: je     0x0000000115eb5985
  0x0000000115eb595d: push   %rax
  0x0000000115eb595e: mov    %rax,%rdi
  0x0000000115eb5961: test   $0xf,%esp
  0x0000000115eb5967: je     0x0000000115eb597f
  0x0000000115eb596d: sub    $0x8,%rsp
  0x0000000115eb5971: callq  0x000000010dce7818
  0x0000000115eb5976: add    $0x8,%rsp
  0x0000000115eb597a: jmpq   0x0000000115eb5984
  0x0000000115eb597f: callq  0x000000010dce7818
  0x0000000115eb5984: pop    %rax
  0x0000000115eb5985: jmpq   0x0000000115eb5a3d
  0x0000000115eb598a: mov    -0x18(%rbp),%rsi
  0x0000000115eb598e: mov    0x8(%rsi),%rsi
  0x0000000115eb5992: mov    0x8(%rsi),%rsi
  0x0000000115eb5996: movzwl 0x1(%r13),%edx
  0x0000000115eb599b: bswap  %edx
  0x0000000115eb599d: shr    $0x10,%edx
  0x0000000115eb59a0: callq  0x0000000115eb59aa
  0x0000000115eb59a5: jmpq   0x0000000115eb5a3d
  0x0000000115eb59aa: lea    0x8(%rsp),%rax
  0x0000000115eb59af: mov    %r13,-0x38(%rbp)
  0x0000000115eb59b3: mov    %r15,%rdi
  0x0000000115eb59b6: mov    %rbp,0x1e8(%r15)
  0x0000000115eb59bd: mov    %rax,0x1d8(%r15)
  0x0000000115eb59c4: test   $0xf,%esp
  0x0000000115eb59ca: je     0x0000000115eb59e2
  0x0000000115eb59d0: sub    $0x8,%rsp
  0x0000000115eb59d4: callq  0x000000010dae93ca
  0x0000000115eb59d9: add    $0x8,%rsp
  0x0000000115eb59dd: jmpq   0x0000000115eb59e7
  0x0000000115eb59e2: callq  0x000000010dae93ca
  0x0000000115eb59e7: movabs $0x0,%r10
  0x0000000115eb59f1: mov    %r10,0x1d8(%r15)
  0x0000000115eb59f8: movabs $0x0,%r10
  0x0000000115eb5a02: mov    %r10,0x1e8(%r15)
  0x0000000115eb5a09: cmpq   $0x0,0x8(%r15)
  0x0000000115eb5a11: je     0x0000000115eb5a1c
  0x0000000115eb5a17: jmpq   0x0000000115e916e0
  0x0000000115eb5a1c: mov    0x238(%r15),%rax
  0x0000000115eb5a23: movabs $0x0,%r10
  0x0000000115eb5a2d: mov    %r10,0x238(%r15)
  0x0000000115eb5a34: mov    -0x38(%rbp),%r13
  0x0000000115eb5a38: mov    -0x30(%rbp),%r14
  0x0000000115eb5a3c: retq   
  0x0000000115eb5a3d: movzbl 0x3(%r13),%ebx
  0x0000000115eb5a42: add    $0x3,%r13
  0x0000000115eb5a46: movabs $0x10e101040,%r10
  0x0000000115eb5a50: jmpq   *(%r10,%rbx,8)
  0x0000000115eb5a54: nopl   0x0(%rax)
  0x0000000115eb5a58: add    %al,(%rax)
  0x0000000115eb5a5a: add    %al,(%rax)
  0x0000000115eb5a5c: add    %al,(%rax)
  0x0000000115eb5a5e: add    %al,(%rax)

----------------------------------------------------------------------
newarray  188 newarray  [0x0000000115eb5a80, 0x0000000115eb5b60]  224 bytes

  0x0000000115eb5a80: mov    (%rsp),%eax
  0x0000000115eb5a83: add    $0x8,%rsp
  0x0000000115eb5a87: movzbl 0x1(%r13),%esi
  0x0000000115eb5a8c: mov    %eax,%edx
  0x0000000115eb5a8e: callq  0x0000000115eb5a98
  0x0000000115eb5a93: jmpq   0x0000000115eb5b2b
  0x0000000115eb5a98: lea    0x8(%rsp),%rax
  0x0000000115eb5a9d: mov    %r13,-0x38(%rbp)
  0x0000000115eb5aa1: mov    %r15,%rdi
  0x0000000115eb5aa4: mov    %rbp,0x1e8(%r15)
  0x0000000115eb5aab: mov    %rax,0x1d8(%r15)
  0x0000000115eb5ab2: test   $0xf,%esp
  0x0000000115eb5ab8: je     0x0000000115eb5ad0
  0x0000000115eb5abe: sub    $0x8,%rsp
  0x0000000115eb5ac2: callq  0x000000010dae95ba
  0x0000000115eb5ac7: add    $0x8,%rsp
  0x0000000115eb5acb: jmpq   0x0000000115eb5ad5
  0x0000000115eb5ad0: callq  0x000000010dae95ba
  0x0000000115eb5ad5: movabs $0x0,%r10
  0x0000000115eb5adf: mov    %r10,0x1d8(%r15)
  0x0000000115eb5ae6: movabs $0x0,%r10
  0x0000000115eb5af0: mov    %r10,0x1e8(%r15)
  0x0000000115eb5af7: cmpq   $0x0,0x8(%r15)
  0x0000000115eb5aff: je     0x0000000115eb5b0a
  0x0000000115eb5b05: jmpq   0x0000000115e916e0
  0x0000000115eb5b0a: mov    0x238(%r15),%rax
  0x0000000115eb5b11: movabs $0x0,%r10
  0x0000000115eb5b1b: mov    %r10,0x238(%r15)
  0x0000000115eb5b22: mov    -0x38(%rbp),%r13
  0x0000000115eb5b26: mov    -0x30(%rbp),%r14
  0x0000000115eb5b2a: retq   
  0x0000000115eb5b2b: movzbl 0x2(%r13),%ebx
  0x0000000115eb5b30: add    $0x2,%r13
  0x0000000115eb5b34: movabs $0x10e101040,%r10
  0x0000000115eb5b3e: jmpq   *(%r10,%rbx,8)
  0x0000000115eb5b42: nopw   0x0(%rax,%rax,1)
  0x0000000115eb5b48: add    %al,(%rax)
  0x0000000115eb5b4a: add    %al,(%rax)
  0x0000000115eb5b4c: add    %al,(%rax)
  0x0000000115eb5b4e: add    %al,(%rax)
  0x0000000115eb5b50: add    %al,(%rax)
  0x0000000115eb5b52: add    %al,(%rax)
  0x0000000115eb5b54: add    %al,(%rax)
  0x0000000115eb5b56: add    %al,(%rax)
  0x0000000115eb5b58: add    %al,(%rax)
  0x0000000115eb5b5a: add    %al,(%rax)
  0x0000000115eb5b5c: add    %al,(%rax)
  0x0000000115eb5b5e: add    %al,(%rax)

----------------------------------------------------------------------
anewarray  189 anewarray  [0x0000000115eb5b80, 0x0000000115eb5c60]  224 bytes

  0x0000000115eb5b80: mov    (%rsp),%eax
  0x0000000115eb5b83: add    $0x8,%rsp
  0x0000000115eb5b87: movzwl 0x1(%r13),%edx
  0x0000000115eb5b8c: bswap  %edx
  0x0000000115eb5b8e: shr    $0x10,%edx
  0x0000000115eb5b91: mov    -0x18(%rbp),%rsi
  0x0000000115eb5b95: mov    0x8(%rsi),%rsi
  0x0000000115eb5b99: mov    0x8(%rsi),%rsi
  0x0000000115eb5b9d: mov    %eax,%ecx
  0x0000000115eb5b9f: callq  0x0000000115eb5ba9
  0x0000000115eb5ba4: jmpq   0x0000000115eb5c3c
  0x0000000115eb5ba9: lea    0x8(%rsp),%rax
  0x0000000115eb5bae: mov    %r13,-0x38(%rbp)
  0x0000000115eb5bb2: mov    %r15,%rdi
  0x0000000115eb5bb5: mov    %rbp,0x1e8(%r15)
  0x0000000115eb5bbc: mov    %rax,0x1d8(%r15)
  0x0000000115eb5bc3: test   $0xf,%esp
  0x0000000115eb5bc9: je     0x0000000115eb5be1
  0x0000000115eb5bcf: sub    $0x8,%rsp
  0x0000000115eb5bd3: callq  0x000000010dae954c
  0x0000000115eb5bd8: add    $0x8,%rsp
  0x0000000115eb5bdc: jmpq   0x0000000115eb5be6
  0x0000000115eb5be1: callq  0x000000010dae954c
  0x0000000115eb5be6: movabs $0x0,%r10
  0x0000000115eb5bf0: mov    %r10,0x1d8(%r15)
  0x0000000115eb5bf7: movabs $0x0,%r10
  0x0000000115eb5c01: mov    %r10,0x1e8(%r15)
  0x0000000115eb5c08: cmpq   $0x0,0x8(%r15)
  0x0000000115eb5c10: je     0x0000000115eb5c1b
  0x0000000115eb5c16: jmpq   0x0000000115e916e0
  0x0000000115eb5c1b: mov    0x238(%r15),%rax
  0x0000000115eb5c22: movabs $0x0,%r10
  0x0000000115eb5c2c: mov    %r10,0x238(%r15)
  0x0000000115eb5c33: mov    -0x38(%rbp),%r13
  0x0000000115eb5c37: mov    -0x30(%rbp),%r14
  0x0000000115eb5c3b: retq   
  0x0000000115eb5c3c: movzbl 0x3(%r13),%ebx
  0x0000000115eb5c41: add    $0x3,%r13
  0x0000000115eb5c45: movabs $0x10e101040,%r10
  0x0000000115eb5c4f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb5c53: nopl   0x0(%rax,%rax,1)
  0x0000000115eb5c58: add    %al,(%rax)
  0x0000000115eb5c5a: add    %al,(%rax)
  0x0000000115eb5c5c: add    %al,(%rax)
  0x0000000115eb5c5e: add    %al,(%rax)

----------------------------------------------------------------------
arraylength  190 arraylength  [0x0000000115eb5c80, 0x0000000115eb5ca0]  32 bytes

  0x0000000115eb5c80: pop    %rax
  0x0000000115eb5c81: mov    0xc(%rax),%eax
  0x0000000115eb5c84: movzbl 0x1(%r13),%ebx
  0x0000000115eb5c89: inc    %r13
  0x0000000115eb5c8c: movabs $0x10e0ff040,%r10
  0x0000000115eb5c96: jmpq   *(%r10,%rbx,8)
  0x0000000115eb5c9a: nopw   0x0(%rax,%rax,1)

----------------------------------------------------------------------
athrow  191 athrow  [0x0000000115eb5cc0, 0x0000000115eb5ce0]  32 bytes

  0x0000000115eb5cc0: pop    %rax
  0x0000000115eb5cc1: cmp    (%rax),%rax
  0x0000000115eb5cc4: jmpq   0x0000000115ea2cf3
  0x0000000115eb5cc9: nopl   0x0(%rax)
  0x0000000115eb5cd0: add    %al,(%rax)
  0x0000000115eb5cd2: add    %al,(%rax)
  0x0000000115eb5cd4: add    %al,(%rax)
  0x0000000115eb5cd6: add    %al,(%rax)
  0x0000000115eb5cd8: add    %al,(%rax)
  0x0000000115eb5cda: add    %al,(%rax)
  0x0000000115eb5cdc: add    %al,(%rax)
  0x0000000115eb5cde: add    %al,(%rax)

----------------------------------------------------------------------
checkcast  192 checkcast  [0x0000000115eb5d00, 0x0000000115eb5f20]  544 bytes

  0x0000000115eb5d00: pop    %rax
  0x0000000115eb5d01: test   %rax,%rax
  0x0000000115eb5d04: je     0x0000000115eb5ee2
  0x0000000115eb5d0a: mov    -0x18(%rbp),%rcx
  0x0000000115eb5d0e: mov    0x8(%rcx),%rcx
  0x0000000115eb5d12: mov    0x8(%rcx),%rcx
  0x0000000115eb5d16: mov    0x8(%rcx),%rdx
  0x0000000115eb5d1a: movzwl 0x1(%r13),%ebx
  0x0000000115eb5d1f: bswap  %ebx
  0x0000000115eb5d21: shr    $0x10,%ebx
  0x0000000115eb5d24: cmpb   $0x7,0x4(%rdx,%rbx,1)
  0x0000000115eb5d29: je     0x0000000115eb5dd0
  0x0000000115eb5d2f: push   %rax
  0x0000000115eb5d30: callq  0x0000000115eb5d3a
  0x0000000115eb5d35: jmpq   0x0000000115eb5db5
  0x0000000115eb5d3a: lea    0x8(%rsp),%rax
  0x0000000115eb5d3f: mov    %r13,-0x38(%rbp)
  0x0000000115eb5d43: mov    %r15,%rdi
  0x0000000115eb5d46: mov    %rbp,0x1e8(%r15)
  0x0000000115eb5d4d: mov    %rax,0x1d8(%r15)
  0x0000000115eb5d54: test   $0xf,%esp
  0x0000000115eb5d5a: je     0x0000000115eb5d72
  0x0000000115eb5d60: sub    $0x8,%rsp
  0x0000000115eb5d64: callq  0x000000010dae91be
  0x0000000115eb5d69: add    $0x8,%rsp
  0x0000000115eb5d6d: jmpq   0x0000000115eb5d77
  0x0000000115eb5d72: callq  0x000000010dae91be
  0x0000000115eb5d77: movabs $0x0,%r10
  0x0000000115eb5d81: mov    %r10,0x1d8(%r15)
  0x0000000115eb5d88: movabs $0x0,%r10
  0x0000000115eb5d92: mov    %r10,0x1e8(%r15)
  0x0000000115eb5d99: cmpq   $0x0,0x8(%r15)
  0x0000000115eb5da1: je     0x0000000115eb5dac
  0x0000000115eb5da7: jmpq   0x0000000115e916e0
  0x0000000115eb5dac: mov    -0x38(%rbp),%r13
  0x0000000115eb5db0: mov    -0x30(%rbp),%r14
  0x0000000115eb5db4: retq   
  0x0000000115eb5db5: mov    0x240(%r15),%rax
  0x0000000115eb5dbc: movabs $0x0,%r10
  0x0000000115eb5dc6: mov    %r10,0x240(%r15)
  0x0000000115eb5dcd: pop    %rdx
  0x0000000115eb5dce: jmp    0x0000000115eb5dd8
  0x0000000115eb5dd0: mov    %rax,%rdx
  0x0000000115eb5dd3: mov    0x50(%rcx,%rbx,8),%rax
  0x0000000115eb5dd8: mov    0x8(%rdx),%ebx
  0x0000000115eb5ddb: shl    $0x3,%rbx
  0x0000000115eb5ddf: mov    -0x20(%rbp),%rcx
  0x0000000115eb5de3: test   %rcx,%rcx
  0x0000000115eb5de6: je     0x0000000115eb5e76
  0x0000000115eb5dec: mov    0x10(%rcx),%rdi
  0x0000000115eb5df0: cmp    %rbx,%rdi
  0x0000000115eb5df3: jne    0x0000000115eb5e08
  0x0000000115eb5df9: addq   $0x1,0x18(%rcx)
  0x0000000115eb5dfe: sbbq   $0x0,0x18(%rcx)
  0x0000000115eb5e03: jmpq   0x0000000115eb5e6e
  0x0000000115eb5e08: test   %rdi,%rdi
  0x0000000115eb5e0b: je     0x0000000115eb5e48
  0x0000000115eb5e11: mov    0x20(%rcx),%rdi
  0x0000000115eb5e15: cmp    %rbx,%rdi
  0x0000000115eb5e18: jne    0x0000000115eb5e2d
  0x0000000115eb5e1e: addq   $0x1,0x28(%rcx)
  0x0000000115eb5e23: sbbq   $0x0,0x28(%rcx)
  0x0000000115eb5e28: jmpq   0x0000000115eb5e6e
  0x0000000115eb5e2d: test   %rdi,%rdi
  0x0000000115eb5e30: jne    0x0000000115eb5e6e
  0x0000000115eb5e36: mov    %rbx,0x20(%rcx)
  0x0000000115eb5e3a: mov    $0x1,%edi
  0x0000000115eb5e3f: mov    %rdi,0x28(%rcx)
  0x0000000115eb5e43: jmpq   0x0000000115eb5e6e
  0x0000000115eb5e48: cmp    0x20(%rcx),%rbx
  0x0000000115eb5e4c: jne    0x0000000115eb5e61
  0x0000000115eb5e52: addq   $0x1,0x28(%rcx)
  0x0000000115eb5e57: sbbq   $0x0,0x28(%rcx)
  0x0000000115eb5e5c: jmpq   0x0000000115eb5e6e
  0x0000000115eb5e61: mov    %rbx,0x10(%rcx)
  0x0000000115eb5e65: mov    $0x1,%edi
  0x0000000115eb5e6a: mov    %rdi,0x18(%rcx)
  0x0000000115eb5e6e: add    $0x30,%rcx
  0x0000000115eb5e72: mov    %rcx,-0x20(%rbp)
  0x0000000115eb5e76: cmp    %rax,%rbx
  0x0000000115eb5e79: je     0x0000000115eb5eda
  0x0000000115eb5e7f: mov    0xc(%rax),%ecx
  0x0000000115eb5e82: cmp    (%rbx,%rcx,1),%rax
  0x0000000115eb5e86: je     0x0000000115eb5eda
  0x0000000115eb5e8c: cmp    $0x18,%ecx
  0x0000000115eb5e8f: jne    0x0000000115eb5eb7
  0x0000000115eb5e95: push   %rax
  0x0000000115eb5e96: mov    %rax,%rax
  0x0000000115eb5e99: push   %rdi
  0x0000000115eb5e9a: mov    0x20(%rbx),%rdi
  0x0000000115eb5e9e: mov    (%rdi),%ecx
  0x0000000115eb5ea0: add    $0x8,%rdi
  0x0000000115eb5ea4: test   %rax,%rax
  0x0000000115eb5ea7: repnz scas %es:(%rdi),%rax
  0x0000000115eb5eaa: pop    %rdi
  0x0000000115eb5eab: pop    %rax
  0x0000000115eb5eac: jne    0x0000000115eb5eb7
  0x0000000115eb5eae: mov    %rax,0x18(%rbx)
  0x0000000115eb5eb2: jmpq   0x0000000115eb5eda
  0x0000000115eb5eb7: mov    -0x20(%rbp),%rcx
  0x0000000115eb5ebb: test   %rcx,%rcx
  0x0000000115eb5ebe: je     0x0000000115eb5ed4
  0x0000000115eb5ec4: addq   $0xffffffffffffffff,-0x28(%rcx)
  0x0000000115eb5ec9: js     0x0000000115eb5ed4
  0x0000000115eb5ecf: addq   $0x1,-0x28(%rcx)
  0x0000000115eb5ed4: push   %rdx
  0x0000000115eb5ed5: jmpq   0x0000000115ea3a59
  0x0000000115eb5eda: mov    %rdx,%rax
  0x0000000115eb5edd: jmpq   0x0000000115eb5efd
  0x0000000115eb5ee2: mov    -0x20(%rbp),%rcx
  0x0000000115eb5ee6: test   %rcx,%rcx
  0x0000000115eb5ee9: je     0x0000000115eb5efd
  0x0000000115eb5eef: orl    $0x100,(%rcx)
  0x0000000115eb5ef5: add    $0x30,%rcx
  0x0000000115eb5ef9: mov    %rcx,-0x20(%rbp)
  0x0000000115eb5efd: movzbl 0x3(%r13),%ebx
  0x0000000115eb5f02: add    $0x3,%r13
  0x0000000115eb5f06: movabs $0x10e101040,%r10
  0x0000000115eb5f10: jmpq   *(%r10,%rbx,8)
  0x0000000115eb5f14: nopl   0x0(%rax)
  0x0000000115eb5f18: add    %al,(%rax)
  0x0000000115eb5f1a: add    %al,(%rax)
  0x0000000115eb5f1c: add    %al,(%rax)
  0x0000000115eb5f1e: add    %al,(%rax)

----------------------------------------------------------------------
instanceof  193 instanceof  [0x0000000115eb5f40, 0x0000000115eb6160]  544 bytes

  0x0000000115eb5f40: pop    %rax
  0x0000000115eb5f41: test   %rax,%rax
  0x0000000115eb5f44: je     0x0000000115eb6126
  0x0000000115eb5f4a: mov    -0x18(%rbp),%rcx
  0x0000000115eb5f4e: mov    0x8(%rcx),%rcx
  0x0000000115eb5f52: mov    0x8(%rcx),%rcx
  0x0000000115eb5f56: mov    0x8(%rcx),%rdx
  0x0000000115eb5f5a: movzwl 0x1(%r13),%ebx
  0x0000000115eb5f5f: bswap  %ebx
  0x0000000115eb5f61: shr    $0x10,%ebx
  0x0000000115eb5f64: cmpb   $0x7,0x4(%rdx,%rbx,1)
  0x0000000115eb5f69: je     0x0000000115eb6017
  0x0000000115eb5f6f: push   %rax
  0x0000000115eb5f70: callq  0x0000000115eb5f7a
  0x0000000115eb5f75: jmpq   0x0000000115eb5ff5
  0x0000000115eb5f7a: lea    0x8(%rsp),%rax
  0x0000000115eb5f7f: mov    %r13,-0x38(%rbp)
  0x0000000115eb5f83: mov    %r15,%rdi
  0x0000000115eb5f86: mov    %rbp,0x1e8(%r15)
  0x0000000115eb5f8d: mov    %rax,0x1d8(%r15)
  0x0000000115eb5f94: test   $0xf,%esp
  0x0000000115eb5f9a: je     0x0000000115eb5fb2
  0x0000000115eb5fa0: sub    $0x8,%rsp
  0x0000000115eb5fa4: callq  0x000000010dae91be
  0x0000000115eb5fa9: add    $0x8,%rsp
  0x0000000115eb5fad: jmpq   0x0000000115eb5fb7
  0x0000000115eb5fb2: callq  0x000000010dae91be
  0x0000000115eb5fb7: movabs $0x0,%r10
  0x0000000115eb5fc1: mov    %r10,0x1d8(%r15)
  0x0000000115eb5fc8: movabs $0x0,%r10
  0x0000000115eb5fd2: mov    %r10,0x1e8(%r15)
  0x0000000115eb5fd9: cmpq   $0x0,0x8(%r15)
  0x0000000115eb5fe1: je     0x0000000115eb5fec
  0x0000000115eb5fe7: jmpq   0x0000000115e916e0
  0x0000000115eb5fec: mov    -0x38(%rbp),%r13
  0x0000000115eb5ff0: mov    -0x30(%rbp),%r14
  0x0000000115eb5ff4: retq   
  0x0000000115eb5ff5: mov    0x240(%r15),%rax
  0x0000000115eb5ffc: movabs $0x0,%r10
  0x0000000115eb6006: mov    %r10,0x240(%r15)
  0x0000000115eb600d: pop    %rdx
  0x0000000115eb600e: mov    0x8(%rdx),%edx
  0x0000000115eb6011: shl    $0x3,%rdx
  0x0000000115eb6015: jmp    0x0000000115eb6023
  0x0000000115eb6017: mov    0x8(%rax),%edx
  0x0000000115eb601a: shl    $0x3,%rdx
  0x0000000115eb601e: mov    0x50(%rcx,%rbx,8),%rax
  0x0000000115eb6023: mov    -0x20(%rbp),%rcx
  0x0000000115eb6027: test   %rcx,%rcx
  0x0000000115eb602a: je     0x0000000115eb60ba
  0x0000000115eb6030: mov    0x10(%rcx),%rdi
  0x0000000115eb6034: cmp    %rdx,%rdi
  0x0000000115eb6037: jne    0x0000000115eb604c
  0x0000000115eb603d: addq   $0x1,0x18(%rcx)
  0x0000000115eb6042: sbbq   $0x0,0x18(%rcx)
  0x0000000115eb6047: jmpq   0x0000000115eb60b2
  0x0000000115eb604c: test   %rdi,%rdi
  0x0000000115eb604f: je     0x0000000115eb608c
  0x0000000115eb6055: mov    0x20(%rcx),%rdi
  0x0000000115eb6059: cmp    %rdx,%rdi
  0x0000000115eb605c: jne    0x0000000115eb6071
  0x0000000115eb6062: addq   $0x1,0x28(%rcx)
  0x0000000115eb6067: sbbq   $0x0,0x28(%rcx)
  0x0000000115eb606c: jmpq   0x0000000115eb60b2
  0x0000000115eb6071: test   %rdi,%rdi
  0x0000000115eb6074: jne    0x0000000115eb60b2
  0x0000000115eb607a: mov    %rdx,0x20(%rcx)
  0x0000000115eb607e: mov    $0x1,%edi
  0x0000000115eb6083: mov    %rdi,0x28(%rcx)
  0x0000000115eb6087: jmpq   0x0000000115eb60b2
  0x0000000115eb608c: cmp    0x20(%rcx),%rdx
  0x0000000115eb6090: jne    0x0000000115eb60a5
  0x0000000115eb6096: addq   $0x1,0x28(%rcx)
  0x0000000115eb609b: sbbq   $0x0,0x28(%rcx)
  0x0000000115eb60a0: jmpq   0x0000000115eb60b2
  0x0000000115eb60a5: mov    %rdx,0x10(%rcx)
  0x0000000115eb60a9: mov    $0x1,%edi
  0x0000000115eb60ae: mov    %rdi,0x18(%rcx)
  0x0000000115eb60b2: add    $0x30,%rcx
  0x0000000115eb60b6: mov    %rcx,-0x20(%rbp)
  0x0000000115eb60ba: cmp    %rax,%rdx
  0x0000000115eb60bd: je     0x0000000115eb611c
  0x0000000115eb60c3: mov    0xc(%rax),%ecx
  0x0000000115eb60c6: cmp    (%rdx,%rcx,1),%rax
  0x0000000115eb60ca: je     0x0000000115eb611c
  0x0000000115eb60d0: cmp    $0x18,%ecx
  0x0000000115eb60d3: jne    0x0000000115eb60fb
  0x0000000115eb60d9: push   %rax
  0x0000000115eb60da: mov    %rax,%rax
  0x0000000115eb60dd: push   %rdi
  0x0000000115eb60de: mov    0x20(%rdx),%rdi
  0x0000000115eb60e2: mov    (%rdi),%ecx
  0x0000000115eb60e4: add    $0x8,%rdi
  0x0000000115eb60e8: test   %rax,%rax
  0x0000000115eb60eb: repnz scas %es:(%rdi),%rax
  0x0000000115eb60ee: pop    %rdi
  0x0000000115eb60ef: pop    %rax
  0x0000000115eb60f0: jne    0x0000000115eb60fb
  0x0000000115eb60f2: mov    %rax,0x18(%rdx)
  0x0000000115eb60f6: jmpq   0x0000000115eb611c
  0x0000000115eb60fb: mov    -0x20(%rbp),%rcx
  0x0000000115eb60ff: test   %rcx,%rcx
  0x0000000115eb6102: je     0x0000000115eb6118
  0x0000000115eb6108: addq   $0xffffffffffffffff,-0x28(%rcx)
  0x0000000115eb610d: js     0x0000000115eb6118
  0x0000000115eb6113: addq   $0x1,-0x28(%rcx)
  0x0000000115eb6118: xor    %eax,%eax
  0x0000000115eb611a: jmp    0x0000000115eb6141
  0x0000000115eb611c: mov    $0x1,%eax
  0x0000000115eb6121: jmpq   0x0000000115eb6141
  0x0000000115eb6126: mov    -0x20(%rbp),%rcx
  0x0000000115eb612a: test   %rcx,%rcx
  0x0000000115eb612d: je     0x0000000115eb6141
  0x0000000115eb6133: orl    $0x100,(%rcx)
  0x0000000115eb6139: add    $0x30,%rcx
  0x0000000115eb613d: mov    %rcx,-0x20(%rbp)
  0x0000000115eb6141: movzbl 0x3(%r13),%ebx
  0x0000000115eb6146: add    $0x3,%r13
  0x0000000115eb614a: movabs $0x10e0ff040,%r10
  0x0000000115eb6154: jmpq   *(%r10,%rbx,8)
  0x0000000115eb6158: add    %al,(%rax)
  0x0000000115eb615a: add    %al,(%rax)
  0x0000000115eb615c: add    %al,(%rax)
  0x0000000115eb615e: add    %al,(%rax)

----------------------------------------------------------------------
monitorenter  194 monitorenter  [0x0000000115eb6180, 0x0000000115eb6360]  480 bytes

  0x0000000115eb6180: pop    %rax
  0x0000000115eb6181: cmp    (%rax),%rax
  0x0000000115eb6184: xor    %esi,%esi
  0x0000000115eb6186: mov    -0x40(%rbp),%rcx
  0x0000000115eb618a: lea    -0x40(%rbp),%rdx
  0x0000000115eb618e: jmp    0x0000000115eb61a6
  0x0000000115eb6190: cmpq   $0x0,0x8(%rcx)
  0x0000000115eb6198: cmove  %rcx,%rsi
  0x0000000115eb619c: cmp    0x8(%rcx),%rax
  0x0000000115eb61a0: je     0x0000000115eb61ab
  0x0000000115eb61a2: add    $0x10,%rcx
  0x0000000115eb61a6: cmp    %rdx,%rcx
  0x0000000115eb61a9: jne    0x0000000115eb6190
  0x0000000115eb61ab: test   %rsi,%rsi
  0x0000000115eb61ae: jne    0x0000000115eb61dc
  0x0000000115eb61b4: mov    -0x40(%rbp),%rsi
  0x0000000115eb61b8: sub    $0x10,%rsp
  0x0000000115eb61bc: sub    $0x10,%rsi
  0x0000000115eb61c0: mov    %rsp,%rcx
  0x0000000115eb61c3: mov    %rsi,-0x40(%rbp)
  0x0000000115eb61c7: jmpq   0x0000000115eb61d7
  0x0000000115eb61cc: mov    0x10(%rcx),%rdx
  0x0000000115eb61d0: mov    %rdx,(%rcx)
  0x0000000115eb61d3: add    $0x8,%rcx
  0x0000000115eb61d7: cmp    %rsi,%rcx
  0x0000000115eb61da: jne    0x0000000115eb61cc
  0x0000000115eb61dc: inc    %r13
  0x0000000115eb61df: mov    %rax,0x8(%rsi)
  0x0000000115eb61e3: mov    0x8(%rsi),%rcx
  0x0000000115eb61e7: mov    (%rcx),%rax
  0x0000000115eb61ea: mov    %rax,%r10
  0x0000000115eb61ed: and    $0x7,%r10
  0x0000000115eb61f1: cmp    $0x5,%r10
  0x0000000115eb61f5: jne    0x0000000115eb627f
  0x0000000115eb61fb: mov    0x8(%rcx),%r10d
  0x0000000115eb61ff: shl    $0x3,%r10
  0x0000000115eb6203: mov    0xa8(%r10),%r10
  0x0000000115eb620a: or     %r15,%r10
  0x0000000115eb620d: xor    %rax,%r10
  0x0000000115eb6210: and    $0xffffffffffffff87,%r10
  0x0000000115eb6214: je     0x0000000115eb632d
  0x0000000115eb621a: test   $0x7,%r10
  0x0000000115eb6221: jne    0x0000000115eb626b
  0x0000000115eb6223: test   $0x300,%r10
  0x0000000115eb622a: jne    0x0000000115eb6249
  0x0000000115eb622c: and    $0x37f,%rax
  0x0000000115eb6233: mov    %rax,%r10
  0x0000000115eb6236: or     %r15,%r10
  0x0000000115eb6239: lock cmpxchg %r10,(%rcx)
  0x0000000115eb623e: jne    0x0000000115eb62a8
  0x0000000115eb6244: jmpq   0x0000000115eb632d
  0x0000000115eb6249: mov    0x8(%rcx),%r10d
  0x0000000115eb624d: shl    $0x3,%r10
  0x0000000115eb6251: mov    0xa8(%r10),%r10
  0x0000000115eb6258: or     %r15,%r10
  0x0000000115eb625b: lock cmpxchg %r10,(%rcx)
  0x0000000115eb6260: jne    0x0000000115eb62a8
  0x0000000115eb6266: jmpq   0x0000000115eb632d
  0x0000000115eb626b: mov    0x8(%rcx),%r10d
  0x0000000115eb626f: shl    $0x3,%r10
  0x0000000115eb6273: mov    0xa8(%r10),%r10
  0x0000000115eb627a: lock cmpxchg %r10,(%rcx)
  0x0000000115eb627f: mov    $0x1,%eax
  0x0000000115eb6284: or     (%rcx),%rax
  0x0000000115eb6287: mov    %rax,(%rsi)
  0x0000000115eb628a: lock cmpxchg %rsi,(%rcx)
  0x0000000115eb628f: je     0x0000000115eb632d
  0x0000000115eb6295: sub    %rsp,%rax
  0x0000000115eb6298: and    $0xfffffffffffff007,%rax
  0x0000000115eb629f: mov    %rax,(%rsi)
  0x0000000115eb62a2: je     0x0000000115eb632d
  0x0000000115eb62a8: callq  0x0000000115eb62b2
  0x0000000115eb62ad: jmpq   0x0000000115eb632d
  0x0000000115eb62b2: lea    0x8(%rsp),%rax
  0x0000000115eb62b7: mov    %r13,-0x38(%rbp)
  0x0000000115eb62bb: mov    %r15,%rdi
  0x0000000115eb62be: mov    %rbp,0x1e8(%r15)
  0x0000000115eb62c5: mov    %rax,0x1d8(%r15)
  0x0000000115eb62cc: test   $0xf,%esp
  0x0000000115eb62d2: je     0x0000000115eb62ea
  0x0000000115eb62d8: sub    $0x8,%rsp
  0x0000000115eb62dc: callq  0x000000010dae86d2
  0x0000000115eb62e1: add    $0x8,%rsp
  0x0000000115eb62e5: jmpq   0x0000000115eb62ef
  0x0000000115eb62ea: callq  0x000000010dae86d2
  0x0000000115eb62ef: movabs $0x0,%r10
  0x0000000115eb62f9: mov    %r10,0x1d8(%r15)
  0x0000000115eb6300: movabs $0x0,%r10
  0x0000000115eb630a: mov    %r10,0x1e8(%r15)
  0x0000000115eb6311: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6319: je     0x0000000115eb6324
  0x0000000115eb631f: jmpq   0x0000000115e916e0
  0x0000000115eb6324: mov    -0x38(%rbp),%r13
  0x0000000115eb6328: mov    -0x30(%rbp),%r14
  0x0000000115eb632c: retq   
  0x0000000115eb632d: mov    %r13,-0x38(%rbp)
  0x0000000115eb6331: mov    %eax,-0x14000(%rsp)
  0x0000000115eb6338: movzbl 0x0(%r13),%ebx
  0x0000000115eb633d: movabs $0x10e101840,%r10
  0x0000000115eb6347: jmpq   *(%r10,%rbx,8)
  0x0000000115eb634b: nopl   0x0(%rax,%rax,1)
  0x0000000115eb6350: add    %al,(%rax)
  0x0000000115eb6352: add    %al,(%rax)
  0x0000000115eb6354: add    %al,(%rax)
  0x0000000115eb6356: add    %al,(%rax)
  0x0000000115eb6358: add    %al,(%rax)
  0x0000000115eb635a: add    %al,(%rax)
  0x0000000115eb635c: add    %al,(%rax)
  0x0000000115eb635e: add    %al,(%rax)

----------------------------------------------------------------------
monitorexit  195 monitorexit  [0x0000000115eb6380, 0x0000000115eb6580]  512 bytes

  0x0000000115eb6380: pop    %rax
  0x0000000115eb6381: cmp    (%rax),%rax
  0x0000000115eb6384: mov    -0x40(%rbp),%rsi
  0x0000000115eb6388: lea    -0x40(%rbp),%rdx
  0x0000000115eb638c: jmp    0x0000000115eb639c
  0x0000000115eb638e: cmp    0x8(%rsi),%rax
  0x0000000115eb6392: je     0x0000000115eb649d
  0x0000000115eb6398: add    $0x10,%rsi
  0x0000000115eb639c: cmp    %rdx,%rsi
  0x0000000115eb639f: jne    0x0000000115eb638e
  0x0000000115eb63a1: callq  0x0000000115eb63ab
  0x0000000115eb63a6: jmpq   0x0000000115eb6426
  0x0000000115eb63ab: lea    0x8(%rsp),%rax
  0x0000000115eb63b0: mov    %r13,-0x38(%rbp)
  0x0000000115eb63b4: mov    %r15,%rdi
  0x0000000115eb63b7: mov    %rbp,0x1e8(%r15)
  0x0000000115eb63be: mov    %rax,0x1d8(%r15)
  0x0000000115eb63c5: test   $0xf,%esp
  0x0000000115eb63cb: je     0x0000000115eb63e3
  0x0000000115eb63d1: sub    $0x8,%rsp
  0x0000000115eb63d5: callq  0x000000010dae850c
  0x0000000115eb63da: add    $0x8,%rsp
  0x0000000115eb63de: jmpq   0x0000000115eb63e8
  0x0000000115eb63e3: callq  0x000000010dae850c
  0x0000000115eb63e8: movabs $0x0,%r10
  0x0000000115eb63f2: mov    %r10,0x1d8(%r15)
  0x0000000115eb63f9: movabs $0x0,%r10
  0x0000000115eb6403: mov    %r10,0x1e8(%r15)
  0x0000000115eb640a: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6412: je     0x0000000115eb641d
  0x0000000115eb6418: jmpq   0x0000000115e916e0
  0x0000000115eb641d: mov    -0x38(%rbp),%r13
  0x0000000115eb6421: mov    -0x30(%rbp),%r14
  0x0000000115eb6425: retq   
  0x0000000115eb6426: mov    %rsp,-0x28(%rsp)
  0x0000000115eb642b: sub    $0x80,%rsp
  0x0000000115eb6432: mov    %rax,0x78(%rsp)
  0x0000000115eb6437: mov    %rcx,0x70(%rsp)
  0x0000000115eb643c: mov    %rdx,0x68(%rsp)
  0x0000000115eb6441: mov    %rbx,0x60(%rsp)
  0x0000000115eb6446: mov    %rbp,0x50(%rsp)
  0x0000000115eb644b: mov    %rsi,0x48(%rsp)
  0x0000000115eb6450: mov    %rdi,0x40(%rsp)
  0x0000000115eb6455: mov    %r8,0x38(%rsp)
  0x0000000115eb645a: mov    %r9,0x30(%rsp)
  0x0000000115eb645f: mov    %r10,0x28(%rsp)
  0x0000000115eb6464: mov    %r11,0x20(%rsp)
  0x0000000115eb6469: mov    %r12,0x18(%rsp)
  0x0000000115eb646e: mov    %r13,0x10(%rsp)
  0x0000000115eb6473: mov    %r14,0x8(%rsp)
  0x0000000115eb6478: mov    %r15,(%rsp)
  0x0000000115eb647c: movabs $0x10ddd8000,%rdi
  0x0000000115eb6486: movabs $0x115eb6426,%rsi
  0x0000000115eb6490: mov    %rsp,%rdx
  0x0000000115eb6493: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb6497: callq  0x000000010dc0341e
  0x0000000115eb649c: hlt    
  0x0000000115eb649d: push   %rax
  0x0000000115eb649e: mov    %r13,-0x38(%rbp)
  0x0000000115eb64a2: lea    (%rsi),%rax
  0x0000000115eb64a5: mov    0x8(%rsi),%rcx
  0x0000000115eb64a9: movq   $0x0,0x8(%rsi)
  0x0000000115eb64b1: mov    (%rcx),%rdx
  0x0000000115eb64b4: and    $0x7,%rdx
  0x0000000115eb64b8: cmp    $0x5,%rdx
  0x0000000115eb64bc: je     0x0000000115eb6562
  0x0000000115eb64c2: mov    (%rax),%rdx
  0x0000000115eb64c5: test   %rdx,%rdx
  0x0000000115eb64c8: je     0x0000000115eb6562
  0x0000000115eb64ce: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb64d3: je     0x0000000115eb6562
  0x0000000115eb64d9: mov    %rcx,0x8(%rsi)
  0x0000000115eb64dd: callq  0x0000000115eb64e7
  0x0000000115eb64e2: jmpq   0x0000000115eb6562
  0x0000000115eb64e7: lea    0x8(%rsp),%rax
  0x0000000115eb64ec: mov    %r13,-0x38(%rbp)
  0x0000000115eb64f0: mov    %r15,%rdi
  0x0000000115eb64f3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb64fa: mov    %rax,0x1d8(%r15)
  0x0000000115eb6501: test   $0xf,%esp
  0x0000000115eb6507: je     0x0000000115eb651f
  0x0000000115eb650d: sub    $0x8,%rsp
  0x0000000115eb6511: callq  0x000000010dae8608
  0x0000000115eb6516: add    $0x8,%rsp
  0x0000000115eb651a: jmpq   0x0000000115eb6524
  0x0000000115eb651f: callq  0x000000010dae8608
  0x0000000115eb6524: movabs $0x0,%r10
  0x0000000115eb652e: mov    %r10,0x1d8(%r15)
  0x0000000115eb6535: movabs $0x0,%r10
  0x0000000115eb653f: mov    %r10,0x1e8(%r15)
  0x0000000115eb6546: cmpq   $0x0,0x8(%r15)
  0x0000000115eb654e: je     0x0000000115eb6559
  0x0000000115eb6554: jmpq   0x0000000115e916e0
  0x0000000115eb6559: mov    -0x38(%rbp),%r13
  0x0000000115eb655d: mov    -0x30(%rbp),%r14
  0x0000000115eb6561: retq   
  0x0000000115eb6562: mov    -0x38(%rbp),%r13
  0x0000000115eb6566: pop    %rax
  0x0000000115eb6567: movzbl 0x1(%r13),%ebx
  0x0000000115eb656c: inc    %r13
  0x0000000115eb656f: movabs $0x10e101840,%r10
  0x0000000115eb6579: jmpq   *(%r10,%rbx,8)
  0x0000000115eb657d: data32 xchg %ax,%ax

----------------------------------------------------------------------
wide  196 wide  [0x0000000115eb65a0, 0x0000000115eb6600]  96 bytes

  0x0000000115eb65a0: push   %rax
  0x0000000115eb65a1: jmpq   0x0000000115eb65d0
  0x0000000115eb65a6: sub    $0x8,%rsp
  0x0000000115eb65aa: vmovss %xmm0,(%rsp)
  0x0000000115eb65af: jmpq   0x0000000115eb65d0
  0x0000000115eb65b4: sub    $0x10,%rsp
  0x0000000115eb65b8: vmovsd %xmm0,(%rsp)
  0x0000000115eb65bd: jmpq   0x0000000115eb65d0
  0x0000000115eb65c2: sub    $0x10,%rsp
  0x0000000115eb65c6: mov    %rax,(%rsp)
  0x0000000115eb65ca: jmpq   0x0000000115eb65d0
  0x0000000115eb65cf: push   %rax
  0x0000000115eb65d0: movzbl 0x1(%r13),%ebx
  0x0000000115eb65d5: movabs $0x10e0fc840,%r10
  0x0000000115eb65df: jmpq   *(%r10,%rbx,8)
  0x0000000115eb65e3: nopl   0x0(%rax,%rax,1)
  0x0000000115eb65e8: add    %al,(%rax)
  0x0000000115eb65ea: add    %al,(%rax)
  0x0000000115eb65ec: add    %al,(%rax)
  0x0000000115eb65ee: add    %al,(%rax)
  0x0000000115eb65f0: add    %al,(%rax)
  0x0000000115eb65f2: add    %al,(%rax)
  0x0000000115eb65f4: add    %al,(%rax)
  0x0000000115eb65f6: add    %al,(%rax)
  0x0000000115eb65f8: add    %al,(%rax)
  0x0000000115eb65fa: add    %al,(%rax)
  0x0000000115eb65fc: add    %al,(%rax)
  0x0000000115eb65fe: add    %al,(%rax)

----------------------------------------------------------------------
multianewarray  197 multianewarray  [0x0000000115eb6620, 0x0000000115eb6720]  256 bytes

  0x0000000115eb6620: push   %rax
  0x0000000115eb6621: jmpq   0x0000000115eb6650
  0x0000000115eb6626: sub    $0x8,%rsp
  0x0000000115eb662a: vmovss %xmm0,(%rsp)
  0x0000000115eb662f: jmpq   0x0000000115eb6650
  0x0000000115eb6634: sub    $0x10,%rsp
  0x0000000115eb6638: vmovsd %xmm0,(%rsp)
  0x0000000115eb663d: jmpq   0x0000000115eb6650
  0x0000000115eb6642: sub    $0x10,%rsp
  0x0000000115eb6646: mov    %rax,(%rsp)
  0x0000000115eb664a: jmpq   0x0000000115eb6650
  0x0000000115eb664f: push   %rax
  0x0000000115eb6650: movzbl 0x3(%r13),%eax
  0x0000000115eb6655: lea    -0x8(%rsp,%rax,8),%rsi
  0x0000000115eb665a: callq  0x0000000115eb6664
  0x0000000115eb665f: jmpq   0x0000000115eb66f7
  0x0000000115eb6664: lea    0x8(%rsp),%rax
  0x0000000115eb6669: mov    %r13,-0x38(%rbp)
  0x0000000115eb666d: mov    %r15,%rdi
  0x0000000115eb6670: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6677: mov    %rax,0x1d8(%r15)
  0x0000000115eb667e: test   $0xf,%esp
  0x0000000115eb6684: je     0x0000000115eb669c
  0x0000000115eb668a: sub    $0x8,%rsp
  0x0000000115eb668e: callq  0x000000010dae9246
  0x0000000115eb6693: add    $0x8,%rsp
  0x0000000115eb6697: jmpq   0x0000000115eb66a1
  0x0000000115eb669c: callq  0x000000010dae9246
  0x0000000115eb66a1: movabs $0x0,%r10
  0x0000000115eb66ab: mov    %r10,0x1d8(%r15)
  0x0000000115eb66b2: movabs $0x0,%r10
  0x0000000115eb66bc: mov    %r10,0x1e8(%r15)
  0x0000000115eb66c3: cmpq   $0x0,0x8(%r15)
  0x0000000115eb66cb: je     0x0000000115eb66d6
  0x0000000115eb66d1: jmpq   0x0000000115e916e0
  0x0000000115eb66d6: mov    0x238(%r15),%rax
  0x0000000115eb66dd: movabs $0x0,%r10
  0x0000000115eb66e7: mov    %r10,0x238(%r15)
  0x0000000115eb66ee: mov    -0x38(%rbp),%r13
  0x0000000115eb66f2: mov    -0x30(%rbp),%r14
  0x0000000115eb66f6: retq   
  0x0000000115eb66f7: movzbl 0x3(%r13),%ebx
  0x0000000115eb66fc: lea    (%rsp,%rbx,8),%rsp
  0x0000000115eb6700: movzbl 0x4(%r13),%ebx
  0x0000000115eb6705: add    $0x4,%r13
  0x0000000115eb6709: movabs $0x10e101040,%r10
  0x0000000115eb6713: jmpq   *(%r10,%rbx,8)
  0x0000000115eb6717: nop
  0x0000000115eb6718: add    %al,(%rax)
  0x0000000115eb671a: add    %al,(%rax)
  0x0000000115eb671c: add    %al,(%rax)
  0x0000000115eb671e: add    %al,(%rax)

----------------------------------------------------------------------
ifnull  198 ifnull  [0x0000000115eb6740, 0x0000000115eb6ae0]  928 bytes

  0x0000000115eb6740: pop    %rax
  0x0000000115eb6741: test   %rax,%rax
  0x0000000115eb6744: jne    0x0000000115eb6aaa
  0x0000000115eb674a: mov    -0x18(%rbp),%rcx
  0x0000000115eb674e: mov    -0x20(%rbp),%rax
  0x0000000115eb6752: test   %rax,%rax
  0x0000000115eb6755: je     0x0000000115eb6773
  0x0000000115eb675b: mov    0x8(%rax),%rbx
  0x0000000115eb675f: add    $0x1,%rbx
  0x0000000115eb6763: sbb    $0x0,%rbx
  0x0000000115eb6767: mov    %rbx,0x8(%rax)
  0x0000000115eb676b: add    0x10(%rax),%rax
  0x0000000115eb676f: mov    %rax,-0x20(%rbp)
  0x0000000115eb6773: movswl 0x1(%r13),%edx
  0x0000000115eb6778: bswap  %edx
  0x0000000115eb677a: sar    $0x10,%edx
  0x0000000115eb677d: movslq %edx,%rdx
  0x0000000115eb6780: add    %rdx,%r13
  0x0000000115eb6783: test   %edx,%edx
  0x0000000115eb6785: jns    0x0000000115eb6870
  0x0000000115eb678b: mov    0x18(%rcx),%rax
  0x0000000115eb678f: test   %rax,%rax
  0x0000000115eb6792: jne    0x0000000115eb682e
  0x0000000115eb6798: push   %rdx
  0x0000000115eb6799: push   %rcx
  0x0000000115eb679a: callq  0x0000000115eb67a4
  0x0000000115eb679f: jmpq   0x0000000115eb6822
  0x0000000115eb67a4: mov    %rcx,%rsi
  0x0000000115eb67a7: lea    0x8(%rsp),%rax
  0x0000000115eb67ac: mov    %r13,-0x38(%rbp)
  0x0000000115eb67b0: mov    %r15,%rdi
  0x0000000115eb67b3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb67ba: mov    %rax,0x1d8(%r15)
  0x0000000115eb67c1: test   $0xf,%esp
  0x0000000115eb67c7: je     0x0000000115eb67df
  0x0000000115eb67cd: sub    $0x8,%rsp
  0x0000000115eb67d1: callq  0x000000010dae6d98
  0x0000000115eb67d6: add    $0x8,%rsp
  0x0000000115eb67da: jmpq   0x0000000115eb67e4
  0x0000000115eb67df: callq  0x000000010dae6d98
  0x0000000115eb67e4: movabs $0x0,%r10
  0x0000000115eb67ee: mov    %r10,0x1d8(%r15)
  0x0000000115eb67f5: movabs $0x0,%r10
  0x0000000115eb67ff: mov    %r10,0x1e8(%r15)
  0x0000000115eb6806: cmpq   $0x0,0x8(%r15)
  0x0000000115eb680e: je     0x0000000115eb6819
  0x0000000115eb6814: jmpq   0x0000000115e916e0
  0x0000000115eb6819: mov    -0x38(%rbp),%r13
  0x0000000115eb681d: mov    -0x30(%rbp),%r14
  0x0000000115eb6821: retq   
  0x0000000115eb6822: pop    %rcx
  0x0000000115eb6823: pop    %rdx
  0x0000000115eb6824: mov    0x18(%rcx),%rax
  0x0000000115eb6828: je     0x0000000115eb6870
  0x0000000115eb682e: mov    0x10(%rcx),%rbx
  0x0000000115eb6832: test   %rbx,%rbx
  0x0000000115eb6835: je     0x0000000115eb6857
  0x0000000115eb6837: mov    0xe0(%rbx),%eax
  0x0000000115eb683d: add    $0x8,%eax
  0x0000000115eb6840: mov    %eax,0xe0(%rbx)
  0x0000000115eb6846: and    $0x1ff8,%eax
  0x0000000115eb684c: je     0x0000000115eb6962
  0x0000000115eb6852: jmpq   0x0000000115eb6870
  0x0000000115eb6857: mov    0x18(%rcx),%rcx
  0x0000000115eb685b: mov    0xc(%rcx),%eax
  0x0000000115eb685e: add    $0x8,%eax
  0x0000000115eb6861: mov    %eax,0xc(%rcx)
  0x0000000115eb6864: and    $0x1ff8,%eax
  0x0000000115eb686a: je     0x0000000115eb6962
  0x0000000115eb6870: movzbl 0x0(%r13),%ebx
  0x0000000115eb6875: movabs $0x10e101840,%r10
  0x0000000115eb687f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb6883: callq  0x0000000115eb688d
  0x0000000115eb6888: jmpq   0x0000000115eb6908
  0x0000000115eb688d: lea    0x8(%rsp),%rax
  0x0000000115eb6892: mov    %r13,-0x38(%rbp)
  0x0000000115eb6896: mov    %r15,%rdi
  0x0000000115eb6899: mov    %rbp,0x1e8(%r15)
  0x0000000115eb68a0: mov    %rax,0x1d8(%r15)
  0x0000000115eb68a7: test   $0xf,%esp
  0x0000000115eb68ad: je     0x0000000115eb68c5
  0x0000000115eb68b3: sub    $0x8,%rsp
  0x0000000115eb68b7: callq  0x000000010dae6f16
  0x0000000115eb68bc: add    $0x8,%rsp
  0x0000000115eb68c0: jmpq   0x0000000115eb68ca
  0x0000000115eb68c5: callq  0x000000010dae6f16
  0x0000000115eb68ca: movabs $0x0,%r10
  0x0000000115eb68d4: mov    %r10,0x1d8(%r15)
  0x0000000115eb68db: movabs $0x0,%r10
  0x0000000115eb68e5: mov    %r10,0x1e8(%r15)
  0x0000000115eb68ec: cmpq   $0x0,0x8(%r15)
  0x0000000115eb68f4: je     0x0000000115eb68ff
  0x0000000115eb68fa: jmpq   0x0000000115e916e0
  0x0000000115eb68ff: mov    -0x38(%rbp),%r13
  0x0000000115eb6903: mov    -0x30(%rbp),%r14
  0x0000000115eb6907: retq   
  0x0000000115eb6908: movzbl 0x0(%r13),%ebx
  0x0000000115eb690d: push   %rax
  0x0000000115eb690e: push   %rbx
  0x0000000115eb690f: mov    -0x18(%rbp),%rbx
  0x0000000115eb6913: mov    0x10(%rbx),%rax
  0x0000000115eb6917: test   %rax,%rax
  0x0000000115eb691a: je     0x0000000115eb6957
  0x0000000115eb6920: mov    %r13,%rsi
  0x0000000115eb6923: mov    %rbx,%rdi
  0x0000000115eb6926: test   $0xf,%esp
  0x0000000115eb692c: je     0x0000000115eb6944
  0x0000000115eb6932: sub    $0x8,%rsp
  0x0000000115eb6936: callq  0x000000010dae706c
  0x0000000115eb693b: add    $0x8,%rsp
  0x0000000115eb693f: jmpq   0x0000000115eb6949
  0x0000000115eb6944: callq  0x000000010dae706c
  0x0000000115eb6949: mov    0x10(%rbx),%rbx
  0x0000000115eb694d: add    $0x100,%rbx
  0x0000000115eb6954: add    %rbx,%rax
  0x0000000115eb6957: mov    %rax,-0x20(%rbp)
  0x0000000115eb695b: pop    %rbx
  0x0000000115eb695c: pop    %rax
  0x0000000115eb695d: jmpq   0x0000000115eb6870
  0x0000000115eb6962: neg    %rdx
  0x0000000115eb6965: add    %r13,%rdx
  0x0000000115eb6968: callq  0x0000000115eb6972
  0x0000000115eb696d: jmpq   0x0000000115eb69f0
  0x0000000115eb6972: mov    %rdx,%rsi
  0x0000000115eb6975: lea    0x8(%rsp),%rax
  0x0000000115eb697a: mov    %r13,-0x38(%rbp)
  0x0000000115eb697e: mov    %r15,%rdi
  0x0000000115eb6981: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6988: mov    %rax,0x1d8(%r15)
  0x0000000115eb698f: test   $0xf,%esp
  0x0000000115eb6995: je     0x0000000115eb69ad
  0x0000000115eb699b: sub    $0x8,%rsp
  0x0000000115eb699f: callq  0x000000010dae7476
  0x0000000115eb69a4: add    $0x8,%rsp
  0x0000000115eb69a8: jmpq   0x0000000115eb69b2
  0x0000000115eb69ad: callq  0x000000010dae7476
  0x0000000115eb69b2: movabs $0x0,%r10
  0x0000000115eb69bc: mov    %r10,0x1d8(%r15)
  0x0000000115eb69c3: movabs $0x0,%r10
  0x0000000115eb69cd: mov    %r10,0x1e8(%r15)
  0x0000000115eb69d4: cmpq   $0x0,0x8(%r15)
  0x0000000115eb69dc: je     0x0000000115eb69e7
  0x0000000115eb69e2: jmpq   0x0000000115e916e0
  0x0000000115eb69e7: mov    -0x38(%rbp),%r13
  0x0000000115eb69eb: mov    -0x30(%rbp),%r14
  0x0000000115eb69ef: retq   
  0x0000000115eb69f0: movzbl 0x0(%r13),%ebx
  0x0000000115eb69f5: test   %rax,%rax
  0x0000000115eb69f8: je     0x0000000115eb6870
  0x0000000115eb69fe: mov    0x48(%rax),%ecx
  0x0000000115eb6a01: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb6a04: je     0x0000000115eb6870
  0x0000000115eb6a0a: mov    %rax,%r13
  0x0000000115eb6a0d: callq  0x0000000115eb6a17
  0x0000000115eb6a12: jmpq   0x0000000115eb6a92
  0x0000000115eb6a17: lea    0x8(%rsp),%rax
  0x0000000115eb6a1c: mov    %r13,-0x38(%rbp)
  0x0000000115eb6a20: mov    %r15,%rdi
  0x0000000115eb6a23: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6a2a: mov    %rax,0x1d8(%r15)
  0x0000000115eb6a31: test   $0xf,%esp
  0x0000000115eb6a37: je     0x0000000115eb6a4f
  0x0000000115eb6a3d: sub    $0x8,%rsp
  0x0000000115eb6a41: callq  0x000000010dce4396
  0x0000000115eb6a46: add    $0x8,%rsp
  0x0000000115eb6a4a: jmpq   0x0000000115eb6a54
  0x0000000115eb6a4f: callq  0x000000010dce4396
  0x0000000115eb6a54: movabs $0x0,%r10
  0x0000000115eb6a5e: mov    %r10,0x1d8(%r15)
  0x0000000115eb6a65: movabs $0x0,%r10
  0x0000000115eb6a6f: mov    %r10,0x1e8(%r15)
  0x0000000115eb6a76: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6a7e: je     0x0000000115eb6a89
  0x0000000115eb6a84: jmpq   0x0000000115e916e0
  0x0000000115eb6a89: mov    -0x38(%rbp),%r13
  0x0000000115eb6a8d: mov    -0x30(%rbp),%r14
  0x0000000115eb6a91: retq   
  0x0000000115eb6a92: mov    %rax,%rsi
  0x0000000115eb6a95: mov    -0x8(%rbp),%rdx
  0x0000000115eb6a99: leaveq 
  0x0000000115eb6a9a: pop    %rcx
  0x0000000115eb6a9b: mov    %rdx,%rsp
  0x0000000115eb6a9e: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb6aa2: push   %rcx
  0x0000000115eb6aa3: jmpq   *0x88(%r13)
  0x0000000115eb6aaa: mov    -0x20(%rbp),%rax
  0x0000000115eb6aae: test   %rax,%rax
  0x0000000115eb6ab1: je     0x0000000115eb6ac9
  0x0000000115eb6ab7: addq   $0x1,0x18(%rax)
  0x0000000115eb6abc: sbbq   $0x0,0x18(%rax)
  0x0000000115eb6ac1: add    $0x20,%rax
  0x0000000115eb6ac5: mov    %rax,-0x20(%rbp)
  0x0000000115eb6ac9: movzbl 0x3(%r13),%ebx
  0x0000000115eb6ace: add    $0x3,%r13
  0x0000000115eb6ad2: movabs $0x10e101840,%r10
  0x0000000115eb6adc: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
ifnonnull  199 ifnonnull  [0x0000000115eb6b00, 0x0000000115eb6ea0]  928 bytes

  0x0000000115eb6b00: pop    %rax
  0x0000000115eb6b01: test   %rax,%rax
  0x0000000115eb6b04: je     0x0000000115eb6e6a
  0x0000000115eb6b0a: mov    -0x18(%rbp),%rcx
  0x0000000115eb6b0e: mov    -0x20(%rbp),%rax
  0x0000000115eb6b12: test   %rax,%rax
  0x0000000115eb6b15: je     0x0000000115eb6b33
  0x0000000115eb6b1b: mov    0x8(%rax),%rbx
  0x0000000115eb6b1f: add    $0x1,%rbx
  0x0000000115eb6b23: sbb    $0x0,%rbx
  0x0000000115eb6b27: mov    %rbx,0x8(%rax)
  0x0000000115eb6b2b: add    0x10(%rax),%rax
  0x0000000115eb6b2f: mov    %rax,-0x20(%rbp)
  0x0000000115eb6b33: movswl 0x1(%r13),%edx
  0x0000000115eb6b38: bswap  %edx
  0x0000000115eb6b3a: sar    $0x10,%edx
  0x0000000115eb6b3d: movslq %edx,%rdx
  0x0000000115eb6b40: add    %rdx,%r13
  0x0000000115eb6b43: test   %edx,%edx
  0x0000000115eb6b45: jns    0x0000000115eb6c30
  0x0000000115eb6b4b: mov    0x18(%rcx),%rax
  0x0000000115eb6b4f: test   %rax,%rax
  0x0000000115eb6b52: jne    0x0000000115eb6bee
  0x0000000115eb6b58: push   %rdx
  0x0000000115eb6b59: push   %rcx
  0x0000000115eb6b5a: callq  0x0000000115eb6b64
  0x0000000115eb6b5f: jmpq   0x0000000115eb6be2
  0x0000000115eb6b64: mov    %rcx,%rsi
  0x0000000115eb6b67: lea    0x8(%rsp),%rax
  0x0000000115eb6b6c: mov    %r13,-0x38(%rbp)
  0x0000000115eb6b70: mov    %r15,%rdi
  0x0000000115eb6b73: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6b7a: mov    %rax,0x1d8(%r15)
  0x0000000115eb6b81: test   $0xf,%esp
  0x0000000115eb6b87: je     0x0000000115eb6b9f
  0x0000000115eb6b8d: sub    $0x8,%rsp
  0x0000000115eb6b91: callq  0x000000010dae6d98
  0x0000000115eb6b96: add    $0x8,%rsp
  0x0000000115eb6b9a: jmpq   0x0000000115eb6ba4
  0x0000000115eb6b9f: callq  0x000000010dae6d98
  0x0000000115eb6ba4: movabs $0x0,%r10
  0x0000000115eb6bae: mov    %r10,0x1d8(%r15)
  0x0000000115eb6bb5: movabs $0x0,%r10
  0x0000000115eb6bbf: mov    %r10,0x1e8(%r15)
  0x0000000115eb6bc6: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6bce: je     0x0000000115eb6bd9
  0x0000000115eb6bd4: jmpq   0x0000000115e916e0
  0x0000000115eb6bd9: mov    -0x38(%rbp),%r13
  0x0000000115eb6bdd: mov    -0x30(%rbp),%r14
  0x0000000115eb6be1: retq   
  0x0000000115eb6be2: pop    %rcx
  0x0000000115eb6be3: pop    %rdx
  0x0000000115eb6be4: mov    0x18(%rcx),%rax
  0x0000000115eb6be8: je     0x0000000115eb6c30
  0x0000000115eb6bee: mov    0x10(%rcx),%rbx
  0x0000000115eb6bf2: test   %rbx,%rbx
  0x0000000115eb6bf5: je     0x0000000115eb6c17
  0x0000000115eb6bf7: mov    0xe0(%rbx),%eax
  0x0000000115eb6bfd: add    $0x8,%eax
  0x0000000115eb6c00: mov    %eax,0xe0(%rbx)
  0x0000000115eb6c06: and    $0x1ff8,%eax
  0x0000000115eb6c0c: je     0x0000000115eb6d22
  0x0000000115eb6c12: jmpq   0x0000000115eb6c30
  0x0000000115eb6c17: mov    0x18(%rcx),%rcx
  0x0000000115eb6c1b: mov    0xc(%rcx),%eax
  0x0000000115eb6c1e: add    $0x8,%eax
  0x0000000115eb6c21: mov    %eax,0xc(%rcx)
  0x0000000115eb6c24: and    $0x1ff8,%eax
  0x0000000115eb6c2a: je     0x0000000115eb6d22
  0x0000000115eb6c30: movzbl 0x0(%r13),%ebx
  0x0000000115eb6c35: movabs $0x10e101840,%r10
  0x0000000115eb6c3f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb6c43: callq  0x0000000115eb6c4d
  0x0000000115eb6c48: jmpq   0x0000000115eb6cc8
  0x0000000115eb6c4d: lea    0x8(%rsp),%rax
  0x0000000115eb6c52: mov    %r13,-0x38(%rbp)
  0x0000000115eb6c56: mov    %r15,%rdi
  0x0000000115eb6c59: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6c60: mov    %rax,0x1d8(%r15)
  0x0000000115eb6c67: test   $0xf,%esp
  0x0000000115eb6c6d: je     0x0000000115eb6c85
  0x0000000115eb6c73: sub    $0x8,%rsp
  0x0000000115eb6c77: callq  0x000000010dae6f16
  0x0000000115eb6c7c: add    $0x8,%rsp
  0x0000000115eb6c80: jmpq   0x0000000115eb6c8a
  0x0000000115eb6c85: callq  0x000000010dae6f16
  0x0000000115eb6c8a: movabs $0x0,%r10
  0x0000000115eb6c94: mov    %r10,0x1d8(%r15)
  0x0000000115eb6c9b: movabs $0x0,%r10
  0x0000000115eb6ca5: mov    %r10,0x1e8(%r15)
  0x0000000115eb6cac: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6cb4: je     0x0000000115eb6cbf
  0x0000000115eb6cba: jmpq   0x0000000115e916e0
  0x0000000115eb6cbf: mov    -0x38(%rbp),%r13
  0x0000000115eb6cc3: mov    -0x30(%rbp),%r14
  0x0000000115eb6cc7: retq   
  0x0000000115eb6cc8: movzbl 0x0(%r13),%ebx
  0x0000000115eb6ccd: push   %rax
  0x0000000115eb6cce: push   %rbx
  0x0000000115eb6ccf: mov    -0x18(%rbp),%rbx
  0x0000000115eb6cd3: mov    0x10(%rbx),%rax
  0x0000000115eb6cd7: test   %rax,%rax
  0x0000000115eb6cda: je     0x0000000115eb6d17
  0x0000000115eb6ce0: mov    %r13,%rsi
  0x0000000115eb6ce3: mov    %rbx,%rdi
  0x0000000115eb6ce6: test   $0xf,%esp
  0x0000000115eb6cec: je     0x0000000115eb6d04
  0x0000000115eb6cf2: sub    $0x8,%rsp
  0x0000000115eb6cf6: callq  0x000000010dae706c
  0x0000000115eb6cfb: add    $0x8,%rsp
  0x0000000115eb6cff: jmpq   0x0000000115eb6d09
  0x0000000115eb6d04: callq  0x000000010dae706c
  0x0000000115eb6d09: mov    0x10(%rbx),%rbx
  0x0000000115eb6d0d: add    $0x100,%rbx
  0x0000000115eb6d14: add    %rbx,%rax
  0x0000000115eb6d17: mov    %rax,-0x20(%rbp)
  0x0000000115eb6d1b: pop    %rbx
  0x0000000115eb6d1c: pop    %rax
  0x0000000115eb6d1d: jmpq   0x0000000115eb6c30
  0x0000000115eb6d22: neg    %rdx
  0x0000000115eb6d25: add    %r13,%rdx
  0x0000000115eb6d28: callq  0x0000000115eb6d32
  0x0000000115eb6d2d: jmpq   0x0000000115eb6db0
  0x0000000115eb6d32: mov    %rdx,%rsi
  0x0000000115eb6d35: lea    0x8(%rsp),%rax
  0x0000000115eb6d3a: mov    %r13,-0x38(%rbp)
  0x0000000115eb6d3e: mov    %r15,%rdi
  0x0000000115eb6d41: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6d48: mov    %rax,0x1d8(%r15)
  0x0000000115eb6d4f: test   $0xf,%esp
  0x0000000115eb6d55: je     0x0000000115eb6d6d
  0x0000000115eb6d5b: sub    $0x8,%rsp
  0x0000000115eb6d5f: callq  0x000000010dae7476
  0x0000000115eb6d64: add    $0x8,%rsp
  0x0000000115eb6d68: jmpq   0x0000000115eb6d72
  0x0000000115eb6d6d: callq  0x000000010dae7476
  0x0000000115eb6d72: movabs $0x0,%r10
  0x0000000115eb6d7c: mov    %r10,0x1d8(%r15)
  0x0000000115eb6d83: movabs $0x0,%r10
  0x0000000115eb6d8d: mov    %r10,0x1e8(%r15)
  0x0000000115eb6d94: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6d9c: je     0x0000000115eb6da7
  0x0000000115eb6da2: jmpq   0x0000000115e916e0
  0x0000000115eb6da7: mov    -0x38(%rbp),%r13
  0x0000000115eb6dab: mov    -0x30(%rbp),%r14
  0x0000000115eb6daf: retq   
  0x0000000115eb6db0: movzbl 0x0(%r13),%ebx
  0x0000000115eb6db5: test   %rax,%rax
  0x0000000115eb6db8: je     0x0000000115eb6c30
  0x0000000115eb6dbe: mov    0x48(%rax),%ecx
  0x0000000115eb6dc1: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb6dc4: je     0x0000000115eb6c30
  0x0000000115eb6dca: mov    %rax,%r13
  0x0000000115eb6dcd: callq  0x0000000115eb6dd7
  0x0000000115eb6dd2: jmpq   0x0000000115eb6e52
  0x0000000115eb6dd7: lea    0x8(%rsp),%rax
  0x0000000115eb6ddc: mov    %r13,-0x38(%rbp)
  0x0000000115eb6de0: mov    %r15,%rdi
  0x0000000115eb6de3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6dea: mov    %rax,0x1d8(%r15)
  0x0000000115eb6df1: test   $0xf,%esp
  0x0000000115eb6df7: je     0x0000000115eb6e0f
  0x0000000115eb6dfd: sub    $0x8,%rsp
  0x0000000115eb6e01: callq  0x000000010dce4396
  0x0000000115eb6e06: add    $0x8,%rsp
  0x0000000115eb6e0a: jmpq   0x0000000115eb6e14
  0x0000000115eb6e0f: callq  0x000000010dce4396
  0x0000000115eb6e14: movabs $0x0,%r10
  0x0000000115eb6e1e: mov    %r10,0x1d8(%r15)
  0x0000000115eb6e25: movabs $0x0,%r10
  0x0000000115eb6e2f: mov    %r10,0x1e8(%r15)
  0x0000000115eb6e36: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6e3e: je     0x0000000115eb6e49
  0x0000000115eb6e44: jmpq   0x0000000115e916e0
  0x0000000115eb6e49: mov    -0x38(%rbp),%r13
  0x0000000115eb6e4d: mov    -0x30(%rbp),%r14
  0x0000000115eb6e51: retq   
  0x0000000115eb6e52: mov    %rax,%rsi
  0x0000000115eb6e55: mov    -0x8(%rbp),%rdx
  0x0000000115eb6e59: leaveq 
  0x0000000115eb6e5a: pop    %rcx
  0x0000000115eb6e5b: mov    %rdx,%rsp
  0x0000000115eb6e5e: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb6e62: push   %rcx
  0x0000000115eb6e63: jmpq   *0x88(%r13)
  0x0000000115eb6e6a: mov    -0x20(%rbp),%rax
  0x0000000115eb6e6e: test   %rax,%rax
  0x0000000115eb6e71: je     0x0000000115eb6e89
  0x0000000115eb6e77: addq   $0x1,0x18(%rax)
  0x0000000115eb6e7c: sbbq   $0x0,0x18(%rax)
  0x0000000115eb6e81: add    $0x20,%rax
  0x0000000115eb6e85: mov    %rax,-0x20(%rbp)
  0x0000000115eb6e89: movzbl 0x3(%r13),%ebx
  0x0000000115eb6e8e: add    $0x3,%r13
  0x0000000115eb6e92: movabs $0x10e101840,%r10
  0x0000000115eb6e9c: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
goto_w  200 goto_w  [0x0000000115eb6ec0, 0x0000000115eb7280]  960 bytes

  0x0000000115eb6ec0: push   %rax
  0x0000000115eb6ec1: jmpq   0x0000000115eb6ef0
  0x0000000115eb6ec6: sub    $0x8,%rsp
  0x0000000115eb6eca: vmovss %xmm0,(%rsp)
  0x0000000115eb6ecf: jmpq   0x0000000115eb6ef0
  0x0000000115eb6ed4: sub    $0x10,%rsp
  0x0000000115eb6ed8: vmovsd %xmm0,(%rsp)
  0x0000000115eb6edd: jmpq   0x0000000115eb6ef0
  0x0000000115eb6ee2: sub    $0x10,%rsp
  0x0000000115eb6ee6: mov    %rax,(%rsp)
  0x0000000115eb6eea: jmpq   0x0000000115eb6ef0
  0x0000000115eb6eef: push   %rax
  0x0000000115eb6ef0: mov    -0x18(%rbp),%rcx
  0x0000000115eb6ef4: mov    -0x20(%rbp),%rax
  0x0000000115eb6ef8: test   %rax,%rax
  0x0000000115eb6efb: je     0x0000000115eb6f19
  0x0000000115eb6f01: mov    0x8(%rax),%rbx
  0x0000000115eb6f05: add    $0x1,%rbx
  0x0000000115eb6f09: sbb    $0x0,%rbx
  0x0000000115eb6f0d: mov    %rbx,0x8(%rax)
  0x0000000115eb6f11: add    0x10(%rax),%rax
  0x0000000115eb6f15: mov    %rax,-0x20(%rbp)
  0x0000000115eb6f19: mov    0x1(%r13),%edx
  0x0000000115eb6f1d: bswap  %edx
  0x0000000115eb6f1f: movslq %edx,%rdx
  0x0000000115eb6f22: add    %rdx,%r13
  0x0000000115eb6f25: test   %edx,%edx
  0x0000000115eb6f27: jns    0x0000000115eb7012
  0x0000000115eb6f2d: mov    0x18(%rcx),%rax
  0x0000000115eb6f31: test   %rax,%rax
  0x0000000115eb6f34: jne    0x0000000115eb6fd0
  0x0000000115eb6f3a: push   %rdx
  0x0000000115eb6f3b: push   %rcx
  0x0000000115eb6f3c: callq  0x0000000115eb6f46
  0x0000000115eb6f41: jmpq   0x0000000115eb6fc4
  0x0000000115eb6f46: mov    %rcx,%rsi
  0x0000000115eb6f49: lea    0x8(%rsp),%rax
  0x0000000115eb6f4e: mov    %r13,-0x38(%rbp)
  0x0000000115eb6f52: mov    %r15,%rdi
  0x0000000115eb6f55: mov    %rbp,0x1e8(%r15)
  0x0000000115eb6f5c: mov    %rax,0x1d8(%r15)
  0x0000000115eb6f63: test   $0xf,%esp
  0x0000000115eb6f69: je     0x0000000115eb6f81
  0x0000000115eb6f6f: sub    $0x8,%rsp
  0x0000000115eb6f73: callq  0x000000010dae6d98
  0x0000000115eb6f78: add    $0x8,%rsp
  0x0000000115eb6f7c: jmpq   0x0000000115eb6f86
  0x0000000115eb6f81: callq  0x000000010dae6d98
  0x0000000115eb6f86: movabs $0x0,%r10
  0x0000000115eb6f90: mov    %r10,0x1d8(%r15)
  0x0000000115eb6f97: movabs $0x0,%r10
  0x0000000115eb6fa1: mov    %r10,0x1e8(%r15)
  0x0000000115eb6fa8: cmpq   $0x0,0x8(%r15)
  0x0000000115eb6fb0: je     0x0000000115eb6fbb
  0x0000000115eb6fb6: jmpq   0x0000000115e916e0
  0x0000000115eb6fbb: mov    -0x38(%rbp),%r13
  0x0000000115eb6fbf: mov    -0x30(%rbp),%r14
  0x0000000115eb6fc3: retq   
  0x0000000115eb6fc4: pop    %rcx
  0x0000000115eb6fc5: pop    %rdx
  0x0000000115eb6fc6: mov    0x18(%rcx),%rax
  0x0000000115eb6fca: je     0x0000000115eb7012
  0x0000000115eb6fd0: mov    0x10(%rcx),%rbx
  0x0000000115eb6fd4: test   %rbx,%rbx
  0x0000000115eb6fd7: je     0x0000000115eb6ff9
  0x0000000115eb6fd9: mov    0xe0(%rbx),%eax
  0x0000000115eb6fdf: add    $0x8,%eax
  0x0000000115eb6fe2: mov    %eax,0xe0(%rbx)
  0x0000000115eb6fe8: and    $0x1ff8,%eax
  0x0000000115eb6fee: je     0x0000000115eb7104
  0x0000000115eb6ff4: jmpq   0x0000000115eb7012
  0x0000000115eb6ff9: mov    0x18(%rcx),%rcx
  0x0000000115eb6ffd: mov    0xc(%rcx),%eax
  0x0000000115eb7000: add    $0x8,%eax
  0x0000000115eb7003: mov    %eax,0xc(%rcx)
  0x0000000115eb7006: and    $0x1ff8,%eax
  0x0000000115eb700c: je     0x0000000115eb7104
  0x0000000115eb7012: movzbl 0x0(%r13),%ebx
  0x0000000115eb7017: movabs $0x10e101840,%r10
  0x0000000115eb7021: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7025: callq  0x0000000115eb702f
  0x0000000115eb702a: jmpq   0x0000000115eb70aa
  0x0000000115eb702f: lea    0x8(%rsp),%rax
  0x0000000115eb7034: mov    %r13,-0x38(%rbp)
  0x0000000115eb7038: mov    %r15,%rdi
  0x0000000115eb703b: mov    %rbp,0x1e8(%r15)
  0x0000000115eb7042: mov    %rax,0x1d8(%r15)
  0x0000000115eb7049: test   $0xf,%esp
  0x0000000115eb704f: je     0x0000000115eb7067
  0x0000000115eb7055: sub    $0x8,%rsp
  0x0000000115eb7059: callq  0x000000010dae6f16
  0x0000000115eb705e: add    $0x8,%rsp
  0x0000000115eb7062: jmpq   0x0000000115eb706c
  0x0000000115eb7067: callq  0x000000010dae6f16
  0x0000000115eb706c: movabs $0x0,%r10
  0x0000000115eb7076: mov    %r10,0x1d8(%r15)
  0x0000000115eb707d: movabs $0x0,%r10
  0x0000000115eb7087: mov    %r10,0x1e8(%r15)
  0x0000000115eb708e: cmpq   $0x0,0x8(%r15)
  0x0000000115eb7096: je     0x0000000115eb70a1
  0x0000000115eb709c: jmpq   0x0000000115e916e0
  0x0000000115eb70a1: mov    -0x38(%rbp),%r13
  0x0000000115eb70a5: mov    -0x30(%rbp),%r14
  0x0000000115eb70a9: retq   
  0x0000000115eb70aa: movzbl 0x0(%r13),%ebx
  0x0000000115eb70af: push   %rax
  0x0000000115eb70b0: push   %rbx
  0x0000000115eb70b1: mov    -0x18(%rbp),%rbx
  0x0000000115eb70b5: mov    0x10(%rbx),%rax
  0x0000000115eb70b9: test   %rax,%rax
  0x0000000115eb70bc: je     0x0000000115eb70f9
  0x0000000115eb70c2: mov    %r13,%rsi
  0x0000000115eb70c5: mov    %rbx,%rdi
  0x0000000115eb70c8: test   $0xf,%esp
  0x0000000115eb70ce: je     0x0000000115eb70e6
  0x0000000115eb70d4: sub    $0x8,%rsp
  0x0000000115eb70d8: callq  0x000000010dae706c
  0x0000000115eb70dd: add    $0x8,%rsp
  0x0000000115eb70e1: jmpq   0x0000000115eb70eb
  0x0000000115eb70e6: callq  0x000000010dae706c
  0x0000000115eb70eb: mov    0x10(%rbx),%rbx
  0x0000000115eb70ef: add    $0x100,%rbx
  0x0000000115eb70f6: add    %rbx,%rax
  0x0000000115eb70f9: mov    %rax,-0x20(%rbp)
  0x0000000115eb70fd: pop    %rbx
  0x0000000115eb70fe: pop    %rax
  0x0000000115eb70ff: jmpq   0x0000000115eb7012
  0x0000000115eb7104: neg    %rdx
  0x0000000115eb7107: add    %r13,%rdx
  0x0000000115eb710a: callq  0x0000000115eb7114
  0x0000000115eb710f: jmpq   0x0000000115eb7192
  0x0000000115eb7114: mov    %rdx,%rsi
  0x0000000115eb7117: lea    0x8(%rsp),%rax
  0x0000000115eb711c: mov    %r13,-0x38(%rbp)
  0x0000000115eb7120: mov    %r15,%rdi
  0x0000000115eb7123: mov    %rbp,0x1e8(%r15)
  0x0000000115eb712a: mov    %rax,0x1d8(%r15)
  0x0000000115eb7131: test   $0xf,%esp
  0x0000000115eb7137: je     0x0000000115eb714f
  0x0000000115eb713d: sub    $0x8,%rsp
  0x0000000115eb7141: callq  0x000000010dae7476
  0x0000000115eb7146: add    $0x8,%rsp
  0x0000000115eb714a: jmpq   0x0000000115eb7154
  0x0000000115eb714f: callq  0x000000010dae7476
  0x0000000115eb7154: movabs $0x0,%r10
  0x0000000115eb715e: mov    %r10,0x1d8(%r15)
  0x0000000115eb7165: movabs $0x0,%r10
  0x0000000115eb716f: mov    %r10,0x1e8(%r15)
  0x0000000115eb7176: cmpq   $0x0,0x8(%r15)
  0x0000000115eb717e: je     0x0000000115eb7189
  0x0000000115eb7184: jmpq   0x0000000115e916e0
  0x0000000115eb7189: mov    -0x38(%rbp),%r13
  0x0000000115eb718d: mov    -0x30(%rbp),%r14
  0x0000000115eb7191: retq   
  0x0000000115eb7192: movzbl 0x0(%r13),%ebx
  0x0000000115eb7197: test   %rax,%rax
  0x0000000115eb719a: je     0x0000000115eb7012
  0x0000000115eb71a0: mov    0x48(%rax),%ecx
  0x0000000115eb71a3: cmp    $0xfffffffffffffffe,%ecx
  0x0000000115eb71a6: je     0x0000000115eb7012
  0x0000000115eb71ac: mov    %rax,%r13
  0x0000000115eb71af: callq  0x0000000115eb71b9
  0x0000000115eb71b4: jmpq   0x0000000115eb7234
  0x0000000115eb71b9: lea    0x8(%rsp),%rax
  0x0000000115eb71be: mov    %r13,-0x38(%rbp)
  0x0000000115eb71c2: mov    %r15,%rdi
  0x0000000115eb71c5: mov    %rbp,0x1e8(%r15)
  0x0000000115eb71cc: mov    %rax,0x1d8(%r15)
  0x0000000115eb71d3: test   $0xf,%esp
  0x0000000115eb71d9: je     0x0000000115eb71f1
  0x0000000115eb71df: sub    $0x8,%rsp
  0x0000000115eb71e3: callq  0x000000010dce4396
  0x0000000115eb71e8: add    $0x8,%rsp
  0x0000000115eb71ec: jmpq   0x0000000115eb71f6
  0x0000000115eb71f1: callq  0x000000010dce4396
  0x0000000115eb71f6: movabs $0x0,%r10
  0x0000000115eb7200: mov    %r10,0x1d8(%r15)
  0x0000000115eb7207: movabs $0x0,%r10
  0x0000000115eb7211: mov    %r10,0x1e8(%r15)
  0x0000000115eb7218: cmpq   $0x0,0x8(%r15)
  0x0000000115eb7220: je     0x0000000115eb722b
  0x0000000115eb7226: jmpq   0x0000000115e916e0
  0x0000000115eb722b: mov    -0x38(%rbp),%r13
  0x0000000115eb722f: mov    -0x30(%rbp),%r14
  0x0000000115eb7233: retq   
  0x0000000115eb7234: mov    %rax,%rsi
  0x0000000115eb7237: mov    -0x8(%rbp),%rdx
  0x0000000115eb723b: leaveq 
  0x0000000115eb723c: pop    %rcx
  0x0000000115eb723d: mov    %rdx,%rsp
  0x0000000115eb7240: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb7244: push   %rcx
  0x0000000115eb7245: jmpq   *0x88(%r13)
  0x0000000115eb724c: movzbl 0x5(%r13),%ebx
  0x0000000115eb7251: add    $0x5,%r13
  0x0000000115eb7255: movabs $0x10e101840,%r10
  0x0000000115eb725f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7263: nopl   0x0(%rax,%rax,1)
  0x0000000115eb7268: add    %al,(%rax)
  0x0000000115eb726a: add    %al,(%rax)
  0x0000000115eb726c: add    %al,(%rax)
  0x0000000115eb726e: add    %al,(%rax)
  0x0000000115eb7270: add    %al,(%rax)
  0x0000000115eb7272: add    %al,(%rax)
  0x0000000115eb7274: add    %al,(%rax)
  0x0000000115eb7276: add    %al,(%rax)
  0x0000000115eb7278: add    %al,(%rax)
  0x0000000115eb727a: add    %al,(%rax)
  0x0000000115eb727c: add    %al,(%rax)
  0x0000000115eb727e: add    %al,(%rax)

----------------------------------------------------------------------
jsr_w  201 jsr_w  [0x0000000115eb72a0, 0x0000000115eb7340]  160 bytes

  0x0000000115eb72a0: push   %rax
  0x0000000115eb72a1: jmpq   0x0000000115eb72d0
  0x0000000115eb72a6: sub    $0x8,%rsp
  0x0000000115eb72aa: vmovss %xmm0,(%rsp)
  0x0000000115eb72af: jmpq   0x0000000115eb72d0
  0x0000000115eb72b4: sub    $0x10,%rsp
  0x0000000115eb72b8: vmovsd %xmm0,(%rsp)
  0x0000000115eb72bd: jmpq   0x0000000115eb72d0
  0x0000000115eb72c2: sub    $0x10,%rsp
  0x0000000115eb72c6: mov    %rax,(%rsp)
  0x0000000115eb72ca: jmpq   0x0000000115eb72d0
  0x0000000115eb72cf: push   %rax
  0x0000000115eb72d0: mov    -0x18(%rbp),%rcx
  0x0000000115eb72d4: mov    -0x20(%rbp),%rax
  0x0000000115eb72d8: test   %rax,%rax
  0x0000000115eb72db: je     0x0000000115eb72f9
  0x0000000115eb72e1: mov    0x8(%rax),%rbx
  0x0000000115eb72e5: add    $0x1,%rbx
  0x0000000115eb72e9: sbb    $0x0,%rbx
  0x0000000115eb72ed: mov    %rbx,0x8(%rax)
  0x0000000115eb72f1: add    0x10(%rax),%rax
  0x0000000115eb72f5: mov    %rax,-0x20(%rbp)
  0x0000000115eb72f9: mov    0x1(%r13),%edx
  0x0000000115eb72fd: bswap  %edx
  0x0000000115eb72ff: movslq %edx,%rdx
  0x0000000115eb7302: movzbl 0x0(%r13,%rdx,1),%ebx
  0x0000000115eb7308: lea    -0x2b(%r13),%rax
  0x0000000115eb730c: sub    0x8(%rcx),%rax
  0x0000000115eb7310: add    %rdx,%r13
  0x0000000115eb7313: push   %rax
  0x0000000115eb7314: movabs $0x10e101840,%r10
  0x0000000115eb731e: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7322: movzbl 0x5(%r13),%ebx
  0x0000000115eb7327: add    $0x5,%r13
  0x0000000115eb732b: movabs $0x10e101840,%r10
  0x0000000115eb7335: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7339: nopl   0x0(%rax)

----------------------------------------------------------------------
breakpoint  202 breakpoint  [0x0000000115eb7360, 0x0000000115eb74c0]  352 bytes

  0x0000000115eb7360: push   %rax
  0x0000000115eb7361: jmpq   0x0000000115eb7390
  0x0000000115eb7366: sub    $0x8,%rsp
  0x0000000115eb736a: vmovss %xmm0,(%rsp)
  0x0000000115eb736f: jmpq   0x0000000115eb7390
  0x0000000115eb7374: sub    $0x10,%rsp
  0x0000000115eb7378: vmovsd %xmm0,(%rsp)
  0x0000000115eb737d: jmpq   0x0000000115eb7390
  0x0000000115eb7382: sub    $0x10,%rsp
  0x0000000115eb7386: mov    %rax,(%rsp)
  0x0000000115eb738a: jmpq   0x0000000115eb7390
  0x0000000115eb738f: push   %rax
  0x0000000115eb7390: mov    -0x18(%rbp),%rsi
  0x0000000115eb7394: callq  0x0000000115eb739e
  0x0000000115eb7399: jmpq   0x0000000115eb741c
  0x0000000115eb739e: mov    %r13,%rdx
  0x0000000115eb73a1: lea    0x8(%rsp),%rax
  0x0000000115eb73a6: mov    %r13,-0x38(%rbp)
  0x0000000115eb73aa: mov    %r15,%rdi
  0x0000000115eb73ad: mov    %rbp,0x1e8(%r15)
  0x0000000115eb73b4: mov    %rax,0x1d8(%r15)
  0x0000000115eb73bb: test   $0xf,%esp
  0x0000000115eb73c1: je     0x0000000115eb73d9
  0x0000000115eb73c7: sub    $0x8,%rsp
  0x0000000115eb73cb: callq  0x000000010dae8302
  0x0000000115eb73d0: add    $0x8,%rsp
  0x0000000115eb73d4: jmpq   0x0000000115eb73de
  0x0000000115eb73d9: callq  0x000000010dae8302
  0x0000000115eb73de: movabs $0x0,%r10
  0x0000000115eb73e8: mov    %r10,0x1d8(%r15)
  0x0000000115eb73ef: movabs $0x0,%r10
  0x0000000115eb73f9: mov    %r10,0x1e8(%r15)
  0x0000000115eb7400: cmpq   $0x0,0x8(%r15)
  0x0000000115eb7408: je     0x0000000115eb7413
  0x0000000115eb740e: jmpq   0x0000000115e916e0
  0x0000000115eb7413: mov    -0x38(%rbp),%r13
  0x0000000115eb7417: mov    -0x30(%rbp),%r14
  0x0000000115eb741b: retq   
  0x0000000115eb741c: mov    %rax,%rbx
  0x0000000115eb741f: mov    -0x18(%rbp),%rsi
  0x0000000115eb7423: callq  0x0000000115eb742d
  0x0000000115eb7428: jmpq   0x0000000115eb74ab
  0x0000000115eb742d: mov    %r13,%rdx
  0x0000000115eb7430: lea    0x8(%rsp),%rax
  0x0000000115eb7435: mov    %r13,-0x38(%rbp)
  0x0000000115eb7439: mov    %r15,%rdi
  0x0000000115eb743c: mov    %rbp,0x1e8(%r15)
  0x0000000115eb7443: mov    %rax,0x1d8(%r15)
  0x0000000115eb744a: test   $0xf,%esp
  0x0000000115eb7450: je     0x0000000115eb7468
  0x0000000115eb7456: sub    $0x8,%rsp
  0x0000000115eb745a: callq  0x000000010dae8276
  0x0000000115eb745f: add    $0x8,%rsp
  0x0000000115eb7463: jmpq   0x0000000115eb746d
  0x0000000115eb7468: callq  0x000000010dae8276
  0x0000000115eb746d: movabs $0x0,%r10
  0x0000000115eb7477: mov    %r10,0x1d8(%r15)
  0x0000000115eb747e: movabs $0x0,%r10
  0x0000000115eb7488: mov    %r10,0x1e8(%r15)
  0x0000000115eb748f: cmpq   $0x0,0x8(%r15)
  0x0000000115eb7497: je     0x0000000115eb74a2
  0x0000000115eb749d: jmpq   0x0000000115e916e0
  0x0000000115eb74a2: mov    -0x38(%rbp),%r13
  0x0000000115eb74a6: mov    -0x30(%rbp),%r14
  0x0000000115eb74aa: retq   
  0x0000000115eb74ab: movabs $0x10e0fc040,%r10
  0x0000000115eb74b5: jmpq   *(%r10,%rbx,8)
  0x0000000115eb74b9: nopl   0x0(%rax)

----------------------------------------------------------------------
fast_agetfield  203 fast_agetfield  [0x0000000115eb74e0, 0x0000000115eb7520]  64 bytes

  0x0000000115eb74e0: pop    %rax
  0x0000000115eb74e1: movzwl 0x1(%r13),%ebx
  0x0000000115eb74e6: mov    -0x28(%rbp),%rcx
  0x0000000115eb74ea: shl    $0x2,%ebx
  0x0000000115eb74ed: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb74f2: cmp    (%rax),%rax
  0x0000000115eb74f5: mov    (%rax,%rbx,1),%eax
  0x0000000115eb74f8: shl    $0x3,%rax
  0x0000000115eb74fc: movzbl 0x3(%r13),%ebx
  0x0000000115eb7501: add    $0x3,%r13
  0x0000000115eb7505: movabs $0x10e101040,%r10
  0x0000000115eb750f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7513: nopl   0x0(%rax,%rax,1)
  0x0000000115eb7518: add    %al,(%rax)
  0x0000000115eb751a: add    %al,(%rax)
  0x0000000115eb751c: add    %al,(%rax)
  0x0000000115eb751e: add    %al,(%rax)

----------------------------------------------------------------------
fast_bgetfield  204 fast_bgetfield  [0x0000000115eb7540, 0x0000000115eb7580]  64 bytes

  0x0000000115eb7540: pop    %rax
  0x0000000115eb7541: movzwl 0x1(%r13),%ebx
  0x0000000115eb7546: mov    -0x28(%rbp),%rcx
  0x0000000115eb754a: shl    $0x2,%ebx
  0x0000000115eb754d: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7552: cmp    (%rax),%rax
  0x0000000115eb7555: movsbl (%rax,%rbx,1),%eax
  0x0000000115eb7559: movzbl 0x3(%r13),%ebx
  0x0000000115eb755e: add    $0x3,%r13
  0x0000000115eb7562: movabs $0x10e0ff040,%r10
  0x0000000115eb756c: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7570: add    %al,(%rax)
  0x0000000115eb7572: add    %al,(%rax)
  0x0000000115eb7574: add    %al,(%rax)
  0x0000000115eb7576: add    %al,(%rax)
  0x0000000115eb7578: add    %al,(%rax)
  0x0000000115eb757a: add    %al,(%rax)
  0x0000000115eb757c: add    %al,(%rax)
  0x0000000115eb757e: add    %al,(%rax)

----------------------------------------------------------------------
fast_cgetfield  205 fast_cgetfield  [0x0000000115eb75a0, 0x0000000115eb75e0]  64 bytes

  0x0000000115eb75a0: pop    %rax
  0x0000000115eb75a1: movzwl 0x1(%r13),%ebx
  0x0000000115eb75a6: mov    -0x28(%rbp),%rcx
  0x0000000115eb75aa: shl    $0x2,%ebx
  0x0000000115eb75ad: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb75b2: cmp    (%rax),%rax
  0x0000000115eb75b5: movzwl (%rax,%rbx,1),%eax
  0x0000000115eb75b9: movzbl 0x3(%r13),%ebx
  0x0000000115eb75be: add    $0x3,%r13
  0x0000000115eb75c2: movabs $0x10e0ff040,%r10
  0x0000000115eb75cc: jmpq   *(%r10,%rbx,8)
  0x0000000115eb75d0: add    %al,(%rax)
  0x0000000115eb75d2: add    %al,(%rax)
  0x0000000115eb75d4: add    %al,(%rax)
  0x0000000115eb75d6: add    %al,(%rax)
  0x0000000115eb75d8: add    %al,(%rax)
  0x0000000115eb75da: add    %al,(%rax)
  0x0000000115eb75dc: add    %al,(%rax)
  0x0000000115eb75de: add    %al,(%rax)

----------------------------------------------------------------------
fast_dgetfield  206 fast_dgetfield  [0x0000000115eb7600, 0x0000000115eb7640]  64 bytes

  0x0000000115eb7600: pop    %rax
  0x0000000115eb7601: movzwl 0x1(%r13),%ebx
  0x0000000115eb7606: mov    -0x28(%rbp),%rcx
  0x0000000115eb760a: shl    $0x2,%ebx
  0x0000000115eb760d: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7612: cmp    (%rax),%rax
  0x0000000115eb7615: vmovsd (%rax,%rbx,1),%xmm0
  0x0000000115eb761a: movzbl 0x3(%r13),%ebx
  0x0000000115eb761f: add    $0x3,%r13
  0x0000000115eb7623: movabs $0x10e100840,%r10
  0x0000000115eb762d: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7631: nopl   0x0(%rax)
  0x0000000115eb7638: add    %al,(%rax)
  0x0000000115eb763a: add    %al,(%rax)
  0x0000000115eb763c: add    %al,(%rax)
  0x0000000115eb763e: add    %al,(%rax)

----------------------------------------------------------------------
fast_fgetfield  207 fast_fgetfield  [0x0000000115eb7660, 0x0000000115eb76a0]  64 bytes

  0x0000000115eb7660: pop    %rax
  0x0000000115eb7661: movzwl 0x1(%r13),%ebx
  0x0000000115eb7666: mov    -0x28(%rbp),%rcx
  0x0000000115eb766a: shl    $0x2,%ebx
  0x0000000115eb766d: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7672: cmp    (%rax),%rax
  0x0000000115eb7675: vmovss (%rax,%rbx,1),%xmm0
  0x0000000115eb767a: movzbl 0x3(%r13),%ebx
  0x0000000115eb767f: add    $0x3,%r13
  0x0000000115eb7683: movabs $0x10e100040,%r10
  0x0000000115eb768d: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7691: nopl   0x0(%rax)
  0x0000000115eb7698: add    %al,(%rax)
  0x0000000115eb769a: add    %al,(%rax)
  0x0000000115eb769c: add    %al,(%rax)
  0x0000000115eb769e: add    %al,(%rax)

----------------------------------------------------------------------
fast_igetfield  208 fast_igetfield  [0x0000000115eb76c0, 0x0000000115eb7700]  64 bytes

  0x0000000115eb76c0: pop    %rax
  0x0000000115eb76c1: movzwl 0x1(%r13),%ebx
  0x0000000115eb76c6: mov    -0x28(%rbp),%rcx
  0x0000000115eb76ca: shl    $0x2,%ebx
  0x0000000115eb76cd: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb76d2: cmp    (%rax),%rax
  0x0000000115eb76d5: mov    (%rax,%rbx,1),%eax
  0x0000000115eb76d8: movzbl 0x3(%r13),%ebx
  0x0000000115eb76dd: add    $0x3,%r13
  0x0000000115eb76e1: movabs $0x10e0ff040,%r10
  0x0000000115eb76eb: jmpq   *(%r10,%rbx,8)
  0x0000000115eb76ef: nop
  0x0000000115eb76f0: add    %al,(%rax)
  0x0000000115eb76f2: add    %al,(%rax)
  0x0000000115eb76f4: add    %al,(%rax)
  0x0000000115eb76f6: add    %al,(%rax)
  0x0000000115eb76f8: add    %al,(%rax)
  0x0000000115eb76fa: add    %al,(%rax)
  0x0000000115eb76fc: add    %al,(%rax)
  0x0000000115eb76fe: add    %al,(%rax)

----------------------------------------------------------------------
fast_lgetfield  209 fast_lgetfield  [0x0000000115eb7720, 0x0000000115eb7760]  64 bytes

  0x0000000115eb7720: pop    %rax
  0x0000000115eb7721: movzwl 0x1(%r13),%ebx
  0x0000000115eb7726: mov    -0x28(%rbp),%rcx
  0x0000000115eb772a: shl    $0x2,%ebx
  0x0000000115eb772d: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7732: cmp    (%rax),%rax
  0x0000000115eb7735: mov    (%rax,%rbx,1),%rax
  0x0000000115eb7739: movzbl 0x3(%r13),%ebx
  0x0000000115eb773e: add    $0x3,%r13
  0x0000000115eb7742: movabs $0x10e0ff840,%r10
  0x0000000115eb774c: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7750: add    %al,(%rax)
  0x0000000115eb7752: add    %al,(%rax)
  0x0000000115eb7754: add    %al,(%rax)
  0x0000000115eb7756: add    %al,(%rax)
  0x0000000115eb7758: add    %al,(%rax)
  0x0000000115eb775a: add    %al,(%rax)
  0x0000000115eb775c: add    %al,(%rax)
  0x0000000115eb775e: add    %al,(%rax)

----------------------------------------------------------------------
fast_sgetfield  210 fast_sgetfield  [0x0000000115eb7780, 0x0000000115eb77c0]  64 bytes

  0x0000000115eb7780: pop    %rax
  0x0000000115eb7781: movzwl 0x1(%r13),%ebx
  0x0000000115eb7786: mov    -0x28(%rbp),%rcx
  0x0000000115eb778a: shl    $0x2,%ebx
  0x0000000115eb778d: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7792: cmp    (%rax),%rax
  0x0000000115eb7795: movswl (%rax,%rbx,1),%eax
  0x0000000115eb7799: movzbl 0x3(%r13),%ebx
  0x0000000115eb779e: add    $0x3,%r13
  0x0000000115eb77a2: movabs $0x10e0ff040,%r10
  0x0000000115eb77ac: jmpq   *(%r10,%rbx,8)
  0x0000000115eb77b0: add    %al,(%rax)
  0x0000000115eb77b2: add    %al,(%rax)
  0x0000000115eb77b4: add    %al,(%rax)
  0x0000000115eb77b6: add    %al,(%rax)
  0x0000000115eb77b8: add    %al,(%rax)
  0x0000000115eb77ba: add    %al,(%rax)
  0x0000000115eb77bc: add    %al,(%rax)
  0x0000000115eb77be: add    %al,(%rax)

----------------------------------------------------------------------
fast_aputfield  211 fast_aputfield  [0x0000000115eb77e0, 0x0000000115eb7840]  96 bytes

  0x0000000115eb77e0: pop    %rax
  0x0000000115eb77e1: movzwl 0x1(%r13),%ebx
  0x0000000115eb77e6: mov    -0x28(%rbp),%rcx
  0x0000000115eb77ea: shl    $0x2,%ebx
  0x0000000115eb77ed: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb77f1: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb77f6: shr    $0x15,%edx
  0x0000000115eb77f9: and    $0x1,%edx
  0x0000000115eb77fc: pop    %rcx
  0x0000000115eb77fd: cmp    (%rcx),%rax
  0x0000000115eb7800: shr    $0x3,%rax
  0x0000000115eb7804: mov    %eax,(%rcx,%rbx,1)
  0x0000000115eb7807: shr    $0x9,%rcx
  0x0000000115eb780b: movabs $0x10b562000,%r10
  0x0000000115eb7815: movb   $0x0,(%r10,%rcx,1)
  0x0000000115eb781a: test   %edx,%edx
  0x0000000115eb781c: je     0x0000000115eb7827
  0x0000000115eb7822: lock addl $0x0,(%rsp)
  0x0000000115eb7827: movzbl 0x3(%r13),%ebx
  0x0000000115eb782c: add    $0x3,%r13
  0x0000000115eb7830: movabs $0x10e101840,%r10
  0x0000000115eb783a: jmpq   *(%r10,%rbx,8)
  0x0000000115eb783e: xchg   %ax,%ax

----------------------------------------------------------------------
fast_bputfield  212 fast_bputfield  [0x0000000115eb7860, 0x0000000115eb78c0]  96 bytes

  0x0000000115eb7860: mov    (%rsp),%eax
  0x0000000115eb7863: add    $0x8,%rsp
  0x0000000115eb7867: movzwl 0x1(%r13),%ebx
  0x0000000115eb786c: mov    -0x28(%rbp),%rcx
  0x0000000115eb7870: shl    $0x2,%ebx
  0x0000000115eb7873: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb7877: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb787c: shr    $0x15,%edx
  0x0000000115eb787f: and    $0x1,%edx
  0x0000000115eb7882: pop    %rcx
  0x0000000115eb7883: cmp    (%rcx),%rax
  0x0000000115eb7886: mov    %al,(%rcx,%rbx,1)
  0x0000000115eb7889: test   %edx,%edx
  0x0000000115eb788b: je     0x0000000115eb7896
  0x0000000115eb7891: lock addl $0x0,(%rsp)
  0x0000000115eb7896: movzbl 0x3(%r13),%ebx
  0x0000000115eb789b: add    $0x3,%r13
  0x0000000115eb789f: movabs $0x10e101840,%r10
  0x0000000115eb78a9: jmpq   *(%r10,%rbx,8)
  0x0000000115eb78ad: data32 xchg %ax,%ax
  0x0000000115eb78b0: add    %al,(%rax)
  0x0000000115eb78b2: add    %al,(%rax)
  0x0000000115eb78b4: add    %al,(%rax)
  0x0000000115eb78b6: add    %al,(%rax)
  0x0000000115eb78b8: add    %al,(%rax)
  0x0000000115eb78ba: add    %al,(%rax)
  0x0000000115eb78bc: add    %al,(%rax)
  0x0000000115eb78be: add    %al,(%rax)

----------------------------------------------------------------------
fast_zputfield  213 fast_zputfield  [0x0000000115eb78e0, 0x0000000115eb7940]  96 bytes

  0x0000000115eb78e0: mov    (%rsp),%eax
  0x0000000115eb78e3: add    $0x8,%rsp
  0x0000000115eb78e7: movzwl 0x1(%r13),%ebx
  0x0000000115eb78ec: mov    -0x28(%rbp),%rcx
  0x0000000115eb78f0: shl    $0x2,%ebx
  0x0000000115eb78f3: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb78f7: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb78fc: shr    $0x15,%edx
  0x0000000115eb78ff: and    $0x1,%edx
  0x0000000115eb7902: pop    %rcx
  0x0000000115eb7903: cmp    (%rcx),%rax
  0x0000000115eb7906: and    $0x1,%eax
  0x0000000115eb7909: mov    %al,(%rcx,%rbx,1)
  0x0000000115eb790c: test   %edx,%edx
  0x0000000115eb790e: je     0x0000000115eb7919
  0x0000000115eb7914: lock addl $0x0,(%rsp)
  0x0000000115eb7919: movzbl 0x3(%r13),%ebx
  0x0000000115eb791e: add    $0x3,%r13
  0x0000000115eb7922: movabs $0x10e101840,%r10
  0x0000000115eb792c: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7930: add    %al,(%rax)
  0x0000000115eb7932: add    %al,(%rax)
  0x0000000115eb7934: add    %al,(%rax)
  0x0000000115eb7936: add    %al,(%rax)
  0x0000000115eb7938: add    %al,(%rax)
  0x0000000115eb793a: add    %al,(%rax)
  0x0000000115eb793c: add    %al,(%rax)
  0x0000000115eb793e: add    %al,(%rax)

----------------------------------------------------------------------
fast_cputfield  214 fast_cputfield  [0x0000000115eb7960, 0x0000000115eb79c0]  96 bytes

  0x0000000115eb7960: mov    (%rsp),%eax
  0x0000000115eb7963: add    $0x8,%rsp
  0x0000000115eb7967: movzwl 0x1(%r13),%ebx
  0x0000000115eb796c: mov    -0x28(%rbp),%rcx
  0x0000000115eb7970: shl    $0x2,%ebx
  0x0000000115eb7973: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb7977: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb797c: shr    $0x15,%edx
  0x0000000115eb797f: and    $0x1,%edx
  0x0000000115eb7982: pop    %rcx
  0x0000000115eb7983: cmp    (%rcx),%rax
  0x0000000115eb7986: mov    %ax,(%rcx,%rbx,1)
  0x0000000115eb798a: test   %edx,%edx
  0x0000000115eb798c: je     0x0000000115eb7997
  0x0000000115eb7992: lock addl $0x0,(%rsp)
  0x0000000115eb7997: movzbl 0x3(%r13),%ebx
  0x0000000115eb799c: add    $0x3,%r13
  0x0000000115eb79a0: movabs $0x10e101840,%r10
  0x0000000115eb79aa: jmpq   *(%r10,%rbx,8)
  0x0000000115eb79ae: xchg   %ax,%ax
  0x0000000115eb79b0: add    %al,(%rax)
  0x0000000115eb79b2: add    %al,(%rax)
  0x0000000115eb79b4: add    %al,(%rax)
  0x0000000115eb79b6: add    %al,(%rax)
  0x0000000115eb79b8: add    %al,(%rax)
  0x0000000115eb79ba: add    %al,(%rax)
  0x0000000115eb79bc: add    %al,(%rax)
  0x0000000115eb79be: add    %al,(%rax)

----------------------------------------------------------------------
fast_dputfield  215 fast_dputfield  [0x0000000115eb79e0, 0x0000000115eb7a40]  96 bytes

  0x0000000115eb79e0: vmovsd (%rsp),%xmm0
  0x0000000115eb79e5: add    $0x10,%rsp
  0x0000000115eb79e9: movzwl 0x1(%r13),%ebx
  0x0000000115eb79ee: mov    -0x28(%rbp),%rcx
  0x0000000115eb79f2: shl    $0x2,%ebx
  0x0000000115eb79f5: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb79f9: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb79fe: shr    $0x15,%edx
  0x0000000115eb7a01: and    $0x1,%edx
  0x0000000115eb7a04: pop    %rcx
  0x0000000115eb7a05: cmp    (%rcx),%rax
  0x0000000115eb7a08: vmovsd %xmm0,(%rcx,%rbx,1)
  0x0000000115eb7a0d: test   %edx,%edx
  0x0000000115eb7a0f: je     0x0000000115eb7a1a
  0x0000000115eb7a15: lock addl $0x0,(%rsp)
  0x0000000115eb7a1a: movzbl 0x3(%r13),%ebx
  0x0000000115eb7a1f: add    $0x3,%r13
  0x0000000115eb7a23: movabs $0x10e101840,%r10
  0x0000000115eb7a2d: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7a31: nopl   0x0(%rax)
  0x0000000115eb7a38: add    %al,(%rax)
  0x0000000115eb7a3a: add    %al,(%rax)
  0x0000000115eb7a3c: add    %al,(%rax)
  0x0000000115eb7a3e: add    %al,(%rax)

----------------------------------------------------------------------
fast_fputfield  216 fast_fputfield  [0x0000000115eb7a60, 0x0000000115eb7ac0]  96 bytes

  0x0000000115eb7a60: vmovss (%rsp),%xmm0
  0x0000000115eb7a65: add    $0x8,%rsp
  0x0000000115eb7a69: movzwl 0x1(%r13),%ebx
  0x0000000115eb7a6e: mov    -0x28(%rbp),%rcx
  0x0000000115eb7a72: shl    $0x2,%ebx
  0x0000000115eb7a75: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb7a79: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7a7e: shr    $0x15,%edx
  0x0000000115eb7a81: and    $0x1,%edx
  0x0000000115eb7a84: pop    %rcx
  0x0000000115eb7a85: cmp    (%rcx),%rax
  0x0000000115eb7a88: vmovss %xmm0,(%rcx,%rbx,1)
  0x0000000115eb7a8d: test   %edx,%edx
  0x0000000115eb7a8f: je     0x0000000115eb7a9a
  0x0000000115eb7a95: lock addl $0x0,(%rsp)
  0x0000000115eb7a9a: movzbl 0x3(%r13),%ebx
  0x0000000115eb7a9f: add    $0x3,%r13
  0x0000000115eb7aa3: movabs $0x10e101840,%r10
  0x0000000115eb7aad: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7ab1: nopl   0x0(%rax)
  0x0000000115eb7ab8: add    %al,(%rax)
  0x0000000115eb7aba: add    %al,(%rax)
  0x0000000115eb7abc: add    %al,(%rax)
  0x0000000115eb7abe: add    %al,(%rax)

----------------------------------------------------------------------
fast_iputfield  217 fast_iputfield  [0x0000000115eb7ae0, 0x0000000115eb7b40]  96 bytes

  0x0000000115eb7ae0: mov    (%rsp),%eax
  0x0000000115eb7ae3: add    $0x8,%rsp
  0x0000000115eb7ae7: movzwl 0x1(%r13),%ebx
  0x0000000115eb7aec: mov    -0x28(%rbp),%rcx
  0x0000000115eb7af0: shl    $0x2,%ebx
  0x0000000115eb7af3: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb7af7: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7afc: shr    $0x15,%edx
  0x0000000115eb7aff: and    $0x1,%edx
  0x0000000115eb7b02: pop    %rcx
  0x0000000115eb7b03: cmp    (%rcx),%rax
  0x0000000115eb7b06: mov    %eax,(%rcx,%rbx,1)
  0x0000000115eb7b09: test   %edx,%edx
  0x0000000115eb7b0b: je     0x0000000115eb7b16
  0x0000000115eb7b11: lock addl $0x0,(%rsp)
  0x0000000115eb7b16: movzbl 0x3(%r13),%ebx
  0x0000000115eb7b1b: add    $0x3,%r13
  0x0000000115eb7b1f: movabs $0x10e101840,%r10
  0x0000000115eb7b29: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7b2d: data32 xchg %ax,%ax
  0x0000000115eb7b30: add    %al,(%rax)
  0x0000000115eb7b32: add    %al,(%rax)
  0x0000000115eb7b34: add    %al,(%rax)
  0x0000000115eb7b36: add    %al,(%rax)
  0x0000000115eb7b38: add    %al,(%rax)
  0x0000000115eb7b3a: add    %al,(%rax)
  0x0000000115eb7b3c: add    %al,(%rax)
  0x0000000115eb7b3e: add    %al,(%rax)

----------------------------------------------------------------------
fast_lputfield  218 fast_lputfield  [0x0000000115eb7b60, 0x0000000115eb7bc0]  96 bytes

  0x0000000115eb7b60: mov    (%rsp),%rax
  0x0000000115eb7b64: add    $0x10,%rsp
  0x0000000115eb7b68: movzwl 0x1(%r13),%ebx
  0x0000000115eb7b6d: mov    -0x28(%rbp),%rcx
  0x0000000115eb7b71: shl    $0x2,%ebx
  0x0000000115eb7b74: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb7b78: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7b7d: shr    $0x15,%edx
  0x0000000115eb7b80: and    $0x1,%edx
  0x0000000115eb7b83: pop    %rcx
  0x0000000115eb7b84: cmp    (%rcx),%rax
  0x0000000115eb7b87: mov    %rax,(%rcx,%rbx,1)
  0x0000000115eb7b8b: test   %edx,%edx
  0x0000000115eb7b8d: je     0x0000000115eb7b98
  0x0000000115eb7b93: lock addl $0x0,(%rsp)
  0x0000000115eb7b98: movzbl 0x3(%r13),%ebx
  0x0000000115eb7b9d: add    $0x3,%r13
  0x0000000115eb7ba1: movabs $0x10e101840,%r10
  0x0000000115eb7bab: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7baf: nop
  0x0000000115eb7bb0: add    %al,(%rax)
  0x0000000115eb7bb2: add    %al,(%rax)
  0x0000000115eb7bb4: add    %al,(%rax)
  0x0000000115eb7bb6: add    %al,(%rax)
  0x0000000115eb7bb8: add    %al,(%rax)
  0x0000000115eb7bba: add    %al,(%rax)
  0x0000000115eb7bbc: add    %al,(%rax)
  0x0000000115eb7bbe: add    %al,(%rax)

----------------------------------------------------------------------
fast_sputfield  219 fast_sputfield  [0x0000000115eb7be0, 0x0000000115eb7c40]  96 bytes

  0x0000000115eb7be0: mov    (%rsp),%eax
  0x0000000115eb7be3: add    $0x8,%rsp
  0x0000000115eb7be7: movzwl 0x1(%r13),%ebx
  0x0000000115eb7bec: mov    -0x28(%rbp),%rcx
  0x0000000115eb7bf0: shl    $0x2,%ebx
  0x0000000115eb7bf3: mov    0x28(%rcx,%rbx,8),%edx
  0x0000000115eb7bf7: mov    0x20(%rcx,%rbx,8),%rbx
  0x0000000115eb7bfc: shr    $0x15,%edx
  0x0000000115eb7bff: and    $0x1,%edx
  0x0000000115eb7c02: pop    %rcx
  0x0000000115eb7c03: cmp    (%rcx),%rax
  0x0000000115eb7c06: mov    %ax,(%rcx,%rbx,1)
  0x0000000115eb7c0a: test   %edx,%edx
  0x0000000115eb7c0c: je     0x0000000115eb7c17
  0x0000000115eb7c12: lock addl $0x0,(%rsp)
  0x0000000115eb7c17: movzbl 0x3(%r13),%ebx
  0x0000000115eb7c1c: add    $0x3,%r13
  0x0000000115eb7c20: movabs $0x10e101840,%r10
  0x0000000115eb7c2a: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7c2e: xchg   %ax,%ax
  0x0000000115eb7c30: add    %al,(%rax)
  0x0000000115eb7c32: add    %al,(%rax)
  0x0000000115eb7c34: add    %al,(%rax)
  0x0000000115eb7c36: add    %al,(%rax)
  0x0000000115eb7c38: add    %al,(%rax)
  0x0000000115eb7c3a: add    %al,(%rax)
  0x0000000115eb7c3c: add    %al,(%rax)
  0x0000000115eb7c3e: add    %al,(%rax)

----------------------------------------------------------------------
fast_aload_0  220 fast_aload_0  [0x0000000115eb7c60, 0x0000000115eb7cc0]  96 bytes

  0x0000000115eb7c60: push   %rax
  0x0000000115eb7c61: jmpq   0x0000000115eb7c90
  0x0000000115eb7c66: sub    $0x8,%rsp
  0x0000000115eb7c6a: vmovss %xmm0,(%rsp)
  0x0000000115eb7c6f: jmpq   0x0000000115eb7c90
  0x0000000115eb7c74: sub    $0x10,%rsp
  0x0000000115eb7c78: vmovsd %xmm0,(%rsp)
  0x0000000115eb7c7d: jmpq   0x0000000115eb7c90
  0x0000000115eb7c82: sub    $0x10,%rsp
  0x0000000115eb7c86: mov    %rax,(%rsp)
  0x0000000115eb7c8a: jmpq   0x0000000115eb7c90
  0x0000000115eb7c8f: push   %rax
  0x0000000115eb7c90: mov    (%r14),%rax
  0x0000000115eb7c93: movzbl 0x1(%r13),%ebx
  0x0000000115eb7c98: inc    %r13
  0x0000000115eb7c9b: movabs $0x10e101040,%r10
  0x0000000115eb7ca5: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7ca9: nopl   0x0(%rax)
  0x0000000115eb7cb0: add    %al,(%rax)
  0x0000000115eb7cb2: add    %al,(%rax)
  0x0000000115eb7cb4: add    %al,(%rax)
  0x0000000115eb7cb6: add    %al,(%rax)
  0x0000000115eb7cb8: add    %al,(%rax)
  0x0000000115eb7cba: add    %al,(%rax)
  0x0000000115eb7cbc: add    %al,(%rax)
  0x0000000115eb7cbe: add    %al,(%rax)

----------------------------------------------------------------------
fast_iaccess_0  221 fast_iaccess_0  [0x0000000115eb7ce0, 0x0000000115eb7d60]  128 bytes

  0x0000000115eb7ce0: push   %rax
  0x0000000115eb7ce1: jmpq   0x0000000115eb7d10
  0x0000000115eb7ce6: sub    $0x8,%rsp
  0x0000000115eb7cea: vmovss %xmm0,(%rsp)
  0x0000000115eb7cef: jmpq   0x0000000115eb7d10
  0x0000000115eb7cf4: sub    $0x10,%rsp
  0x0000000115eb7cf8: vmovsd %xmm0,(%rsp)
  0x0000000115eb7cfd: jmpq   0x0000000115eb7d10
  0x0000000115eb7d02: sub    $0x10,%rsp
  0x0000000115eb7d06: mov    %rax,(%rsp)
  0x0000000115eb7d0a: jmpq   0x0000000115eb7d10
  0x0000000115eb7d0f: push   %rax
  0x0000000115eb7d10: mov    (%r14),%rax
  0x0000000115eb7d13: movzwl 0x2(%r13),%edx
  0x0000000115eb7d18: mov    -0x28(%rbp),%rcx
  0x0000000115eb7d1c: shl    $0x2,%edx
  0x0000000115eb7d1f: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb7d24: inc    %r13
  0x0000000115eb7d27: cmp    (%rax),%rax
  0x0000000115eb7d2a: mov    (%rax,%rbx,1),%eax
  0x0000000115eb7d2d: dec    %r13
  0x0000000115eb7d30: movzbl 0x4(%r13),%ebx
  0x0000000115eb7d35: add    $0x4,%r13
  0x0000000115eb7d39: movabs $0x10e0ff040,%r10
  0x0000000115eb7d43: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7d47: nop
  0x0000000115eb7d48: add    %al,(%rax)
  0x0000000115eb7d4a: add    %al,(%rax)
  0x0000000115eb7d4c: add    %al,(%rax)
  0x0000000115eb7d4e: add    %al,(%rax)
  0x0000000115eb7d50: add    %al,(%rax)
  0x0000000115eb7d52: add    %al,(%rax)
  0x0000000115eb7d54: add    %al,(%rax)
  0x0000000115eb7d56: add    %al,(%rax)
  0x0000000115eb7d58: add    %al,(%rax)
  0x0000000115eb7d5a: add    %al,(%rax)
  0x0000000115eb7d5c: add    %al,(%rax)
  0x0000000115eb7d5e: add    %al,(%rax)

----------------------------------------------------------------------
fast_aaccess_0  222 fast_aaccess_0  [0x0000000115eb7d80, 0x0000000115eb7e00]  128 bytes

  0x0000000115eb7d80: push   %rax
  0x0000000115eb7d81: jmpq   0x0000000115eb7db0
  0x0000000115eb7d86: sub    $0x8,%rsp
  0x0000000115eb7d8a: vmovss %xmm0,(%rsp)
  0x0000000115eb7d8f: jmpq   0x0000000115eb7db0
  0x0000000115eb7d94: sub    $0x10,%rsp
  0x0000000115eb7d98: vmovsd %xmm0,(%rsp)
  0x0000000115eb7d9d: jmpq   0x0000000115eb7db0
  0x0000000115eb7da2: sub    $0x10,%rsp
  0x0000000115eb7da6: mov    %rax,(%rsp)
  0x0000000115eb7daa: jmpq   0x0000000115eb7db0
  0x0000000115eb7daf: push   %rax
  0x0000000115eb7db0: mov    (%r14),%rax
  0x0000000115eb7db3: movzwl 0x2(%r13),%edx
  0x0000000115eb7db8: mov    -0x28(%rbp),%rcx
  0x0000000115eb7dbc: shl    $0x2,%edx
  0x0000000115eb7dbf: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb7dc4: inc    %r13
  0x0000000115eb7dc7: cmp    (%rax),%rax
  0x0000000115eb7dca: mov    (%rax,%rbx,1),%eax
  0x0000000115eb7dcd: shl    $0x3,%rax
  0x0000000115eb7dd1: dec    %r13
  0x0000000115eb7dd4: movzbl 0x4(%r13),%ebx
  0x0000000115eb7dd9: add    $0x4,%r13
  0x0000000115eb7ddd: movabs $0x10e101040,%r10
  0x0000000115eb7de7: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7deb: nopl   0x0(%rax,%rax,1)
  0x0000000115eb7df0: add    %al,(%rax)
  0x0000000115eb7df2: add    %al,(%rax)
  0x0000000115eb7df4: add    %al,(%rax)
  0x0000000115eb7df6: add    %al,(%rax)
  0x0000000115eb7df8: add    %al,(%rax)
  0x0000000115eb7dfa: add    %al,(%rax)
  0x0000000115eb7dfc: add    %al,(%rax)
  0x0000000115eb7dfe: add    %al,(%rax)

----------------------------------------------------------------------
fast_faccess_0  223 fast_faccess_0  [0x0000000115eb7e20, 0x0000000115eb7ea0]  128 bytes

  0x0000000115eb7e20: push   %rax
  0x0000000115eb7e21: jmpq   0x0000000115eb7e50
  0x0000000115eb7e26: sub    $0x8,%rsp
  0x0000000115eb7e2a: vmovss %xmm0,(%rsp)
  0x0000000115eb7e2f: jmpq   0x0000000115eb7e50
  0x0000000115eb7e34: sub    $0x10,%rsp
  0x0000000115eb7e38: vmovsd %xmm0,(%rsp)
  0x0000000115eb7e3d: jmpq   0x0000000115eb7e50
  0x0000000115eb7e42: sub    $0x10,%rsp
  0x0000000115eb7e46: mov    %rax,(%rsp)
  0x0000000115eb7e4a: jmpq   0x0000000115eb7e50
  0x0000000115eb7e4f: push   %rax
  0x0000000115eb7e50: mov    (%r14),%rax
  0x0000000115eb7e53: movzwl 0x2(%r13),%edx
  0x0000000115eb7e58: mov    -0x28(%rbp),%rcx
  0x0000000115eb7e5c: shl    $0x2,%edx
  0x0000000115eb7e5f: mov    0x20(%rcx,%rdx,8),%rbx
  0x0000000115eb7e64: inc    %r13
  0x0000000115eb7e67: cmp    (%rax),%rax
  0x0000000115eb7e6a: vmovss (%rax,%rbx,1),%xmm0
  0x0000000115eb7e6f: dec    %r13
  0x0000000115eb7e72: movzbl 0x4(%r13),%ebx
  0x0000000115eb7e77: add    $0x4,%r13
  0x0000000115eb7e7b: movabs $0x10e100040,%r10
  0x0000000115eb7e85: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7e89: nopl   0x0(%rax)
  0x0000000115eb7e90: add    %al,(%rax)
  0x0000000115eb7e92: add    %al,(%rax)
  0x0000000115eb7e94: add    %al,(%rax)
  0x0000000115eb7e96: add    %al,(%rax)
  0x0000000115eb7e98: add    %al,(%rax)
  0x0000000115eb7e9a: add    %al,(%rax)
  0x0000000115eb7e9c: add    %al,(%rax)
  0x0000000115eb7e9e: add    %al,(%rax)

----------------------------------------------------------------------
fast_iload  224 fast_iload  [0x0000000115eb7ec0, 0x0000000115eb7f20]  96 bytes

  0x0000000115eb7ec0: push   %rax
  0x0000000115eb7ec1: jmpq   0x0000000115eb7ef0
  0x0000000115eb7ec6: sub    $0x8,%rsp
  0x0000000115eb7eca: vmovss %xmm0,(%rsp)
  0x0000000115eb7ecf: jmpq   0x0000000115eb7ef0
  0x0000000115eb7ed4: sub    $0x10,%rsp
  0x0000000115eb7ed8: vmovsd %xmm0,(%rsp)
  0x0000000115eb7edd: jmpq   0x0000000115eb7ef0
  0x0000000115eb7ee2: sub    $0x10,%rsp
  0x0000000115eb7ee6: mov    %rax,(%rsp)
  0x0000000115eb7eea: jmpq   0x0000000115eb7ef0
  0x0000000115eb7eef: push   %rax
  0x0000000115eb7ef0: movzbl 0x1(%r13),%ebx
  0x0000000115eb7ef5: neg    %rbx
  0x0000000115eb7ef8: mov    (%r14,%rbx,8),%eax
  0x0000000115eb7efc: movzbl 0x2(%r13),%ebx
  0x0000000115eb7f01: add    $0x2,%r13
  0x0000000115eb7f05: movabs $0x10e0ff040,%r10
  0x0000000115eb7f0f: jmpq   *(%r10,%rbx,8)
  0x0000000115eb7f13: nopl   0x0(%rax,%rax,1)
  0x0000000115eb7f18: add    %al,(%rax)
  0x0000000115eb7f1a: add    %al,(%rax)
  0x0000000115eb7f1c: add    %al,(%rax)
  0x0000000115eb7f1e: add    %al,(%rax)

----------------------------------------------------------------------
fast_iload2  225 fast_iload2  [0x0000000115eb7f40, 0x0000000115eb7fa0]  96 bytes

  0x0000000115eb7f40: push   %rax
  0x0000000115eb7f41: jmpq   0x0000000115eb7f70
  0x0000000115eb7f46: sub    $0x8,%rsp
  0x0000000115eb7f4a: vmovss %xmm0,(%rsp)
  0x0000000115eb7f4f: jmpq   0x0000000115eb7f70
  0x0000000115eb7f54: sub    $0x10,%rsp
  0x0000000115eb7f58: vmovsd %xmm0,(%rsp)
  0x0000000115eb7f5d: jmpq   0x0000000115eb7f70
  0x0000000115eb7f62: sub    $0x10,%rsp
  0x0000000115eb7f66: mov    %rax,(%rsp)
  0x0000000115eb7f6a: jmpq   0x0000000115eb7f70
  0x0000000115eb7f6f: push   %rax
  0x0000000115eb7f70: movzbl 0x1(%r13),%ebx
  0x0000000115eb7f75: neg    %rbx
  0x0000000115eb7f78: mov    (%r14,%rbx,8),%eax
  0x0000000115eb7f7c: push   %rax
  0x0000000115eb7f7d: movzbl 0x3(%r13),%ebx
  0x0000000115eb7f82: neg    %rbx
  0x0000000115eb7f85: mov    (%r14,%rbx,8),%eax
  0x0000000115eb7f89: movzbl 0x4(%r13),%ebx
  0x0000000115eb7f8e: add    $0x4,%r13
  0x0000000115eb7f92: movabs $0x10e0ff040,%r10
  0x0000000115eb7f9c: jmpq   *(%r10,%rbx,8)

----------------------------------------------------------------------
fast_icaload  226 fast_icaload  [0x0000000115eb7fc0, 0x0000000115eb8040]  128 bytes

  0x0000000115eb7fc0: push   %rax
  0x0000000115eb7fc1: jmpq   0x0000000115eb7ff0
  0x0000000115eb7fc6: sub    $0x8,%rsp
  0x0000000115eb7fca: vmovss %xmm0,(%rsp)
  0x0000000115eb7fcf: jmpq   0x0000000115eb7ff0
  0x0000000115eb7fd4: sub    $0x10,%rsp
  0x0000000115eb7fd8: vmovsd %xmm0,(%rsp)
  0x0000000115eb7fdd: jmpq   0x0000000115eb7ff0
  0x0000000115eb7fe2: sub    $0x10,%rsp
  0x0000000115eb7fe6: mov    %rax,(%rsp)
  0x0000000115eb7fea: jmpq   0x0000000115eb7ff0
  0x0000000115eb7fef: push   %rax
  0x0000000115eb7ff0: movzbl 0x1(%r13),%ebx
  0x0000000115eb7ff5: neg    %rbx
  0x0000000115eb7ff8: mov    (%r14,%rbx,8),%eax
  0x0000000115eb7ffc: pop    %rdx
  0x0000000115eb7ffd: movslq %eax,%rax
  0x0000000115eb8000: cmp    0xc(%rdx),%eax
  0x0000000115eb8003: mov    %eax,%ebx
  0x0000000115eb8005: jae    0x0000000115ea3840
  0x0000000115eb800b: movzwl 0x10(%rdx,%rax,2),%eax
  0x0000000115eb8010: movzbl 0x3(%r13),%ebx
  0x0000000115eb8015: add    $0x3,%r13
  0x0000000115eb8019: movabs $0x10e0ff040,%r10
  0x0000000115eb8023: jmpq   *(%r10,%rbx,8)
  0x0000000115eb8027: nop
  0x0000000115eb8028: add    %al,(%rax)
  0x0000000115eb802a: add    %al,(%rax)
  0x0000000115eb802c: add    %al,(%rax)
  0x0000000115eb802e: add    %al,(%rax)
  0x0000000115eb8030: add    %al,(%rax)
  0x0000000115eb8032: add    %al,(%rax)
  0x0000000115eb8034: add    %al,(%rax)
  0x0000000115eb8036: add    %al,(%rax)
  0x0000000115eb8038: add    %al,(%rax)
  0x0000000115eb803a: add    %al,(%rax)
  0x0000000115eb803c: add    %al,(%rax)
  0x0000000115eb803e: add    %al,(%rax)

----------------------------------------------------------------------
fast_invokevfinal  227 fast_invokevfinal  [0x0000000115eb8060, 0x0000000115eb8120]  192 bytes

  0x0000000115eb8060: push   %rax
  0x0000000115eb8061: jmpq   0x0000000115eb8090
  0x0000000115eb8066: sub    $0x8,%rsp
  0x0000000115eb806a: vmovss %xmm0,(%rsp)
  0x0000000115eb806f: jmpq   0x0000000115eb8090
  0x0000000115eb8074: sub    $0x10,%rsp
  0x0000000115eb8078: vmovsd %xmm0,(%rsp)
  0x0000000115eb807d: jmpq   0x0000000115eb8090
  0x0000000115eb8082: sub    $0x10,%rsp
  0x0000000115eb8086: mov    %rax,(%rsp)
  0x0000000115eb808a: jmpq   0x0000000115eb8090
  0x0000000115eb808f: push   %rax
  0x0000000115eb8090: mov    %rsp,-0x28(%rsp)
  0x0000000115eb8095: sub    $0x80,%rsp
  0x0000000115eb809c: mov    %rax,0x78(%rsp)
  0x0000000115eb80a1: mov    %rcx,0x70(%rsp)
  0x0000000115eb80a6: mov    %rdx,0x68(%rsp)
  0x0000000115eb80ab: mov    %rbx,0x60(%rsp)
  0x0000000115eb80b0: mov    %rbp,0x50(%rsp)
  0x0000000115eb80b5: mov    %rsi,0x48(%rsp)
  0x0000000115eb80ba: mov    %rdi,0x40(%rsp)
  0x0000000115eb80bf: mov    %r8,0x38(%rsp)
  0x0000000115eb80c4: mov    %r9,0x30(%rsp)
  0x0000000115eb80c9: mov    %r10,0x28(%rsp)
  0x0000000115eb80ce: mov    %r11,0x20(%rsp)
  0x0000000115eb80d3: mov    %r12,0x18(%rsp)
  0x0000000115eb80d8: mov    %r13,0x10(%rsp)
  0x0000000115eb80dd: mov    %r14,0x8(%rsp)
  0x0000000115eb80e2: mov    %r15,(%rsp)
  0x0000000115eb80e6: movabs $0x10de1981f,%rdi
  0x0000000115eb80f0: movabs $0x115eb8090,%rsi
  0x0000000115eb80fa: mov    %rsp,%rdx
  0x0000000115eb80fd: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb8101: callq  0x000000010dc0341e
  0x0000000115eb8106: hlt    
  0x0000000115eb8107: nop
  0x0000000115eb8108: add    %al,(%rax)
  0x0000000115eb810a: add    %al,(%rax)
  0x0000000115eb810c: add    %al,(%rax)
  0x0000000115eb810e: add    %al,(%rax)
  0x0000000115eb8110: add    %al,(%rax)
  0x0000000115eb8112: add    %al,(%rax)
  0x0000000115eb8114: add    %al,(%rax)
  0x0000000115eb8116: add    %al,(%rax)
  0x0000000115eb8118: add    %al,(%rax)
  0x0000000115eb811a: add    %al,(%rax)
  0x0000000115eb811c: add    %al,(%rax)
  0x0000000115eb811e: add    %al,(%rax)

----------------------------------------------------------------------
fast_linearswitch  228 fast_linearswitch  [0x0000000115eb8140, 0x0000000115eb81e0]  160 bytes

  0x0000000115eb8140: mov    (%rsp),%eax
  0x0000000115eb8143: add    $0x8,%rsp
  0x0000000115eb8147: bswap  %eax
  0x0000000115eb8149: lea    0x4(%r13),%rbx
  0x0000000115eb814d: and    $0xfffffffffffffffc,%rbx
  0x0000000115eb8151: mov    0x4(%rbx),%ecx
  0x0000000115eb8154: bswap  %ecx
  0x0000000115eb8156: jmp    0x0000000115eb8162
  0x0000000115eb8158: cmp    0x8(%rbx,%rcx,8),%eax
  0x0000000115eb815c: je     0x0000000115eb818c
  0x0000000115eb8162: dec    %ecx
  0x0000000115eb8164: jge    0x0000000115eb8158
  0x0000000115eb8166: mov    -0x20(%rbp),%rax
  0x0000000115eb816a: test   %rax,%rax
  0x0000000115eb816d: je     0x0000000115eb8185
  0x0000000115eb8173: addq   $0x1,0x10(%rax)
  0x0000000115eb8178: sbbq   $0x0,0x10(%rax)
  0x0000000115eb817d: add    0x18(%rax),%rax
  0x0000000115eb8181: mov    %rax,-0x20(%rbp)
  0x0000000115eb8185: mov    (%rbx),%edx
  0x0000000115eb8187: jmpq   0x0000000115eb81bd
  0x0000000115eb818c: mov    0xc(%rbx,%rcx,8),%edx
  0x0000000115eb8190: mov    -0x20(%rbp),%rax
  0x0000000115eb8194: test   %rax,%rax
  0x0000000115eb8197: je     0x0000000115eb81bd
  0x0000000115eb819d: mov    $0x10,%ebx
  0x0000000115eb81a2: imul   %rbx,%rcx
  0x0000000115eb81a6: add    $0x20,%rcx
  0x0000000115eb81aa: addq   $0x1,(%rax,%rcx,1)
  0x0000000115eb81af: sbbq   $0x0,(%rax,%rcx,1)
  0x0000000115eb81b4: add    0x8(%rax,%rcx,1),%rax
  0x0000000115eb81b9: mov    %rax,-0x20(%rbp)
  0x0000000115eb81bd: bswap  %edx
  0x0000000115eb81bf: movslq %edx,%rdx
  0x0000000115eb81c2: movzbl 0x0(%r13,%rdx,1),%ebx
  0x0000000115eb81c8: add    %rdx,%r13
  0x0000000115eb81cb: movabs $0x10e101840,%r10
  0x0000000115eb81d5: jmpq   *(%r10,%rbx,8)
  0x0000000115eb81d9: nopl   0x0(%rax)

----------------------------------------------------------------------
fast_binaryswitch  229 fast_binaryswitch  [0x0000000115eb8200, 0x0000000115eb82e0]  224 bytes

  0x0000000115eb8200: mov    (%rsp),%eax
  0x0000000115eb8203: add    $0x8,%rsp
  0x0000000115eb8207: lea    0xc(%r13),%rbx
  0x0000000115eb820b: and    $0xfffffffffffffffc,%rbx
  0x0000000115eb820f: xor    %ecx,%ecx
  0x0000000115eb8211: mov    -0x4(%rbx),%edx
  0x0000000115eb8214: bswap  %edx
  0x0000000115eb8216: jmpq   0x0000000115eb822e
  0x0000000115eb821b: lea    (%ecx,%edx,1),%edi
  0x0000000115eb821f: sar    %edi
  0x0000000115eb8221: mov    (%rbx,%rdi,8),%esi
  0x0000000115eb8224: bswap  %esi
  0x0000000115eb8226: cmp    %esi,%eax
  0x0000000115eb8228: cmovl  %edi,%edx
  0x0000000115eb822b: cmovge %edi,%ecx
  0x0000000115eb822e: lea    0x1(%ecx),%edi
  0x0000000115eb8232: cmp    %edx,%edi
  0x0000000115eb8234: jl     0x0000000115eb821b
  0x0000000115eb8236: mov    (%rbx,%rcx,8),%esi
  0x0000000115eb8239: bswap  %esi
  0x0000000115eb823b: cmp    %esi,%eax
  0x0000000115eb823d: jne    0x0000000115eb8290
  0x0000000115eb8243: mov    0x4(%rbx,%rcx,8),%edx
  0x0000000115eb8247: mov    -0x20(%rbp),%rax
  0x0000000115eb824b: test   %rax,%rax
  0x0000000115eb824e: je     0x0000000115eb8274
  0x0000000115eb8254: mov    $0x10,%ebx
  0x0000000115eb8259: imul   %rbx,%rcx
  0x0000000115eb825d: add    $0x20,%rcx
  0x0000000115eb8261: addq   $0x1,(%rax,%rcx,1)
  0x0000000115eb8266: sbbq   $0x0,(%rax,%rcx,1)
  0x0000000115eb826b: add    0x8(%rax,%rcx,1),%rax
  0x0000000115eb8270: mov    %rax,-0x20(%rbp)
  0x0000000115eb8274: bswap  %edx
  0x0000000115eb8276: movslq %edx,%rdx
  0x0000000115eb8279: movzbl 0x0(%r13,%rdx,1),%ebx
  0x0000000115eb827f: add    %rdx,%r13
  0x0000000115eb8282: movabs $0x10e101840,%r10
  0x0000000115eb828c: jmpq   *(%r10,%rbx,8)
  0x0000000115eb8290: mov    -0x20(%rbp),%rcx
  0x0000000115eb8294: test   %rcx,%rcx
  0x0000000115eb8297: je     0x0000000115eb82af
  0x0000000115eb829d: addq   $0x1,0x10(%rcx)
  0x0000000115eb82a2: sbbq   $0x0,0x10(%rcx)
  0x0000000115eb82a7: add    0x18(%rcx),%rcx
  0x0000000115eb82ab: mov    %rcx,-0x20(%rbp)
  0x0000000115eb82af: mov    -0x8(%rbx),%edx
  0x0000000115eb82b2: bswap  %edx
  0x0000000115eb82b4: movslq %edx,%rdx
  0x0000000115eb82b7: movzbl 0x0(%r13,%rdx,1),%ebx
  0x0000000115eb82bd: add    %rdx,%r13
  0x0000000115eb82c0: movabs $0x10e101840,%r10
  0x0000000115eb82ca: jmpq   *(%r10,%rbx,8)
  0x0000000115eb82ce: xchg   %ax,%ax
  0x0000000115eb82d0: add    %al,(%rax)
  0x0000000115eb82d2: add    %al,(%rax)
  0x0000000115eb82d4: add    %al,(%rax)
  0x0000000115eb82d6: add    %al,(%rax)
  0x0000000115eb82d8: add    %al,(%rax)
  0x0000000115eb82da: add    %al,(%rax)
  0x0000000115eb82dc: add    %al,(%rax)
  0x0000000115eb82de: add    %al,(%rax)

----------------------------------------------------------------------
fast_aldc  230 fast_aldc  [0x0000000115eb8300, 0x0000000115eb8420]  288 bytes

  0x0000000115eb8300: push   %rax
  0x0000000115eb8301: jmpq   0x0000000115eb8330
  0x0000000115eb8306: sub    $0x8,%rsp
  0x0000000115eb830a: vmovss %xmm0,(%rsp)
  0x0000000115eb830f: jmpq   0x0000000115eb8330
  0x0000000115eb8314: sub    $0x10,%rsp
  0x0000000115eb8318: vmovsd %xmm0,(%rsp)
  0x0000000115eb831d: jmpq   0x0000000115eb8330
  0x0000000115eb8322: sub    $0x10,%rsp
  0x0000000115eb8326: mov    %rax,(%rsp)
  0x0000000115eb832a: jmpq   0x0000000115eb8330
  0x0000000115eb832f: push   %rax
  0x0000000115eb8330: movzbl 0x1(%r13),%edx
  0x0000000115eb8335: shl    $0x2,%edx
  0x0000000115eb8338: mov    -0x18(%rbp),%rax
  0x0000000115eb833c: mov    0x8(%rax),%rax
  0x0000000115eb8340: mov    0x8(%rax),%rax
  0x0000000115eb8344: mov    0x28(%rax),%rax
  0x0000000115eb8348: mov    (%rax),%rax
  0x0000000115eb834b: add    %rdx,%rax
  0x0000000115eb834e: mov    0x10(%rax),%eax
  0x0000000115eb8351: shl    $0x3,%rax
  0x0000000115eb8355: test   %eax,%eax
  0x0000000115eb8357: jne    0x0000000115eb8402
  0x0000000115eb835d: mov    $0xe6,%edx
  0x0000000115eb8362: callq  0x0000000115eb836c
  0x0000000115eb8367: jmpq   0x0000000115eb8402
  0x0000000115eb836c: mov    %rdx,%rsi
  0x0000000115eb836f: lea    0x8(%rsp),%rax
  0x0000000115eb8374: mov    %r13,-0x38(%rbp)
  0x0000000115eb8378: mov    %r15,%rdi
  0x0000000115eb837b: mov    %rbp,0x1e8(%r15)
  0x0000000115eb8382: mov    %rax,0x1d8(%r15)
  0x0000000115eb8389: test   $0xf,%esp
  0x0000000115eb838f: je     0x0000000115eb83a7
  0x0000000115eb8395: sub    $0x8,%rsp
  0x0000000115eb8399: callq  0x000000010dae960c
  0x0000000115eb839e: add    $0x8,%rsp
  0x0000000115eb83a2: jmpq   0x0000000115eb83ac
  0x0000000115eb83a7: callq  0x000000010dae960c
  0x0000000115eb83ac: movabs $0x0,%r10
  0x0000000115eb83b6: mov    %r10,0x1d8(%r15)
  0x0000000115eb83bd: movabs $0x0,%r10
  0x0000000115eb83c7: mov    %r10,0x1e8(%r15)
  0x0000000115eb83ce: cmpq   $0x0,0x8(%r15)
  0x0000000115eb83d6: je     0x0000000115eb83e1
  0x0000000115eb83dc: jmpq   0x0000000115e916e0
  0x0000000115eb83e1: mov    0x238(%r15),%rax
  0x0000000115eb83e8: movabs $0x0,%r10
  0x0000000115eb83f2: mov    %r10,0x238(%r15)
  0x0000000115eb83f9: mov    -0x38(%rbp),%r13
  0x0000000115eb83fd: mov    -0x30(%rbp),%r14
  0x0000000115eb8401: retq   
  0x0000000115eb8402: movzbl 0x2(%r13),%ebx
  0x0000000115eb8407: add    $0x2,%r13
  0x0000000115eb840b: movabs $0x10e101040,%r10
  0x0000000115eb8415: jmpq   *(%r10,%rbx,8)
  0x0000000115eb8419: nopl   0x0(%rax)

----------------------------------------------------------------------
fast_aldc_w  231 fast_aldc_w  [0x0000000115eb8440, 0x0000000115eb8560]  288 bytes

  0x0000000115eb8440: push   %rax
  0x0000000115eb8441: jmpq   0x0000000115eb8470
  0x0000000115eb8446: sub    $0x8,%rsp
  0x0000000115eb844a: vmovss %xmm0,(%rsp)
  0x0000000115eb844f: jmpq   0x0000000115eb8470
  0x0000000115eb8454: sub    $0x10,%rsp
  0x0000000115eb8458: vmovsd %xmm0,(%rsp)
  0x0000000115eb845d: jmpq   0x0000000115eb8470
  0x0000000115eb8462: sub    $0x10,%rsp
  0x0000000115eb8466: mov    %rax,(%rsp)
  0x0000000115eb846a: jmpq   0x0000000115eb8470
  0x0000000115eb846f: push   %rax
  0x0000000115eb8470: movzwl 0x1(%r13),%edx
  0x0000000115eb8475: shl    $0x2,%edx
  0x0000000115eb8478: mov    -0x18(%rbp),%rax
  0x0000000115eb847c: mov    0x8(%rax),%rax
  0x0000000115eb8480: mov    0x8(%rax),%rax
  0x0000000115eb8484: mov    0x28(%rax),%rax
  0x0000000115eb8488: mov    (%rax),%rax
  0x0000000115eb848b: add    %rdx,%rax
  0x0000000115eb848e: mov    0x10(%rax),%eax
  0x0000000115eb8491: shl    $0x3,%rax
  0x0000000115eb8495: test   %eax,%eax
  0x0000000115eb8497: jne    0x0000000115eb8542
  0x0000000115eb849d: mov    $0xe7,%edx
  0x0000000115eb84a2: callq  0x0000000115eb84ac
  0x0000000115eb84a7: jmpq   0x0000000115eb8542
  0x0000000115eb84ac: mov    %rdx,%rsi
  0x0000000115eb84af: lea    0x8(%rsp),%rax
  0x0000000115eb84b4: mov    %r13,-0x38(%rbp)
  0x0000000115eb84b8: mov    %r15,%rdi
  0x0000000115eb84bb: mov    %rbp,0x1e8(%r15)
  0x0000000115eb84c2: mov    %rax,0x1d8(%r15)
  0x0000000115eb84c9: test   $0xf,%esp
  0x0000000115eb84cf: je     0x0000000115eb84e7
  0x0000000115eb84d5: sub    $0x8,%rsp
  0x0000000115eb84d9: callq  0x000000010dae960c
  0x0000000115eb84de: add    $0x8,%rsp
  0x0000000115eb84e2: jmpq   0x0000000115eb84ec
  0x0000000115eb84e7: callq  0x000000010dae960c
  0x0000000115eb84ec: movabs $0x0,%r10
  0x0000000115eb84f6: mov    %r10,0x1d8(%r15)
  0x0000000115eb84fd: movabs $0x0,%r10
  0x0000000115eb8507: mov    %r10,0x1e8(%r15)
  0x0000000115eb850e: cmpq   $0x0,0x8(%r15)
  0x0000000115eb8516: je     0x0000000115eb8521
  0x0000000115eb851c: jmpq   0x0000000115e916e0
  0x0000000115eb8521: mov    0x238(%r15),%rax
  0x0000000115eb8528: movabs $0x0,%r10
  0x0000000115eb8532: mov    %r10,0x238(%r15)
  0x0000000115eb8539: mov    -0x38(%rbp),%r13
  0x0000000115eb853d: mov    -0x30(%rbp),%r14
  0x0000000115eb8541: retq   
  0x0000000115eb8542: movzbl 0x3(%r13),%ebx
  0x0000000115eb8547: add    $0x3,%r13
  0x0000000115eb854b: movabs $0x10e101040,%r10
  0x0000000115eb8555: jmpq   *(%r10,%rbx,8)
  0x0000000115eb8559: nopl   0x0(%rax)

----------------------------------------------------------------------
return_register_finalizer  232 return_register_finalizer  [0x0000000115eb8580, 0x0000000115eb89c0]  1088 bytes

  0x0000000115eb8580: push   %rax
  0x0000000115eb8581: jmpq   0x0000000115eb85b0
  0x0000000115eb8586: sub    $0x8,%rsp
  0x0000000115eb858a: vmovss %xmm0,(%rsp)
  0x0000000115eb858f: jmpq   0x0000000115eb85b0
  0x0000000115eb8594: sub    $0x10,%rsp
  0x0000000115eb8598: vmovsd %xmm0,(%rsp)
  0x0000000115eb859d: jmpq   0x0000000115eb85b0
  0x0000000115eb85a2: sub    $0x10,%rsp
  0x0000000115eb85a6: mov    %rax,(%rsp)
  0x0000000115eb85aa: jmpq   0x0000000115eb85b0
  0x0000000115eb85af: push   %rax
  0x0000000115eb85b0: mov    (%r14),%rsi
  0x0000000115eb85b3: mov    0x8(%rsi),%edi
  0x0000000115eb85b6: shl    $0x3,%rdi
  0x0000000115eb85ba: mov    0x9c(%rdi),%edi
  0x0000000115eb85c0: test   $0x40000000,%edi
  0x0000000115eb85c6: je     0x0000000115eb8651
  0x0000000115eb85cc: callq  0x0000000115eb85d6
  0x0000000115eb85d1: jmpq   0x0000000115eb8651
  0x0000000115eb85d6: lea    0x8(%rsp),%rax
  0x0000000115eb85db: mov    %r13,-0x38(%rbp)
  0x0000000115eb85df: mov    %r15,%rdi
  0x0000000115eb85e2: mov    %rbp,0x1e8(%r15)
  0x0000000115eb85e9: mov    %rax,0x1d8(%r15)
  0x0000000115eb85f0: test   $0xf,%esp
  0x0000000115eb85f6: je     0x0000000115eb860e
  0x0000000115eb85fc: sub    $0x8,%rsp
  0x0000000115eb8600: callq  0x000000010dae950c
  0x0000000115eb8605: add    $0x8,%rsp
  0x0000000115eb8609: jmpq   0x0000000115eb8613
  0x0000000115eb860e: callq  0x000000010dae950c
  0x0000000115eb8613: movabs $0x0,%r10
  0x0000000115eb861d: mov    %r10,0x1d8(%r15)
  0x0000000115eb8624: movabs $0x0,%r10
  0x0000000115eb862e: mov    %r10,0x1e8(%r15)
  0x0000000115eb8635: cmpq   $0x0,0x8(%r15)
  0x0000000115eb863d: je     0x0000000115eb8648
  0x0000000115eb8643: jmpq   0x0000000115e916e0
  0x0000000115eb8648: mov    -0x38(%rbp),%r13
  0x0000000115eb864c: mov    -0x30(%rbp),%r14
  0x0000000115eb8650: retq   
  0x0000000115eb8651: mov    0x295(%r15),%dl
  0x0000000115eb8658: movb   $0x0,0x295(%r15)
  0x0000000115eb8660: mov    -0x18(%rbp),%rbx
  0x0000000115eb8664: mov    0x20(%rbx),%ecx
  0x0000000115eb8667: test   $0x20,%ecx
  0x0000000115eb866d: je     0x0000000115eb8851
  0x0000000115eb8673: test   $0xff,%dl
  0x0000000115eb8676: jne    0x0000000115eb8971
  0x0000000115eb867c: lea    -0x50(%rbp),%rsi
  0x0000000115eb8680: mov    0x8(%rsi),%rax
  0x0000000115eb8684: test   %rax,%rax
  0x0000000115eb8687: jne    0x0000000115eb8789
  0x0000000115eb868d: callq  0x0000000115eb8697
  0x0000000115eb8692: jmpq   0x0000000115eb8712
  0x0000000115eb8697: lea    0x8(%rsp),%rax
  0x0000000115eb869c: mov    %r13,-0x38(%rbp)
  0x0000000115eb86a0: mov    %r15,%rdi
  0x0000000115eb86a3: mov    %rbp,0x1e8(%r15)
  0x0000000115eb86aa: mov    %rax,0x1d8(%r15)
  0x0000000115eb86b1: test   $0xf,%esp
  0x0000000115eb86b7: je     0x0000000115eb86cf
  0x0000000115eb86bd: sub    $0x8,%rsp
  0x0000000115eb86c1: callq  0x000000010dae850c
  0x0000000115eb86c6: add    $0x8,%rsp
  0x0000000115eb86ca: jmpq   0x0000000115eb86d4
  0x0000000115eb86cf: callq  0x000000010dae850c
  0x0000000115eb86d4: movabs $0x0,%r10
  0x0000000115eb86de: mov    %r10,0x1d8(%r15)
  0x0000000115eb86e5: movabs $0x0,%r10
  0x0000000115eb86ef: mov    %r10,0x1e8(%r15)
  0x0000000115eb86f6: cmpq   $0x0,0x8(%r15)
  0x0000000115eb86fe: je     0x0000000115eb8709
  0x0000000115eb8704: jmpq   0x0000000115e916e0
  0x0000000115eb8709: mov    -0x38(%rbp),%r13
  0x0000000115eb870d: mov    -0x30(%rbp),%r14
  0x0000000115eb8711: retq   
  0x0000000115eb8712: mov    %rsp,-0x28(%rsp)
  0x0000000115eb8717: sub    $0x80,%rsp
  0x0000000115eb871e: mov    %rax,0x78(%rsp)
  0x0000000115eb8723: mov    %rcx,0x70(%rsp)
  0x0000000115eb8728: mov    %rdx,0x68(%rsp)
  0x0000000115eb872d: mov    %rbx,0x60(%rsp)
  0x0000000115eb8732: mov    %rbp,0x50(%rsp)
  0x0000000115eb8737: mov    %rsi,0x48(%rsp)
  0x0000000115eb873c: mov    %rdi,0x40(%rsp)
  0x0000000115eb8741: mov    %r8,0x38(%rsp)
  0x0000000115eb8746: mov    %r9,0x30(%rsp)
  0x0000000115eb874b: mov    %r10,0x28(%rsp)
  0x0000000115eb8750: mov    %r11,0x20(%rsp)
  0x0000000115eb8755: mov    %r12,0x18(%rsp)
  0x0000000115eb875a: mov    %r13,0x10(%rsp)
  0x0000000115eb875f: mov    %r14,0x8(%rsp)
  0x0000000115eb8764: mov    %r15,(%rsp)
  0x0000000115eb8768: movabs $0x10ddd8000,%rdi
  0x0000000115eb8772: movabs $0x115eb8712,%rsi
  0x0000000115eb877c: mov    %rsp,%rdx
  0x0000000115eb877f: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb8783: callq  0x000000010dc0341e
  0x0000000115eb8788: hlt    
  0x0000000115eb8789: mov    %r13,-0x38(%rbp)
  0x0000000115eb878d: lea    (%rsi),%rax
  0x0000000115eb8790: mov    0x8(%rsi),%rcx
  0x0000000115eb8794: movq   $0x0,0x8(%rsi)
  0x0000000115eb879c: mov    (%rcx),%rdx
  0x0000000115eb879f: and    $0x7,%rdx
  0x0000000115eb87a3: cmp    $0x5,%rdx
  0x0000000115eb87a7: je     0x0000000115eb884d
  0x0000000115eb87ad: mov    (%rax),%rdx
  0x0000000115eb87b0: test   %rdx,%rdx
  0x0000000115eb87b3: je     0x0000000115eb884d
  0x0000000115eb87b9: lock cmpxchg %rdx,(%rcx)
  0x0000000115eb87be: je     0x0000000115eb884d
  0x0000000115eb87c4: mov    %rcx,0x8(%rsi)
  0x0000000115eb87c8: callq  0x0000000115eb87d2
  0x0000000115eb87cd: jmpq   0x0000000115eb884d
  0x0000000115eb87d2: lea    0x8(%rsp),%rax
  0x0000000115eb87d7: mov    %r13,-0x38(%rbp)
  0x0000000115eb87db: mov    %r15,%rdi
  0x0000000115eb87de: mov    %rbp,0x1e8(%r15)
  0x0000000115eb87e5: mov    %rax,0x1d8(%r15)
  0x0000000115eb87ec: test   $0xf,%esp
  0x0000000115eb87f2: je     0x0000000115eb880a
  0x0000000115eb87f8: sub    $0x8,%rsp
  0x0000000115eb87fc: callq  0x000000010dae8608
  0x0000000115eb8801: add    $0x8,%rsp
  0x0000000115eb8805: jmpq   0x0000000115eb880f
  0x0000000115eb880a: callq  0x000000010dae8608
  0x0000000115eb880f: movabs $0x0,%r10
  0x0000000115eb8819: mov    %r10,0x1d8(%r15)
  0x0000000115eb8820: movabs $0x0,%r10
  0x0000000115eb882a: mov    %r10,0x1e8(%r15)
  0x0000000115eb8831: cmpq   $0x0,0x8(%r15)
  0x0000000115eb8839: je     0x0000000115eb8844
  0x0000000115eb883f: jmpq   0x0000000115e916e0
  0x0000000115eb8844: mov    -0x38(%rbp),%r13
  0x0000000115eb8848: mov    -0x30(%rbp),%r14
  0x0000000115eb884c: retq   
  0x0000000115eb884d: mov    -0x38(%rbp),%r13
  0x0000000115eb8851: mov    -0x40(%rbp),%rsi
  0x0000000115eb8855: lea    -0x40(%rbp),%rbx
  0x0000000115eb8859: jmpq   0x0000000115eb896c
  0x0000000115eb885e: callq  0x0000000115eb8868
  0x0000000115eb8863: jmpq   0x0000000115eb88e3
  0x0000000115eb8868: lea    0x8(%rsp),%rax
  0x0000000115eb886d: mov    %r13,-0x38(%rbp)
  0x0000000115eb8871: mov    %r15,%rdi
  0x0000000115eb8874: mov    %rbp,0x1e8(%r15)
  0x0000000115eb887b: mov    %rax,0x1d8(%r15)
  0x0000000115eb8882: test   $0xf,%esp
  0x0000000115eb8888: je     0x0000000115eb88a0
  0x0000000115eb888e: sub    $0x8,%rsp
  0x0000000115eb8892: callq  0x000000010dae850c
  0x0000000115eb8897: add    $0x8,%rsp
  0x0000000115eb889b: jmpq   0x0000000115eb88a5
  0x0000000115eb88a0: callq  0x000000010dae850c
  0x0000000115eb88a5: movabs $0x0,%r10
  0x0000000115eb88af: mov    %r10,0x1d8(%r15)
  0x0000000115eb88b6: movabs $0x0,%r10
  0x0000000115eb88c0: mov    %r10,0x1e8(%r15)
  0x0000000115eb88c7: cmpq   $0x0,0x8(%r15)
  0x0000000115eb88cf: je     0x0000000115eb88da
  0x0000000115eb88d5: jmpq   0x0000000115e916e0
  0x0000000115eb88da: mov    -0x38(%rbp),%r13
  0x0000000115eb88de: mov    -0x30(%rbp),%r14
  0x0000000115eb88e2: retq   
  0x0000000115eb88e3: mov    %rsp,-0x28(%rsp)
  0x0000000115eb88e8: sub    $0x80,%rsp
  0x0000000115eb88ef: mov    %rax,0x78(%rsp)
  0x0000000115eb88f4: mov    %rcx,0x70(%rsp)
  0x0000000115eb88f9: mov    %rdx,0x68(%rsp)
  0x0000000115eb88fe: mov    %rbx,0x60(%rsp)
  0x0000000115eb8903: mov    %rbp,0x50(%rsp)
  0x0000000115eb8908: mov    %rsi,0x48(%rsp)
  0x0000000115eb890d: mov    %rdi,0x40(%rsp)
  0x0000000115eb8912: mov    %r8,0x38(%rsp)
  0x0000000115eb8917: mov    %r9,0x30(%rsp)
  0x0000000115eb891c: mov    %r10,0x28(%rsp)
  0x0000000115eb8921: mov    %r11,0x20(%rsp)
  0x0000000115eb8926: mov    %r12,0x18(%rsp)
  0x0000000115eb892b: mov    %r13,0x10(%rsp)
  0x0000000115eb8930: mov    %r14,0x8(%rsp)
  0x0000000115eb8935: mov    %r15,(%rsp)
  0x0000000115eb8939: movabs $0x10ddd8000,%rdi
  0x0000000115eb8943: movabs $0x115eb88e3,%rsi
  0x0000000115eb894d: mov    %rsp,%rdx
  0x0000000115eb8950: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb8954: callq  0x000000010dc0341e
  0x0000000115eb8959: hlt    
  0x0000000115eb895a: cmpq   $0x0,0x8(%rsi)
  0x0000000115eb8962: jne    0x0000000115eb885e
  0x0000000115eb8968: add    $0x10,%rsi
  0x0000000115eb896c: cmp    %rbx,%rsi
  0x0000000115eb896f: jne    0x0000000115eb895a
  0x0000000115eb8971: cmpb   $0x0,-0x7dd16ae(%rip)        # 0x000000010e0e72ca
  0x0000000115eb8978: je     0x0000000115eb89a8
  0x0000000115eb897e: mov    -0x18(%rbp),%rsi
  0x0000000115eb8982: mov    %r15,%rdi
  0x0000000115eb8985: test   $0xf,%esp
  0x0000000115eb898b: je     0x0000000115eb89a3
  0x0000000115eb8991: sub    $0x8,%rsp
  0x0000000115eb8995: callq  0x000000010dce7696
  0x0000000115eb899a: add    $0x8,%rsp
  0x0000000115eb899e: jmpq   0x0000000115eb89a8
  0x0000000115eb89a3: callq  0x000000010dce7696
  0x0000000115eb89a8: mov    -0x8(%rbp),%rbx
  0x0000000115eb89ac: leaveq 
  0x0000000115eb89ad: pop    %r13
  0x0000000115eb89af: mov    %rbx,%rsp
  0x0000000115eb89b2: jmpq   *%r13
  0x0000000115eb89b5: data32 xchg %ax,%ax
  0x0000000115eb89b8: add    %al,(%rax)
  0x0000000115eb89ba: add    %al,(%rax)
  0x0000000115eb89bc: add    %al,(%rax)
  0x0000000115eb89be: add    %al,(%rax)

----------------------------------------------------------------------
invokehandle  233 invokehandle  [0x0000000115eb89e0, 0x0000000115eb8ca0]  704 bytes

  0x0000000115eb89e0: push   %rax
  0x0000000115eb89e1: jmpq   0x0000000115eb8a10
  0x0000000115eb89e6: sub    $0x8,%rsp
  0x0000000115eb89ea: vmovss %xmm0,(%rsp)
  0x0000000115eb89ef: jmpq   0x0000000115eb8a10
  0x0000000115eb89f4: sub    $0x10,%rsp
  0x0000000115eb89f8: vmovsd %xmm0,(%rsp)
  0x0000000115eb89fd: jmpq   0x0000000115eb8a10
  0x0000000115eb8a02: sub    $0x10,%rsp
  0x0000000115eb8a06: mov    %rax,(%rsp)
  0x0000000115eb8a0a: jmpq   0x0000000115eb8a10
  0x0000000115eb8a0f: push   %rax
  0x0000000115eb8a10: mov    %r13,-0x38(%rbp)
  0x0000000115eb8a14: movzwl 0x1(%r13),%edx
  0x0000000115eb8a19: mov    -0x28(%rbp),%rcx
  0x0000000115eb8a1d: shl    $0x2,%edx
  0x0000000115eb8a20: mov    0x10(%rcx,%rdx,8),%ebx
  0x0000000115eb8a24: shr    $0x10,%ebx
  0x0000000115eb8a27: and    $0xff,%ebx
  0x0000000115eb8a2d: cmp    $0xe9,%ebx
  0x0000000115eb8a33: je     0x0000000115eb8ad2
  0x0000000115eb8a39: mov    $0xe9,%ebx
  0x0000000115eb8a3e: callq  0x0000000115eb8a48
  0x0000000115eb8a43: jmpq   0x0000000115eb8ac6
  0x0000000115eb8a48: mov    %rbx,%rsi
  0x0000000115eb8a4b: lea    0x8(%rsp),%rax
  0x0000000115eb8a50: mov    %r13,-0x38(%rbp)
  0x0000000115eb8a54: mov    %r15,%rdi
  0x0000000115eb8a57: mov    %rbp,0x1e8(%r15)
  0x0000000115eb8a5e: mov    %rax,0x1d8(%r15)
  0x0000000115eb8a65: test   $0xf,%esp
  0x0000000115eb8a6b: je     0x0000000115eb8a83
  0x0000000115eb8a71: sub    $0x8,%rsp
  0x0000000115eb8a75: callq  0x000000010dae77c4
  0x0000000115eb8a7a: add    $0x8,%rsp
  0x0000000115eb8a7e: jmpq   0x0000000115eb8a88
  0x0000000115eb8a83: callq  0x000000010dae77c4
  0x0000000115eb8a88: movabs $0x0,%r10
  0x0000000115eb8a92: mov    %r10,0x1d8(%r15)
  0x0000000115eb8a99: movabs $0x0,%r10
  0x0000000115eb8aa3: mov    %r10,0x1e8(%r15)
  0x0000000115eb8aaa: cmpq   $0x0,0x8(%r15)
  0x0000000115eb8ab2: je     0x0000000115eb8abd
  0x0000000115eb8ab8: jmpq   0x0000000115e916e0
  0x0000000115eb8abd: mov    -0x38(%rbp),%r13
  0x0000000115eb8ac1: mov    -0x30(%rbp),%r14
  0x0000000115eb8ac5: retq   
  0x0000000115eb8ac6: movzwl 0x1(%r13),%edx
  0x0000000115eb8acb: mov    -0x28(%rbp),%rcx
  0x0000000115eb8acf: shl    $0x2,%edx
  0x0000000115eb8ad2: mov    0x18(%rcx,%rdx,8),%rbx
  0x0000000115eb8ad7: mov    0x20(%rcx,%rdx,8),%rax
  0x0000000115eb8adc: mov    0x28(%rcx,%rdx,8),%edx
  0x0000000115eb8ae0: test   $0x1000000,%edx
  0x0000000115eb8ae6: je     0x0000000115eb8b12
  0x0000000115eb8aec: push   %rbx
  0x0000000115eb8aed: mov    %rax,%rbx
  0x0000000115eb8af0: shl    $0x2,%ebx
  0x0000000115eb8af3: mov    -0x18(%rbp),%rax
  0x0000000115eb8af7: mov    0x8(%rax),%rax
  0x0000000115eb8afb: mov    0x8(%rax),%rax
  0x0000000115eb8aff: mov    0x28(%rax),%rax
  0x0000000115eb8b03: mov    (%rax),%rax
  0x0000000115eb8b06: add    %rbx,%rax
  0x0000000115eb8b09: mov    0x10(%rax),%eax
  0x0000000115eb8b0c: shl    $0x3,%rax
  0x0000000115eb8b10: pop    %rbx
  0x0000000115eb8b11: push   %rax
  0x0000000115eb8b12: mov    %edx,%ecx
  0x0000000115eb8b14: and    $0xff,%ecx
  0x0000000115eb8b1a: mov    -0x8(%rsp,%rcx,8),%rcx
  0x0000000115eb8b1f: shr    $0x1c,%edx
  0x0000000115eb8b22: movabs $0x10e0f2700,%r10
  0x0000000115eb8b2c: mov    (%r10,%rdx,8),%rdx
  0x0000000115eb8b30: push   %rdx
  0x0000000115eb8b31: cmp    (%rcx),%rax
  0x0000000115eb8b34: mov    -0x20(%rbp),%rax
  0x0000000115eb8b38: test   %rax,%rax
  0x0000000115eb8b3b: je     0x0000000115eb8b53
  0x0000000115eb8b41: addq   $0x1,0x8(%rax)
  0x0000000115eb8b46: sbbq   $0x0,0x8(%rax)
  0x0000000115eb8b4b: add    $0x30,%rax
  0x0000000115eb8b4f: mov    %rax,-0x20(%rbp)
  0x0000000115eb8b53: mov    -0x20(%rbp),%rdx
  0x0000000115eb8b57: test   %rdx,%rdx
  0x0000000115eb8b5a: je     0x0000000115eb8c8f
  0x0000000115eb8b60: cmpb   $0xb,-0x30(%rdx)
  0x0000000115eb8b64: jne    0x0000000115eb8c8f
  0x0000000115eb8b6a: add    $0x8,%rdx
  0x0000000115eb8b6e: mov    -0x8(%rdx),%r13
  0x0000000115eb8b72: sub    $0x0,%r13d
  0x0000000115eb8b76: cmp    $0x2,%r13d
  0x0000000115eb8b7a: jl     0x0000000115eb8c84
  0x0000000115eb8b80: mov    0x8(%rbx),%r13
  0x0000000115eb8b84: movzwl 0x2c(%r13),%r13d
  0x0000000115eb8b89: sub    (%rdx),%r13
  0x0000000115eb8b8c: sub    $0x1,%r13d
  0x0000000115eb8b90: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb8b95: test   %r13,%r13
  0x0000000115eb8b98: jne    0x0000000115eb8ba4
  0x0000000115eb8b9a: orq    $0x1,0x8(%rdx)
  0x0000000115eb8ba2: jmp    0x0000000115eb8bf1
  0x0000000115eb8ba4: mov    0x8(%r13),%r13d
  0x0000000115eb8ba8: shl    $0x3,%r13
  0x0000000115eb8bac: xor    0x8(%rdx),%r13
  0x0000000115eb8bb0: test   $0xfffffffffffffffc,%r13
  0x0000000115eb8bb7: je     0x0000000115eb8bf1
  0x0000000115eb8bb9: test   $0x2,%r13
  0x0000000115eb8bc0: jne    0x0000000115eb8bf1
  0x0000000115eb8bc2: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb8bca: je     0x0000000115eb8bed
  0x0000000115eb8bcc: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb8bd4: je     0x0000000115eb8bed
  0x0000000115eb8bd6: xor    0x8(%rdx),%r13
  0x0000000115eb8bda: test   $0xfffffffffffffffc,%r13
  0x0000000115eb8be1: je     0x0000000115eb8bf1
  0x0000000115eb8be3: orq    $0x2,0x8(%rdx)
  0x0000000115eb8beb: jmp    0x0000000115eb8bf1
  0x0000000115eb8bed: mov    %r13,0x8(%rdx)
  0x0000000115eb8bf1: add    $0x10,%rdx
  0x0000000115eb8bf5: mov    -0x18(%rdx),%r13
  0x0000000115eb8bf9: sub    $0x2,%r13d
  0x0000000115eb8bfd: cmp    $0x2,%r13d
  0x0000000115eb8c01: jl     0x0000000115eb8c84
  0x0000000115eb8c07: mov    0x8(%rbx),%r13
  0x0000000115eb8c0b: movzwl 0x2c(%r13),%r13d
  0x0000000115eb8c10: sub    (%rdx),%r13
  0x0000000115eb8c13: sub    $0x1,%r13d
  0x0000000115eb8c17: mov    0x8(%rsp,%r13,8),%r13
  0x0000000115eb8c1c: test   %r13,%r13
  0x0000000115eb8c1f: jne    0x0000000115eb8c2b
  0x0000000115eb8c21: orq    $0x1,0x8(%rdx)
  0x0000000115eb8c29: jmp    0x0000000115eb8c78
  0x0000000115eb8c2b: mov    0x8(%r13),%r13d
  0x0000000115eb8c2f: shl    $0x3,%r13
  0x0000000115eb8c33: xor    0x8(%rdx),%r13
  0x0000000115eb8c37: test   $0xfffffffffffffffc,%r13
  0x0000000115eb8c3e: je     0x0000000115eb8c78
  0x0000000115eb8c40: test   $0x2,%r13
  0x0000000115eb8c47: jne    0x0000000115eb8c78
  0x0000000115eb8c49: cmpq   $0x0,0x8(%rdx)
  0x0000000115eb8c51: je     0x0000000115eb8c74
  0x0000000115eb8c53: cmpq   $0x1,0x8(%rdx)
  0x0000000115eb8c5b: je     0x0000000115eb8c74
  0x0000000115eb8c5d: xor    0x8(%rdx),%r13
  0x0000000115eb8c61: test   $0xfffffffffffffffc,%r13
  0x0000000115eb8c68: je     0x0000000115eb8c78
  0x0000000115eb8c6a: orq    $0x2,0x8(%rdx)
  0x0000000115eb8c72: jmp    0x0000000115eb8c78
  0x0000000115eb8c74: mov    %r13,0x8(%rdx)
  0x0000000115eb8c78: add    $0x10,%rdx
  0x0000000115eb8c7c: mov    -0x28(%rdx),%r13
  0x0000000115eb8c80: sub    $0x4,%r13d
  0x0000000115eb8c84: shl    $0x3,%r13d
  0x0000000115eb8c88: add    %r13,%rdx
  0x0000000115eb8c8b: mov    %rdx,-0x20(%rbp)
  0x0000000115eb8c8f: lea    0x8(%rsp),%r13
  0x0000000115eb8c94: mov    %r13,-0x10(%rbp)
  0x0000000115eb8c98: jmpq   *0x50(%rbx)
  0x0000000115eb8c9b: nopl   0x0(%rax,%rax,1)

----------------------------------------------------------------------
_shouldnotreachhere  234 _shouldnotreachhere  [0x0000000115eb8cc0, 0x0000000115eb8d80]  192 bytes

  0x0000000115eb8cc0: push   %rax
  0x0000000115eb8cc1: jmpq   0x0000000115eb8cf0
  0x0000000115eb8cc6: sub    $0x8,%rsp
  0x0000000115eb8cca: vmovss %xmm0,(%rsp)
  0x0000000115eb8ccf: jmpq   0x0000000115eb8cf0
  0x0000000115eb8cd4: sub    $0x10,%rsp
  0x0000000115eb8cd8: vmovsd %xmm0,(%rsp)
  0x0000000115eb8cdd: jmpq   0x0000000115eb8cf0
  0x0000000115eb8ce2: sub    $0x10,%rsp
  0x0000000115eb8ce6: mov    %rax,(%rsp)
  0x0000000115eb8cea: jmpq   0x0000000115eb8cf0
  0x0000000115eb8cef: push   %rax
  0x0000000115eb8cf0: mov    %rsp,-0x28(%rsp)
  0x0000000115eb8cf5: sub    $0x80,%rsp
  0x0000000115eb8cfc: mov    %rax,0x78(%rsp)
  0x0000000115eb8d01: mov    %rcx,0x70(%rsp)
  0x0000000115eb8d06: mov    %rdx,0x68(%rsp)
  0x0000000115eb8d0b: mov    %rbx,0x60(%rsp)
  0x0000000115eb8d10: mov    %rbp,0x50(%rsp)
  0x0000000115eb8d15: mov    %rsi,0x48(%rsp)
  0x0000000115eb8d1a: mov    %rdi,0x40(%rsp)
  0x0000000115eb8d1f: mov    %r8,0x38(%rsp)
  0x0000000115eb8d24: mov    %r9,0x30(%rsp)
  0x0000000115eb8d29: mov    %r10,0x28(%rsp)
  0x0000000115eb8d2e: mov    %r11,0x20(%rsp)
  0x0000000115eb8d33: mov    %r12,0x18(%rsp)
  0x0000000115eb8d38: mov    %r13,0x10(%rsp)
  0x0000000115eb8d3d: mov    %r14,0x8(%rsp)
  0x0000000115eb8d42: mov    %r15,(%rsp)
  0x0000000115eb8d46: movabs $0x10de19874,%rdi
  0x0000000115eb8d50: movabs $0x115eb8cf0,%rsi
  0x0000000115eb8d5a: mov    %rsp,%rdx
  0x0000000115eb8d5d: and    $0xfffffffffffffff0,%rsp
  0x0000000115eb8d61: callq  0x000000010dc0341e
  0x0000000115eb8d66: hlt    
  0x0000000115eb8d67: movzbl 0x1(%r13),%ebx
  0x0000000115eb8d6c: inc    %r13
  0x0000000115eb8d6f: movabs $0x10e101840,%r10
  0x0000000115eb8d79: jmpq   *(%r10,%rbx,8)
  0x0000000115eb8d7d: data32 xchg %ax,%ax
----------------------------------------------------------------------

